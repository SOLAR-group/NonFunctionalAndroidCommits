Categories:
  - Security
License: GPL-3.0-only
WebSite: https://rust-keylock.github.io/
SourceCode: https://github.com/rust-keylock/rust-keylock-android

AutoName: rust-keylock
Description: |-
    rust-keylock is a password manager and its goals are to be:

    * Secure
    * Simple to use
    * Portable
    * Extensible

    rust-keylock-android is an Android app that provides access to [rust-keylock-lib](https://github.com/rust-keylock/rust-keylock-lib).

    The minimum supported Android API level is 16 (4.1.2 is tested as a minimum version).

    Warning:
    The project has not yet received any formal / official security reviews. Use it at your own risk.

RepoType: git
Repo: https://github.com/rust-keylock/rust-keylock-android

Builds:
  - versionName: 0.12.0
    versionCode: 1
    commit: v0.12.0
    subdir: java
    sudo:
      - apt-get update || apt-get update
      - apt-get -y install build-essential
    maven: 'yes'
    output: ./target/rust-keylock-android-$$VERSION$$-unsigned.apk
    srclibs:
      - rustup@1.21.1
      - OpenSSL@OpenSSL_1_1_0j
    build:
      - mkdir -p ../tools
      - $$rustup$$/rustup-init.sh -y
      - source $HOME/.cargo/env
      - rustup target add arm-linux-androideabi
      - cd ..
      - BASEDIR=`pwd`
      - cd $$OpenSSL$$
      - export OPENSSL_SRC_DIR=`pwd`
      - export OPENSSL_BUILD_DIR=${OPENSSL_SRC_DIR}/build
      - cd $BASEDIR
      - export ANDROID_NDK_HOME=${ANDROID_NDK}
      - mkdir $BASEDIR/android-toolchain
      - cd android-toolchain
      - export ANDROID_TOOLCHAIN_DIR=`pwd`
      - cd $HOME
      - mkdir -p .cargo
      - cd .cargo
      - printf "[target]\n [target.arm-linux-androideabi]\n linker = \"${ANDROID_TOOLCHAIN_DIR}/bin/arm-linux-androideabi-gcc\""
        > config
      - export ANDROID_TOOLCHAIN=$ANDROID_TOOLCHAIN_DIR/bin
      - export ANDROID_NDK_ROOT=${ANDROID_NDK}
      - export ANDROID_RUST="$BASEDIR/rust"
      - export ANDROID_RUST_KEYLOCK_LIB="$ANDROID_RUST/target/arm-linux-androideabi/release/librustkeylockandroid.so"
      - export ANDROID_JAVA_NATIVE="$BASEDIR/java/libs/armeabi/"
      - mkdir -p $ANDROID_JAVA_NATIVE
      - sed -i 's/-mandroid //g' ${OPENSSL_SRC_DIR}/Configurations/10-main.conf
      - cd ${OPENSSL_SRC_DIR}
      - $ANDROID_NDK/build/tools/make-standalone-toolchain.sh --platform=android-16
        --arch=arm --install-dir=$BASEDIR/android-toolchain  > /dev/null
      - . $BASEDIR/rust-build/setenv-android.sh
      - ./Configure android-armeabi shared no-ssl3 no-comp no-hw no-asm --openssldir=$OPENSSL_SRC_DIR/build
        --prefix=$OPENSSL_SRC_DIR/build
      - make all
      - make install CC=$ANDROID_TOOLCHAIN/arm-linux-androideabi-clang RANLIB=$ANDROID_TOOLCHAIN/arm-linux-androideabi-ranlib
      - cd $ANDROID_RUST
      - CC_arm_linux_androideabi="${ANDROID_TOOLCHAIN_DIR}/bin/arm-linux-androideabi-gcc"
        AR_arm_linux_androideabi="${ANDROID_TOOLCHAIN_DIR}/bin/arm-linux-androideabi-ar"
        OPENSSL_DIR=${OPENSSL_BUILD_DIR} OPENSSL_LIB_DIR=${OPENSSL_BUILD_DIR}/lib
        OPENSSL_INCLUDE_DIR=${OPENSSL_BUILD_DIR}/include OPENSSL_STATIC=true cargo
        build --target=arm-linux-androideabi --release
      - cp $ANDROID_RUST_KEYLOCK_LIB $ANDROID_JAVA_NATIVE
    ndk: r10e

AutoUpdateMode: Version v%v
UpdateCheckMode: Tags
CurrentVersion: 0.12.0
CurrentVersionCode: 1
