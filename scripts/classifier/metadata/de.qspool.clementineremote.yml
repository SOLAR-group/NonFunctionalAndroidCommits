Categories:
  - Multimedia
License: GPL-3.0-only
WebSite: https://github.com/clementine-player/Android-Remote/wiki
SourceCode: https://github.com/clementine-player/Android-Remote
IssueTracker: https://github.com/clementine-player/Android-Remote/issues
Changelog: https://raw.githubusercontent.com/clementine-player/Android-Remote/HEAD/CHANGELOG

AutoName: Clementine Remote
Description: |-
    You need <a href="http://www.clementine-player.org/downloads">Clementine</a> 1.3 (quite
    recent) for this to work and to enable the remote Control in Clementine settings
    first.

    Control the music player "Clementine" - access your playlists, browse the
    library, download files, change the volume via hardware buttons, read the lyrics
    while listening to your favourite song, enjoy the cover art and more.

    If you receive a call or want to make one, you don't have pause the current
    track, Clementine Remote lowers the volume for you. It also has many more
    features, for example exchange of music and playlists with a computer.

RepoType: git
Repo: https://github.com/clementine-player/Android-Remote

Builds:
  - versionName: '8.2'
    versionCode: 25
    commit: v8.2
    srclibs:
      - ClementineDeps@737bf
    extlibs:
      - jmdns-build.xml
    prebuild:
      - echo 'source.dir=src;$$ClementineDeps$$/clementine-remote-android.dep-protocolbuffer/src'
        > ant.properties
      - sed -i 's@\(reference.1=\).*@\1$$ClementineDeps$$/clementine-remote-android.dep-abs@'
        project.properties
      - mkdir unjar/
      - cp -r $$ClementineDeps$$/clementine-remote-android.dep-jmdns/src/javax/ libs/
      - rm -rf libs/javax/jmdns/test/
    build:
      - ant jar -f libs/jmdns-build.xml
      - cd unjar/
      - jar xf ../libs/jmdns.jar
      - jar cfm ../libs/jmdns.jar META-INF/MANIFEST.MF javax/

  - versionName: '8.5'
    versionCode: 28
    commit: v8.5
    srclibs:
      - ClementineDeps@2a3ad1b33b6dc
    extlibs:
      - jmdns-build.xml
    prebuild:
      - echo 'source.dir=src;$$ClementineDeps$$/clementine-remote-android.dep-protocolbuffer/src'
        > ant.properties
      - sed -i 's@\(reference.1=\).*@\1$$ClementineDeps$$/clementine-remote-android.dep-abs@'
        project.properties
      - mkdir unjar/
      - cp -r $$ClementineDeps$$/clementine-remote-android.dep-jmdns/src/javax/ libs/
      - rm -rf libs/javax/jmdns/test/
    build:
      - ant jar -f libs/jmdns-build.xml
      - cd unjar/
      - jar xf ../libs/jmdns.jar
      - jar cfm ../libs/jmdns.jar META-INF/MANIFEST.MF javax/

  - versionName: v10.1
    versionCode: 479
    commit: v10.1
    subdir: app
    gradle:
      - yes
    prebuild: sed -i -e '/buildTypes/i/*' -e '/compileOptions/i*/' build.gradle

  - versionName: v11.1
    versionCode: 709
    commit: v11.1
    subdir: app
    gradle:
      - yes
    prebuild:
      - sed -i -e '/buildTypes/i/*' -e '/compileOptions/i*/' build.gradle
      - sed -i '/dl\.bintray\.com/d' ../build.gradle

  - versionName: v12
    versionCode: 759
    commit: v12
    subdir: app
    gradle:
      - yes
    prebuild: sed -i '/if (signingConfigs\.release\.keyAlias != null) {/,/}/d' build.gradle

MaintainerNotes: |-
    Upstream tags it's releases, but ver and vercode are generated within gradle,
    which our updatechecks do not support.

    We also need to strip output manipulations and we do it in a unsafe way. We
    should provide a better solution!

AutoUpdateMode: None
UpdateCheckMode: None
CurrentVersion: v12
CurrentVersionCode: 759
