repo_owner,repo_name,payload_commit_msg,created_at,dummy_column_do_not_delete,Status,commit_link,redirect_link,original_commit,Labels Gustavo,Labels Irineu,Labels Felipe,Consolidated Labels,Latest_404_status,What,Why,Codes,Themes,Secondary Themes,Noteworthy,Certainity,Environment,Bug fix,Level,Languages,Intention ,Repo,author_login,Final Themes,Final conditions,committer_login,Level detailed
Whitehawkx,frameworks_base,"Don't enable the light sensor if it's not being used We want to fully disable the lightsensor when it's not used, for two reasons: 1 - Power savings 2 - Sensors that control the backlight directly need to be disabled when brightness control is set to manual. Forcibly enabling the sensor when the screen turns on makes these devices incapable of using manual brightness. Change-Id: I64c1114348ff096e0a72b265f6f141d1ecef249c Fix button backlights that depend on ALS On a few devices, lighting the buttons when the screen turns on depends on the lightsensor, regardless of the user preference. So go back to enabling the sensor whenever the screen turns on, and enforce the user preference after running through the light settings once. Change-Id: I6f036a32315eb7688a9cd11d4bd70dbca1b2fa8b",12/03/2012 15:06:10,,NOT-FOUND,https://github.com/Whitehawkx/frameworks_base/commit/6e1e074c7ebf6f7145994c9f930428d4cdba3433,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Whitehawkx/frameworks_base,,,,,
Clust3r,frameworks_base-1,"Don't enable the light sensor if it's not being used We want to fully disable the lightsensor when it's not used, for two reasons: 1 - Power savings 2 - Sensors that control the backlight directly need to be disabled when brightness control is set to manual. Forcibly enabling the sensor when the screen turns on makes these devices incapable of using manual brightness. Change-Id: I64c1114348ff096e0a72b265f6f141d1ecef249c Fix button backlights that depend on ALS On a few devices, lighting the buttons when the screen turns on depends on the lightsensor, regardless of the user preference. So go back to enabling the sensor whenever the screen turns on, and enforce the user preference after running through the light settings once. Change-Id: I6f036a32315eb7688a9cd11d4bd70dbca1b2fa8b",12/03/2012 15:44:09,,NOT-FOUND,https://github.com/Clust3r/frameworks_base-1/commit/8b3c318a520e98ef619ce17ff1fe5d7ca8406faf,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Clust3r/frameworks_base-1,,,,,
nicedude,N64_Controller_Wireless_Rumble,"added approximated power consumption, started pcb layout, finished some of wireless module schematic",13/03/2012 22:10:09,,FALSE-POSITIVE,https://github.com/nicedude/N64_Controller_Wireless_Rumble/commit/d48f51ab5bcaa5d864b37cb9c7dcf9cfe878540e,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Big commit] [Over 5k],[DO NOT ANALYZE],[Big commit] [Over 5k],EXISTS,,,,,,,,,,,,,nicedude/N64_Controller_Wireless_Rumble,nicedude,,,nicedude,
BobZhome,GingerKernel-thunderc,cpuidle: menu: fixed wrapping timers at 4.294 seconds commit 7467571f4480b273007517b26297c07154c73924 upstream. Cpuidle menu governor is using u32 as a temporary datatype for storing nanosecond values which wrap around at 4.294 seconds. This causes errors in predicted sleep times resulting in higher than should be C state selection and increased power consumption. This also breaks cpuidle state residency statistics. Signed-off-by: Tero Kristo <tero.kristo@nokia.com> Signed-off-by: Len Brown <len.brown@intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>,14/03/2012 01:06:07,,NOT-FOUND,https://github.com/BobZhome/GingerKernel-thunderc/commit/b4e931515f320f65a72080c567843852d8373edd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BobZhome/GingerKernel-thunderc,,,,,
BobZhome,GingerKernel-thunderc,cpuidle: menu: fixed wrapping timers at 4.294 seconds commit 7467571f4480b273007517b26297c07154c73924 upstream. Cpuidle menu governor is using u32 as a temporary datatype for storing nanosecond values which wrap around at 4.294 seconds. This causes errors in predicted sleep times resulting in higher than should be C state selection and increased power consumption. This also breaks cpuidle state residency statistics. Signed-off-by: Tero Kristo <tero.kristo@nokia.com> Signed-off-by: Len Brown <len.brown@intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>,15/03/2012 00:56:35,,DUPLICATE,https://github.com/BobZhome/GingerKernel-thunderc/commit/53e0574cb448e1e98c16212c54b66b9976c893b9,,,,,,,EXISTS,,,,,,,,,,,,,BobZhome/GingerKernel-thunderc,LorDClockaN,,,BobZhome,
GreatEmerald,Arcomage-Clone,"Moved Linux 64-bit directory to /bin/linux-x86_64 from the main /bin directory. Disabled debugging output. Small energy saving fix, fix for drawing message text and prevention against accidental closing of the game after the victory is attained. Version: 1.alpha.12.02 Signed-off-by: GreatEmerald <pastas4@gmail.com>",15/03/2012 09:50:52,,UNABLE-TO-CATEGORIZE,https://github.com/GreatEmerald/Arcomage-Clone/commit/e97711e960e13237b6189585ac1933f9470ab8ed,,,[OK][Go to idle],[OK],[OK] [Bug fix],[UNABLE-TO-CATEGORIZE] [Go to idle] [Bug fix],EXISTS,,,[REVIEW],,,,,,,,,,GreatEmerald/Arcomage-Clone,GreatEmerald,,,GreatEmerald,
svenkatr,linux,"mmc: omap_hsmmc: Avoid a regulator voltage change with dt When booting with Device tree, the omap_hsmmc driver does not program the pbias cell (inside OMAP control module) during a regulator voltage change. In case of non-dt boot, this is handled using callbacks from within platform_data and implemented in machine code. To be able to do this with device tree, without invoking any machine code, a OMAP control module driver is needed which is yet missing. The pbias cell is used to provide a 1.8v or 3.0v reference to the mmc/sd/sdio1 interface supporting both 1.8v and 3.0v voltages. Until a OMAP control module driver is available to handle this, when booting with a device tree blob, never change the regulator voltage which might then require a pbias cell re-program. There are 2 instances where in the mmc regulator voltage can be changed. -1- when the regulator is turned OFF. -2- when attempting a switch to 1.8v from 3.0v for dual volt cards This patch avoids a voltage change in both cases when booting from device tree, and hence compromises on power savings. Once the OMAP control module driver is available and hsmmc driver is modified to then do pbias programming even when booting with device tree, these limitaions can be removed to achieve better power savings. Signed-off-by: Rajendra Nayak <rnayak@ti.com> Tested-by: Balaji T K <balajitk@ti.com> Signed-off-by: Chris Ball <cjb@laptop.org>",15/03/2012 13:55:39,,NOT-FOUND,https://github.com/svenkatr/linux/commit/5f0390f10c0e9c9c504cdbf4af802252628a2490,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,svenkatr/linux,,,,,
teamgummy,frameworks_base,"Don't enable the light sensor if it's not being used We want to fully disable the lightsensor when it's not used, for two reasons: 1 - Power savings 2 - Sensors that control the backlight directly need to be disabled when brightness control is set to manual. Forcibly enabling the sensor when the screen turns on makes these devices incapable of using manual brightness. Change-Id: I64c1114348ff096e0a72b265f6f141d1ecef249c Fix button backlights that depend on ALS On a few devices, lighting the buttons when the screen turns on depends on the lightsensor, regardless of the user preference. So go back to enabling the sensor whenever the screen turns on, and enforce the user preference after running through the light settings once. Change-Id: I6f036a32315eb7688a9cd11d4bd70dbca1b2fa8b",16/03/2012 02:24:54,,DUPLICATE,https://github.com/teamgummy/frameworks_base/commit/0af612eec2b54423f41d39f49b62c329449a72b6,,,,,,,EXISTS,,,,,,,,,,,,,teamgummy/frameworks_base,rmcc,,,kejar31,
teamgummy,frameworks_base,"Don't enable the light sensor if it's not being used We want to fully disable the lightsensor when it's not used, for two reasons: 1 - Power savings 2 - Sensors that control the backlight directly need to be disabled when brightness control is set to manual. Forcibly enabling the sensor when the screen turns on makes these devices incapable of using manual brightness. Change-Id: I64c1114348ff096e0a72b265f6f141d1ecef249c Fix button backlights that depend on ALS On a few devices, lighting the buttons when the screen turns on depends on the lightsensor, regardless of the user preference. So go back to enabling the sensor whenever the screen turns on, and enforce the user preference after running through the light settings once. Change-Id: I6f036a32315eb7688a9cd11d4bd70dbca1b2fa8b",16/03/2012 02:31:25,,DUPLICATE,https://github.com/teamgummy/frameworks_base/commit/f3936c4ed86304de7ac41481ab9110457bef6af0,,,,,,,EXISTS,,,,,,,,,,,,,teamgummy/frameworks_base,rmcc,,,kejar31,
BobZhome,GingerKernel-thunderc,mmc: core: put eMMC in sleep (cmd5) mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend to minimize power consumption.,16/03/2012 20:30:39,,OK,https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad,,,[OK][Go to Idle],[OK] [Go to idle] [Android] [General solution],[DO NOT ANALYZE],[Go to idle] [Android] [General solution],EXISTS,[put eMMC in sleep mode before suspend],[minimize power consumption],[Sleep component before going to suspend],[Enable device low power mode],,,Certain,Android,No,OS,C,mmc suspend to minimize power consumption,BobZhome/GingerKernel-thunderc,LorDClockaN,[Disabling feature/devices],,BobZhome,Driver
okoyono,lord-vetinari-clock,Power saving improved,17/03/2012 12:58:47,,OK,https://github.com/CTHN/Lord-Vetinari-s-Clock/commit/d0d244269b891487056f33c2c35ecff628d1efb2,https://github.com/okoyono/lord-vetinari-clock/commit/d0d244269b891487056f33c2c35ecff628d1efb2,,[OK][Go to Idle],[OK] [Go to idle] [General solution],[DO NOT ANALYZE],[Go to idle] [General solution],EXISTS,[enable CPU idle mode],[improve power saving],[Enable CPU idle mode] [Go to idle] [Enable idle],[Enable device low power mode],,,Certain,Embedded,No,Application,C,Power saving improved,okoyono/lord-vetinari-clock,,[Disabling feature/devices],,,Embedded application !
intervigilium,android_frameworks_base,frameworks/base: Add cpu governor service Increase sampling rate when the display turns off and set it back to the original value when it turns back on. This helps reduce power consumption for use cases such as MP3 playback with the display turned off.,18/03/2012 07:21:44,,NOT-FOUND,https://github.com/intervigilium/android_frameworks_base/commit/d74fbe1d7e68ad5b4d63b9edbbec8127a2516e73,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,intervigilium/android_frameworks_base,,,,,
IceColdSandwich,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption (cherry picked from commit 6ed01fd5f4637ed2490dcf9ad5f00e465d23d19c) Change-Id: Idc4098ab6b5c8e2198ae5d04d2b0a9c95853bf39 CRs-Fixed: 336244",19/03/2012 21:42:32,,NOT-FOUND,https://github.com/IceColdSandwich/android_packages_apps_Phone/commit/f507b4922d6b0b4ea63bb8dfbdb097c47fbe298a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,IceColdSandwich/android_packages_apps_Phone,,,,,
ThePlayground,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption (cherry picked from commit 6ed01fd5f4637ed2490dcf9ad5f00e465d23d19c) Change-Id: Idc4098ab6b5c8e2198ae5d04d2b0a9c95853bf39 CRs-Fixed: 336244",20/03/2012 00:32:58,,DUPLICATE,https://github.com/ThePlayground/android_packages_apps_Phone/commit/e5160c42da58cc698c7b88e20b448b44722a3af1,,,,,,,EXISTS,,,,,,,,,,,,,ThePlayground/android_packages_apps_Phone,,,,LoungeKatt,
ThePlayground,android_frameworks_base,Frameworks/SystemUI: Hide expanded dialog when screen is off Hide the expanded dialog while screen is off. Otherwise it causes continuous buffer updates to SurfaceTexture even when SCREEN is turned off and while In-Call causing a spike in power consumtion. This fix ensures that the power consumption is kept to a minimum in such a scenario. (cherry picked from commit 406e56a8da1e76ef2abb20555470cf8b83dade5f) Change-Id: Id4bc02b71d3d6a4a048ac511b69c19b4cd454b1e CRs-Fixed: 339815,20/03/2012 00:41:14,,OK,https://github.com/ThePlayground/android_frameworks_base/commit/538a512d6b0099ad6b8411d1722f6e097504f044,,,[OK][Reduce Buffer],[OK] [Hide UI] [Android] [Reduce buffer update] [General solution],[DO NOT ANALYZE],[Hide UI] [Android] [Reduce buffer update] [General solution] [Reduce Buffer],EXISTS,[Hide expanded dialog when screen is off],[stop continuous buffer update],[Hide UI when screen off] [Power saving action when screen off],[Disable UI] [Condition: screen off],,,Certain,Android,CRs-Fixed: 339815,OS,Java,This fix ensures that the power consumption is kept to a minimum ,ThePlayground/android_frameworks_base,,[Energy bug],[screen off],LoungeKatt,Software stack
LiquidSmoothROMs,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption (cherry picked from commit 6ed01fd5f4637ed2490dcf9ad5f00e465d23d19c) Change-Id: Idc4098ab6b5c8e2198ae5d04d2b0a9c95853bf39 CRs-Fixed: 336244",20/03/2012 04:12:32,,NOT-FOUND,https://github.com/LiquidSmoothROMs/android_packages_apps_Phone/commit/cc33de6b10f466dc529437a6df7479cf760941f3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LiquidSmoothROMs/android_packages_apps_Phone,,,,,
aospX,platform_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption (cherry picked from commit 6ed01fd5f4637ed2490dcf9ad5f00e465d23d19c) Change-Id: Idc4098ab6b5c8e2198ae5d04d2b0a9c95853bf39 CRs-Fixed: 336244",20/03/2012 19:39:55,,DUPLICATE,https://github.com/aospX/platform_packages_apps_Phone/commit/3fe6aefcf7a982a6962797fe044b709e2c7a283a,,,,,,,EXISTS,,,,,,,,,,,,,aospX/platform_packages_apps_Phone,,,,existz,
charliesome,jsos,save power,23/03/2012 12:11:59,,OK,https://github.com/charliesome/jsos/commit/01e77098604e8b630b6e7a84d22d300688d2919a,,,[OK] [Go to idle],[OK] [Go to idle],[DO NOT ANALYZE],[Go to idle],EXISTS,[Halt kernel],[save power],[Go to idle] [Halt kernel],[Go to low power mode],,,Certain,Javascript,No,OS,Javascript,save power,charliesome/jsos,charliesome,[Low power idling],,charliesome,Kernel
oux,SmartGPSLogger,policy: add first smart (power efficient) policy implementation * src/com/oux/SmartGPSLogger/Constants.java (New file): project constants. * src/com/oux/SmartGPSLogger/Policy.java (New file): unfinished policy implementation. * src/com/oux/SmartGPSLogger/Position.java (New file): manage position and compute distance between two position.,25/03/2012 14:34:21,,RELATED,https://github.com/oux/SmartGPSLogger/commit/e28f447727ca890864a6d5f771b20f4b8bd9aa54,,,[RELATED] [?],[RELATED] [Wake up policy],[DO NOT ANALYZE],[Wake up policy] [?],EXISTS,[Wake up policy] [add smart logger power efficient policy],,,,,,Certain,Android,No,Application,Java,,oux/SmartGPSLogger,jeremy-compostella,,,jeremy-compostella,Application
greg-pe,android_frameworks_base,Frameworks/SystemUI: Hide expanded dialog when screen is off Hide the expanded dialog while screen is off. Otherwise it causes continuous buffer updates to SurfaceTexture even when SCREEN is turned off and while In-Call causing a spike in power consumtion. This fix ensures that the power consumption is kept to a minimum in such a scenario. CRs-Fixed: 339815 Change-Id: Ib9154528d4f88ba12ca234be7f929a61ed098be7,26/03/2012 10:00:36,,DUPLICATE,https://github.com/greg-pe/android_frameworks_base/commit/1d945f5830e5c2a4f9f9a6bd9a33b7bef9c6ba8f,,,,[VERIFIED],,,EXISTS,,,,,,,,,,,,,greg-pe/android_frameworks_base,,,,greg-pe,
elektroschmock,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02 Conflicts: src/com/android/phone/PhoneApp.java",26/03/2012 20:50:42,,NOT-FOUND,https://github.com/elektroschmock/android_packages_apps_Phone/commit/3e420fec599b6061bde4be560cb41a20ac04e51b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,elektroschmock/android_packages_apps_Phone,,,,,
Flinny,android_frameworks_base,Frameworks/SystemUI: Hide expanded dialog when screen is off Hide the expanded dialog while screen is off. Otherwise it causes continuous buffer updates to SurfaceTexture even when SCREEN is turned off and while In-Call causing a spike in power consumtion. This fix ensures that the power consumption is kept to a minimum in such a scenario. CRs-Fixed: 339815 Change-Id: Ib9154528d4f88ba12ca234be7f929a61ed098be7,27/03/2012 20:35:21,,NOT-FOUND,https://github.com/Flinny/android_frameworks_base/commit/bc18ac1c47f1ecbea6c9cf0f83d4fe63b044d368,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Flinny/android_frameworks_base,,,,,
TI-OpenLink,wl12xx,wl12xx: change default parameters Change the default parameters to increase the TP. This change may cause a degredation in power consumption. Changes were based on improvments done with Aruba APs based network. Signed-off-by: Yoni Divinsky <yoni.divinsky@ti.com> Signed-off-by: Igal Chernobelsky <igalc@ti.com>,28/03/2012 14:53:19,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/TI-OpenLink/wl12xx/commit/9b68d5904a146d831908d5302ec3c328e4a199c0,,,[TRADEOFF][?],[TRADEOFF],[DO NOT ANALYZE],[?],EXISTS,,[REVIEW] [Stay up longer],,,,Multiple changes,Uncertain,Linux wifi,No,Driver,C,Change the default parameters to increase the TP. This change may cause a degredation in power consumption.,TI-OpenLink/wl12xx,yonid,,,igalc,Driver net
roalex,cos_packages_apps_Settings,Fix 4560303: Add setting to lock later when power button pressed This adds a feature to delay locking the device when the power button is pressed. This fixes a use case where the user wants to turn off the display (e.g. to save power) but doesn't want to lock the device. Change-Id: I711a81c3e79f7accdc1d9cb217b7806a0b8fcf63,29/03/2012 03:27:54,,FALSE-POSITIVE,https://github.com/roalex/cos_packages_apps_Settings/commit/31052d5150fee2a2be22408c5e9b8e7b859ba5b4,,,[OK][?][Android],[FALSE-POSITIVE],[DO NOT ANALYZE],[?] [Android],EXISTS,,,,,,,,,,,,,roalex/cos_packages_apps_Settings,,,,,
showp1984,bricked-pyramid-3.0,"msm: kgsl: Collect a sample only if GPU is active If the device is not in active state, collecting a sample is not necessary and will cause frequent wake-ups, resulting in higher power consumption. Change-Id: Icb4f82b1300cab3b4cc4ed17117a92725a5a11d4 Signed-off-by: Lynus Vaz <lvaz@codeaurora.org>",29/03/2012 03:35:56,,OK,https://github.com/showp1984/bricked-pyramid-3.0/commit/045915561261cfdd985fe908af46247facc7674d,,,[OK][Avoid Polling],[OK] [Sample only when active] [Avoid unnecessary wake-up] [General solution],[DO NOT ANALYZE],[Sample only when active] [Avoid unnecessary wake-up] [General solution] [Avoid Polling],EXISTS,[Collect a sample only if GPU is active],[causes frequent wakeup] [unnecessary],[Sample only when target is active],[Avoid unnecessary work],,,Certain,Android,No,OS,C,"collecting a sample is not necessary and will cause frequent wakeups, resulting in higher power consumption.",showp1984/bricked-pyramid-3.0,,[Avoid unnecessary work],,showp1984,Driver
simone201,neak-ics-kernel,mmc: core: put eMMC in sleep (cmd5) mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend to minimize power consumption. thx to cattleprod,29/03/2012 12:58:29,,DUPLICATE,https://github.com/simone201/neak-ics-kernel/commit/157c47f79714ca7ee082a43fd105dd60e8532585,,,,[VERIFIED] [https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad],,[https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad],EXISTS,,,,,,,,,,,,,simone201/neak-ics-kernel,simone201,,,simone201,
vorbeth,htc-kernel-msm8660,"msm_fb: display: HDMI power reduction at suspend During suspend, HDMI clocks are still running and power consumption is high. Usually HPD module is kept on even when the cable is not connected to sense the cable re-connect. But cable connect sense is not required when the device is suspended. This change makes sure that HPD, along with other HDMI modules, are totally shutdown during suspend and there is no power consumption by HDMI. (cherry picked from commit 88ad8a7be06a86104169cf2739c18c7d4409dde6) Change-Id: I535645fb489cb89c5450f9caa2ba1823190c7456 CRs-fixed: 335821 Signed-off-by: Ajay Singh Parmar <aparmar@codeaurora.org> Conflicts: drivers/video/msm/msm_fb_panel.h",30/03/2012 22:06:31,,NOT-FOUND,https://github.com/vorbeth/htc-kernel-msm8660/commit/b9af6e2bcba67ac4a0e4870a2c1ea1eacf5b08d2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,vorbeth/htc-kernel-msm8660,,,,,
TeamHorizon,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",31/03/2012 10:49:42,,NOT-FOUND,https://github.com/TeamHorizon/android_packages_apps_Phone/commit/d1de23a75387910be916cc3ccce2b860998a0b6d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamHorizon/android_packages_apps_Phone,,,,,
hawkeyexp,bricked-pyramid-3.0,"msm_fb: display: HDMI power reduction at suspend During suspend, HDMI clocks are still running and power consumption is high. Usually HPD module is kept on even when the cable is not connected to sense the cable re-connect. But cable connect sense is not required when the device is suspended. This change makes sure that HPD, along with other HDMI modules, are totally shutdown during suspend and there is no power consumption by HDMI. (cherry picked from commit 88ad8a7be06a86104169cf2739c18c7d4409dde6) Change-Id: I535645fb489cb89c5450f9caa2ba1823190c7456 CRs-fixed: 335821 Signed-off-by: Ajay Singh Parmar <aparmar@codeaurora.org> Conflicts: drivers/video/msm/msm_fb_panel.h",31/03/2012 13:46:45,,NOT-FOUND,https://github.com/hawkeyexp/bricked-pyramid-3.0/commit/2c3fe30d273ce7416409c7d86ddbb515264b112c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,hawkeyexp/bricked-pyramid-3.0,,,,,
vorbeth,htc-kernel-msm8660,"msm_fb: display: HDMI power reduction at suspend During suspend, HDMI clocks are still running and power consumption is high. Usually HPD module is kept on even when the cable is not connected to sense the cable re-connect. But cable connect sense is not required when the device is suspended. This change makes sure that HPD, along with other HDMI modules, are totally shutdown during suspend and there is no power consumption by HDMI. (cherry picked from commit 88ad8a7be06a86104169cf2739c18c7d4409dde6) Change-Id: I535645fb489cb89c5450f9caa2ba1823190c7456 CRs-fixed: 335821 Signed-off-by: Ajay Singh Parmar <aparmar@codeaurora.org> Conflicts: drivers/video/msm/msm_fb_panel.h",31/03/2012 22:46:41,,NOT-FOUND,https://github.com/vorbeth/htc-kernel-msm8660/commit/c078b4d9eec6b1e41866ee62a340635b3f9f18b5,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,vorbeth/htc-kernel-msm8660,,,,,
TripNRaVeR,bricked-pyramid-3.0,"msm_fb: display: HDMI power reduction at suspend During suspend, HDMI clocks are still running and power consumption is high. Usually HPD module is kept on even when the cable is not connected to sense the cable re-connect. But cable connect sense is not required when the device is suspended. This change makes sure that HPD, along with other HDMI modules, are totally shutdown during suspend and there is no power consumption by HDMI. (cherry picked from commit 88ad8a7be06a86104169cf2739c18c7d4409dde6) Change-Id: I535645fb489cb89c5450f9caa2ba1823190c7456 CRs-fixed: 335821 Signed-off-by: Ajay Singh Parmar <aparmar@codeaurora.org> Conflicts: drivers/video/msm/msm_fb_panel.h",01/04/2012 21:20:45,,NOT-FOUND,https://github.com/TripNRaVeR/bricked-pyramid-3.0/commit/87dfa8fa15552c5e4d64487eef14cc84d7ec0fce,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TripNRaVeR/bricked-pyramid-3.0,,,,,
ch33kybutt,kernel_cmplus_tuna,[IVAHD] Disable HWSUP mode and save power Enabling HWSUP mode is somehow reducing the performance of SL2 memory leading to increase in power consumption. This patch disables it and advertises only SWSUP mode which seems to improve performance and reduce power consumed in AV record use-case.,02/04/2012 13:23:49,,OK,https://github.com/ch33kybutt/kernel_cmplus_tuna/commit/342dd821bed948b15c40de7276094e6e011bd379,,,[OK][Disable HWSUP][reducing the performanceof SL2 memory leading to increase in power consumption][??],[OK] [Disable component] [Disabe HWSUP] [Android] [General solution],[DO NOT ANALYZE],[Disable component] [Disabe HWSUP] [Android] [General solution] [Disable HWSUP] [reducing the performanceof SL2 memory leading to increase in power consumption] [??],EXISTS,[Disable HWSUP],[hwsup reduces performance and increases power consumption],[Disable component] [Disabe HWSUP] ,[Disable component],,,Uncertain,Android,No,OS,C,This patch disables it and advertises only SWSUP mode which seems to improve performance and reduce power consumed in AV record use-case.,ch33kybutt/kernel_cmplus_tuna,ch33kybutt,[Disabling feature/devices],,ch33kybutt,Kernel arch
ch33kybutt,kernel_skipjack_tuna,"OMAP4470: TWL: Set CORE off-mode voltage to ""0"" OMAP4470: TWL: Set CORE off-mode voltage to ""0"" Off-mode voltage on CORE domain was increased to RET voltage by mistake. Keeping RET voltage on CORE domain during off-mode increase power consumption up to 0.9 mA. Change-Id: I260347e18d106d1ba60c35a6ffaebb8d17185e1c Signed-off-by: Sergii Postulga <x0153364@ti.com>",04/04/2012 02:43:22,,OK,https://github.com/ch33kybutt/kernel_skipjack_tuna/commit/ba52df5486229823fc56bd90d94f1e45cbbdbb88,,,[OK][Scale Voltage],[OK] [Scale voltage] [Bug fix] [Config] [General solution],[DO NOT ANALYZE],[Scale voltage] [Bug fix] [Config] [General solution],EXISTS,"[Set CORE off-mode voltage to ""0""]",[RET voltage on CORE domain increases power consumption],[Set correct voltage for domain] [Scale down voltage],[DVFS] [Sub1: Voltage scaling],,,Certain,Android,Change-Id: I260347e18d106d1ba60c35a6ffaebb8d17185e1c,OS,C,Keeping RET voltage on CORE domain during off-mode increase power consumption,ch33kybutt/kernel_skipjack_tuna,,[Energy bug],,ch33kybutt,Kernel arch
rkrabath,DigitalAnalog,Playing around with some power savings,04/04/2012 04:13:26,,UNABLE-TO-CATEGORIZE,https://github.com/rkrabath/DigitalAnalog/commit/c4bd283f3742a2ef3c175fcd49097a2bab878c48,,,[OK][Go to idle],[OK] [Go to idle] [General solution],[DO NOT ANALYZE],[Go to idle] [General solution],EXISTS,[Call delay function],[experimenting with power saving],[Skip screen update],?,,,Certain,Embedded !,No,Embedded application,C,Playing around with some power savings,rkrabath/DigitalAnalog,rkrabath,?,,rkrabath,Embedded application !
NeoPhyTe-x360,initramfs_galaxys2_ICS,Add iwconfig binary. Decrease wifi power to save power and rts-frag values for better link,04/04/2012 15:08:54,,OK,https://github.com/NeoPhyTe-x360/initramfs_galaxys2_ICS/commit/5f8147418712c8d62e22acec7092e4e286d5edb5,,,[OK][Decrease power consumption conf],[OK] [Decrease wifi power] [General solution],[DO NOT ANALYZE],[Decrease wifi power] [General solution] [Decrease power consumption conf],EXISTS,[Decrease wifi power],[save power],[Decrease wifi power],[Reduce power],,,Certain,Android,No,Libraries and Utilities,Shell,Decrease wifi power to save power,NeoPhyTe-x360/initramfs_galaxys2_ICS,NeoPhyTe-x360,[Miscellaneous],,NeoPhyTe-x360,Script sbin
TI-OpenLink,ti-utils,"update single role firmware to version X.3.7.0.105 and multi role firmware to X.5.4.0.20 FW comments: - Update the p_WasHwTsfUpdated flag only after checking if Beacons are from our AP. - Handling false Ap Jitter scenarios (phase I of this complete solution). - Code Reduction and Code Optimization related to IsPGVersionTrioPG2 in rx_complete_1273.c. - Bug Fix MCS00109245: STA doesn't enter ELP - High power consumption. We stopped the wrong activity by mistake. - Bug Fix MCS00109088: FmCoexInit function with wrong parameters. Wrong configuration of TOP_FREF_26_MHZ/TOP_FREF_52_MHZ in fm_coex.c. - Bug Fix MCS00109373: Fix for the wrong FLID during BA session. - Bug Fix MCS00109084: IOP: SUT BSS loss in open air TCP Traffic to Aruba AP (WorkAround since root cause was not found yet) - Added FW dump debug tool is main.c. - Bug Fix MCS00109310: SUT: Add protection in FW in case of large DTIM periods. - (MCS00108403)(MCS00108403) - Fix command complete timeout errors (mostly stop role). This happened because we did not call ENABLE_INTS() in SoftGemini_StopWlanActivity() and RxEarlyTermNotifyBeaconDtim() - Added a newer version of dis470 to cgtools. All compilations will now include a disassembly of the entire fw. - Bug Fix MCS00107873: MR: During STA traffic and p2p find in second role, Recovery may occur. Update the MRS to execute the ROC command serially. The host won't wait to complete event on second ROC. - Remove CFG_RX_ALL_GOOD filter from RX_CFG_OPTIONS_ROLE_COMMON. - Increment the pointer in chain.offset and not in (chain.mblkPtr + chain.offset) in function CopyFromMemBlockChain. - When we got a prob-res that wasn't match the SSID that we looked we set this frame as not success. The function SetRxFiltering was suppose to recognize this case and drop the frame but instead we pass the frame to the host because it was linked to the system flid. - Code Reduction and Code Optimization related to IsPGVersionTrioPG2 in rx_complete_1273.c. - (MCS00108403)(MCS00108403) - Fix command complete timeout errors (mostly stop role). This happened because we did not call ENABLE_INTS() in SoftGemini_StopWlanActivity() and RxEarlyTermNotifyBeaconDtim() - Added a newer version of dis470 to cgtools. All compilations will now include a disassembly of the entire fw. - Bug Fix MCS00109084: IOP: SUT BSS loss in open air TCP Traffic to Aruba AP. (WorkAround since root cause was not found). - Added FW dump debug tool is main.c. - Bug Fix MCS00108513 SUT: doesn't enter to ELP after almost every connection to AP. - Bug Fix MCS00109310: SUT: Add protection in FW in case of large DTIM periods. - Bug Fix MCS00109373: Fix for the wrong FLID during BA session. - Bug Fix MCS00109088: FmCoexInit function with wrong parameters. Wrong configuration of TOP_FREF_26_MHZ/TOP_FREF_52_MHZ in fm_coex.c. - Fixes for Bug MCS00108095: MR FW: Second role SUT won't connect to ext-AP if scan was not performed beforehand. And Bug MCS00108425: MR APUT-SUT: Recovery occur (0x1947e) when loading SUT as second role with 16 profiles while aGO/APUT in idle. - Bug Fix MCS00108433: MR Robustness: APUT-SUT: Recoveries occur (0x796e, 0x001ba0) when SUT connecting to AP with AES while APUT runs traffic. We didn't clear both Unicast & Broadcasts security keys. Signed-off-by: Assaf Azulay <assaf@ti.com>",04/04/2012 21:04:18,,NOT-FOUND,https://github.com/TI-OpenLink/ti-utils/commit/b2914dae88565e8ca32503badf99a9c50478c855,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TI-OpenLink/ti-utils,,,,,
TI-OpenLink,ti-utils,"update single role firmware to version X.3.7.0.105 and multi role firmware to X.5.4.0.20 FW comments: - Update the p_WasHwTsfUpdated flag only after checking if Beacons are from our AP. - Handling false Ap Jitter scenarios (phase I of this complete solution). - Code Reduction and Code Optimization related to IsPGVersionTrioPG2 in rx_complete_1273.c. - Bug Fix MCS00109245: STA doesn't enter ELP - High power consumption. We stopped the wrong activity by mistake. - Bug Fix MCS00109088: FmCoexInit function with wrong parameters. Wrong configuration of TOP_FREF_26_MHZ/TOP_FREF_52_MHZ in fm_coex.c. - Bug Fix MCS00109373: Fix for the wrong FLID during BA session. - Bug Fix MCS00109084: IOP: SUT BSS loss in open air TCP Traffic to Aruba AP (WorkAround since root cause was not found yet) - Added FW dump debug tool is main.c. - Bug Fix MCS00109310: SUT: Add protection in FW in case of large DTIM periods. - (MCS00108403)(MCS00108403) - Fix command complete timeout errors (mostly stop role). This happened because we did not call ENABLE_INTS() in SoftGemini_StopWlanActivity() and RxEarlyTermNotifyBeaconDtim() - Added a newer version of dis470 to cgtools. All compilations will now include a disassembly of the entire fw. - Bug Fix MCS00107873: MR: During STA traffic and p2p find in second role, Recovery may occur. Update the MRS to execute the ROC command serially. The host won't wait to complete event on second ROC. - Remove CFG_RX_ALL_GOOD filter from RX_CFG_OPTIONS_ROLE_COMMON. - Increment the pointer in chain.offset and not in (chain.mblkPtr + chain.offset) in function CopyFromMemBlockChain. - When we got a prob-res that wasn't match the SSID that we looked we set this frame as not success. The function SetRxFiltering was suppose to recognize this case and drop the frame but instead we pass the frame to the host because it was linked to the system flid. - Code Reduction and Code Optimization related to IsPGVersionTrioPG2 in rx_complete_1273.c. - (MCS00108403)(MCS00108403) - Fix command complete timeout errors (mostly stop role). This happened because we did not call ENABLE_INTS() in SoftGemini_StopWlanActivity() and RxEarlyTermNotifyBeaconDtim() - Added a newer version of dis470 to cgtools. All compilations will now include a disassembly of the entire fw. - Bug Fix MCS00109084: IOP: SUT BSS loss in open air TCP Traffic to Aruba AP. (WorkAround since root cause was not found). - Added FW dump debug tool is main.c. - Bug Fix MCS00108513 SUT: doesn't enter to ELP after almost every connection to AP. - Bug Fix MCS00109310: SUT: Add protection in FW in case of large DTIM periods. - Bug Fix MCS00109373: Fix for the wrong FLID during BA session. - Bug Fix MCS00109088: FmCoexInit function with wrong parameters. Wrong configuration of TOP_FREF_26_MHZ/TOP_FREF_52_MHZ in fm_coex.c. - Fixes for Bug MCS00108095: MR FW: Second role SUT won't connect to ext-AP if scan was not performed beforehand. And Bug MCS00108425: MR APUT-SUT: Recovery occur (0x1947e) when loading SUT as second role with 16 profiles while aGO/APUT in idle. - Bug Fix MCS00108433: MR Robustness: APUT-SUT: Recoveries occur (0x796e, 0x001ba0) when SUT connecting to AP with AES while APUT runs traffic. We didn't clear both Unicast & Broadcasts security keys. Signed-off-by: Assaf Azulay <assaf@ti.com>",04/04/2012 21:14:23,,DUPLICATE,https://github.com/TI-OpenLink/ti-utils/commit/a42f8810a536c773d9445dd46ef4bfb5f4307f9a,,,,,,,EXISTS,,,,,,,,,,,,,TI-OpenLink/ti-utils,assafazulay,,,assafazulay,
TI-OpenLink,ti-utils,"Signedingle role firmware to version X.3.7.0.105 and multi role firmware to X.5.4.0.20 FW comments: - Update the p_WasHwTsfUpdated flag only after checking if Beacons are from our AP. - Handling false Ap Jitter scenarios (phase I of this complete solution). - Code Reduction and Code Optimization related to IsPGVersionTrioPG2 in rx_complete_1273.c. - Bug Fix MCS00109245: STA doesn't enter ELP - High power consumption. We stopped the wrong activity by mistake. - Bug Fix MCS00109088: FmCoexInit function with wrong parameters. Wrong configuration of TOP_FREF_26_MHZ/TOP_FREF_52_MHZ in fm_coex.c. - Bug Fix MCS00109373: Fix for the wrong FLID during BA session. - Bug Fix MCS00109084: IOP: SUT BSS loss in open air TCP Traffic to Aruba AP (WorkAround since root cause was not found yet) - Added FW dump debug tool is main.c. - Bug Fix MCS00109310: SUT: Add protection in FW in case of large DTIM periods. - (MCS00108403)(MCS00108403) - Fix command complete timeout errors (mostly stop role). This happened because we did not call ENABLE_INTS() in SoftGemini_StopWlanActivity() and RxEarlyTermNotifyBeaconDtim() - Added a newer version of dis470 to cgtools. All compilations will now include a disassembly of the entire fw. - Bug Fix MCS00107873: MR: During STA traffic and p2p find in second role, Recovery may occur. Update the MRS to execute the ROC command serially. The host won't wait to complete event on second ROC. - Remove CFG_RX_ALL_GOOD filter from RX_CFG_OPTIONS_ROLE_COMMON. - Increment the pointer in chain.offset and not in (chain.mblkPtr + chain.offset) in function CopyFromMemBlockChain. - When we got a prob-res that wasn't match the SSID that we looked we set this frame as not success. The function SetRxFiltering was suppose to recognize this case and drop the frame but instead we pass the frame to the host because it was linked to the system flid. - Code Reduction and Code Optimization related to IsPGVersionTrioPG2 in rx_complete_1273.c. - (MCS00108403)(MCS00108403) - Fix command complete timeout errors (mostly stop role). This happened because we did not call ENABLE_INTS() in SoftGemini_StopWlanActivity() and RxEarlyTermNotifyBeaconDtim() - Added a newer version of dis470 to cgtools. All compilations will now include a disassembly of the entire fw. - Bug Fix MCS00109084: IOP: SUT BSS loss in open air TCP Traffic to Aruba AP. (WorkAround since root cause was not found). - Added FW dump debug tool is main.c. - Bug Fix MCS00108513 SUT: doesn't enter to ELP after almost every connection to AP. - Bug Fix MCS00109310: SUT: Add protection in FW in case of large DTIM periods. - Bug Fix MCS00109373: Fix for the wrong FLID during BA session. - Bug Fix MCS00109088: FmCoexInit function with wrong parameters. Wrong configuration of TOP_FREF_26_MHZ/TOP_FREF_52_MHZ in fm_coex.c. - Fixes for Bug MCS00108095: MR FW: Second role SUT won't connect to ext-AP if scan was not performed beforehand. off-by: Assaf Azulay <assaf@ti.com>",04/04/2012 21:40:34,,BINARIES,https://github.com/TI-OpenLink/ti-utils/commit/ae7600493925da43ff77e20cc147dfe6d6529835,,,,,,,EXISTS,,,,,,,,,,,,,TI-OpenLink/ti-utils,assafazulay,,,assafazulay,
TI-OpenLink,ti-utils,"Single role firmware to version X.3.7.0.105 and multi role firmware to X.5.4.0.20 FW comments: - Update the p_WasHwTsfUpdated flag only after checking if Beacons are from our AP. - Handling false Ap Jitter scenarios (phase I of this complete solution). - Code Reduction and Code Optimization related to IsPGVersionTrioPG2 in rx_complete_1273.c. - Bug Fix MCS00109245: STA doesn't enter ELP - High power consumption. We stopped the wrong activity by mistake. - Bug Fix MCS00109088: FmCoexInit function with wrong parameters. Wrong configuration of TOP_FREF_26_MHZ/TOP_FREF_52_MHZ in fm_coex.c. - Bug Fix MCS00109373: Fix for the wrong FLID during BA session. - Bug Fix MCS00109084: IOP: SUT BSS loss in open air TCP Traffic to Aruba AP (WorkAround since root cause was not found yet) - Added FW dump debug tool is main.c. - Bug Fix MCS00109310: SUT: Add protection in FW in case of large DTIM periods. - (MCS00108403)(MCS00108403) - Fix command complete timeout errors (mostly stop role). This happened because we did not call ENABLE_INTS() in SoftGemini_StopWlanActivity() and RxEarlyTermNotifyBeaconDtim() - Added a newer version of dis470 to cgtools. All compilations will now include a disassembly of the entire fw. - Bug Fix MCS00107873: MR: During STA traffic and p2p find in second role, Recovery may occur. Update the MRS to execute the ROC command serially. The host won't wait to complete event on second ROC. - Remove CFG_RX_ALL_GOOD filter from RX_CFG_OPTIONS_ROLE_COMMON. - Increment the pointer in chain.offset and not in (chain.mblkPtr + chain.offset) in function CopyFromMemBlockChain. - When we got a prob-res that wasn't match the SSID that we looked we set this frame as not success. The function SetRxFiltering was suppose to recognize this case and drop the frame but instead we pass the frame to the host because it was linked to the system flid. - Code Reduction and Code Optimization related to IsPGVersionTrioPG2 in rx_complete_1273.c. - (MCS00108403)(MCS00108403) - Fix command complete timeout errors (mostly stop role). This happened because we did not call ENABLE_INTS() in SoftGemini_StopWlanActivity() and RxEarlyTermNotifyBeaconDtim() - Added a newer version of dis470 to cgtools. All compilations will now include a disassembly of the entire fw. - Bug Fix MCS00109084: IOP: SUT BSS loss in open air TCP Traffic to Aruba AP. (WorkAround since root cause was not found). - Added FW dump debug tool is main.c. - Bug Fix MCS00108513 SUT: doesn't enter to ELP after almost every connection to AP. - Bug Fix MCS00109310: SUT: Add protection in FW in case of large DTIM periods. - Bug Fix MCS00109373: Fix for the wrong FLID during BA session. - Bug Fix MCS00109088: FmCoexInit function with wrong parameters. Wrong configuration of TOP_FREF_26_MHZ/TOP_FREF_52_MHZ in fm_coex.c. - Fixes for Bug MCS00108095: MR FW: Second role SUT won't connect to ext-AP if scan was not performed beforehand. off-by: Assaf Azulay <assaf@ti.com>",05/04/2012 06:31:16,,DUPLICATE,https://github.com/TI-OpenLink/ti-utils/commit/5b0914a1b65d98bb9ee3f85c478508ddef47e0cb,,,,[VERIFIED] [Original does not exist],,[Original does not exist],EXISTS,,,,,,,,,,,,,TI-OpenLink/ti-utils,assafazulay,,,assafazulay,
vwoid,nexus-s-kernel,Add power saving state DEEP IDLE version 2. Conflicts: drivers/misc/Makefile,07/04/2012 14:33:19,,NOT-FOUND,https://github.com/vwoid/nexus-s-kernel/commit/818ea34d05a184ca2b64e5dbaa46087e0fa46f2e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,vwoid/nexus-s-kernel,,,,,
vwoid,nexus-s-kernel,"Revert ""Add power saving state DEEP IDLE version 2."" This reverts commit 818ea34d05a184ca2b64e5dbaa46087e0fa46f2e.",07/04/2012 20:57:20,,NOT-FOUND,https://github.com/vwoid/nexus-s-kernel/commit/568601e6f362da2b52852a3e56f1b1299749122d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,vwoid/nexus-s-kernel,,,,,
wilseypa,warped,"big clock frequency control refactor - added configuration file options for power save, useful work metric - renamed ClockFrequencyManager to DVFSManager... more concise and consistent with the literature - renamed CentralizedClockFrequencyManager to RealDVFSManager and DecentralizedClockFrequencyManager to SimulatedDVFSManager In practice this is how these two are used... if really using DVFS (i.e. with the userspace governor) then only one round of messages is needed and the master process can set everybody's frequency. If we're simulating then every process needs to be aware of its simulated frequency so it can delay accordingly, so a second round of messages is required. This isn't decentralized, the master process is still determining the frequency mapping, but a different way in handling the message passing is needed.",10/04/2012 01:05:15,,RELATED,https://github.com/wilseypa/pdes/commit/25eb2fe733a510b0a6624cd1245c5dacb4e4dc67,https://github.com/wilseypa/warped/commit/25eb2fe733a510b0a6624cd1245c5dacb4e4dc67,,[RELATED] [Add power menu],[RELATED] [Add power menu],[RELATED] [Add power menu],[Add power menu],EXISTS,[Expose config file power save option],,,,,,Certain,?,No,Application library/framework,"C++,config",,wilseypa/warped,,,,,Application library
burst7shot,packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",10/04/2012 07:00:09,,NOT-FOUND,https://github.com/burst7shot/packages_apps_Phone/commit/1c9c4b167d9511635972e819cee3425337673d7b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,burst7shot/packages_apps_Phone,,,,,
rickshory,AVRGreenlogger,"Initial power saving sleep modes. Sleeps after 120 sec, until accelerometer tap detect.",10/04/2012 15:45:56,,OK,https://github.com/rickshory/AVRGreenlogger/commit/c43ac3bafb2fee3e5133cdd67ca506d34e08c9a4,,,[OK][Go to idle][Threashold],[OK] [Go to idle] ,[DO NOT ANALYZE],[Go to idle] [ ] [Threashold],EXISTS,"[Sleeps after 120 sec, until accelerometer tap detect]",[add power saving sleep mode],[Sleep while no motion detected],[Go to low power mode] [Condition: no motion],,,Certain,Embedded greenlogger !,No,Application,C,Initial power saving sleep modes,rickshory/AVRGreenlogger,rickshory,[Low power idling],[no motion],rickshory,Embedded application !
Andromadus,htc-kernel-msm7x30,Disable 802.11n in bcm4329 module. Fixes issue where power saving does not work on certain APs under certain conditions causing wifi to drop during sleep without notice. (credit goes to nyt for patch),10/04/2012 19:24:11,,FALSE-POSITIVE,https://github.com/Andromadus/htc-kernel-msm7x30/commit/778a8964f33ec5138ab782dfea067699a4c72e86,,,[RELATED][Disabling device],[RELATED] [Bug fix] [Fix power saving casuing wifi to drop],[DO NOT ANALYZE],[Bug fix] [Fix power saving casuing wifi to drop] [Disabling device],EXISTS,[Disable wireless 802.11n] ,,[Fix wifi issue] [Fix power saving casuing wifi to drop],,,,Certain,Android,Yes,Driver,C,,Andromadus/htc-kernel-msm7x30,corcoran,,,corcoran,Driver net
Andromadus,htc-kernel-msm7x30,Disable 802.11n in bcm4329 module. Fixes issue where power saving does not work on certain APs under certain conditions causing wifi to drop during sleep without notice. (credit goes to nyt for patch),10/04/2012 19:48:52,,NOT-FOUND,https://github.com/Andromadus/htc-kernel-msm7x30/commit/4f28fab3acfe3c57c24ee5924f32d2b280c87f98,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Andromadus/htc-kernel-msm7x30,,,,,
LorDClockaN,LorDmodUE,Disable 802.11n in bcm4329 module. Fixes issue where power saving does not work on certain APs under certain conditions causing wifi to drop during sleep without notice. (credit goes to nyt for patch),11/04/2012 12:32:33,,NOT-FOUND,https://github.com/LorDClockaN/LorDmodUE/commit/6e35ee378f0b882a591f79237e13ebdb063f0683,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LorDClockaN/LorDmodUE,,,,,
sonicxml,Popcornkernel-Tuna,"OMAP4: PM: IVA AUTO RET relaxed workaround in idle path AUTO RET for IVA VDD Cannot be permanently enabled during OFF mode due to potential race between IVA VDD entering RET and start of Device OFF mode. It is mandatory to have AUTO RET for IVA VDD exlusive with Devide OFF mode. In order to avoid lockup in OFF mode sequence, system must ensure IVA voltage domain transitions straight from stable ON to OFF. In addition, management of IVA VDD SmartReflex sensor at exit of idle path may introduce a misalignment between IVA Voltage Controller state and IVA PRCM voltage FSM based on following identified scenario: IVA Voltage Controller is woken-up due to SmartReflex management while IVA PRCM voltage FSM stays in RET in absence of any IVA module wake-up event (which is not systematic in idle path as opposed to MPU and CORE VDDs being necessarily woken up with MPU and CORE PDs). WA involves: Ensure stable ON-OFF transition for IVA voltage domain during OFF mode sequence. Ensure VCON and PRCM FSM are kept aligned due to IVA SR handling in idle path. 1) AUTO RET for IVA VDD is enabled entering in idle path, disabled exiting idle path and IVA VDD is always woken-up with a SW dummy wakeup. 2) OFF mode is enabled only in Suspend path. 3) AUTO RET for IVA VDD remains disabled in Suspend path (before OFF mode). REVISIT: Update the patch once proper Errata is out for 44xx. Benefits: 1) This patch ensures it is possible to gate SYS_CLK during OS-Idle LCD OFF when all domains are idled, saving up to 2mA at VBAT from external clock buffer. 2) IVA voltage domain is now allowed to scale to Retention during idle which reduces power consumption on all types of use case allowing extensive use of idle path (e.g.: Home screen, Page reading). Effect are especially visible if system uses Smart-Reflex Class 1.5 compared to Class 3 considering the increased difference of voltage from converged Voltage SR vs Retention voltage. TODO: quantify the actual savings from IVA-RET with further measurements. Change-Id: I01f0431f7556f0baf0b5b6b42092cd11c2442f00 Signed-off-by: Cedric Vamour <c-vamour@ti.com>",11/04/2012 21:01:57,,OK,https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5,,,[OK][Scaling Voltage],[OK] [Scale voltage],[DO NOT ANALYZE],[Scale voltage] [Scaling Voltage],EXISTS,[Allow IVA voltage domain to scale to retention during idle],[reduce power consumption],[Scale down voltage],[DVFS] [Sub1: Voltage scaling],,,Certain,Android,Change-Id: I01f0431f7556f0baf0b5b6b42092cd11c2442f00,OS,C,IVA voltage domain is now allowed to scale to Retention during idle which reduces power consumption,sonicxml/Popcornkernel-Tuna,imoseyon,[Frequency and voltage scaling],,sonicxml,Kernel arch
sonicxml,Popcornkernel-Tuna,"CPUFREQ: Interactive governor tuning in passive use cases During passive use-cases, i.e. when display is OFF, value of timer, which is used for frequency increasing, may be increased. This will significantly reduce the amount of OPP switching during passive use-cases, and optimize power consumption on MPU. Total benefit is around 1 ~ 2 mA in passive use-cases. Change-Id: Iac90c0c07d34fb413131c0abc9de28523c1707e3 Signed-off-by: Andrii Tseglytskyi <andrii.tseglytskyi@ti.com>",13/04/2012 10:14:50,,OK,https://github.com/sonicxml/Popcornkernel-Tuna/commit/0f703300544b09ebbf343221ae61ec8ee5b0dc3a,,,[OK]Scaling CPU Freq],[OK] [Increase timer] [Scale CPU frequency] [App specific],[DO NOT ANALYZE],[Increase timer] [Scale CPU frequency] [App specific] [Scaling CPU Freq],EXISTS,[governor tuning when screen is off] [config governor],[reduce the amount of OPP switching],[Power saving action when screen off] [Increase frequency scaling timer] [Improve governor],[DVFS] [Sub1: Governor tunning] [Condition: screen off],,,Certain,Android,No,OS,C,"This will significantly reduce the amount of OPP switching during passive use cases, and optimize power consumption on MPU",sonicxml/Popcornkernel-Tuna,sonicxml,[Frequency and voltage scaling],,sonicxml,Driver
ErwinP,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",14/04/2012 10:49:50,,DUPLICATE,https://github.com/ErwinP/android_packages_apps_Phone/commit/af8d955c616d0497980a5e10bbc4fbb9863a11dc,,,,,,,EXISTS,,,,,,,,,,,,,ErwinP/android_packages_apps_Phone,,,,ErwinP,
adrientetar,semc-msm-2.6.35,"msm_fb: display: Remove RGB performance level vector With RGB performance level vector requesting for performance level 1 for all RGB type surfaces, power consumption increases. Performance level 4 is sufficient for single WSVGA size RGB buffer scanning. Remove RGB performance level vector and add check to request performance level 4 for signle WSVGA RGB buffer scanning. Change-Id: Icfb6f00799fc510d23a6f048fc4729471576d00e Signed-off-by: Omprakash Dhyade <odhyade@codeaurora.org>",14/04/2012 11:40:44,,UNABLE-TO-CATEGORIZE,https://github.com/adridu59/semc-msm-2.6.35/commit/2c3e594b0ab291c09d16da330c265c90195e305a,https://github.com/adrientetar/semc-msm-2.6.35/commit/2c3e594b0ab291c09d16da330c265c90195e305a,,[FALSE-POSITIVE],[UNABLE-TO-CATEGORIZE] [Commit message is clear but the changes are not] ,[OK] [Improve power usage],[Commit message is clear but the changes are not] [ ] [Improve power usage],EXISTS,,,,,,,,,,,,,adrientetar/semc-msm-2.6.35,,,,,
adrientetar,semc-msm-2.6.35,"msm: kgsl: Save power when the display is off Use the early_suspend functionality to monitor display state. If the display is off the GPU does not need to be in turbo mode. Wait until late resume to enter turbo mode, and if the core isidle, turn off the GPU clocks CRs-fixed: 290139 Change-Id: I76129c39dd3c67e2ad11778fe7f87fb4d0c09fd3 Signed-off-by: Raj Kushwaha <rajk@codeaurora.org>",14/04/2012 11:58:28,,UNABLE-TO-CATEGORIZE,https://github.com/adridu59/semc-msm-2.6.35/commit/0f47fc42e1c61b3bd8101b7702fcc5ca5b118dc7,https://github.com/adrientetar/semc-msm-2.6.35/commit/0f47fc42e1c61b3bd8101b7702fcc5ca5b118dc7,,[FALSE-POSITIVE],[UNABLE-TO-CATEGORIZE] [Commit message is clear but the changes are not] ,[OK] [Improve power usage],[Commit message is clear but the changes are not] [ ] [Improve power usage],EXISTS,,,,,,,,,,,,,adrientetar/semc-msm-2.6.35,,,,,
ThePlayground,android_hardware_qcom_display,"libhwcomposer: Implement idletimeout fallback for MDP composition . Background: On MDP compositon, MDP keeps reading contents from the pipes even on Idle Screen i.e. even when HWC is not queueing any new buffers to MDP. Above data traffic leads to high power consumption. Implementation: This change introduces a timer in HWC which will timeout if there are no updates in bypass composition path for the period specified via debug.bypass.idletime. Also SurfaceFlinger will be notified to redraw the current frame which will be composed into FB. Conflicts: libhwcomposer/hwcomposer.cpp Change-Id: Ic3a467596068fa553271b5cd8c2831e544e3211d (cherry picked from commit ad1d9a019234ab03dbc79b1ddb73c86e560e3e74) Conflicts: libhwcomposer/hwcomposer.cpp",15/04/2012 00:22:37,,OK,https://github.com/ThePlayground/android_hardware_qcom_display/commit/5a1f49bad8ba1cad1ab380243192bb9c80031572,,,[OK][Avoid Polling][Android],[OK] [Add timer] [Avoid polling] [Android],[DO NOT ANALYZE],[Add timer] [Avoid polling] [Android],EXISTS,[idle timeout fallback for MDP composition],[MDP keeps reading contents from the pipes even ven when HWC is not queueing any new buffers to MDP],[Add go to idle inactivity timeout],[Add timeout] [Sub1: Go to low power mode],,,Certain,Android,Change-Id: Ic3a467596068fa553271b5cd8c2831e544e3211d,OS,C++,MDP keeps reading contents from the pipes even on Idle Screen i.e. even when HWC is not queueing any new buffers to MDP. Above data traffic leads to high power consumption.,ThePlayground/android_hardware_qcom_display,,[Energy bug],,LoungeKatt,HAL
CyanogenMod,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",15/04/2012 04:21:55,,DUPLICATE,https://github.com/CyanogenMod/android_packages_apps_Phone/commit/7c44996bf384829947e04db3df3821223135dd8a,,,,,,,EXISTS,,,,,,,,,,,,,CyanogenMod/android_packages_apps_Phone,,,,cyanogen,
vwoid,nexus-s-kernel,Add power saving state DEEP IDLE version 2. Conflicts: drivers/misc/Makefile,15/04/2012 13:13:36,,NOT-FOUND,https://github.com/vwoid/nexus-s-kernel/commit/436c7ab77fbe8ba8e92060513bcf718428612733,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,vwoid/nexus-s-kernel,,,,,
greg-pe,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",15/04/2012 15:47:46,,DUPLICATE,https://github.com/greg-pe/android_packages_apps_Phone/commit/84c814755477df8cd9a4496eb96b22bb980828db,,,,,,,EXISTS,,,,,,,,,,,,,greg-pe/android_packages_apps_Phone,,,,greg-pe,
Andromadus,android_frameworks_base,Frameworks/SystemUI: Hide expanded dialog when screen is off Hide the expanded dialog while screen is off. Otherwise it causes continuous buffer updates to SurfaceTexture even when SCREEN is turned off and while In-Call causing a spike in power consumtion. This fix ensures that the power consumption is kept to a minimum in such a scenario. CRs-Fixed: 339815 Change-Id: Ib9154528d4f88ba12ca234be7f929a61ed098be7,15/04/2012 17:53:58,,DUPLICATE,https://github.com/Andromadus/android_frameworks_base/commit/4383f36342c19980f5b185bfa52fe0ef604ddf3f,,,,,,,EXISTS,,,,,,,,,,,,,Andromadus/android_frameworks_base,,,,Flinny,
rickshory,AVRGreenlogger,"Explicitly turn off SD card power after each data cycle. Design already showing net solar gain, even before this power saving change.",16/04/2012 16:46:47,,OK,https://github.com/rickshory/AVRGreenlogger/commit/bbd6f5e60fcf77192d2eb49ed0b6129a019af5d3,,,[OK][Disablind Devices],[OK] [Disable component] [Disable SDCard],[DO NOT ANALYZE],[Disable component] [Disable SDCard] [Disablind Devices],EXISTS,[turn off SD card power after each data cycle],[showing net solar gain],[Disable device after each data cycle],[Disable device] [Condition: after data cycle],,,Certain,Embedded greenlogger !,No,Application,C,"Design already showing net solar gain, even before this power saving change.",rickshory/AVRGreenlogger,rickshory,[Disabling feature/devices],[after data cycle],rickshory,Embedded application !
bradley219,avr_fft,Added inactivity timeout to save power/shutdwn,17/04/2012 00:13:09,,OK,https://github.com/bradley219/avr_fft/commit/0521002057b38acf27320323fbea059cadb3050b,,,[OK][Disablind Devices][Inactivity timeout],[OK] [Add timeout] [Add inactivity timeout] [Disable component],[DO NOT ANALYZE],[Add timeout] [Add inactivity timeout] [Disable component] [Disablind Devices] [Inactivity timeout],EXISTS,[Added blacklight inactivity timeout],[save power],[Add device disabling inactivity timeout] [Do not draw when screen off],[Add time out] [Sub1: Disable device],[Display and UI tuning],Multiple changes,Certain,Embedded !,No,Application,C,Added inactivity timeout to save power/shutdwn,bradley219/avr_fft,bradley219,[Timing out],,bradley219,Embedded application !
mysmartgrid,msg-flukso,A new device notification event has been created: the Energy Consumption Forecast Report.,17/04/2012 14:51:33,,FALSE-POSITIVE,https://github.com/mysmartgrid/msg-flukso/commit/1d91258c501fb8f60f7f7afd0138ae2cda72a2e8,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Not software energy] [Hardware energy] [Smartgrid] [Sensors],[FALSE-POSITIVE],[Not software energy] [Hardware energy] [Smartgrid] [Sensors],EXISTS,,,,,,,,,,,,,mysmartgrid/msg-flukso,,,,,
burst7shot,frameworks_base,Frameworks/SystemUI: Hide expanded dialog when screen is off Hide the expanded dialog while screen is off. Otherwise it causes continuous buffer updates to SurfaceTexture even when SCREEN is turned off and while In-Call causing a spike in power consumtion. This fix ensures that the power consumption is kept to a minimum in such a scenario. CRs-Fixed: 339815 Change-Id: Ib9154528d4f88ba12ca234be7f929a61ed098be7,17/04/2012 15:22:22,,NOT-FOUND,https://github.com/burst7shot/frameworks_base/commit/bd9fe1613cbd043da34768305c703b504656e358,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,burst7shot/frameworks_base,,,,,
kugel-,rockbox,si4700 tuner: fix power consumption issue caused by ill-defined power state at startup Change-Id: I657bc7e3d330f436859cfef2a89b0813bc008c49,17/04/2012 15:26:00,,OK,https://github.com/kugel-/rockbox/commit/73732f406ebd3e5b85a70c8f7ff60fd26144551a,,,[OK[?],[OK] [Bug fix] [Set well defined power state] [App specific],[DO NOT ANALYZE],[Bug fix] [Set well defined power state] [App specific],EXISTS,[fix ill-defined power state at startup],[fix power consumption issue],[Make sure device enters well-defined powered-off state],[Disable device],,,Certain,Embedded !,Change-Id: I657bc7e3d330f436859cfef2a89b0813bc008c49,OS,C,fix power consumption issue,kugel-/rockbox,bertrik,[Energy bug],,bertrik,Firmware driver !
sruffell,dahdi-linux,"wcb4xxp: Support for when network side deactivates layer1. This is a port of the functionality in the wctdm24xxp driver to support power savings modes. Specifically, if the the network side of a BRI spans deactivates the span to save power, the B410P previously automatically activated it again. Now, if persistentlayer1=0 module parameter is set, the span will be allowed to stay deactivated until layer two has a message to send on the dchannel. This patch does not change any of the default behavior of the B410P driver and the defaults for the persistentlayer1 option is inconsistent with that of the B400M modules in the wctdm24xxp driver. Internal-Issue-ID: ABE-2845 From: Matthew Fredrickson <creslin@digium.com> [ Minor formatting, exposed the persistentlayer1 as module parameter, changed defaults for teignorered, alarmdebounce, and persistentlayer1 to match current defaults in wcb4xxp driver ] Signed-off-by: Shaun Ruffell <sruffell@digium.com> git-svn-id: http://svn.asterisk.org/svn/dahdi/linux/trunk@10661 a0bf4364-ded3-4de4-8d8a-66a801d63aff",18/04/2012 00:12:50,,OK,https://github.com/sruffell/dahdi-linux/commit/3293cfe487a6c93e2b8d962e1f71df123e5b8f69,,,[OK][Disabling componet],[OK] [Disable component] [Conditional disable component] [Generic solution],[OK] [Disable component],[Disable component] [Conditional disable component] [Generic solution] [Disabling componet],EXISTS,[the span will be allowed to stay deactivated until layer two has a message to send on the dchannel],[support power savings modes],[Bug fix] [Do not reenable component] [Conditional component reenabling] ,[Energy bug],,,Certain,Linux !,Yes,OS,C,This is a port of the functionality in the wctdm24xxp driver to support power savings modes,sruffell/dahdi-linux,,[Miscellaneous],,sruffell,Driver dahdi
Evervolv,android_frameworks_base,Frameworks/SystemUI: Hide expanded dialog when screen is off Hide the expanded dialog while screen is off. Otherwise it causes continuous buffer updates to SurfaceTexture even when SCREEN is turned off and while In-Call causing a spike in power consumtion. This fix ensures that the power consumption is kept to a minimum in such a scenario. CRs-Fixed: 339815 Change-Id: Ib9154528d4f88ba12ca234be7f929a61ed098be7,19/04/2012 03:48:25,,DUPLICATE,https://github.com/Evervolv/android_frameworks_base/commit/b2e43a0a9c7d58f3cb84f7c01f21660b5d0c6c8e,,,,,,,EXISTS,,,,,,,,,,,,,Evervolv/android_frameworks_base,,,,MongooseHelix,
kozmikkick,KozmiKKernel,"msm: kgsl: Collect a sample only if GPU is active If the device is not in active state, collecting a sample is not necessary and will cause frequent wake-ups, resulting in higher power consumption. Change-Id: Icb4f82b1300cab3b4cc4ed17117a92725a5a11d4 Signed-off-by: Lynus Vaz <lvaz@codeaurora.org>",19/04/2012 05:54:16,,DUPLICATE,https://github.com/kozmikkick/KozmiKKernel/commit/c56c5a22466f6dc5399e66bc187d5ca728435179,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/KozmiKKernel,,,,kozmikkick,
kozmikkick,KozmiKKernel,"cpufreq: interactive governor: default timer 10ms, maxspeed load 95% Modify default timer from 30ms to 10ms, sampling 2 jiffies after idle exit on ARM as in Honeycomb. Modify default go_maxspeed_load from 85% loaded to 95% loaded, for use in phones where power savings is more important (tablets may be best served overriding this). Change-Id: I3361a6279979bfae1df5262666a2e30ea7a44328 Signed-off-by: Todd Poynor <toddpoynor@google.com>",19/04/2012 05:59:42,,OK,https://github.com/kozmikkick/KozmiKKernel/commit/a629fecd9925f75f88f8cae7cf7ca34d951b9432,,,[OK][Scaling CPU Freq][Android],[OK] [Scale CPU frequency] [Governor] [Android],[DO NOT ANALYZE],[Scale CPU frequency] [Governor] [Android] [Scaling CPU Freq],EXISTS,[config governor],[for use in phones where power savings is more important] [Take longer to increase speed],[Increase threshold to scale frequency up] [Configure governor],[DVFS] [Sub1: Governor tunning],,Multiple changes,Certain,Android,No,OS,C,"Modify default go_maxspeed_load from 85% loaded to 95% loaded, for use in phones where power savings is more important",kozmikkick/KozmiKKernel,,[Frequency and voltage scaling],,kozmikkick,Driver cpufreq
thachtunganh,lge-kernel-thunderg,"thunderg: revert some patches This reverts commit 99a46f1. Increase Wifi Voltage for stability, set AXI value back to 160000 instead of max for power saving.",20/04/2012 06:57:40,,NOT-FOUND,https://github.com/thachtunganh/lge-kernel-thunderg/commit/bd531b353c12c1e322fba9e91359527d4fae3113,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,thachtunganh/lge-kernel-thunderg,,,,,
brunogirin,nhtg12,Added reference to Energy Saving Trust,21/04/2012 14:34:45,,FALSE-POSITIVE,https://github.com/brunogirin/nhtg12/commit/acd9fea1aec1e4c82c0417e4f32a9a99101dbc05,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,brunogirin/nhtg12,,,,,
vdemeester,xorg-config,Disable statnot for now (power consumption),21/04/2012 19:46:04,,FALSE-POSITIVE,https://github.com/vdemeester/xorg-config/commit/980b0233d29577e72b17df4259e24c1c043704b0,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [No change],[DO NOT ANALYZE],[No change],EXISTS,,,,,,,,,,,,,vdemeester/xorg-config,vdemeester,,,vdemeester,
F1-GalaxyNexus,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",21/04/2012 21:26:00,,DUPLICATE,https://github.com/F1-GalaxyNexus/android_packages_apps_Phone/commit/f5de0f75a142e98e576691adfcbd73703858f017,,,,,,,EXISTS,,,,,,,,,,,,,F1-GalaxyNexus/android_packages_apps_Phone,,,,Faryaab,
pinpong,thoravukk,"Added missing Android common patches that were previously included but overwritten by the 2.3.4 code drop, Samsung have not applied any new patches from the Android common kernel tree to their kernels. This also brings the kernel upto date with the Android common kernel tree. net: Add UDP stats and pkt count to uid_stat Change-Id: If95374a6dbde66720a3c74b5b50cc7e774bbbbf8 Signed-off-by: Ashish Sharma <ashishsharma@google.com> staging: binder: Fix use of uninitialized variable. Under an extremely rare condition, the variable return_error may not be set. This patch initializes the value to a known ""bad"" value, and checks before return to ensure return_error has been set. Signed-off-by: Nick Kralevich <nnk@google.com> ARM: 6292/1: coresight: add ETM management registers Add notion of ETM OS lock, save and restore registers. Change-Id: I6706504d4dbb79761b95b3e77d495cfa83e0d26e Cc: linux-arm-kernel@lists.infradead.org Cc: linux-kernel@vger.kernel.org Signed-off-by: Alexander Shishkin <virtuoso@slind.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: 6291/1: coresight: move struct tracectx inside etm driver This is done so as to be able to make use of the coresight components' registers in assembler code (like omap sleep code). Also, there shouldn't be any users of this structure outside the etm driver. Change-Id: I847b2c3999df806608a9f3d5355a07363fea50d8 Cc: linux-arm-kernel@lists.infradead.org Cc: linux-kernel@vger.kernel.org Signed-off-by: Alexander Shishkin <virtuoso@slind.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: 6294/1: etm: do a dummy read from OSSRR during initialization The first read from ETM OS save and restore register after the power down bit deassertion returns garbage. Change-Id: Ia65620f364076175a2bb1b81d22f77da11f4dfa8 Cc: linux-arm-kernel@lists.infradead.org Cc: linux-kernel@vger.kernel.org Signed-off-by: Alexander Shishkin <virtuoso@slind.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: 6293/1: coresight: cosmetic fixes Use BIT() macro whenever it is sensible to do so. Change-Id: Iacf526c5ac12923e86b9ecf30db2f7908af14299 Cc: linux-arm-kernel@lists.infradead.org Cc: linux-kernel@vger.kernel.org Signed-off-by: Alexander Shishkin <virtuoso@slind.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: etm: Don't require clock control If clk_get fail, assume the etb does not need a separate clock. Change-Id: Ia0bf3f5391e94a60ea45876aa7afc8a88a7ec3bf Signed-off-by: Arve Hjønnevåg <arve@android.com> ARM: etm: Don't limit tracing to only non-secure code. On some systems kernel code is considered secure, and this code already limits tracing to the kernel text segment which results in no trace data. Change-Id: I098a0753e874859446d098e1ee209f67fc13cd5d Signed-off-by: Arve Hjønnevåg <arve@android.com> ARM: etm: Don't try to clear the buffer full status after reading the buffer If the write address was at the end of the buffer, toggling the trace capture bit would set the RAM-full status instead of clearing it, and if any of the stop bits in the formatter is set toggling the trace capture bit may not do anything. Instead use the read position to find out if the data has already been returned. This also fixes the read function so it works when the trace buffer is larger than the buffer passed in from user space. The old version would reset the trace buffer pointers after every read, so the second call to read would always return 0. Change-Id: I75256abe2556adfd66fd5963e46f9e84ae4645e1 Signed-off-by: Arve Hjønnevåg <arve@android.com> ARM: etm: Allow range selection Trace kernel text segment by default as before, allow tracing of other ranges by writing a range to /sys/devices/etm/trace_range, or to trace everything by writing 0 0. Change-Id: Ibb734ca820fedf79560b20536247f1e1700cdc71 Signed-off-by: Arve Hjønnevåg <arve@android.com> ARM: etm: Configure data tracing The old code enabled data tracing, but did not configure the range. We now configure it to trace all data addresses by default, and add a trace_data_range attribute to change the range or disable data tracing. Change-Id: I9d04e3e1ea0d0b4d4d5bcb93b1b042938ad738b2 Signed-off-by: Arve Hjønnevåg <arve@android.com> ARM: etm: Add some missing locks and error checks It is not safe to call etm_lock or etb_lock without holding the mutex since another thread may also have unlocked the registers. Also add some missing checks for valid etb_regs in the etm sysfs entries. Change-Id: I939f76a6ea7546a8fc0d4ddafa2fd2b6f38103bb Signed-off-by: Arve Hjønnevåg <arve@android.com> ARM: etm: Return the entire trace buffer if it is empty after reset On some SOCs the read and write pointer are reset when the chip resets, but the trace buffer content is preserved. If the status bits indicates that the buffer is empty and we have never started tracing, assume the buffer is full instead. This can be useful if the system rebooted from a watchdog reset. Change-Id: Iaf21c2c329c6059004ee1d38e3dfff66d7d28029 Signed-off-by: Arve Hjønnevåg <arve@android.com> ARM: etm: Support multiple ETMs/PTMs. If more than one ETM or PTM are present, configure all of them and enable the formatter in the ETB. This allows tracing on dual core systems (e.g. omap4). Change-Id: I028657d5cf2bee1b23f193d4387b607953b35888 Signed-off-by: Arve Hjønnevåg <arve@android.com> ARM: etm: Power down etm(s) when tracing is not enabled Without this change a saw an 18% increase in idle power consumption on one deivce when trace support is compiled into the kernel. Now I see the same increase only when tracing. Change-Id: I21bb5ecf1b7d29ce3790ceeb5323409cc22d5a3b Signed-off-by: Arve Hjønnevåg <arve@android.com> net: New iface_stat module to monitor persistent network stats Adding a new module that tracks the number of bytes/packets transfered by a network interface, even after the interface has been removed. This is relevant to track the total data usage in mobile devices whose interfaces are added and removed quite frequently (WiFi, Bluetooth, 3G,..). Monitoring is done only for devices that are configured with a valid IP address (check to exclude virtual/loopback/tunnel interfaces). Change-Id: I8ac642af1990433ebd0784e8dbd72bf0714b5bf6 Signed-off-by: Ashish Sharma <ashishsharma@google.com> Conflicts: arch/arm/kernel/etm.c net/core/dev.c",22/04/2012 11:26:53,,NOT-FOUND,https://github.com/pinpong/thoravukk/commit/870198856d13af2bdae692f5d19b125b5709fbfb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,pinpong/thoravukk,,,,,
evramp,Bachelor-thesis,abstraction and power saving,23/04/2012 21:23:11,,NOT-FOUND,https://github.com/evramp/Bachelor-thesis/commit/4c5d795dfcf902f31507071a66717765314e9fdb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,evramp/Bachelor-thesis,,,,,
cytown,Phone_ics,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",24/04/2012 11:00:40,,DUPLICATE,https://github.com/cytown/Phone_ics/commit/0b2190f7490dea50c294ba8fbe759a1e8defeef9,,,,,,,EXISTS,,,,,,,,,,,,,cytown/Phone_ics,,,,cytown,
madworm,ATtiny_projects,Added more comfortable UI to the ATtiny24 lamps. Need more FLASH!! * Removed the sleep_mode stuff to get some FLASH space free The power savings were quite miniscule anyway. The LED driver Takes 15-20mA standby current...,28/04/2012 02:20:37,,TRADEOFF,https://github.com/madworm/ATtiny_projects/commit/412bbd3a53c990bbbc2d65c9d189b55e4a7c73b1,,,[OK][?],[TRADEOFF] [Get more FLASH space] [Minimal savings],[DO NOT ANALYZE],[Get more FLASH space] [Minimal savings] [?],EXISTS,[Remove sleep mode code],[Get more FLASH space],,,,,Certain,Embedded,No,Embedded application,C,,madworm/ATtiny_projects,madworm,Miscellaneous,,madworm,Embedded application
ddrown,android_frameworks_base,"Fix 4560303: Add setting to lock later when power button pressed This adds a feature to delay locking the device when the power button is pressed. This fixes a use case where the user wants to turn off the display (e.g. to save power) but doesn't want to lock the device. For the case of a secure device (user has a pin/password/pattern), this will lock the device immediately or not based on the setting. For the non-secure case, this always ""locks"" the device to provide easy access to the camera while preventing unwanted input. Change-Id: Ie328485c3f7559e26896d761cbf0e69d3f4df4e2",28/04/2012 02:24:11,,DUPLICATE,https://github.com/ddrown/android_frameworks_base/commit/b8cc4f923379bf3d54195d19905653b5175a30ae,,,,[FALSE-POSITIVE] [VERIFY],,[VERIFY],EXISTS,,,,,,,,,,,,,ddrown/android_frameworks_base,,,,ddrown,
fmorgner,AVR-Assembly-Cookbook,more power saving for power-down sleep mode,30/04/2012 21:02:45,,OK,https://github.com/fmorgner/AVR-Assembly-Cookbook/commit/1a77ebf3593ba94786e82d6923812d12094abb60,,,[OK][?],[OK] [Set pin modes] [App specific],[DO NOT ANALYZE],[Set pin modes] [App specific] [?],EXISTS,[use power-down sleep mode],[power saving],[Set pin modes] [Set port pins to input] [Set pull-up on ports] [Hardware],[Pin configuration],,,Certain,Embedded !,No,Application,Assembly,more power saving for power-down sleep mode,fmorgner/AVR-Assembly-Cookbook,morgner,[Pin management],,morgner,Embedded assembly !
martinbuberl,BuildScreen,Optimized full screen mode; Prevent screensaver activation in full screen; Prevent monitor power save mode in full screen,01/05/2012 04:30:37,,NOT-FOUND,https://github.com/martinbuberl/BuildScreen/commit/6964e4b384b09a616119c2d29a7c463f332f40ca,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,martinbuberl/BuildScreen,,,,,
vadonka,kernel-installer,Enable sched_mc power savings,03/05/2012 06:02:54,,OK,https://github.com/vadonka/kernel-installer/commit/face37b7b429c033647e1400e05b995c55e03cf0,,,[OK][?],[OK] [Enable power saving] [General solution],[DO NOT ANALYZE],[Enable power saving] [General solution] [?],EXISTS,[Enable sched_mc power savings],[power saving],[Enable power saving scheduler] [Enable power saving] [Script],[Use power saving feature/device],,,Certain,Android,No,Libraries and Utilities,init.d script,Enable sched_mc power savings,vadonka/kernel-installer,vadonka,[Use power efficient library/device],,vadonka,Script init.d
poliva,lightum,"try to read the screen backlight value directly from sysfs instead of using dbus, fallback to dbus if we can't read it from sysfs. This avoids a lot of fork/exec/exit activity, thus reducing the power consumption too.",03/05/2012 14:20:31,,OK,https://github.com/poliva/lightum/commit/69dc7208723de3c74060cc5a51f747a33c4f83a5,,,[OK][Reducing IO],[OK] [Power efficient call] [Read from sysfs instead dbus] [General solution],[DO NOT ANALYZE],[Power efficient call] [Read from sysfs instead dbus] [General solution] [Reducing IO],EXISTS,[read the screen backlight value directly from sysfs instead of using dbus],[avoid a lot of fork/exec/exit activity],[Use power efficient option before falling back inefficient one] [read from sysfs before trying dbus],[Use power efficient option before falling back inefficient one],,,Certain,OSX,No,Application,C,thus reducing the power consumption too.,poliva/lightum,poliva,[Use power efficient library/device],,poliva,Application
NEXUS-EVOLUTION,frameworks_base,Remove power saver,04/05/2012 17:29:45,,NOT-FOUND,https://github.com/NEXUS-EVOLUTION/frameworks_base/commit/1262378b8349ef5de9da59681f435150b93c0eb2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,NEXUS-EVOLUTION/frameworks_base,,,,,
NEXUS-EVOLUTION,packages_apps_ROMControl,Remove power saver and old led,04/05/2012 17:30:35,,NOT-FOUND,https://github.com/NEXUS-EVOLUTION/packages_apps_ROMControl/commit/ccf6f0244041d9192c79997209a386b2c437e96a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,NEXUS-EVOLUTION/packages_apps_ROMControl,,,,,
NEXUS-EVOLUTION,frameworks_base,Another power saver removal,04/05/2012 18:50:13,,NOT-FOUND,https://github.com/NEXUS-EVOLUTION/frameworks_base/commit/a20f1ae285b6400cf96df35f1f57359dead41a94,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,NEXUS-EVOLUTION/frameworks_base,,,,,
jerl92,htc-kernel-msm7x30,"msm: rpc: Remove timeout in client's read thread Remove the timeout while waiting in client's read thread which causes unnecessary wakeups and results in increased power consumption. While closing a client, wakeup the read wait so that the read thread gets closed properly. Change-Id: Ib77d723d26c5e2d560038d2be34ac352bc97aa38 CRs-Fixed: 255989 Signed-off-by: Niranjana Vishwanathapura <nvishwan@codeaurora.org> Cherry-picked and adapted for DHD from: https://www.codeaurora.org/gitweb/quic/la/?p=kernel/msm.git;a=commitdiff;h=001fa8892ffd5dbb286f5c03c011a9e415f8e2b1",07/05/2012 14:15:04,,NOT-FOUND,https://github.com/jerl92/htc-kernel-msm7x30/commit/3f30124bcd69c886ecdfd62e7088523bde778615,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jerl92/htc-kernel-msm7x30,,,,,
jerl92,htc-kernel-msm7x30,"msm: rpc: Remove timeout in client's read thread Remove the timeout while waiting in client's read thread which causes unnecessary wakeups and results in increased power consumption. While closing a client, wakeup the read wait so that the read thread gets closed properly. Change-Id: Ib77d723d26c5e2d560038d2be34ac352bc97aa38 CRs-Fixed: 255989 Signed-off-by: Niranjana Vishwanathapura <nvishwan@codeaurora.org> Cherry-picked and adapted for DHD from: https://www.codeaurora.org/gitweb/quic/la/?p=kernel/msm.git;a=commitdiff;h=001fa8892ffd5dbb286f5c03c011a9e415f8e2b1",07/05/2012 14:31:10,,NOT-FOUND,https://github.com/jerl92/htc-kernel-msm7x30/commit/54a75cf89b506c4c366c75eec365e6fd15485597,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jerl92/htc-kernel-msm7x30,,,,,
vadonka,lge-kernel-kang,"Linux 3.0.31 (cherry picked from commit bea37381fd9a34c6660e5195d31beea86aa3dda3) nfs: Enclose hostname in brackets when needed in nfs_do_root_mount commit 98a2139f4f4d7b5fcc3a54c7fddbe88612abed20 upstream. When hostname contains colon (e.g. when it is an IPv6 address) it needs to be enclosed in brackets to make parsing of NFS device string possible. Fix nfs_do_root_mount() to enclose hostname properly when needed. NFS code actually does not need this as it does not parse the string passed by nfs_do_root_mount() but the device string is exposed to userspace in /proc/mounts. CC: Josh Boyer <jwboyer@redhat.com> CC: Trond Myklebust <Trond.Myklebust@netapp.com> Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit cb2fee3223eaaeaab386d635fa905ad3925ca539) NFSv4: Ensure that the LOCK code sets exception->inode commit 05ffe24f5290dc095f98fbaf84afe51ef404ccc5 upstream. All callers of nfs4_handle_exception() that need to handle NFS4ERR_OPENMODE correctly should set exception->inode Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit 03a9f194904985d2844a2906ba02306289b0b4e7) NFSv4: Ensure that we check lock exclusive/shared type against open modes commit 55725513b5ef9d462aa3e18527658a0362aaae83 upstream. Since we may be simulating flock() locks using NFS byte range locks, we can't rely on the VFS having checked the file open mode for us. Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit 95cb2c603f27af05871e3e6718b6e1e1a6f59417) x86, apic: APIC code touches invalid MSR on P5 class machines commit cbf2829b61c136edcba302a5e1b6b40e97d32c00 upstream. Current APIC code assumes MSR_IA32_APICBASE is present for all systems. Pentium Classic P5 and friends didn't have this MSR. MSR_IA32_APICBASE was introduced as an architectural MSR by Intel @ P6. Code paths that can touch this MSR invalidly are when vendor == Intel && cpu-family == 5 and APIC bit is set in CPUID - or when you simply pass lapic on the kernel command line, on a P5. The below patch stops Linux incorrectly interfering with the MSR_IA32_APICBASE for P5 class machines. Other code paths exist that touch the MSR - however those paths are not currently reachable for a conformant P5. Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linux.intel.com> Link: http://lkml.kernel.org/r/4F8EEDD3.1080404@linux.intel.com Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit 322fd620a858fab9c1ea85a7cfebe3fc041d7126) Revert ""autofs: work around unhappy compat problem on x86-64"" commit fcbf94b9dedd2ce08e798a99aafc94fec8668161 upstream. This reverts commit a32744d4abae24572eff7269bc17895c41bd0085. While that commit was technically the right thing to do, and made the x86-64 compat mode work identically to native 32-bit mode (and thus fixing the problem with a 32-bit systemd install on a 64-bit kernel), it turns out that the automount binaries had workarounds for this compat problem. Now, the workarounds are disgusting: doing an ""uname()"" to find out the architecture of the kernel, and then comparing it for the 64-bit cases and fixing up the size of the read() in automount for those. And they were confused: it's not actually a generic 64-bit issue at all, it's very much tied to just x86-64, which has different alignment for an 'u64' in 64-bit mode than in 32-bit mode. But the end result is that fixing the compat layer actually breaks the case of a 32-bit automount on a x86-64 kernel. There are various approaches to fix this (including just doing a ""strcmp()"" on current->comm and comparing it to ""automount""), but I think that I will do the one that teaches pipes about a special ""packet mode"", which will allow user space to not have to care too deeply about the padding at the end of the autofs packet. That change will make the compat workaround unnecessary, so let's revert it first, and get automount working again in compat mode. The packetized pipes will then fix autofs for systemd. Reported-and-requested-by: Michael Tokarev <mjt@tls.msk.ru> Cc: Ian Kent <raven@themaw.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit d25895e8f1e5e29823d373096d8f3d271bf11821) xen: correctly check for pending events when restoring irq flags commit 7eb7ce4d2e8991aff4ecb71a81949a907ca755ac upstream. In xen_restore_fl_direct(), xen_force_evtchn_callback() was being called even if no events were pending. This resulted in (depending on workload) about a 100 times as many xen_version hypercalls as necessary. Fix this by correcting the sense of the conditional jump. This seems to give a significant performance benefit for some workloads. There is some subtle tricksy ""..since the check here is trying to check both pending and masked in a single cmpw, but I think this is correct. It will call check_events now only when the combined mask+pending word is 0x0001 (aka unmasked, pending)."" (Ian) Acked-by: Ian Campbell <ian.campbell@citrix.com> Signed-off-by: David Vrabel <david.vrabel@citrix.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit aa4a6ac6d1eec0fb5c88cbc352a056ae826bc985) xen/smp: Fix crash when booting with ACPI hotplug CPUs. commit cf405ae612b0f7e2358db7ff594c0e94846137aa upstream. When we boot on a machine that can hotplug CPUs and we are using 'dom0_max_vcpus=X' on the Xen hypervisor line to clip the amount of CPUs available to the initial domain, we get this: (XEN) Command line: com1=115200,8n1 dom0_mem=8G noreboot dom0_max_vcpus=8 sync_console mce_verbosity=verbose console=com1,vga loglvl=all guest_loglvl=all .. snip.. DMI: Intel Corporation S2600CP/S2600CP, BIOS SE5C600.86B.99.99.x032.072520111118 07/25/2011 .. snip. SMP: Allowing 64 CPUs, 32 hotplug CPUs installing Xen timer for CPU 7 cpu 7 spinlock event irq 361 NMI watchdog: disabled (cpu7): hardware events not enabled Brought up 8 CPUs .. snip.. [acpi processor finds the CPUs are not initialized and starts calling arch_register_cpu, which creates /sys/devices/system/cpu/cpu8/online] CPU 8 got hotplugged CPU 9 got hotplugged CPU 10 got hotplugged .. snip.. initcall 1_acpi_battery_init_async+0x0/0x1b returned 0 after 406 usecs calling erst_init+0x0/0x2bb @ 1 [and the scheduler sticks newly started tasks on the new CPUs, but said CPUs cannot be initialized b/c the hypervisor has limited the amount of vCPUS to 8 - as per the dom0_max_vcpus=8 flag. The spinlock tries to kick the other CPU, but the structure for that is not initialized and we crash.] BUG: unable to handle kernel paging request at fffffffffffffed8 IP: [<ffffffff81035289>] xen_spin_lock+0x29/0x60 PGD 180d067 PUD 180e067 PMD 0 Oops: 0002 [#1] SMP CPU 7 Modules linked in: Pid: 1, comm: swapper/0 Not tainted 3.4.0-rc2upstream-00001-gf5154e8 #1 Intel Corporation S2600CP/S2600CP RIP: e030:[<ffffffff81035289>] [<ffffffff81035289>] xen_spin_lock+0x29/0x60 RSP: e02b:ffff8801fb9b3a70 EFLAGS: 00010282 With this patch, we cap the amount of vCPUS that the initial domain can run, to exactly what dom0_max_vcpus=X has specified. In the future, if there is a hypercall that will allow a running domain to expand past its initial set of vCPUS, this patch should be re-evaluated. Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit 5b09471039a7e08329eb1f48f2153bd979188351) ASoC: dapm: Ensure power gets managed for line widgets commit 7e1f7c8a6e517900cd84da1b8ae020f08f286c3b upstream. Line widgets had not been included in either the power up or power down sequences so if a widget had an event associated with it that event would never be run. Fix this minimally by adding them to the sequences, we should probably be doing away with the specific widget types as they all have the same priority anyway. Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit 7a47462902d03c6e4d3412a5b703069f4dd13c44) dmaengine: at_hdmac: remove clear-on-read in atc_dostart() commit ed8b0d67f33518a16c6b2450fe5ebebf180c2d04 upstream. This loop on EBCISR register was designed to clear IRQ sources before enabling a DMA channel. This register is clear-on-read so a race condition can appear if another channel is already active and has just finished its transfer. Removing this read on EBCISR is fixing the issue as there is no case where an IRQ could be pending: we already make sure that this register is drained at probe() time and during resume. Signed-off-by: Nicolas Ferre <nicolas.ferre@atmel.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> (cherry picked from commit 17a766decb63b6fe4c43c06069b92b4958d7a642) hwmon: fam15h_power: fix bogus values with current BIOSes commit 00250ec90963b7ef6678438888f3244985ecde14 upstream. Newer BKDG[1] versions recommend a different initialization value for the running average range register in the northbridge. This improves the power reading by avoiding counter saturations resulting in bogus values for anything below about 80% of TDP power consumption. Updated BIOSes will have this new value set up from the beginning, but meanwhile we correct this value ourselves. This needs to be done on all northbridges, even on those where the driver itself does not register at. This fixes the driver on all current machines to provide proper values for idle load. [1] http://support.amd.com/us/Processor_TechDocs/42301_15h_Mod_00h- ...",07/05/2012 16:31:13,,FALSE-POSITIVE,https://github.com/vadonka/lge-kernel-kang/commit/2188fde6fb8d97adbdc6bff39b56dcfb989b49af,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,vadonka/lge-kernel-kang,gregkh,,,vadonka,
postgres,postgres,"Reduce idle power consumption of walwriter and checkpointer processes. This patch modifies the walwriter process so that, when it has not found anything useful to do for many consecutive wakeup cycles, it extends its sleep time to reduce the server's idle power consumption. It reverts to normal as soon as it's done any successful flushes. It's still true that during any async commit, backends check for completed, unflushed pages of WAL and signal the walwriter if there are any; so that in practice the walwriter can get awakened and returned to normal operation sooner than the sleep time might suggest. Also, improve the checkpointer so that it uses a latch and a computed delay time to not wake up at all except when it has something to do, replacing a previous hardcoded 0.5 sec wakeup cycle. This also is primarily useful for reducing the server's power consumption when idle. In passing, get rid of the dedicated latch for signaling the walwriter in favor of using its procLatch, since that comports better with possible generic signal handlers using that latch. Also, fix a pre-existing bug with failure to save/restore errno in walwriter's signal handlers. Peter Geoghegan, somewhat simplified by Tom",09/05/2012 00:15:07,,OK,https://github.com/postgres/postgres/commit/5461564a9dfd73f12a21f2aff5d7b3678c7afc25,,,[OK][Use concurrent prog techniques],[OK] [Concurrent techniques] [Use latch] [Go to idle] [Sleep longer after inactivity],[DO NOT ANALYZE],[Concurrent techniques] [Use latch] [Go to idle] [Sleep longer after inactivity] [Use concurrent prog techniques],EXISTS,[increase sleep after many consecutive idle wakeup cycles] [use latch instead of sleep],[Reduce idle power consumption of walwriter and checkpointer processes.],[Concurrent techniques] [Use latch] [Sleep longer after inactivity],[Avoid sleeping busy wait],[Increase sleep] [Condition:on inactivity],Multiple changes,Certain,Database postgres,No,Application,C,"This patch modifies the walwriter process so that, when it has not found anything useful to do for many consecutive wakeup cycles, it extends its sleep time to reduce the server's idle power consumption. Also, improve the checkpointer so that it uses a latch and a computed delay time to not wake up at all except when it has something to do",postgres/postgres,,[Polling avoidance],,,Application
postgres,postgres,"Reduce idle power consumption of stats collector process. Latch-ify the stats collector, so that it does not need an arbitrary wakeup cycle to check for postmaster death. The incremental savings in idle power is pretty marginal, since we only had it waking every two seconds; but I believe that this patch may also improve the collector's performance under load, by reducing the number of kernel calls made per message when messages are arriving constantly (we now avoid a select/poll call except when we need to sleep). The change also reduces the time needed for a normal database shutdown on platforms where signals don't interrupt select().",09/05/2012 01:45:04,,OK,https://github.com/postgres/postgres/commit/49340037ee3ab46cb24144a86705e35f272c24d5,,,[OK][Use concurrent prog techniques],[OK] [Use latch] [Concurrent techniques],[DO NOT ANALYZE],[Use latch] [Concurrent techniques] [Use concurrent prog techniques],EXISTS,[Latch-ify the stats collector],[avoid arbitrary wakeup cycle],[Use latch] [Concurrent techniques],[Avoid sleeping busy wait],,,Certain,Database postgres,No,Application,C,Reduce idle power consumption of stats collector process.,postgres/postgres,,[Polling avoidance],,,Application
postgres,postgres,"Improve control logic for bgwriter hibernation mode. Commit 6d90eaaa89a007e0d365f49d6436f35d2392cfeb added a hibernation mode to the bgwriter to reduce the server's idle-power consumption. However, its interaction with the detailed behavior of BgBufferSync's feedback control loop wasn't very well thought out. That control loop depends primarily on the rate of buffer allocation, not the rate of buffer dirtying, so the hibernation mode has to be designed to operate only when no new buffer allocations are happening. Also, the check for whether the system is effectively idle was not quite right and would fail to detect a constant low level of activity, thus allowing the bgwriter to go into hibernation mode in a way that would let the cycle time vary quite a bit, possibly further confusing the feedback loop. To fix, move the wakeup support from MarkBufferDirty and SetBufferCommitInfoNeedsSave into StrategyGetBuffer, and prevent the bgwriter from entering hibernation mode unless no buffer allocations have happened recently. In addition, fix the delaying logic to remove the problem of possibly not responding to signals promptly, which was basically caused by trying to use the process latch's is_set flag for multiple purposes. I can't prove it but I'm suspicious that that hack was responsible for the intermittent ""postmaster does not shut down"" failures we've been seeing in the buildfarm lately. In any case it did nothing to improve the readability or robustness of the code. In passing, express the hibernation sleep time as a multiplier on BgWriterDelay, not a constant. I'm not sure whether there's any value in exposing the longer sleep time as an independently configurable setting, but we can at least make it act like this for little extra code.",10/05/2012 03:45:03,,FALSE-POSITIVE,https://github.com/postgres/postgres/commit/6308ba05a7a24b5137d97508300131ffa42051c2,,,[FALSE-POSITIVE],[?] [Bug fix],[DO NOT ANALYZE],[Bug fix],EXISTS,,,,,,,,,,,,,postgres/postgres,,,,,
mrg666,android_kernel_thunderc,cpuidle: menu: fixed wrapping timers at 4.294 seconds commit 7467571 upstream. Cpuidle menu governor is using u32 as a temporary datatype for storing nanosecond values which wrap around at 4.294 seconds. This causes errors in predicted sleep times resulting in higher than should be C state selection and increased power consumption. This also breaks cpuidle state residency statistics. Signed-off-by: Tero Kristo <tero.kristo@nokia.com> Signed-off-by: Len Brown <len.brown@intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>,12/05/2012 13:12:08,,NOT-FOUND,https://github.com/mrg666/android_kernel_thunderc/commit/1c23c68fae67bd020fdea43d7ac7dd0a61db5514,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mrg666/android_kernel_thunderc,,,,,
tectas,packages_apps_ROMControl,check for proper power saver mode,12/05/2012 20:48:43,,NOT-FOUND,https://github.com/tectas/packages_apps_ROMControl/commit/c562272f1d7eaf3a327f8bb80144b9f544abc7f5,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,tectas/packages_apps_ROMControl,,,,,
postgres,postgres,"Avoid unnecessary process wakeups in the log collector. syslogger was coded to wake up once per second whether there was anything useful to do or not. As part of our campaign to reduce the server's idle power consumption, change it to use a latch for waiting. Now, in the absence of any data to log or any signals to service, it will only wake up at the programmed logfile rotation times (if any).",12/05/2012 23:30:06,,OK,https://github.com/postgres/postgres/commit/398b240151708d7e971631875760ddbad3a63e0e,,,[OK][Use concurrent prog techniques],[OK] [Reduce wakeup] [Use latch] [Concurrent techniques],[DO NOT ANALYZE],[Reduce wakeup] [Use latch] [Concurrent techniques] [Use concurrent prog techniques],EXISTS,[use latch for waiting],[Avoid unnecessary process wakeups],[Use latch] [Concurrent techniques],[Avoid sleeping busy wait],,,Certain,Database postgres,No,Application,C,As part of our campaign to reduce the server's idle power consumption,postgres/postgres,,[Polling avoidance],,,Application
kozmikkick,KozmiKKernel-3.0,"msm: kgsl: Collect a sample only if GPU is active If the device is not in active state, collecting a sample is not necessary and will cause frequent wake-ups, resulting in higher power consumption. Change-Id: Icb4f82b1300cab3b4cc4ed17117a92725a5a11d4 Signed-off-by: Lynus Vaz <lvaz@codeaurora.org>",13/05/2012 07:07:08,,NOT-FOUND,https://github.com/kozmikkick/KozmiKKernel-3.0/commit/3e90a3de4a4167bea6813fae20df319746508d2e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,kozmikkick/KozmiKKernel-3.0,,,,,
TI-OpenLink,ti-utils,"update single role firmware to version X.3.8.0.111 - Bug Fix MCS00111656: Current Consumption: high cc when the SUT is in Power Save mode, and connected to AP. - Revert the power consumption improvement for AP mode in suspend where we do not forwarding to host probe requests containing WPS IE (done in 6/7.3.5.0.99) as it is failing Wi-Fi WPSv2 APUT 4.2.13 test (The APUT connected when overlapped PBC sessions) Signed-off-by: Assaf Azulay <assaf@ti.com>",13/05/2012 17:01:43,,BINARIES,https://github.com/TI-OpenLink/ti-utils/commit/b42044175ca7262cd3e8f76d59dce46fe857ccb6,,,,,,,EXISTS,,,,,,,,,,,,,TI-OpenLink/ti-utils,assafazulay,,,assafazulay,
phiexz,kernel-cyanogen-gio,msm: Reduce sdio_al inactivity timer for power saving Change-Id: Iaea8a8d6e5e6f98aaf46ed73c9fae0a88620a477 Signed-off-by: Maya Erez <merez@codeaurora.org>,14/05/2012 02:43:58,,OK,https://github.com/phiexz/kernel-cyanogen-gio/commit/2177fa5ef7947558c90fa284ba2eae3cfd898106,,,[OK][Go to Idle],[OK] [Go to idle] [Go to idle faster] [Reduce inactivity timer] [Android] [General solution],[DO NOT ANALYZE],[Go to idle] [Go to idle faster] [Reduce inactivity timer] [Android] [General solution],EXISTS,[Reduce sdio_al inactivity timer],[power saving],[Reduce sdio_al go to idle inactivity timer],[Reduce timeout] [Sub1: Device low power],,,Certain,Android,No,OS,C,Reduce sdio_al inactivity timer for power saving,phiexz/kernel-cyanogen-gio,phiexz,[Timing out],,phiexz,Kernel
travp624,frameworks_base,finish removing power saver.,17/05/2012 03:50:35,,NOT-FOUND,https://github.com/travp624/frameworks_base/commit/9aa213bf4de040ef1764aa9b8d6b0d7b893d29a8,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,travp624/frameworks_base,,,,,
travp624,frameworks_base,finish removing power saver.,17/05/2012 03:51:26,,DUPLICATE,https://github.com/travp624/frameworks_base/commit/d3b4cb19b39dfafcd48a5b35c6a889cad470ef41,,,,,,,EXISTS,,,,,,,,,,,,,travp624/frameworks_base,,,,,
snandlal,frameworks_base,"Don't enable the light sensor if it's not being used We want to fully disable the lightsensor when it's not used, for two reasons: 1 - Power savings 2 - Sensors that control the backlight directly need to be disabled when brightness control is set to manual. Forcibly enabling the sensor when the screen turns on makes these devices incapable of using manual brightness. Change-Id: I64c1114348ff096e0a72b265f6f141d1ecef249c Fix button backlights that depend on ALS On a few devices, lighting the buttons when the screen turns on depends on the lightsensor, regardless of the user preference. So go back to enabling the sensor whenever the screen turns on, and enforce the user preference after running through the light settings once. Change-Id: I6f036a32315eb7688a9cd11d4bd70dbca1b2fa8b",20/05/2012 20:42:31,,NOT-FOUND,https://github.com/snandlal/frameworks_base/commit/4172676c2f283edb5cd60588fe20d1303b6a0d7d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,snandlal/frameworks_base,,,,,
snandlal,frameworks_base,Frameworks/SystemUI: Hide expanded dialog when screen is off Hide the expanded dialog while screen is off. Otherwise it causes continuous buffer updates to SurfaceTexture even when SCREEN is turned off and while In-Call causing a spike in power consumtion. This fix ensures that the power consumption is kept to a minimum in such a scenario. CRs-Fixed: 339815 Change-Id: Ib9154528d4f88ba12ca234be7f929a61ed098be7,20/05/2012 21:41:09,,NOT-FOUND,https://github.com/snandlal/frameworks_base/commit/13f7e1bcfddc1daf7a43a2cc412e3223fe36bd9c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,snandlal/frameworks_base,,,,,
Jetstar,build_chef,stop the boxes going into power savings mode,21/05/2012 05:41:50,,NOT-FOUND,https://github.com/Jetstar/build_chef/commit/ea54fe6889c2b81d0f9d4a2917f15f46a1c068be,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Jetstar/build_chef,,,,,
CM9-D2G,android_device_motorola_droid2we,Set scaling minimum frequency to 250mhz for power savings,21/05/2012 11:54:15,,OK,https://github.com/CM9-D2G/android_device_motorola_droid2we/commit/8d16d91137e0d6b14e717d6f352ed3d0e8686a3e,,,[OK][Scale CPU Freq],[OK] [Scale CPU frequency] [Lower minimum frequency] [General solution] [Android],[DO NOT ANALYZE],[Scale CPU frequency] [Lower minimum frequency] [General solution] [Android] [Scale CPU Freq],EXISTS,[Reduce scaling minimum frequency],[power saving],[Reduce minimum frequency] [Scale CPU frequency] [Configuration] [Script],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,Libraries and Utilities,init.rc,Set scaling minimum frequency to 250mhz for power savings,CM9-D2G/android_device_motorola_droid2we,JB1tz,[Frequency and voltage scaling],,JB1tz,Script init.rc
CM9-D2G,android_device_motorola_droid2,Set scaling minimum frequency to 250mhz for power savings,21/05/2012 11:54:54,,DUPLICATE,https://github.com/CM9-D2G/android_device_motorola_droid2/commit/ec22c4b5fffeb359035ed719b3afde057dceba5c,,,,,,,EXISTS,,,,,,,,,,,,,CM9-D2G/android_device_motorola_droid2,JB1tz,,,JB1tz,
CM9-D2G,android_device_motorola_shadow,Set scaling minimum frequency to 250mhz for power savings,21/05/2012 11:55:14,,DUPLICATE,https://github.com/CM9-D2G/android_device_motorola_shadow/commit/844daeed3c7f7ef23ca1b1e2e230a6897410bd4b,,,,,,,EXISTS,,,,,,,,,,,,,CM9-D2G/android_device_motorola_shadow,JB1tz,,,JB1tz,
ajalkane,profilematic,"Removed power saving mode from credential warning, it seems to not be affected by the missing credential.",22/05/2012 16:27:03,,FALSE-POSITIVE,https://github.com/ajalkane/profilematic/commit/3946982b8ea1bc2375468f564e30f4c97ae0a7e2,,,[TRADE-OFF],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,ajalkane/profilematic,ajalkane,,,ajalkane,
CalVR,calvr_plugins,Adding Sound affected by power consumption values.,23/05/2012 20:13:38,,FALSE-POSITIVE,https://github.com/CalVR/calvr_plugins/commit/8ef57c798b53f395ba8f97c881166975ebf0316e,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,CalVR/calvr_plugins,,,,,
Kuzma30,kernel3NookTablet,Panel Boxer: use regulators to control power. This will fix huge power consumption while device is connected to charger (AC or usb) and allow to charge faster. While device is not connected to charger the DSI2 will off/on LCD power.,29/05/2012 15:19:10,,OK,https://github.com/Kuzma30/kernel3NookTablet/commit/b708b0d7ee56b958b50ac1035c38659f75d1ea81,,,[OK][?],[OK] [Use regulators] [User power limitting component] [App specific],[DO NOT ANALYZE],[Use regulators] [User power limitting component] [App specific] [?],EXISTS,[use regulators to control power],[fix huge power consumption while device is connected to charger],[User power limitting component] [Use regulators] ,[Power controlling],,,Certain,Nook,Yes,OS,C,This will fix huge power consumption while device is connected to charger,Kuzma30/kernel3NookTablet,mik9,[Energy bug],,mik9,Driver
roalex,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",29/05/2012 18:12:24,,DUPLICATE,https://github.com/roalex/android_packages_apps_Phone/commit/29c07b3b27d99ccc55490c4147f367d51a3082a9,,,,,,,EXISTS,,,,,,,,,,,,,roalex/android_packages_apps_Phone,,,,,
BobZhome,GingerKernel-thunderc,cpuidle: menu: fixed wrapping timers at 4.294 seconds commit 7467571f4480b273007517b26297c07154c73924 upstream. Cpuidle menu governor is using u32 as a temporary datatype for storing nanosecond values which wrap around at 4.294 seconds. This causes errors in predicted sleep times resulting in higher than should be C state selection and increased power consumption. This also breaks cpuidle state residency statistics. Signed-off-by: Tero Kristo <tero.kristo@nokia.com> Signed-off-by: Len Brown <len.brown@intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>,30/05/2012 00:35:29,,DUPLICATE,https://github.com/BobZhome/GingerKernel-thunderc/commit/9ceff27dfa37c23f42b8bd014c8ff66e530b2cfc,,,,,,,EXISTS,,,,,,,,,,,,,BobZhome/GingerKernel-thunderc,LorDClockaN,,,BobZhome,
Kuzma30,kernel3NookTablet,Panel Boxer: use regulators to control power. This will fix huge power consumption while device is connected to charger (AC or usb) and allow to charge faster. While device is not connected to charger the DSI2 will off/on LCD power.,30/05/2012 04:39:18,,DUPLICATE,https://github.com/Kuzma30/kernel3NookTablet/commit/bc6d69602fe5f86edb856c11e5e020907289daaf,,,,,,,EXISTS,,,,,,,,,,,,,Kuzma30/kernel3NookTablet,mik9,,,Kuzma30,
succulent,kernel3NookTablet,Panel Boxer: use regulators to control power. This will fix huge power consumption while device is connected to charger (AC or usb) and allow to charge faster. While device is not connected to charger the DSI2 will off/on LCD power.,30/05/2012 23:32:07,,DUPLICATE,https://github.com/succulent/kernel3NookTablet/commit/b708b0d7ee56b958b50ac1035c38659f75d1ea81,,,,,,,EXISTS,,,,,,,,,,,,,succulent/kernel3NookTablet,mik9,,,mik9,
CyanogenMod,android_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,31/05/2012 03:54:35,,TRADEOFF,https://github.com/CyanogenMod/android_frameworks_base/commit/283df8ca2e87c89ddb9952957319191281eba818,,,[TRADE-OFF],[TRADE-OFF],[DO NOT ANALYZE],,EXISTS,[Set low power audio only for music stream],[Low power audio not needed],,,,,Certain,Android,CRs-Fixed: 357327,OS software stack,Java,Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone.,CyanogenMod/android_frameworks_base,,No power saving,,Kali-,Software stack
X3N0-Life-Form,AVPoV,aspov-primaries-wep.tbm: added anticap + heavy anticap tech description + reduced heavy anticap + sniper gun energy consumption + fixed typo large canon => large cannon + matched title and tech titles,31/05/2012 09:50:54,,FALSE-POSITIVE,https://github.com/X3N0-Life-Form/AVPoV/commit/b982f68cdb2a6b189c5d655c2da6b71f1cbf8660,,,[FALSE-POSITIVE],[FALSE-POSITIVE]  [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,X3N0-Life-Form/AVPoV,X3N0-Life-Form,,,X3N0-Life-Form,
aospX,platform_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,31/05/2012 12:47:18,,DUPLICATE,https://github.com/aospX/platform_frameworks_base/commit/9dc6099529ee34a423addee0891cb2041227c5f3,,,,,,,EXISTS,,,,,,,,,,,,,aospX/platform_frameworks_base,,,,existz,
IceColdSandwich,android_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,31/05/2012 14:47:51,,NOT-FOUND,https://github.com/IceColdSandwich/android_frameworks_base/commit/7f2d42fa1f824e577b09f29451004fc8d2d6b27b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,IceColdSandwich/android_frameworks_base,,,,,
tmeissner,avr,"wait overflow counter set to 22000 to wait ca. 20 minutes; by the activation of the sleep mode (cpu_idle, last commit) the power consumption was decreased to under 400 uA at 3.6V during waiting the 20 minues :)",31/05/2012 15:28:42,,NOT-FOUND,https://github.com/tmeissner/avr/commit/b905db2c121429557690171d66a57bb4e531e80d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,tmeissner/avr,,,,,
IceColdSandwich,android_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,31/05/2012 15:34:11,,NOT-FOUND,https://github.com/IceColdSandwich/android_frameworks_base/commit/4b39fb6b984a4da6728b906632fe16cf37af1f3c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,IceColdSandwich/android_frameworks_base,,,,,
LiquidSmoothROMs,android_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,31/05/2012 15:53:34,,NOT-FOUND,https://github.com/LiquidSmoothROMs/android_frameworks_base/commit/9859c637e17c696a72757fd67ee24028bc66a8a6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LiquidSmoothROMs/android_frameworks_base,,,,,
IceColdSandwich,android_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,31/05/2012 17:43:08,,DUPLICATE,https://github.com/IceColdSandwich/android_frameworks_base/commit/bf84cde0982b3f0ade55ad23b06f2450ceabe6f7,,,,,,,EXISTS,,,,,,,,,,,,,IceColdSandwich/android_frameworks_base,,,,LorDClockaN,
travp624,frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,01/06/2012 16:31:43,,NOT-FOUND,https://github.com/travp624/frameworks_base/commit/9dd468a49e91f8afa5b8a37bca6551b8caaa5aef,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,travp624/frameworks_base,,,,,
travp624,frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,01/06/2012 23:13:30,,NOT-FOUND,https://github.com/travp624/frameworks_base/commit/e51bd5bd3b6ad9d0284a7fb1fc9ffa9324c733f9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,travp624/frameworks_base,,,,,
jerl92,htc-kernel-msm7x30,mmc: core: put eMMC in sleep (cmd5) mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend to minimize power consumption. Signed-off-by: Balaji T K <balajitk@ti.com> Acked-by: Venkatraman S <svenkatr@ti.com> Signed-off-by: Chris Ball <cjb@laptop.org> Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org> (cherry picked from commit 3765839119eb540b87bdbf8d6869c60658cb99e7) Change-Id: I0c0d5d06c4204b15471d1ca95aec0c7fcaaae816 Signed-off-by: Shruthi Krishna <skrish@codeaurora.org>,02/06/2012 08:45:26,,DUPLICATE,https://github.com/jerl92/htc-kernel-msm7x30/commit/7b635e6b24966cd43e516ac4073df8511ec13c48,,,,[VERIFIED] [https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad],,[https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad],EXISTS,,,,,,,,,,,,,jerl92/htc-kernel-msm7x30,balajitk,,,jerl92,
travp624,frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,02/06/2012 15:25:31,,DUPLICATE,https://github.com/travp624/frameworks_base/commit/e18edc4ddf39a3b42ae24dd0810a52a720988972,,,,,,,EXISTS,,,,,,,,,,,,,travp624/frameworks_base,travp624,,,travp624,
DhE17roms,android_frameworks_base,"Power Saver, Code Clean Up, IME Toggle",02/06/2012 15:47:56,,NOT-FOUND,https://github.com/DhE17roms/android_frameworks_base/commit/8bbb09dc924fe9abe0d95014af8a6a33e0929026,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,DhE17roms/android_frameworks_base,,,,,
DhE17roms,android_packages_apps_Settings,"IME Switcher, Power Saver",02/06/2012 15:50:24,,NOT-FOUND,https://github.com/DhE17roms/android_packages_apps_Settings/commit/b95621fe10c6a83ce1f901066a6893ccaf05a1cd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,DhE17roms/android_packages_apps_Settings,,,,,
roalex,cos_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,02/06/2012 21:09:05,,DUPLICATE,https://github.com/roalex/cos_frameworks_base/commit/90ac28d81e182e30879f799c6ea7ec8c42682c0a,,,,,,,EXISTS,,,,,,,,,,,,,roalex/cos_frameworks_base,,,,,
marcusant,samsung-kernel-victory,Add 'DIDLE2' power saving state by Ezekeel,03/06/2012 17:04:46,,OK,https://github.com/marcusant/samsung-kernel-victory/commit/a1a27670ac77246b92c694c6d443c1ec1c1c8e47,,,[RELATED][?],[RELATED] [Add power state] [Giga commit] [Add C-state] [C-state],[DO NOT ANALYZE],[Add power state] [Giga commit] [Add C-state] [C-state] [?],EXISTS,[Add 'DIDLE2' power saving state],[power saving],[Add power saving state] [Add power saving C-state],[Add power saving state],,,Certain,Android,No,OS,"C,Assembly,rej",Add 'DIDLE2' power saving state by Ezekeel,marcusant/samsung-kernel-victory,marcusant,[Miscellaneous],,marcusant,Kernel
Evervolv,android_hardware_qcom_display,"libhwcomposer: Implement idletimeout fallback for MDP composition . Background: On MDP compositon, MDP keeps reading contents from the pipes even on Idle Screen i.e. even when HWC is not queueing any new buffers to MDP. Above data traffic leads to high power consumption. Implementation: This change introduces a timer in HWC which will timeout if there are no updates in bypass composition path for the period specified via debug.bypass.idletime. Also SurfaceFlinger will be notified to redraw the current frame which will be composed into FB. Conflicts: libhwcomposer/hwcomposer.cpp Change-Id: Ic3a467596068fa553271b5cd8c2831e544e3211d (cherry picked from commit ad1d9a019234ab03dbc79b1ddb73c86e560e3e74) Conflicts: libhwcomposer/hwcomposer.cpp",03/06/2012 18:46:46,,DUPLICATE,https://github.com/Evervolv/android_hardware_qcom_display/commit/7d978483ed8ddb44a1e6f8641dce9e2eaf7298b9,,,,,,,EXISTS,,,,,,,,,,,,,Evervolv/android_hardware_qcom_display,,,,preludedrew,
lincomatic,LeafCAN,added instantaneous power consumption in KW,04/06/2012 00:15:27,,FALSE-POSITIVE,https://github.com/lincomatic/LeafCAN/commit/e79e8e3ce3db7499bd97dfb0f23241778d1e070f,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],EXISTS,,,,,,,,,,,,,lincomatic/LeafCAN,lincomatic,,,lincomatic,
zeubea,android_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,04/06/2012 00:29:37,,DUPLICATE,https://github.com/zeubea/android_frameworks_base/commit/283df8ca2e87c89ddb9952957319191281eba818,,,,,,,EXISTS,,,,,,,,,,,,,zeubea/android_frameworks_base,,,,Kali-,
simone201,neak-gs3-kernel,mmc: core: put eMMC in sleep (cmd5) mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend to minimize power consumption. thx to cattleprod,04/06/2012 21:02:01,,DUPLICATE,https://github.com/simone201/neak-gs3-kernel/commit/9569254890b73f3622d1886683e166f1ae2c30f8,,,,,,,EXISTS,,,,,,,,,,,,,simone201/neak-gs3-kernel,simone201,,,simone201,
Evervolv,android_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,05/06/2012 00:47:59,,DUPLICATE,https://github.com/Evervolv/android_frameworks_base/commit/ea7df4532214192351a90f42ff445ece59b62112,,,,,,,EXISTS,,,,,,,,,,,,,Evervolv/android_frameworks_base,,,,drewis,
Evervolv,android_frameworks_base,frameworks/base: Add cpu governor service Increase sampling rate when the display turns off and set it back to the original value when it turns back on. This helps reduce power consumption for use cases such as MP3 playback with the display turned off.,05/06/2012 00:49:44,,DUPLICATE,https://github.com/Evervolv/android_frameworks_base/commit/65b64653bde54c5a90b60c3af707fe1fcc38aa75,,,,,,,EXISTS,,,,,,,,,,,,,Evervolv/android_frameworks_base,,,,drewis,
edoko,Air_Kernel_for_GN,"le path as opposed to MPU and CORE VDDs being necessarily woken up with MPU and CORE PDs). WA involves: Ensure stable ON-OFF transition for IVA voltage domain during OFF mode sequence. Ensure VCON and PRCM FSM are kept aligned due to IVA SR handling in idle path. 1) AUTO RET for IVA VDD is enabled entering in idle path, disabled exiting idle path and IVA VDD is always woken-up with a SW dummy wakeup. 2) OFF mode is enabled only in Suspend path. 3) AUTO RET for IVA VDD remains disabled in Suspend path (before OFF mode). REVISIT: Update the patch once proper Errata is out for 44xx. Benefits: 1) This patch ensures it is possible to gate SYS_CLK during OS-Idle LCD OFF when all domains are idled, saving up to 2mA at VBAT from external clock buffer. 2) IVA voltage domain is now allowed to scale to Retention during idle which reduces power consumption on all types of use case allowing extensive use of idle path (e.g.: Home screen, Page reading). Effects are especially visible if system uses Smart-Reflex Class 1.5 compared to Class 3 considering the increased difference of voltage from converged Voltage SR vs Retention voltage. TODO: quantify the actual savings from IVA-RET with further measurements. Change-Id: I01f0431f7556f0baf0b5b6b42092cd11c2442f00 Signed-off-by: Cedric Vamour <c-vamour@ti.com> Conflicts: arch/arm/mach-omap2/pm44xx.c",06/06/2012 02:24:33,,DUPLICATE,https://github.com/edoko/Air_Kernel_for_GN/commit/0b33be26e5f9e27966c19fc1687d34aaac33b736,,,,[OK] [VERIFY] [https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5] [ref:8af763e77de8776b1e9824f18f63366f4cb681b5],,[VERIFY] [https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5] [ref:8af763e77de8776b1e9824f18f63366f4cb681b5],EXISTS,,,,,,,,,,,,,edoko/Air_Kernel_for_GN,,,,edoko,
edoko,Air_Kernel_for_GN,"OMAP4: PM: IVA AUTO RET relaxed workaround in idle path AUTO RET for IVA VDD Cannot be permanently enabled during OFF mode due to potential race between IVA VDD entering RET and start of Device OFF mode. It is mandatory to have AUTO RET for IVA VDD exlusive with Devide OFF mode. In order to avoid lockup in OFF mode sequence, system must ensure IVA voltage domain transitions straight from stable ON to OFF. In addition, management of IVA VDD SmartReflex sensor at exit of idle path may introduce a misalignment between IVA Voltage Controller state and IVA PRCM voltage FSM based on following identified scenario: IVA Voltage Controller is woken-up due to SmartReflex management while IVA PRCM voltage FSM stays in RET in absence of any IVA module wake-up event (which is not systematic in idle path as opposed to MPU and CORE VDDs being necessarily woken up with MPU and CORE PDs). WA involves: Ensure stable ON-OFF transition for IVA voltage domain during OFF mode sequence. Ensure VCON and PRCM FSM are kept aligned due to IVA SR handling in idle path. 1) AUTO RET for IVA VDD is enabled entering in idle path, disabled exiting idle path and IVA VDD is always woken-up with a SW dummy wakeup. 2) OFF mode is enabled only in Suspend path. 3) AUTO RET for IVA VDD remains disabled in Suspend path (before OFF mode). REVISIT: Update the patch once proper Errata is out for 44xx. Benefits: 1) This patch ensures it is possible to gate SYS_CLK during OS-Idle LCD OFF when all domains are idled, saving up to 2mA at VBAT from external clock buffer. 2) IVA voltage domain is now allowed to scale to Retention during idle which reduces power consumption on all types of use case allowing extensive use of idle path (e.g.: Home screen, Page reading). Effects are especially visible if system uses Smart-Reflex Class 1.5 compared to Class 3 considering the increased difference of voltage from converged Voltage SR vs Retention voltage. TODO: quantify the actual savings from IVA-RET with further measurements. Change-Id: I01f0431f7556f0baf0b5b6b42092cd11c2442f00 Signed-off-by: Cedric Vamour <c-vamour@ti.com>",06/06/2012 02:25:15,,DUPLICATE,https://github.com/edoko/Air_Kernel_for_GN/commit/74664819970e525e19e3881dc9d6ace5c26f81fb,,,,[OK] [VERIFY] [https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5] [ref:8af763e77de8776b1e9824f18f63366f4cb681b5],,[VERIFY] [https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5] [ref:8af763e77de8776b1e9824f18f63366f4cb681b5],EXISTS,,,,,,,,,,,,,edoko/Air_Kernel_for_GN,,,,edoko,
edoko,Air_Kernel_for_GN,"OMAP4: PM: IVA AUTO RET relaxed workaround in idle path AUTO RET for IVA VDD Cannot be permanently enabled during OFF mode due to potential race between IVA VDD entering RET and start of Device OFF mode. It is mandatory to have AUTO RET for IVA VDD exlusive with Devide OFF mode. In order to avoid lockup in OFF mode sequence, system must ensure IVA voltage domain transitions straight from stable ON to OFF. In addition, management of IVA VDD SmartReflex sensor at exit of idle path may introduce a misalignment between IVA Voltage Controller state and IVA PRCM voltage FSM based on following identified scenario: IVA Voltage Controller is woken-up due to SmartReflex management while IVA PRCM voltage FSM stays in RET in absence of any IVA module wake-up event (which is not systematic in idle path as opposed to MPU and CORE VDDs being necessarily woken up with MPU and CORE PDs). WA involves: Ensure stable ON-OFF transition for IVA voltage domain during OFF mode sequence. Ensure VCON and PRCM FSM are kept aligned due to IVA SR handling in idle path. 1) AUTO RET for IVA VDD is enabled entering in idle path, disabled exiting idle path and IVA VDD is always woken-up with a SW dummy wakeup. 2) OFF mode is enabled only in Suspend path. 3) AUTO RET for IVA VDD remains disabled in Suspend path (before OFF mode). REVISIT: Update the patch once proper Errata is out for 44xx. Benefits: 1) This patch ensures it is possible to gate SYS_CLK during OS-Idle LCD OFF when all domains are idled, saving up to 2mA at VBAT from external clock buffer. 2) IVA voltage domain is now allowed to scale to Retention during idle which reduces power consumption on all types of use case allowing extensive use of idle path (e.g.: Home screen, Page reading). Effects are especially visible if system uses Smart-Reflex Class 1.5 compared to Class 3 considering the increased difference of voltage from converged Voltage SR vs Retention voltage. TODO: quantify the actual savings from IVA-RET with further measurements. Change-Id: I01f0431f7556f0baf0b5b6b42092cd11c2442f00 Signed-off-by: Cedric Vamour <c-vamour@ti.com>",06/06/2012 10:45:47,,DUPLICATE,https://github.com/edoko/Air_Kernel_for_GN/commit/0b8a035bf035b4bd70ea04a74fa917873945c0b0,,,,,,,EXISTS,,,,,,,,,,,,,edoko/Air_Kernel_for_GN,,,,edoko,
maniac103,android_frameworks_base,frameworks/base: Enable LPA for music stream only. Enable LPA playback for music streams only. There are no significant power savings for using LPA with other modes like ringtone. CRs-Fixed: 357327 (cherry picked from commit 75484628e5a915422f822b9759cb3ce8f9c4f0ad) Change-Id: Ibd3940f74bd6b0cf2446e1159640d39a107c2929,08/06/2012 12:52:25,,DUPLICATE,https://github.com/maniac103/android_frameworks_base/commit/283df8ca2e87c89ddb9952957319191281eba818,,,,,,,EXISTS,,,,,,,,,,,,,maniac103/android_frameworks_base,,,,Kali-,
flackr,dungeon,Fix power consumption tracking across multiple clients.,09/06/2012 19:31:46,,FALSE-POSITIVE,https://github.com/flackr/dungeon/commit/10390944f58b0368743405d8aa288cb3d0633e89,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[DO NOT ANALYZE],[Game],EXISTS,,,,,,,,,,,,,flackr/dungeon,kellis,,,kellis,
TI-OpenLink,hostap,"sched scan: Make initial short interval scans more aggressive In a very congested environment we've encountered an issue where a remembered AP isn't detected in the first or second scan necessarily. The current default of 10 seconds as the short sched scan interval would therefore cause a long delay until connecting to a remembered AP after powering on WiFi or disconnecting. To fix this, reduce the default short interval to 5 secs and have 10 intervals instead of 6 intervals of 10 seconds. The effect on power consumption shouldn't be significant as the long interval is the important factor affecting that. Signed-off-by: Eyal Shapira <eyal@wizery.com>",11/06/2012 18:19:32,,NOT-FOUND,https://github.com/TI-OpenLink/hostap/commit/7460e1df561373561dd075c55d0a226c7921f705,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TI-OpenLink/hostap,,,,,
TI-OpenLink,hostap,"sched scan: Make initial short interval scans more aggressive (INTERNAL) In a very congested environment we've encountered an issue where a remembered AP isn't detected in the first or second scan necessarily. The current default of 10 seconds as the short sched scan interval would therefore cause a long delay until connecting to a remembered AP after powering on WiFi or disconnecting. To fix this, reduce the default short interval to 5 secs and have 10 intervals instead of 6 intervals of 10 seconds. The effect on power consumption shouldn't be significant as the long interval is the important factor affecting that. Signed-off-by: Eyal Shapira <eyal@wizery.com>",11/06/2012 18:20:33,,TRADEOFF,https://github.com/TI-OpenLink/hostap/commit/86734783454dc32ddcc3f4c82f85ee2196d76662,,,[OK][?],[TRADEOFF],[DO NOT ANALYZE],[?],EXISTS,[Short scan interval but increase number of scans],[REVIEW] [Improve connection time to rembered AP],,,,Not significant,Uncertain,Embedded,No,Modem application ?,C,"To fix this, reduce the default short interval to 5 secs and have 10 intervals instead of 6 intervals of 10 seconds.",TI-OpenLink/hostap,eyalsh,Responsiveness,,eyalsh,Modem application ?
TI-OpenLink,hostap,"sched scan: Make initial short interval scans more aggressive (INTERNAL) In a very congested environment we've encountered an issue where a remembered AP isn't detected in the first or second scan necessarily. The current default of 10 seconds as the short sched scan interval would therefore cause a long delay until connecting to a remembered AP after powering on WiFi or disconnecting. To fix this, reduce the default short interval to 5 secs and have 10 intervals instead of 6 intervals of 10 seconds. The effect on power consumption shouldn't be significant as the long interval is the important factor affecting that. Signed-off-by: Eyal Shapira <eyal@wizery.com>",11/06/2012 18:43:59,,DUPLICATE,https://github.com/TI-OpenLink/hostap/commit/7a0536e5467555319605b9dbb648f53f2d78c659,,,,,,,EXISTS,,,,,,,,,,,,,TI-OpenLink/hostap,eyalsh,,,eyalsh,
NickStupich,PIC-dev-work,"loop or interrupt based bit flipping working, power consumption measured at 41-49mA (pic24h vs pic33f) at 3.0 V",11/06/2012 22:06:11,,FALSE-POSITIVE,https://github.com/NickStupich/PIC-dev-work/commit/502fb2ff094050e745d00a1ed979392fa3fe6caf,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,NickStupich/PIC-dev-work,NickStupich,,,NickStupich,
kalail,hackathon,Replaced the save power header icon. Added a dummy charts page,13/06/2012 01:49:53,,NOT-FOUND,https://github.com/kalail/hackathon/commit/4e9d69680b0ee53352182a99f1c0dc95acabd973,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,kalail/hackathon,,,,,
TI-OpenLink,18xx-ti-utils,"Update wl6/7 FW versions : single role X.3.10.2.114 multi role: X.5.7.0.26 Single Role Firmware =================== 6.3.8.1.111/ 7.3.8.1.111 - fix for invalid 11n incoming beacons we set the duration for HT mixed Mode. - Bug Fix Mcs00111501 Wi-Fi Wpsv2 Aput 4.2.13:The Aput Connected When Overlapped Pbc Sessions. Fixed several issues in generic_ie_parser and anded support for pbc in probe response 1. In function FindAttribute fixed an issue where the while was stopped after one iteration. 2. In function FindAttribute fixed an issue where the pointer was increased only by attribute payload length without the header length. 3. Added support for IE that uses BIG Endian. 4. Added function that search and indicates whether the PBC was pressed the probe response WSC IE and we use that function to decide if to raise the probe to the host or drop it. - fix Security Padding (Under a compliation flag ,FW_SECURITY_PADDING - Default = Disabled!!!!) : Move Security Padding handler from Host to FW. FW will be in charge for adding the security padding for each data packet according to security type. - Bug Fix MCS00111964 - Schedule scan: Detecting of AP with suitable SSID , but not suitable privacy causes recovery during scheduled scan. - Bug fix MCS00112154 (SUT): QuattroL HP-FEM; 2.4GHz; HW_WD_EXPIRE FW PC=0x21de2 during Connection on CH 11. On HP FEM reduce Rx gain level for LTE better coexistence - Bug Fix MCS00112566 - WiFi Direct: Recovery occurs after successful group formation. PowerSaveModule_ExitPowerSaveByClient() - function callback points to null! 6.3.9.2.112/ 7.3.9.2.112 - Added two more Probe Request types for application scan (one shot), and changed the Older Probe Request templates to Connection scan (sched scan) probes. also changed the probe to be regular and role aware and role protected. - Enabling connection scan while STA is connected. The whole connection scan process was wrapped with enter/exit power save. A client (POWER_SAVE_CONN_SCAN_CLIENT_ID) for the connection scan was added to the PS module. PS module is now responsible of launching the connection scan process by invoking ProcessConnectionScanEnterPSCB after entering PS success. 6.3.10.2.113/ 7.3.10.2.113 - IPv6 Feature offloading - added functionality to Fw for Auto response to Neighbour Solicitaion frames. 6.3.10.2.114/ 7.3.10.2.114 - During opening a tx ba seesion, if the recipient returns addba response with winSize smaller than we requested, we don't update it properly upon the TBC_Init. - rx_streaming.c: Go over all the TIDs (8) instead of RX_STRAMING_NUM_OF_TID_SUPPORTED (4). Also send the TID instead of the TIDindex. - Bug Fix MCS00113136 - WiFi TGn APUT 4.2.31: The APUT doesn't turn on the HT non-member protection bit - Bug Fix MCS00110974 - APUT : Beacon stops while UDP RX traffic - Wrong AIFSN calculation. - Bug Fix for TC5.2.2 - PM bit was set in the probe request. Multi Role Firmware =================== 6.5.6.0.24 / 7.5.6.0.24 - Universal scan feature 6.5.7.0.25 / 7.5.7.0.25 - Enabling connection scan while STA is connected. The whole connection scan process was wrapped with enter/exit power save. A client (POWER_SAVE_CONN_SCAN_CLIENT_ID) for the connection can was added to the PS module. PS module is now responsible of launching the connection scan process by invoking processConnectionScanEnterPSCB after entering PS success. - Align the IPv6 APIs with the Host. IPv6 offload is not supported in MR FW. FW will return CMD_STATUS_SUCCESS. 6.5.7.0.26 / 7.5.7.0.26 - During opening a tx ba seesion, if the recipient returns addba response with winSize smaller than we requested, we don't update it properly upon the TBC_Init. - Bug Fix MCS00112495:BSS preamble: worng duration. We didn't configure correctly the immediate response rate. We need to used FW format of rates and not the HW format. - Wrong calculation of the MPDU size. This is because the FwCtrl of the fw-generated was not initialized. - Bug Fix MCS00111964: Schedule scan: Detecting of AP with suitable SSID, but not suitable privacy causes recovery during scheduled scan. - fix for invalid 11n incoming beacons we set the duration for HT mixed Mode. - Bug Fix MCS00102599 FW - R5 MR: """"keep alive"""" frames are NOT sent. - The auto ARP address3 was not set correctly in TxEngine_PrepTemplateHeader. Instead it is set in arpFltr_dequeueResponseFrameInfo. - Bug Fix MCS00110974 - APUT : Beacon stops while UDP RX traffic - Wrong AIFSN calculation. - Bug Fix for TC5.2.2 - PM bit was set in the probe request Signed-off-by: Assaf Azulay <assaf@ti.com>",15/06/2012 07:03:40,,FALSE-POSITIVE,https://github.com/TI-OpenLink/18xx-ti-utils/commit/9afdecd301f96b8d0686e0bea3e3a9a8f701da70,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,TI-OpenLink/18xx-ti-utils,assafazulay,,,assafazulay,
opdenkamp,xbmc,PVR: Call power saving wakeup script also on suspend and hibernate (not only shutdown),17/06/2012 10:59:32,,OK,https://github.com/opdenkamp/xbmc/commit/3a2034583590af5e6817445010c260064ab73b75,,,[OK][?],[OK] [Enable power saving] [Call power saving script] [App specific],[DO NOT ANALYZE],[Enable power saving] [Call power saving script] [App specific] [?],EXISTS,[Call power saving wakeup script also on suspend and hibernate],[Not only shutdown],[Enable power saving on suspend and hibernate] [Enable power saving] [Call power saving script],[Enable power saving feature],,,Certain,XBMC !,No,Application,C++,Call power saving wakeup script also on suspend and hibernate,opdenkamp/xbmc,mikrohard,[Use power efficient library/device],,opdenkamp,Application
dorimanx,Dorimanx-SG2-I9100-Kernel,Tuned abyssplug for more power save!,17/06/2012 12:41:20,,OK,https://github.com/dorimanx/Dorimanx-SG2-I9100-Kernel/commit/fe6fc634b61f68306a8929b464e7d6ce1ff24a90,,,[OK][Scale CPU Freq],[OK] [Scale CPU frequency] [Set CPU frequency parameters],[DO NOT ANALYZE],[Scale CPU frequency] [Set CPU frequency parameters] [Scale CPU Freq],EXISTS,[Tuned abyssplug] [config governor],[power saving],[Decrease CPU frequency sooner] [Scale CPU frequency] [Set CPU frequency parameters] [Improve governor],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,OS,C,Tuned abyssplug for more power save!,dorimanx/Dorimanx-SG2-I9100-Kernel,dorimanx,[Frequency and voltage scaling],,dorimanx,Driver
herrnst,xbmc,PVR: Call power saving wakeup script also on suspend and hibernate (not only shutdown),17/06/2012 21:24:20,,DUPLICATE,https://github.com/herrnst/xbmc/commit/3a2034583590af5e6817445010c260064ab73b75,,,,,,,EXISTS,,,,,,,,,,,,,herrnst/xbmc,mikrohard,,,opdenkamp,
jamescoxon,Eurus,"added code for RTC to control power saving, aim will be that SPoT is off and AVR is fully asleep - woken via interrupt by the RTC alarm. Currently needs hardware to be constructed for testing",17/06/2012 22:14:19,,OK,https://github.com/jamescoxon/Eurus/commit/3481d76e32ac495d6f499bb165d50c72e229f683,,,[OK][Go to idle],[OK] [Go to idle],[DO NOT ANALYZE],[Go to idle],EXISTS,[SPoT is off and AVR is fully asleep - woken via interrupt by the RTC alarm],[added code for RTC to control power saving],[Go to idle] [Go to sleep],[Go to low power mode],,,Certain,Arduino,No,Application,Ino,added code for RTC to control power saving,jamescoxon/Eurus,jamescoxon,[Low power idling],,jamescoxon,Arduino application
faux123,kernel-MB860,"tegra: cpufreq/nvrm: add screen off freq limiter and offlining of 2nd core while screen is off, limit max CPU freq to 503 MHz and always remove 2nd cpu core to reduce power consumption while running apps with screen off to conserve battery life",18/06/2012 01:20:57,,OK,https://github.com/faux123/kernel-MB860/commit/62f08bc161004b89fb3e956eb8aaa27a0545467c,,,[OK][Scale CPU Freq],[OK] [Scale CPU frequency] [Limit CPU frequency] [Disable core] [Power saving action on screen off],[DO NOT ANALYZE],[Scale CPU frequency] [Limit CPU frequency] [Disable core] [Power saving action on screen off] [Scale CPU Freq],EXISTS,[add screen off freq limiter and offlining of 2nd core],[reduce power consumption while running apps with screen off],[Power saving action on screen off] [Limit CPU frequency on screen off] [Disable core on screen off],[DVFS] [Sub1: Limit frequency] [Condition: screen off],[Core configuration] [Condition: screen off],Multiple changes,Certain,Android,No,OS,C,"while screen is off, limit max CPU freq to 503 MHz and always remove 2nd cpu core to reduce power consumption while running apps with screen off to conserve battery life",faux123/kernel-MB860,faux123,[Frequency and voltage scaling],,faux123,Driver
epsylon3,kernel-MB860,"tegra: cpufreq/nvrm: add screen off freq limiter and offlining of 2nd core while screen is off, limit max CPU freq to 503 MHz and always remove 2nd cpu core to reduce power consumption while running apps with screen off to conserve battery life",18/06/2012 03:30:02,,NOT-FOUND,https://github.com/epsylon3/kernel-MB860/commit/0015ffa40d8c2b97753a267191a279a3bb507bac,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,epsylon3/kernel-MB860,,,,,
Atrix-Dev-Team,kernel-MB860,"tegra: cpufreq/nvrm: add screen off freq limiter and offlining of 2nd core while screen is off, limit max CPU freq to 503 MHz and always remove 2nd cpu core to reduce power consumption while running apps with screen off to conserve battery life",18/06/2012 04:10:40,,DUPLICATE,https://github.com/Atrix-Dev-Team/kernel-MB860/commit/eb57967ade8bd6b7a24fc02a04d5a8731386e897,,,,,,,EXISTS,,,,,,,,,,,,,Atrix-Dev-Team/kernel-MB860,faux123,,,tpruvot,
epsylon3,kernel-MB860,"tegra: cpufreq/nvrm: add screen off freq limiter and offlining of 2nd core while screen is off, limit max CPU freq to 503 MHz and always remove 2nd cpu core to reduce power consumption while running apps with screen off to conserve battery life",18/06/2012 04:28:56,,DUPLICATE,https://github.com/epsylon3/kernel-MB860/commit/eb57967ade8bd6b7a24fc02a04d5a8731386e897,,,,,,,EXISTS,,,,,,,,,,,,,epsylon3/kernel-MB860,faux123,,,tpruvot,
faux123,lge-kernel-star,"tegra: cpufreq/nvrm: add screen off freq limiter and offlining of 2nd core while screen is off, limit max CPU freq to 503 MHz and always remove 2nd cpu core to reduce power consumption while running apps with screen off to conserve battery life",18/06/2012 04:37:16,,DUPLICATE,https://github.com/faux123/lge-kernel-star/commit/1744d27d4a6dce5303d56204d5178cdcf583e726,,,,,,,EXISTS,,,,,,,,,,,,,faux123/lge-kernel-star,faux123,,,faux123,
Rover-Yu,skbtrace-kernel,"tick: Add tick skew boot option Let the user decide whether power consumption or jitter is the more important consideration for their machines. Quoting removal commit af5ab277ded04bd9bc6b048c5a2f0e7d70ef0867: ""Historically, Linux has tried to make the regular timer tick on the various CPUs not happen at the same time, to avoid contention on xtime_lock. Nowadays, with the tickless kernel, this contention no longer happens since time keeping and updating are done differently. In addition, this skew is actually hurting power consumption in a measurable way on many-core systems."" Problems: - Contrary to the above, systems do encounter contention on both xtime_lock and RCU structure locks when the tick is synchronized. - Moderate sized RT systems suffer intolerable jitter due to the tick being synchronized. - SGI reports the same for their large systems. - Fully utilized systems reap no power saving benefit from skew removal, but do suffer from resulting induced lock contention. - 0209f649 rcu: limit rcu_node leaf-level fanout This patch was born to combat lock contention which testing showed to have been _induced by_ skew removal. Skew the tick, contention disappeared virtually completely. Signed-off-by: Mike Galbraith <mgalbraith@suse.de> Link: http://lkml.kernel.org/r/1336472458.21924.78.camel@marge.simpson.net Signed-off-by: Thomas Gleixner <tglx@linutronix.de>",18/06/2012 08:45:18,,FALSE-POSITIVE,https://github.com/Rover-Yu/skbtrace-kernel/commit/5307c9556bc17e3cd26d4e94fc3b2565921834de,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,Rover-Yu/skbtrace-kernel,,,,,
turl,kernel-MB860,"tegra: cpufreq/nvrm: add screen off freq limiter and offlining of 2nd core while screen is off, limit max CPU freq to 503 MHz and always remove 2nd cpu core to reduce power consumption while running apps with screen off to conserve battery life",19/06/2012 02:03:59,,DUPLICATE,https://github.com/turl/kernel-MB860/commit/cc66389a53575c1df6ce2f28d5715926805bc013,,,,,,,EXISTS,,,,,,,,,,,,,turl/kernel-MB860,faux123,,,turl,
Cheng-SG,BubbleCode,Add power consumption caculation and storage,20/06/2012 08:12:31,,FALSE-POSITIVE,https://github.com/BubbleZERO/BubbleCode/commit/06cc669c66d09b772a3c29193f01d0757dfc8ce9,https://github.com/Cheng-SG/BubbleCode/commit/06cc669c66d09b772a3c29193f01d0757dfc8ce9,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],EXISTS,,,,,,,,,,,,,Cheng-SG/BubbleCode,,,,,
nunogmartins,net-next,"tick: Add tick skew boot option Let the user decide whether power consumption or jitter is the more important consideration for their machines. Quoting removal commit af5ab277ded04bd9bc6b048c5a2f0e7d70ef0867: ""Historically, Linux has tried to make the regular timer tick on the various CPUs not happen at the same time, to avoid contention on xtime_lock. Nowadays, with the tickless kernel, this contention no longer happens since time keeping and updating are done differently. In addition, this skew is actually hurting power consumption in a measurable way on many-core systems."" Problems: - Contrary to the above, systems do encounter contention on both xtime_lock and RCU structure locks when the tick is synchronized. - Moderate sized RT systems suffer intolerable jitter due to the tick being synchronized. - SGI reports the same for their large systems. - Fully utilized systems reap no power saving benefit from skew removal, but do suffer from resulting induced lock contention. - 0209f649 rcu: limit rcu_node leaf-level fanout This patch was born to combat lock contention which testing showed to have been _induced by_ skew removal. Skew the tick, contention disappeared virtually completely. Signed-off-by: Mike Galbraith <mgalbraith@suse.de> Link: http://lkml.kernel.org/r/1336472458.21924.78.camel@marge.simpson.net Signed-off-by: Thomas Gleixner <tglx@linutronix.de>",20/06/2012 10:17:59,,DUPLICATE,https://github.com/nunogmartins/net-next/commit/5307c9556bc17e3cd26d4e94fc3b2565921834de,,,,,,,EXISTS,,,,,,,,,,,,,nunogmartins/net-next,,,,,
AndreiLux,Perseus-S3,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",21/06/2012 00:13:51,,OK,https://github.com/AndreiLux/Perseus-S3/commit/bf3bd7010bb335fe2989f8d3d5eeb00589fe5f6d,,,[OK][Remove Freq Option],[OK] [Allow CPU frequency scaling],[DO NOT ANALYZE],[Allow CPU frequency scaling] [Remove Freq Option],EXISTS,[Remove CPU max frequency lock if the GPU is fully loaded],[3D load heavy applications usually do not tax the CPU that far],[Allow CPU frequency scaling] [Remove max frequency CPU lock],[DVFS],,,Certain,Android,No,OS,C,"-Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden.",AndreiLux/Perseus-S3,AndreiLux,[Frequency and voltage scaling],,AndreiLux,Driver
simone201,neak-gs3-kernel,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",21/06/2012 19:38:55,,DUPLICATE,https://github.com/simone201/neak-gs3-kernel/commit/cf87cac4417a4011f2536251b7f580fa9c45ef32,,,,,,,EXISTS,,,,,,,,,,,,,simone201/neak-gs3-kernel,AndreiLux,,,simone201,
jblparisi,android_kernel_samsung_dempsey,cpuidle: commit 7467571f4480b273007517b26297c07154c73924 upstream. Cpuidle menu governor is using u32 as a temporary datatype for storing nanosecond values which wrap around at 4.294 seconds. This causes errors in predicted sleep times resulting in higher than should be C state selection and increased power consumption. This also breaks cpuidle state residency statistics.,22/06/2012 02:38:14,,NOT-FOUND,https://github.com/jblparisi/android_kernel_samsung_dempsey/commit/f29faab5fc89651cd16d0547e248f89350d83a0b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jblparisi/android_kernel_samsung_dempsey,,,,,
Ninpo,ninphetamine3,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",22/06/2012 18:41:41,,DUPLICATE,https://github.com/Ninpo/ninphetamine3/commit/b12fafc40688726c763f73cd3c3b90ea343a958a,,,,,,,EXISTS,,,,,,,,,,,,,Ninpo/ninphetamine3,AndreiLux,,,netarchy,
voku,initramfs3,#ERROR!,24/06/2012 15:37:16,,OK,https://github.com/voku/initramfs3/commit/d2923d2d90e25a3b82f3e333886159b65deed50b,,,[OK] [Scale CPU frequency],[OK] [Scale CPU frequency],[DO NOT ANALYZE],[Scale CPU frequency],EXISTS,[config governor],[power saving],[Configure governor] [Scale CPU frequency] [Decrease CPU frequency sooner] [Increase CPU frequency sooner] [Script] [Config],[DVFS] [Sub1: Governor tuning],,Multiple changes,Certain,Android,No,Libraries and Utilities,Shell,"""conservative""-settings for the battery-profile ""Reduce Linux power consumption",voku/initramfs3,voku,[Frequency and voltage scaling],,voku,Script sbin/shell
MetaWatchOpenProjects,MetaWatch-WDS11x,1. optimize stack for better performance with less code; 2. fix a bug in draw-partial-screen; 3. use 200ms long connection interval for power saving.,26/06/2012 20:42:30,,NOT-FOUND,https://github.com/MetaWatchOpenProjects/MetaWatch-WDS11x/commit/43207e7a3355e8b4d2b98ab4664b9df0d9e0be4d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,MetaWatchOpenProjects/MetaWatch-WDS11x,,,,,
AUXOS,URA-Kubota,Added power consumption Word document,27/06/2012 14:24:28,,NOT-FOUND,https://github.com/AUXOS/URA-Kubota/commit/96ee3c4e61346fbb89c87a6091e4077b8d8d93c1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AUXOS/URA-Kubota,,,,,
Metallice,android_kernel_samsung_espresso10,Reduce Wifi voltage for power savings Should be beneficial for a wifi only device,27/06/2012 20:58:59,,OK,https://github.com/Metallice/android_kernel_samsung_espresso10/commit/34f4738019a9e04c882ffa05bed1b40b81017c51,,,[OK][Reduce WIFI voltage],[OK] [Reduce voltage] [Reduce Wifi voltage] [App specific] [Android] [Kernel],[DO NOT ANALYZE],[Reduce voltage] [Reduce Wifi voltage] [App specific] [Android] [Kernel],EXISTS,[Reduce Wifi voltage],[power saving Should be beneficial for a wifi only device],[Reduce voltage] [Reduce Wifi voltage],[Reduce device voltage],,,Uncertain,Android,No,OS,C,Reduce Wifi voltage for power savings. Should be beneficial for a wifi only device,Metallice/android_kernel_samsung_espresso10,Metallice,[Frequency and voltage scaling],,Metallice,Driver
TI-OpenLink,ti-utils,"date SP1 FW: SR X.2.9.0.15 MR X.3.9.0.29 Service Pack 1 Bug Fixes: - Fix for Bug MCS00112750: Scheduled scan stops after 12 mins & 45 secs. - Fix for Bug MCS00108221: During BT discoverable, when exit ELP, the BT InquiryScan activity set to 1, causes Wifi scan failure. - Fix for Bug MCS00112788: Add action to rx filter - add the possibility to set the action dynamically and differently for every filter. - Fix for Bug MCS00112837: Increase num of Rx filters to 7 (#define MAX_DATA_FILTERS 7) * From 2.114: - During opening a tx BA session, if the recipient returns ADDBA response with winSize smaller than we requested, we don't update it properly upon the TBC_Init. - rx_streaming.c: Go over all the TIDs (8) instead of RX_STRAMING_NUM_OF_TID_SUPPORTED (4). Also send the TID instead of the TIDindex. - RogBug Fix MCS00113136 - WiFi TGn APUT 4.2.31: The APUT doesn't turn on the HT non-member protection bit - Eli: Bug Fix MCS00110974 - APUT : Beacon stops while UDP RX traffic - Wrong AIFSN calculation. * From 2.112: - Added two more Probe Request types for application scan (one shot), and changed the Older Probe Request templates to Connection scan (sched scan) probes. also changed the probe to be regular and role aware and role protected. * From 1.111: - Bug Fix Mcs00111501 Wi-Fi Wpsv2 Aput 4.2.13:The Aput Connected When Overlapped Pbc Sessions. Fixed several issues in generic_ie_parser and anded support for pbc in probe response 1. In function FindAttribute fixed an issue where the while was stopped after one iteration. 2. In function FindAttribute fixed an issue where the pointer was increased only by attribute payload length without the header length. 3. Added support for IE that uses BIG Endian. 4. Added function that search and indicates whether the PBC was pressed the probe response WSC IE and we use that function to decide if to raise the probe to the host or drop it. * From 1.109: - Bug Fix MCS00111486: PS/ELP: ELP doesn't work anymore after re authentication with Cisco in mix UPSD mode. - Bug Fix MCS00111349: Power save: The SUT doesn't send trigger pkt (QoS Null Data) after roaming. - Bug Fix MCS00111892: Wi-Fi 11g APUT Certification Test 4.2.3.6 Fail. - Bug Fix MCS00112301: SDIO crash when running BT A2DP during Wi-Fi connect/disconnect."" Signed-off-by: Assaf Azulay <assaf@ti.com>",28/06/2012 16:47:32,,BINARIES,https://github.com/TI-OpenLink/ti-utils/commit/ccc55461862e5b664583dca48e73c7a4ecdf5189,,,,,,,EXISTS,,,,,,,,,,,,,TI-OpenLink/ti-utils,assafazulay,,,assafazulay,
jsnyder,elua,further pin adjustment for low power consumption,28/06/2012 19:27:07,,OK,https://github.com/jsnyder/elua/commit/5fcfe3845afb61ea7e7cb74f908361ee38095506,,,[OK][?],[OK] [Set pin] [General solution],[DO NOT ANALYZE],[Set pin] [General solution] [?],EXISTS,[pin adjustment],[low power consumption],[Set pins] [Set pins low] [Set pins digital input] [Hardware],[Pin configuration],,,Certain,Embedded eLua,No,Application,C,further pin adjustment for low power consumption,jsnyder/elua,jsnyder,[Pin management],,jsnyder,Embedded application
edoko,AirKernel_GN_JB,IVAHD: clockdomains44xx_data.c: Disable HWSUP mode and Save power - Thanks to Sundar Raman,30/06/2012 05:10:51,,DUPLICATE,https://github.com/edoko/AirKernel_GN_JB/commit/f3115e36a51f6bece41ae3175f47f60ace0da28f,,,,[VERIFIED] [https://github.com/edoko/AirKernel_GN_JB/commit/f3115e36a51f6bece41ae3175f47f60ace0da28f],,[https://github.com/edoko/AirKernel_GN_JB/commit/f3115e36a51f6bece41ae3175f47f60ace0da28f],EXISTS,,,,,,,,,,,,,edoko/AirKernel_GN_JB,edoko,,,edoko,
yongcong,haiku,"x86: Initialize IA32_MSR_ENERGY_PERF_BIAS The lowest 4 bits of the MSR serves as a hint to the hardware to favor performance or energy saving. 0 means a hint preference for highest performance while 15 corresponds to the maximum energy savings. A value of 7 translates into a hint to balance performance with energy savings. The default reset value of the MSR is 0. If BIOS doesn't intialize the MSR, the hardware will run in performance state. This patch initialize the MSR with value of 7 for balance between performance and energy savings",02/07/2012 13:58:33,,NOT-FOUND,https://github.com/yongcong/haiku/commit/bcb98dc59101a19e75a8922cbbf2bdb06f7b29df,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,yongcong/haiku,,,,,
yongcong,haiku,"x86: Initialize IA32_MSR_ENERGY_PERF_BIAS The lowest 4 bits of the MSR serves as a hint to the hardware to favor performance or energy saving. 0 means a hint preference for highest performance while 15 corresponds to the maximum energy savings. A value of 7 translates into a hint to balance performance with energy savings. The default reset value of the MSR is 0. If BIOS doesn't intialize the MSR, the hardware will run in performance state. This patch initialize the MSR with value of 7 for balance between performance and energy savings",02/07/2012 15:37:40,,OK,https://github.com/yongcong/haiku/commit/550a5b94b16e6e576bed1e59f81aa9cd30c49a94,,,,,,,EXISTS,[Initialize IA32_MSR_ENERGY_PERF_BIAS to balanced power saving],[Default is performance],[Set device balanced mode by default],[Use power saving feature/device] [Sub1: By default],,Trade performance for power saving,Certain,Haiku,No,OS,C++,,yongcong/haiku,yongcong,[Use power efficient library/device],,yongcong,Kernel arch
yskripachov,m211-tools,test7: add test to measure power consumption for one m211x8xm18 Signed-off-by: Yuri Skripachov <y.skripachov@gmail.com>,04/07/2012 09:39:46,,NOT-FOUND,https://github.com/yskripachov/m211-tools/commit/63bffe50b52f01a15ed38f309a234e8487d2d348,,,[FALSE-POSITIVE],[FALSE-POSTIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,yskripachov/m211-tools,yskripachov,,,yskripachov,
kozmikkick,KozmiKKernel,"ARM: 7011/1: Add ARM cpu topology definition The affinity between ARM processors is defined in the MPIDR register. We can identify which processors are in the same cluster, and which ones have performance interdependency. We can define the cpu topology of ARM platform, that is then used by sched_mc and sched_smt. The default state of sched_mc and sched_smt config is disable. When enabled, the behavior of the scheduler can be modified with sched_mc_power_savings and sched_smt_power_savings sysfs interfaces. Changes since v4 : * Remove unnecessary parentheses and blank lines Changes since v3 : * Update the format of printk message * Remove blank line Changes since v2 : * Update the commit message and some comments Changes since v1 : * Update the commit message * Add read_cpuid_mpidr in arch/arm/include/asm/cputype.h * Modify header of arch/arm/kernel/topology.c * Modify tests and manipulation of MPIDR's bitfields * Modify the place and dependancy of the config * Modify Noop functions Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: cpu topology: modify cpu topology Modify the CPU topology policy according to the sched_mc level and the cortex family Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Add update_cpu_topology function arch_update_cpu_topology function is called by the scheduler before building its sched_domain hierarchy. Prepare the update of the cpu topology masks in this function in addition to set it in the the store_cpu_topology which is executed only once per cpu. Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Enable ARCH_POWER ARM: cpu topology: Enable ARCH_POWER Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: 7182/1: ARM cpu topology: fix warning kernel/sched.c:7354 warning: initialization from incompatible pointer type Align cpu_coregroup_mask prototype interface with sched_domain_mask_f typedef use int cpu instead of unsigned int cpu Cc: <stable@vger.kernel.org> Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: scheduler: add a cpu_power function Add an architecture specific function for setting cpu_power Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Modify cpu_power according to sched_mc level Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Modify cpu_power according to cpufreq Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Add asym topology flag for using cpu0 1st Modify the CPU sched_domain flags in power save mode for using the cpu0 in ched_mcpower savee mode Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Addebugsfs interface for cpu_power Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>",04/07/2012 22:47:29,,NOT-FOUND,https://github.com/kozmikkick/KozmiKKernel/commit/afc24c7d708da6d4af25950b7af0c3dec0099bdc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,kozmikkick/KozmiKKernel,,,,,
bidouilles,bGeigieNano,Update power consumption summary table,06/07/2012 03:40:12,,FALSE-POSITIVE,https://github.com/bidouilles/bGeigieNano/commit/a273849cf3e6a642bbf971b0c670d0513d7ddb95,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,bidouilles/bGeigieNano,bidouilles,,,bidouilles,
IceColdSandwich,packages_apps_ROMControl,show power saver in tablet mod,06/07/2012 20:30:05,,RELATED,https://github.com/IceColdSandwich/packages_apps_ROMControl/commit/71adb3ee3ed0dbfead2323f1f238aadf75cc0c54,,,[RELATED][ADD POWER SAVING MODE],[RELATED] [Add power saving option] [Android],[DO NOT ANALYZE],[Add power saving option] [Android] [ADD POWER SAVING MODE],EXISTS,[Add power saving menu option],,,,,,Certain,Android,No,Application,Java,,IceColdSandwich/packages_apps_ROMControl,LorDClockaN,,,LorDClockaN,Application
endyman,TimedShot,"* overlay, power saving * only start preview before taking pictures * text overlay * doc",07/07/2012 00:00:07,,OK,https://github.com/endyman/TimedShot/commit/1bf010de84a81e0625b3a3aad662727e6b2a1d6d,,,[OK][Start preview before camera] [Lazy initialization],[OK] [Delay component initialization] [Lazy initialization] [Android],[DO NOT ANALYZE],[Delay component initialization] [Lazy initialization] [Android] [Start preview before camera],EXISTS,[only start preview before taking pictures],[power saving],[Delay component initialization] [Lazy initialization],[Lazy initialization],,,Certain,Android,No,Application,Java," overlay, power saving * only start preview before taking pictures",endyman/TimedShot,,[Miscellaneous],,,Application
freebsd,freebsd-head,"Change the interface to the Energy Efficient Ethernet (EEE) setting in the igb and em driver. This was necessitated by a shared code change that I was given late in the game, a data type changed from bool to int, in the last update I dealt with it by a cast, but it was pointed out (thanks jhb) that there was a potential problem with this. John suggested this safer approach, and it is fine with me... MFC after:2 days (to catch the 9.1 update) git-svn-id: svn+ssh://svn.freebsd.org/base/head@238214 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",07/07/2012 20:22:45,,NOT-FOUND,https://github.com/freebsd/freebsd-head/commit/086e0db15a405ec5a82781be7d3287eed7df432e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,freebsd/freebsd-head,,,,,
freebsd,freebsd,"Change the interface to the Energy Efficient Ethernet (EEE) setting in the igb and em driver. This was necessitated by a shared code change that I was given late in the game, a data type changed from bool to int, in the last update I dealt with it by a cast, but it was pointed out (thanks jhb) that there was a potential problem with this. John suggested this safer approach, and it is fine with me... MFC after:2 days (to catch the 9.1 update)",07/07/2012 20:26:50,,RELATED,https://github.com/freebsd/freebsd/commit/935a8209568f1d62ecb4862f9c40d712aacbb65f,,,[RELATE][Giving programmers the choice of when to use an eee],[RELATED] [Giving programmers the choice of when to use an eee],[?],[Giving programmers the choice of when to use an eee],EXISTS,,,[REVIEW],,,,,,,,,,freebsd/freebsd,,,,,
manveru0,FeaCore_Phoenix_S3,"AndreiLux: mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",10/07/2012 13:01:49,,DUPLICATE,https://github.com/manveru0/FeaCore_Phoenix_S3/commit/65add203e2042008c736f94f56ccda1d24d2ebfe,,,,[VERIFIED] [https://github.com/AndreiLux/Perseus-S3/commit/bf3bd7010bb335fe2989f8d3d5eeb00589fe5f6d#diff-8414b9c2bd6d9ae76c98a8e38d36fdbeL1248],,[https://github.com/AndreiLux/Perseus-S3/commit/bf3bd7010bb335fe2989f8d3d5eeb00589fe5f6d#diff-8414b9c2bd6d9ae76c98a8e38d36fdbeL1248],EXISTS,,,,,,,,,,,,,manveru0/FeaCore_Phoenix_S3,,,,,
kozmikkick,KozmiKRuby,"cpufreq: interactive governor: default timer 10ms, maxspeed load 95% Modify default timer from 30ms to 10ms, sampling 2 jiffies after idle exit on ARM as in Honeycomb. Modify default go_maxspeed_load from 85% loaded to 95% loaded, for use in phones where power savings is more important (tablets may be best served overriding this). Change-Id: I3361a6279979bfae1df5262666a2e30ea7a44328 Signed-off-by: Todd Poynor <toddpoynor@google.com>",11/07/2012 08:30:15,,DUPLICATE,https://github.com/kozmikkick/KozmiKRuby/commit/ffb729d291c3b7be0a50673be211abd231264c1b,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/KozmiKRuby,,,,kozmikkick,
snandlal,kernel,Add power saving state DEEP IDLE version 2.,12/07/2012 02:44:01,,NOT-FOUND,https://github.com/snandlal/kernel/commit/20f40e094471d057c485e146e96028a9512f5e20,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,snandlal/kernel,,,,,
kozmikkick,KozmiKRuby,"ARM: 7011/1: Add ARM cpu topology definition The affinity between ARM processors is defined in the MPIDR register. We can identify which processors are in the same cluster, and which ones have performance interdependency. We can define the cpu topology of ARM platform, that is then used by sched_mc and sched_smt. The default state of sched_mc and sched_smt config is disable. When enabled, the behavior of the scheduler can be modified with sched_mc_power_savings and sched_smt_power_savings sysfs interfaces. Changes since v4 : * Remove unnecessary parentheses and blank lines Changes since v3 : * Update the format of printk message * Remove blank line Changes since v2 : * Update the commit message and some comments Changes since v1 : * Update the commit message * Add read_cpuid_mpidr in arch/arm/include/asm/cputype.h * Modify header of arch/arm/kernel/topology.c * Modify tests and manipulation of MPIDR's bitfields * Modify the place and dependancy of the config * Modify Noop functions Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: cpu topology: modify cpu topology Modify the CPU topology policy according to the sched_mc level and the cortex family Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Add update_cpu_topology function arch_update_cpu_topology function is called by the scheduler before building its sched_domain hierarchy. Prepare the update of the cpu topology masks in this function in addition to set it in the the store_cpu_topology which is executed only once per cpu. Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Enable ARCH_POWER ARM: cpu topology: Enable ARCH_POWER Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: 7182/1: ARM cpu topology: fix warning kernel/sched.c:7354 warning: initialization from incompatible pointer type Align cpu_coregroup_mask prototype interface with sched_domain_mask_f typedef use int cpu instead of unsigned int cpu Cc: <stable@vger.kernel.org> Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: scheduler: add a cpu_power function Add an architecture specific function for setting cpu_power Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Modify cpu_power according to sched_mc level Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Modify cpu_power according to cpufreq Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Add asym topology flag for using cpu0 1st Modify the CPU sched_domain flags in power save mode for using the cpu0 in ched_mcpower savee mode Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Addebugsfs interface for cpu_power Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>",12/07/2012 06:45:55,,DUPLICATE,https://github.com/kozmikkick/KozmiKRuby/commit/b1fa9b2370decd75d0b00d06a668869f709adfe2,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/KozmiKRuby,InstigatorX,,,kozmikkick,
slimdroid,platform_frameworks_base,Power Menu: make screenshot and power saver toggles work properly Conflicts: policy/src/com/android/internal/policy/impl/GlobalActions.java Change-Id: Ia39d1a9dd571da36802de17140077d7a213fd8e5,14/07/2012 22:25:49,,NOT-FOUND,https://github.com/slimdroid/platform_frameworks_base/commit/2429c56e868328b0f7115cb100cd59b963a126a1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,slimdroid/platform_frameworks_base,,,,,
mmaroti,tinyos,ucmini: remove unnecessary IO pin settings (and save energy) From: Miklos Maroti <mmaroti@gmail.com> git-svn-id: https://tinyos-main.googlecode.com/svn/trunk@5974 285f258d-8064-b571-fbc6-9656dc998e90,16/07/2012 16:17:05,,NOT-FOUND,https://github.com/mmaroti/tinyos/commit/f225a9fe20b2af9ee955e9065c4b8594c102d360,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mmaroti/tinyos,,,,,
mysmartgrid,msg-flukso,Page 'On-site energy consumption' has been improved.,16/07/2012 19:01:12,,FALSE-POSITIVE,https://github.com/mysmartgrid/msg-flukso/commit/d0b327b0a540463f9702636d263b18a984b6659b,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Ui only],[FALSE-POSITIVE],[Ui only],EXISTS,,,,,,,,,,,,,mysmartgrid/msg-flukso,,,,,
thelukester92,distracted-driving,"added settings menu, energy saving mode, and geofencing (with a fallback to the old speed monitoring)",16/07/2012 19:33:25,,NOT-FOUND,https://github.com/thelukester92/distracted-driving/commit/4064606ff2975255543a9e1d28e98e5c5671014b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,thelukester92/distracted-driving,,,,,
tp-freeforall,prod,ucmini: remove unnecessary IO pin settings (and save energy) From: Miklos Maroti <mmaroti@gmail.com> git-svn-id: http://tinyos-main.googlecode.com/svn/trunk@5974 285f258d-8064-b571-fbc6-9656dc998e90,17/07/2012 09:52:33,,OK,https://github.com/tp-freeforall/prod/commit/0396554beee19ca94f0021e173322fac3f8ec095,,,[OK][Disabling Pins],[OK] [Disable pins] [Disable component] [Generic solution],[OK] [Disable component],[Disable pins] [Disable component] [Generic solution] [Disabling Pins],EXISTS,[remove unnecessary IO pin settings],[power saving],[Configure pins] [Remove unnecessary PIN configuration],[Pin configuration],,,Certain,TinyOS,No,OS,NC,remove unnecessary IO pin settings (and save energy),tp-freeforall/prod,,[Pin management],,,Kernel platform
sorahara,lge-kernel-msm7x27,"msm: watchdog: increase pet time to ten seconds Petting the watchdog every three seconds has impacts on power consumption. Increase this to ten seconds, and increase the bark and bite times for the simulator and otherwise accordingly. Change-Id: Icb637634d323636f957000717916c9157d683ffb Signed-off-by: Jeff Ohlstein <johlstei@codeaurora.org> Conflicts: arch/arm/mach-msm/msm_watchdog.c",17/07/2012 20:36:17,,NOT-FOUND,https://github.com/sorahara/lge-kernel-msm7x27/commit/c5a95df8de555bab23ff34b285bcef87ca8da1f8,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,sorahara/lge-kernel-msm7x27,,,,,
TI-OpenLink,wl18xx_fw,"update PG2 FW version to 8.2.0.0.107 MAC Firmware version: 8.2.0.0.107 PHY Firmware version: 8.2.999.0.135 ili file updated. Updates in this version (from FW 102): - remove dencity - add ELP WA ;unmask WL8_BRINGUP_PATCH_YIELD_WA - remove WL8_WA_DISRESPECTABLE_HT_DENSITY; WA to tear down the BA session if we detect spacing of 8 usec - add force calibration on radio tune - increase Max aggergation size to 14 - Remove TCP check sum fro RX and Tx pipline - update HW Fifo sizes - Add stop tx stat - Add retry per rate stat - fix order of retrey in aggregation - Add tx monitor on AC trigger Busy - fix exception on update cashe attributes - MCS00115464 => new Rx parser compiler. - MCS00115494 => RSSI and Calibration results for RTTT. - MCS00115500 => BT/ELP changed sequence. - fix for BA open timeout - remove workaround for CW increment only after 2nd retry. - remove AC's priority fix (aifsn-1) - remove logger mux workaround for 189x. - generating fw global variable script for driver use - MCS00115516 => Fix TKIP problems from version 104 - warning cleanup - reduce ELP WU times - MCS00114518 TKIP as AP: udp_tx causes assert in IntMemBlockErr() (Oren S.) - disable power save in AP mode scan (Danny) - fixes for PD (still disabled in version) - add debug for pwrmgt activities - PHY version 135 - Add workaround for CCA ""clock-like""-toggle issue - TKIP Cisco fragmentation bug - Pre-TX Disable (+Disable switching PFM/PWM mode) - Work around for bad decrypted RX broadcast frames going to Host Signed-off-by: Ido Reis <idor@ti.com>",19/07/2012 13:21:02,,FALSE-POSITIVE,https://github.com/TI-OpenLink/wl18xx_fw/commit/8312bd93fe2fd1fac970fcdfebefbfcc5965dbb1,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,TI-OpenLink/wl18xx_fw,idor,,,idor,
slimdroid,kernel_samsung,"cpuidle: idle2: v0.130 Bugfix release. Fix issue where bluetooth audio streams die when IDLE2 mode is entered. BT audio requires TOP ON to continue functioning. Check the value of GPIO_BT_HOST_WAKE and set TOP ON or TOP OFF based on that. This is the cheapest method of doing this which doesn't involve additional more expensive function calls. Enabling bluetooth will not impact power saving. This fix will only set TOP ON when bluetooth is active and working, such as streaming audio. Still in the pursuit of making things cheaper: Change argument to s5p_set_idle2_lock() from int to bool.",19/07/2012 14:00:16,,NOT-FOUND,https://github.com/slimdroid/kernel_samsung/commit/da67dfcedf953635b25c4f77464e158fae7c24e8,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,slimdroid/kernel_samsung,,,,,
anarkia1976,AK-cmJB,IVAHD: clockdomains44xx_data.c: Disable HWSUP mode and Save power,19/07/2012 15:12:08,,NOT-FOUND,https://github.com/anarkia1976/AK-cmJB/commit/b004e69b7124bc9e68f5903ddcb6276401fe3351,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,anarkia1976/AK-cmJB,,,,,
kript,Monitoring-Stuff,Initial working version of power consumption iLo checking script Script to check the iLo of an HP Proliant G series server for its power consumption via the iLo port.,19/07/2012 20:49:11,,FALSE-POSITIVE,https://github.com/kript/Monitoring-Stuff/commit/d3146ba8882600e31d2e54c2c07e2c6434d714a0,,,[FALSE-POSITIVE],[FALSE-POSTIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],EXISTS,,,,,,,,,,,,,kript/Monitoring-Stuff,kript,,,kript,
Kayant,frameworks_base,"Add ""Pulse low battery light"" switch. Implements the framework portion of an optional ""Pulse low battery light"" switch, which allows the pulsing low battery LED to be disabled. The function and implementation of this switch is analogous to (and borrowed from) the ""Pulse notification light"" switch. This is motivated by devices (e.g., epicmtd) featuring a battery charging LED, where the LED does not support pulsing in hardware and relies on a kernel (CPU) timer to implement the pulse capability. On these devices, pulsing the LED requires waking the CPU from suspend on every LED on/off event, substantially reducing the proportion of time the CPU can suspend, and thus, substantially increasing power consumption. Therefore, when the these devices reach the low battery threshold, their power consumption, ironically, increases measurably in order to pulse the battery charging LED, which lowers battery life and increases the likelihood of a low-battery shutdown if the user cannot charge the device in a timely fashion. This switch allows the user to disable the pulsing low battery LED in order to maximize their low battery charge. Change-Id: I3a5c8938fd7c444c90b2af123e683982c614cd6e Conflicts: services/java/com/android/server/BatteryService.java",19/07/2012 21:23:38,,NOT-FOUND,https://github.com/Kayant/frameworks_base/commit/3fce9c9bf3aa9f81bd97969b4cb40f89b3c8110a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Kayant/frameworks_base,,,,,
boog321,crossbones_kernel,"cpuidle: idle2: v0.130 Bugfix release. Fix issue where bluetooth audio streams die when IDLE2 mode is entered. BT audio requires TOP ON to continue functioning. Check the value of GPIO_BT_HOST_WAKE and set TOP ON or TOP OFF based on that. This is the cheapest method of doing this which doesn't involve additional more expensive function calls. Enabling bluetooth will not impact power saving. This fix will only set TOP ON when bluetooth is active and working, such as streaming audio. Still in the pursuit of making things cheaper: Change argument to s5p_set_idle2_lock() from int to bool.",19/07/2012 21:29:05,,NOT-FOUND,https://github.com/boog321/crossbones_kernel/commit/b95ded06120d4869aec90be7a478a47cede40c37,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,boog321/crossbones_kernel,,,,,
CyanogenMod,android_kernel_samsung_aries,"ath9k: Fix kernel panic in AR2427 in AP mode commit b25bfda38236f349cde0d1b28952f4eea2148d3f upstream. don't do aggregation related stuff for 'AP mode client power save handling' if aggregation is not enabled in the driver, otherwise it will lead to panic because those data structures won't be never intialized in 'ath_tx_node_init' if aggregation is disabled EIP is at ath_tx_aggr_wakeup+0x37/0x80 [ath9k] EAX: e8c09a20 EBX: f2a304e8 ECX: 00000001 EDX: 00000000 ESI: e8c085e0 EDI: f2a304ac EBP: f40e1ca4 ESP: f40e1c8c DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068 Process swapper/1 (pid: 0, ti=f40e0000 task=f408e860 task.ti=f40dc000) Stack: 0001e966 e8c09a20 00000000 f2a304ac e8c085e0 f2a304ac f40e1cb0 f8186741 f8186700 f40e1d2c f922988d f2a304ac 00000202 00000001 c0b4ba43 00000000 0000000f e8eb75c0 e8c085e0 205b0001 34383220 f2a304ac f2a30000 00010020 Call Trace: [<f8186741>] ath9k_sta_notify+0x41/0x50 [ath9k] [<f8186700>] ? ath9k_get_survey+0x110/0x110 [ath9k] [<f922988d>] ieee80211_sta_ps_deliver_wakeup+0x9d/0x350 [mac80211] [<c018dc75>] ? __module_address+0x95/0xb0 [<f92465b3>] ap_sta_ps_end+0x63/0xa0 [mac80211] [<f9246746>] ieee80211_rx_h_sta_process+0x156/0x2b0 [mac80211] [<f9247d1e>] ieee80211_rx_handlers+0xce/0x510 [mac80211] [<c018440b>] ? trace_hardirqs_on+0xb/0x10 [<c056936e>] ? skb_queue_tail+0x3e/0x50 [<f9248271>] ieee80211_prepare_and_rx_handle+0x111/0x750 [mac80211] [<f9248bf9>] ieee80211_rx+0x349/0xb20 [mac80211] [<f9248949>] ? ieee80211_rx+0x99/0xb20 [mac80211] [<f818b0b8>] ath_rx_tasklet+0x818/0x1d00 [ath9k] [<f8187a75>] ? ath9k_tasklet+0x35/0x1c0 [ath9k] [<f8187a75>] ? ath9k_tasklet+0x35/0x1c0 [ath9k] [<f8187b33>] ath9k_tasklet+0xf3/0x1c0 [ath9k] [<c0151b7e>] tasklet_action+0xbe/0x180 Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com> Cc: Rajkumar Manoharan <rmanohar@qca.qualcomm.com> Reported-by: Ashwin Mendonca <ashwinloyal@gmail.com> Tested-by: Ashwin Mendonca <ashwinloyal@gmail.com> Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>",20/07/2012 07:47:05,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_kernel_samsung_aries/commit/eb1f526d4bfda44e94ccdf34950911eaff74b092,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_samsung_aries,,,,gregkh,
kozmikkick,KozmiKKernel,"msm: kgsl: Collect a sample only if GPU is active If the device is not in active state, collecting a sample is not necessary and will cause frequent wake-ups, resulting in higher power consumption. Change-Id: Icb4f82b1300cab3b4cc4ed17117a92725a5a11d4 Signed-off-by: Lynus Vaz <lvaz@codeaurora.org>",21/07/2012 03:50:05,,DUPLICATE,https://github.com/kozmikkick/KozmiKKernel/commit/1e661b0c87d0a783533e193eed741371f216d075,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/KozmiKKernel,,,,kozmikkick,
kozmikkick,KozmiKKernel,"cpufreq: interactive governor: default timer 10ms, maxspeed load 95% Modify default timer from 30ms to 10ms, sampling 2 jiffies after idle exit on ARM as in Honeycomb. Modify default go_maxspeed_load from 85% loaded to 95% loaded, for use in phones where power savings is more important (tablets may be best served overriding this). Change-Id: I3361a6279979bfae1df5262666a2e30ea7a44328 Signed-off-by: Todd Poynor <toddpoynor@google.com>",21/07/2012 03:53:06,,DUPLICATE,https://github.com/kozmikkick/KozmiKKernel/commit/3483302bb9c59bcb6d3e98f75ecdc7cc31267083,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/KozmiKKernel,,,,kozmikkick,
kozmikkick,KozmiKKernel,"ARM: 7011/1: Add ARM cpu topology definition The affinity between ARM processors is defined in the MPIDR register. We can identify which processors are in the same cluster, and which ones have performance interdependency. We can define the cpu topology of ARM platform, that is then used by sched_mc and sched_smt. The default state of sched_mc and sched_smt config is disable. When enabled, the behavior of the scheduler can be modified with sched_mc_power_savings and sched_smt_power_savings sysfs interfaces. Changes since v4 : * Remove unnecessary parentheses and blank lines Changes since v3 : * Update the format of printk message * Remove blank line Changes since v2 : * Update the commit message and some comments Changes since v1 : * Update the commit message * Add read_cpuid_mpidr in arch/arm/include/asm/cputype.h * Modify header of arch/arm/kernel/topology.c * Modify tests and manipulation of MPIDR's bitfields * Modify the place and dependancy of the config * Modify Noop functions Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: cpu topology: modify cpu topology Modify the CPU topology policy according to the sched_mc level and the cortex family Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Add update_cpu_topology function arch_update_cpu_topology function is called by the scheduler before building its sched_domain hierarchy. Prepare the update of the cpu topology masks in this function in addition to set it in the the store_cpu_topology which is executed only once per cpu. Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Enable ARCH_POWER ARM: cpu topology: Enable ARCH_POWER Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: 7182/1: ARM cpu topology: fix warning kernel/sched.c:7354 warning: initialization from incompatible pointer type Align cpu_coregroup_mask prototype interface with sched_domain_mask_f typedef use int cpu instead of unsigned int cpu Cc: <stable@vger.kernel.org> Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ARM: scheduler: add a cpu_power function Add an architecture specific function for setting cpu_power Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Modify cpu_power according to sched_mc level Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Modify cpu_power according to cpufreq Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Add asym topology flag for using cpu0 1st Modify the CPU sched_domain flags in power save mode for using the cpu0 in ched_mcpower savee mode Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> ARM: cpu topology: Addebugsfs interface for cpu_power Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>",21/07/2012 04:13:55,,DUPLICATE,https://github.com/kozmikkick/KozmiKKernel/commit/0cfd7a98b5d2a5d825a78e9f354684b5816a0963,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/KozmiKKernel,InstigatorX,,,kozmikkick,
boog321,linux_samsung,"cpuidle: idle2: v0.130 Bugfix release. Fix issue where bluetooth audio streams die when IDLE2 mode is entered. BT audio requires TOP ON to continue functioning. Check the value of GPIO_BT_HOST_WAKE and set TOP ON or TOP OFF based on that. This is the cheapest method of doing this which doesn't involve additional more expensive function calls. Enabling bluetooth will not impact power saving. This fix will only set TOP ON when bluetooth is active and working, such as streaming audio. Still in the pursuit of making things cheaper: Change argument to s5p_set_idle2_lock() from int to bool.",21/07/2012 13:38:42,,NOT-FOUND,https://github.com/boog321/linux_samsung/commit/fecece691cd0e609ce70cc4fb0d98269128cb40e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,boog321/linux_samsung,,,,,
ypsu,desktop-configuration,Add a Makefile to compile xmonad in power saving mode Currently xmonad makes too much wakeups. Just check this out: strace -p $(pgrep xmonad) It wakes up around 100 times per second.,21/07/2012 20:08:17,,OK,https://github.com/ypsu/desktop-configuration/commit/ed9a40bf1e6ddb7aea0a03c3b6db3be576be8028,,,[OK][?],[OK] [Add power saving build] [Compiling techniques],[DO NOT ANALYZE],[Add power saving build] [Compiling techniques] [?],EXISTS,[Add a Makefile to compile xmonad in power saving mode],[xmonad makes too much wakeups],[Use power saving build command] [Compiling techniques],?,,,Certain,Personal config files?,No,Libraries and Utilities,Make,Add a Makefile to compile xmonad in power saving mode,ypsu/desktop-configuration,ypsu,[Display and UI tuning],,ypsu,Script make
IceColdJelly,android_system_core,charger: suspend when not animating Suspend will save power (i.e. charge faster) by disabling unneeded devices such as the touch-sensitive keys on galaxysmtd. Change-Id: I9b2eae1af2e9687546af9dcb10ce1fcb4c1e1ed6,23/07/2012 15:26:27,,OK,https://github.com/IceColdJelly/android_system_core/commit/4f13f2925d345d7d3ea503c38664311cf08f4493,,,[OK][Disabling devices],[OK] [Disable component] [Suspend when not animating] [Android],[DO NOT ANALYZE],[Disable component] [Suspend when not animating] [Android] [Disabling devices],EXISTS,[suspend when not animating],[charge faster],[Go to idle when not animating] [Suspend when not animating] [Suspend on idle],[Go to low power mode] [Codition: on inactivity],,,Certain,Android,No,OS,C,Suspend will save power (i.e. charge faster) by disabling unneeded devices such as the touch-sensitive keys on galaxysmtd.,IceColdJelly/android_system_core,pawitp,[Low power idling],[on inactivity],LorDClockaN,Software Stack
geon,neupet,Implemented neural controll over movement/mating + adjusted energy consumption to allow offspring to survive. First signs of evolution,24/07/2012 09:38:28,,FALSE-POSITIVE,https://github.com/geon/neupet/commit/f62b4895665bdbc0b927ea0312bd64f23c860f38,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game] [Neural network],[FALSE-POSITIVE],[Game] [Neural network],EXISTS,,,,,,,,,,,,,geon/neupet,geon,,,geon,
TI-OpenLink,wl18xx_fw,"update mc FW version 8.3.0.0.22 MAC Firmware version: 8.3.0.0.22 PHY Firmware version: 8.2.999.50.135 - Bug Fix: APUT BAR Attacks Cause TP Drops During Traffic - TKIP Cisco fragmentation bug - Pre-TX Disable (+Disable switching PFM/PWM mode) - Work around for bad decrypted RX broadcast frames going to Host - reduce ELP WU times - Bug Fix: TKIP as AP: udp_tx causes assert in IntMemBlockErr() - disable power save in AP mode scan (Danny) - add debug for pwrmgt activities - PHY version 135 => not done, using MR PHY ver 50.135 instead. - Add workaround for CCA ""clock-like""-toggle issue - Bug Fix: new Rx parser compiler. - Bug Fix: RSSI and Calibration results for RTTT. - Bug Fix: BT/ELP changed sequence. - fix for BA open timeout - remove workaround for CW increment only after 2nd retry. - remove AC's priority fix (aifsn-1) - remove logger mux workaround for 189x. - generating fw global variable script for driver use - Bug Fix: Fix TKIP problems - warning cleanup Signed-off-by: Ido Reis <idor@ti.com>",26/07/2012 11:12:56,,BINARIES,https://github.com/TI-OpenLink/wl18xx_fw/commit/c29cb1e7a1308bd0bdbbf6f2079b0cdba5d87165,,,[BINARIES],[BINARIES],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,TI-OpenLink/wl18xx_fw,idor,,,idor,
jamescoxon,PicoAtlas,"working setup, first 1000 strings then into power saving mode, setup up to measure battery voltage and solar voltage",27/07/2012 07:11:31,,FALSE-POSITIVE,https://github.com/jamescoxon/PicoAtlas/commit/3e193e26561fc55edfc1a22f79004f10933d9809,,,[OK][?],[OK] [Partition data] [Use power saving mode],[DO NOT ANALYZE],[Partition data] [Use power saving mode] [?],EXISTS,[1000 strings continously then spaced data],[power saving],[Partition data] [Space out data] [Continuously process data then space out],?,,,Certain,Arduino,No,Embedded application,Ino,"working setup, first 1000 strings then into power saving mode",jamescoxon/PicoAtlas,jamescoxon,?,,jamescoxon,Arduino application
triman1990,rpgContest,forgot about shield power consumption lol,28/07/2012 12:00:21,,FALSE-POSITIVE,https://github.com/triman1990/rpgContest/commit/5865f10bb6059481bcd69abab80f250e30b0e40c,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[DO NOT ANALYZE],[Game],EXISTS,,,,,,,,,,,,,triman1990/rpgContest,,,,,
gentoo,munin,"sensors_: add support for power monitoring. This is already implemented with IPMI for some systems, but most boards do not report that. On the other hand, modern Opterons do report the power consumption for the CPU at least, which comes useful.",31/07/2012 02:00:27,,FALSE-POSITIVE,https://github.com/gentoo/munin/commit/e4cc3abb716dc2ee339e1112c52d4a7455426932,,,[FALSE-POSITIVE],[FALSE-POSTIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],EXISTS,,,,,,,,,,,,,gentoo/munin,Flameeyes,,,Flameeyes,
CyanogenMod,android_kernel_samsung_aries,Update notes for submitted changes * bcmdhd: Disable MAX power saving mode as disabled by Samsung,31/07/2012 03:06:14,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_kernel_samsung_aries/commit/02a94e8c887aa0e8cb0e312dd4da4ed440fe03eb,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_samsung_aries,pawitp,,,,
CyanogenMod,android_kernel_samsung_aries,"Merge ""bcmdhd: Disable MAX power saving mode as disabled by Samsung"" into jellybean",31/07/2012 03:06:21,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_kernel_samsung_aries/commit/8e96988164fc1e5cbbf59fae2994f403d3396129,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Android],[DO NOT ANALYZE],[Android],EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_samsung_aries,pawitp,,,,
freebsd,freebsd-head,"Add several performance optimizations to acpi_cpu_idle(). For C1 and C2 states use cpu_ticks() to measure sleep time instead of much slower ACPI timer. We can't do it for C3, as TSC may stop there. But it is less important there as wake up latency is high any way. For C1 and C2 states do not check/clear bus mastering activity status, as it is important only for C3. As side effect it can make CPU enter C2 instead of C3 if last BM activity was two sleeps back (unlike one before), but that may be even good because of collecting more statistics. Premature BM wakeup from C3, entered because of overestimation, can easily be worse then entering C2 from both performance and power consumption points of view. Together on dual Xeon E5645 system on sequential 512 bytes read test this change makes cpu_idle_acpi() as fast as simplest cpu_idle_hlt() and only few percents slower then cpu_idle_mwait(), while deeper states are still actively used during idle periods. To help with diagnostics, add C-state type into dev.cpu.X.cx_supported. Sponsored by: iXsystems, Inc. git-svn-id: svn+ssh://svn.freebsd.org/base/head@238943 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",31/07/2012 11:01:57,,NOT-FOUND,https://github.com/freebsd/freebsd-head/commit/3551092ed0be19ea3836f666324b8c02ca993f28,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,freebsd/freebsd-head,,,,,
freebsd,freebsd,"Add several performance optimizations to acpi_cpu_idle(). For C1 and C2 states use cpu_ticks() to measure sleep time instead of much slower ACPI timer. We can't do it for C3, as TSC may stop there. But it is less important there as wake up latency is high any way. For C1 and C2 states do not check/clear bus mastering activity status, as it is important only for C3. As side effect it can make CPU enter C2 instead of C3 if last BM activity was two sleeps back (unlike one before), but that may be even good because of collecting more statistics. Premature BM wakeup from C3, entered because of overestimation, can easily be worse then entering C2 from both performance and power consumption points of view. Together on dual Xeon E5645 system on sequential 512 bytes read test this change makes cpu_idle_acpi() as fast as simplest cpu_idle_hlt() and only few percents slower then cpu_idle_mwait(), while deeper states are still actively used during idle periods. To help with diagnostics, add C-state type into dev.cpu.X.cx_supported. Sponsored by: iXsystems, Inc.",31/07/2012 11:02:31,,DUPLICATE,https://github.com/freebsd/freebsd/commit/844068d3c827bbbd7e9f56698dfc755a3fe9c1db,,,,[VERIFIED] [Original does not exist] [FP],,[Original does not exist] [FP],EXISTS,,,,,,,,,,,,,freebsd/freebsd,amotin,,,amotin,
mysmartgrid,msg-flukso,The legend of page 'On-site Energy Consumption' has been fixed.,02/08/2012 10:10:48,,FALSE-POSITIVE,https://github.com/mysmartgrid/msg-flukso/commit/d49e57b6a08018f6294590b96875fe6d93be1a19,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [UI string change],[FALSE-POSITIVE],[UI string change],EXISTS,,,,,,,,,,,,,mysmartgrid/msg-flukso,,,,,
edoko,AirKernel_NS_JBN,Add power saving state DEEP IDLE version 2. Conflicts: arch/arm/mach-s5pv210/Kconfig arch/arm/mach-s5pv210/cpuidle.c drivers/misc/Makefile,04/08/2012 07:51:05,,RELATED,https://github.com/edoko/AirKernel_NS_JBN/commit/05e48ffaa5acd97b0d74377f74cf1ba62dfc3357,,,[RELATED][?],[?] [Duplicate] [Giga commit],[DO NOT ANALYZE],[Duplicate] [Giga commit] [?],EXISTS,,,[REVIEW] [This is both in OK and RELATED],,,,,,,,,,edoko/AirKernel_NS_JBN,Ezekeel,,,edoko,
edoko,AirKernel_NS_JBN,"Revert ""Add power saving state DEEP IDLE version 2."" This reverts commit 05e48ffaa5acd97b0d74377f74cf1ba62dfc3357.",04/08/2012 07:51:44,,REVERT,https://github.com/edoko/AirKernel_NS_JBN/commit/190d4f4fed9d73ab55c714c8ceef4cbaf02e1c64,,,[FALSE-POSITIVE],[Revert] [Giga commit],[DO NOT ANALYZE],[Giga commit],EXISTS,"Revert ""Add power saving state DEEP IDLE version 2.""",,,,,,,,,,,,edoko/AirKernel_NS_JBN,edoko,,,edoko,
edoko,AirKernel_NS_JBN,Add power saving state DEEP IDLE version 2. Conflicts: arch/arm/mach-s5pv210/Kconfig drivers/misc/Makefile,04/08/2012 07:55:35,,DUPLICATE,https://github.com/edoko/AirKernel_NS_JBN/commit/ed03ffa8d17fe464c6fc215b126fe3b2b0cf3d6d,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/edoko/AirKernel_NS_JBN/commit/05e48ffaa5acd97b0d74377f74cf1ba62dfc3357] [original:RELATED],,[VERIFY] [https://github.com/edoko/AirKernel_NS_JBN/commit/05e48ffaa5acd97b0d74377f74cf1ba62dfc3357] [original:RELATED],EXISTS,,,,,,,,,,,,,edoko/AirKernel_NS_JBN,Ezekeel,,,edoko,
neilbrown,linux,"IIO: add iio driver for ITG3200 3-axis gyroscope. Each axis can be individually disabled to save power. Sample rate can be set. Appropriate clock is set automatically. No triggers implemented yet, so no streaming of data. Just read it from sysfs. Signed-off-by: NeilBrown <neilb@suse.de>",04/08/2012 12:17:42,,FALSE-POSITIVE,https://github.com/neilbrown/linux/commit/d77a53d247bc12a8928f63538dbaad27b1e9820a,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,neilbrown/linux,neilbrown,,,neilbrown,
neilbrown,linux,"IIO: add iio driver for ITG3200 3-axis gyroscope. Each axis can be individually disabled to save power. Sample rate can be set. Appropriate clock is set automatically. No triggers implemented yet, so no streaming of data. Just read it from sysfs. Signed-off-by: NeilBrown <neilb@suse.de>",04/08/2012 12:17:45,,DUPLICATE,https://github.com/neilbrown/linux/commit/03e811433b2e333050b1de0b7fe9d35adc8ce5c0,,,,,,,EXISTS,,,,,,,,,,,,,neilbrown/linux,neilbrown,,,neilbrown,
neilbrown,linux,"IIO: add iio driver for ITG3200 3-axis gyroscope. Each axis can be individually disabled to save power. Sample rate can be set. Appropriate clock is set automatically. No triggers implemented yet, so no streaming of data. Just read it from sysfs. Signed-off-by: NeilBrown <neilb@suse.de>",04/08/2012 12:18:21,,DUPLICATE,https://github.com/neilbrown/linux/commit/8879dc483a5f4dd3b79269310ee00872ee051967,,,,,,,EXISTS,,,,,,,,,,,,,neilbrown/linux,neilbrown,,,neilbrown,
barney-parker,Arduino-Countdown-Timer,"Interrupt and Power Saving Added interrupt driven wake-up functionality, and timed power-down Some general code clean-up",04/08/2012 15:11:02,,OK,https://github.com/barney-parker/Arduino-Countdown-Timer/commit/9178594298dbf216a241c7dbfd5ecd2889588133,,,[OK][Interruption],[OK] [Disable component] [Go to idle] [Interrupt based wakeup],[DO NOT ANALYZE],[Disable component] [Go to idle] [Interrupt based wakeup] [Interruption],EXISTS,[Added interrupt driven wake-up] [timed power-down],[power saving],[Go to idle] [Add go to idle timeout] [Disable LCD],[Add timeout] [Sub1:Go to low power mode],[Disable device],Multiple changes,Certain,Arduino,No,Application,Ino,"Interrupt and Power Saving Added interrupt driven wake-up functionality, and timed power-down",barney-parker/Arduino-Countdown-Timer,,[Timing out],,,Arduino application
cdebortoli,requiem_on_m13,Fix : Temperature and energy consumption.,05/08/2012 15:39:14,,FALSE-POSITIVE,https://github.com/cdebortoli/requiem_on_m13/commit/def0628df7fb9415da4c108d4f7bd79cdc8ce139,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,cdebortoli/requiem_on_m13,cdebortoli,,,cdebortoli,
mozilla-b2g,gaia,Merge pull request #3180 from evelynhung/issue-quicksetting-geolocation [QuickSettings] Turn off geolocation when in power saving mode,06/08/2012 08:29:51,,OK,https://github.com/mozilla-b2g/gaia/commit/0993b4f37131b17e14f07b8a84c630ace0824b4b,,,[OK][Disabling feature],[OK] [Disable component] [Disable component while in power saving],[DO NOT ANALYZE],[Disable component] [Disable component while in power saving] [Disabling feature],EXISTS,[Turn off geolocation when in power saving mode],[power saving],[Disable component] [Disable feaature while in power saving] [Disable geolocation while in power saving],[Disable feature],,,Certain,Firefox Gaia,No,Application,Javascript,Turn off geolocation when in power saving mode,mozilla-b2g/gaia,timdream,[Disabling feature/devices],,timdream,Application
mozilla-b2g,gaia,Merge pull request #3180 from evelynhung/issue-quicksetting-geolocation [QuickSettings] Turn off geolocation when in power saving mode,06/08/2012 08:31:01,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/0993b4f37131b17e14f07b8a84c630ace0824b4b,,,,,,,EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,timdream,,,timdream,
telefonicaid,gaia,Merge pull request #3180 from evelynhung/issue-quicksetting-geolocation [QuickSettings] Turn off geolocation when in power saving mode,06/08/2012 09:04:59,,DUPLICATE,https://github.com/telefonicaid/gaia/commit/0993b4f37131b17e14f07b8a84c630ace0824b4b,,,,,,,EXISTS,,,,,,,,,,,,,telefonicaid/gaia,timdream,,,timdream,
PyroMod,android_kernel_htc_msm8660,intellidemand: dynamic change of sampling rate based on screen on/off using early_suspend/late_resume drivers to 2x min_sampling rate while screen is off to reduce frequency transitions in hope to reduce power consumption further,06/08/2012 20:49:44,,NOT-FOUND,https://github.com/PyroMod/android_kernel_htc_msm8660/commit/34fab801c494dab223477090b54d258a9a1b4503,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,PyroMod/android_kernel_htc_msm8660,,,,,
pfriedel,FiveMilSpire,"Including some power savings modes. I doubt they amount to much, but I'm not using any of them, so why not.",07/08/2012 05:36:06,,OK,https://github.com/pfriedel/FiveMilSpire/commit/4c3652781307a60e6e2bbc5bce0ca5c53ad95c11,,,[OK][Disabling devices],[OK] [Disable component] [Enable power saving],[DO NOT ANALYZE],[Disable component] [Enable power saving] [Disabling devices],EXISTS,[Including some power savings modes],[power saving],[Disable adc] [Disable timer] [Disable usi],[Disable device],,Multiple changes,Uncertain,Arduino,No,Application,Ino,"Including some power savings modes. I doubt they amount to much, but I'm not using any of them, so why not.",pfriedel/FiveMilSpire,pfriedel,[Disabling feature/devices],,pfriedel,Arduino application
iyulaev,tacotime,Tweaked ViewThread and TimerThread so that they actually susped with wait() and notifyAll() when the BetweenLevelMenuActivity is entered. They get un-suspended afterwards. Should save power when the application goes out of focus on a users phone but remains running in the background.,09/08/2012 08:19:21,,OK,https://github.com/iyulaev/tacotime/commit/a07d7e043cf520f172b5dc8b9cc3aa211dad4465,,,[OK][Concurrent prog techniques],[OK] [Concurrent techniques] [Suspend threads] [Suspend threads when focus is lost],[DO NOT ANALYZE],[Concurrent techniques] [Suspend threads] [Suspend threads when focus is lost] [Concurrent prog techniques],EXISTS,[suspend thread between activities],[save power when the application goes out of focus but remains running in the background.],[Suspend threads] [Concurrent techniques] [Suspend threads when focus is lost],[Suspend threads] [Condition: focus lost],,,Uncertain should,Android,No,Application,Java,Should save power when the application goes out of focus on a users phone but remains running in the background.,iyulaev/tacotime,iyulaev,[Low power idling],[focus lost],iyulaev,Application
codler,Battery-Time-Remaining,Added link to open Energy Saver Preferences in menu,09/08/2012 13:17:27,,RELATED,https://github.com/codler/Battery-Time-Remaining/commit/e66ed726b79ef2865c17fc66785702b74c54207a,,,[RELATED] [Added power menu],[RELATED] [Added power menu],[RELATED] [Added power menu],[Added power menu],EXISTS,[Added link to open Energy Saver Preferences] [Add power saving menu option],,,,,,Certain,OSX,No,Application,ObjectiveC,,codler/Battery-Time-Remaining,,,,,Application
maximz,tacotime,Tweaked ViewThread and TimerThread so that they actually susped with wait() and notifyAll() when the BetweenLevelMenuActivity is entered. They get un-suspended afterwards. Should save power when the application goes out of focus on a users phone but remains running in the background.,10/08/2012 07:29:52,,DUPLICATE,https://github.com/maximz/tacotime/commit/a07d7e043cf520f172b5dc8b9cc3aa211dad4465,,,,,,,EXISTS,,,,,,,,,,,,,maximz/tacotime,iyulaev,,,iyulaev,
dorimanx,initramfs3,Tuned Govs to more agressive power save and more responce on screen on.,10/08/2012 20:01:24,,OK,https://github.com/dorimanx/initramfs3/commit/a8d84e287a9c27828577d940f66d6a1245706157,,,[OK][Scale CPU Freq],[OK] [Scale CPU frequency] [Configure governor] [Governor],[DO NOT ANALYZE],[Scale CPU frequency] [Configure governor] [Governor] [Scale CPU Freq],EXISTS,[Tuned Govs to more agressive power save] [config governor],[power saving],[Scale CPU frequency] [Configure governor] [Script] [Config],[DVFS] [Sub1: Governor tuning],,Multiple changes,Certain,Android,No,Libraries and Utilities,Shell,Tuned Govs to more agressive power save and more responce on screen on.,dorimanx/initramfs3,dorimanx,[Frequency and voltage scaling],,dorimanx,Script sbin/shell
TeamChopsticks,android_kernel_samsung_msm8660-common,msm: acpuclock-8x60: Optimize CPU voltages on 1.7GHz parts Hardware characterization shows that these parts can operate reliably at lower voltages than were previously used. Update the tables to take advantage of the power savings. CRs-Fixed: 366934 Signed-off-by: Matt Wagantall <mattw@codeaurora.org> (cherry picked from commit 3b492ababfdb1de872ad7386babd25da2cc09336) Change-Id: Icd0cbffb45040cdd99434b30c31a5d000a157af7 Signed-off-by: Gopal G Goberu <ggober@codeaurora.org>,12/08/2012 02:38:13,,NOT-FOUND,https://github.com/TeamChopsticks/android_kernel_samsung_msm8660-common/commit/872f5de50eedb71e9b6e0023aa9f73d0c6dd52cb,,,Voltage scaling,[NOT-FOUND],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamChopsticks/android_kernel_samsung_msm8660-common,,,,cyanogen,
byeonggonlee,lynx-jb,Add power saving state DEEP IDLE version 2.,12/08/2012 09:10:09,,DUPLICATE,https://github.com/byeonggonlee/lynx-jb/commit/48d3788ef65f701014aca2623abadd64cb5124ee,,,,,,,EXISTS,,,,,,,,,,,,,byeonggonlee/lynx-jb,Ezekeel,,,byeonggonlee,
barney-parker,Arduino-Countdown-Timer,Standalone V1.0 Working on standalone board Currently No Switches Not using power saving due to lack of switch for interrupt...,12/08/2012 14:29:04,,FALSE-POSITIVE,https://github.com/barney-parker/Arduino-Countdown-Timer/commit/f8995cecde6b76f40b1d9e93378727ce2766547d,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,barney-parker/Arduino-Countdown-Timer,,,,,
mathiasbynens,dotfiles,.osx: Drop the energy saver preferences,12/08/2012 19:43:15,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/mathiasbynens/dotfiles/commit/a94560921cafeaf028038c96d256d226f3992ff3,,,[RELATED] [Remove energy profile configuration],[RELATED] [Remove energy profile configuration],[RELATED] [Remove energy profile configuration],[Remove energy profile configuration],EXISTS,,,,,,,,,,,,,mathiasbynens/dotfiles,mathiasbynens,,,mathiasbynens,
cosmicdan,semc-kernel-msm7x30-cosmic,Intellidemand tweaks for better power savings,14/08/2012 09:22:24,,OK,https://github.com/cosmicdan/semc-kernel-msm7x30-cosmic/commit/abe69e7e60f3f82c3b8bd1fd34234ac75947dce6,,,[OK][Scale CPU Freq],[OK] [Scale CPU frequency] [Config CPU frequency scaling] [Android],[DO NOT ANALYZE],[Scale CPU frequency] [Config CPU frequency scaling] [Android] [Scale CPU Freq],EXISTS,[tweaks for better power savings] [config governor],[power saving],[Scale CPU frequency] [Config CPU frequency scaling] [Configure governor] [Script] [Config] ,[DVFS] [Sub1: Governor tuning],,Multiple changes,Certain,Android,No,Libraries and Utilities,"C,Defconfig",Intellidemand tweaks for better power savings,cosmicdan/semc-kernel-msm7x30-cosmic,,[Frequency and voltage scaling],,,Kernel arch
dorimanx,Dorimanx-SG2-I9100-Kernel,"rcu: Reduce cache-miss initialization latencies for large systems Commit #0209f649 (rcu: limit rcu_node leaf-level fanout) set an upper limit of 16 on the leaf-level fanout for the rcu_node tree. This was needed to reduce lock contention that was induced by the synchronization of scheduling-clock interrupts, which was in turn needed to improve energy efficiency for moderate-sized lightly loaded servers. However, reducing the leaf-level fanout means that there are more leaf-level rcu_node structures in the tree, which in turn means that RCU's grace-period initialization incurs more cache misses. This is not a problem on moderate-sized servers with only a few tens of CPUs, but becomes a major source of real-time latency spikes on systems with many hundreds of CPUs. In addition, the workloads running on these large systems tend to be CPU-bound, which eliminates the energy-efficiency advantages of synchronizing scheduling-clock interrupts. Therefore, these systems need maximal values for the rcu_node leaf-level fanout. This commit addresses this problem by introducing a new kernel parameter named RCU_FANOUT_LEAF that directly controls the leaf-level fanout. This parameter defaults to 16 to handle the common case of a moderate sized lightly loaded servers, but may be set higher on larger systems. Reported-by: Mike Galbraith <efault@gmx.de> Reported-by: Dimitri Sivanich <sivanich@sgi.com> Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>",15/08/2012 03:08:35,,RELATED,https://github.com/dorimanx/Dorimanx-SG2-I9100-Kernel/commit/9cb185b7e5d8e49f0725d4ca21e47ab7b7fdafea,,,[OK][Reduce cache miss],[OK] [Config] [Bug fix],[OK] [Bug fix],[Config] [Bug fix] [Reduce cache miss],EXISTS,,,[REVIEW],,,I think this is a related,,,,,,,dorimanx/Dorimanx-SG2-I9100-Kernel,paulmck,,,dorimanx,
mysmartgrid,msg-flukso,Some bugs in page 'On-site energy consumption' have been fixed.,15/08/2012 15:42:05,,FALSE-POSITIVE,https://github.com/mysmartgrid/msg-flukso/commit/30aaac9eb99f61613f1677b74cc154bb82072957,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,mysmartgrid/msg-flukso,,,,,
marcusant,Nyan-Tuna-JB,[IVAHD] Disable HWSUP mode and save power (Sundar Raman),17/08/2012 01:16:46,,DUPLICATE,https://github.com/marcusant/Nyan-Tuna-JB/commit/765f491f9356ab719d4d0308cf92a14528969637,,,,[VERIFIED] [https://github.com/ch33kybutt/kernel_cmplus_tuna/commit/342dd821bed948b15c40de7276094e6e011bd379],,[https://github.com/ch33kybutt/kernel_cmplus_tuna/commit/342dd821bed948b15c40de7276094e6e011bd379],EXISTS,,,,,,,,,,,,,marcusant/Nyan-Tuna-JB,marcusant,,,marcusant,
edoko,AirKernel_GN_JB,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,18/08/2012 08:13:24,,SOFT-DUPLICATE,https://github.com/edoko/AirKernel_GN_JB/commit/e458139e9e88d4cf9450842c2f21b4e5451faba0,,,[RELATED][SKIP IO],[RELATED] [Enable energy usage improvement] [Expose open/close events],[RELATED][SKIP IO],[Enable energy usage improvement] [Expose open/close events] [SKIP IO],EXISTS,,,,,,,,,,,,,edoko/AirKernel_GN_JB,dvdhrm,,,,
darkcube,samsung-kernel-victory,Add power saving state DEEP IDLE version 2.,19/08/2012 05:06:30,,NOT-FOUND,https://github.com/darkcube/samsung-kernel-victory/commit/439979ef07e27b8cf5002c662330fa715ee89333,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,darkcube/samsung-kernel-victory,,,,,
tlusk,samsung-kernel-victory,Add power saving state DEEP IDLE version 2. Change-Id: If7acbd4b06ff9c2a168ee363336db8b20b10a468,19/08/2012 05:53:21,,DUPLICATE,https://github.com/darkcube/samsung-kernel-victory/commit/b758e5ee9cc4522091adc1883950ae0883c43b95,https://github.com/tlusk/samsung-kernel-victory/commit/b758e5ee9cc4522091adc1883950ae0883c43b95,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/edoko/AirKernel_NS_JBN/commit/05e48ffaa5acd97b0d74377f74cf1ba62dfc3357] [original:RELATED],,[VERIFY] [https://github.com/edoko/AirKernel_NS_JBN/commit/05e48ffaa5acd97b0d74377f74cf1ba62dfc3357] [original:RELATED],EXISTS,,,,,,,,,,,,,tlusk/samsung-kernel-victory,Ezekeel,,,darkcube,
AOKP-SGS3,system_core,charger: suspend when not animating Suspend will save power (i.e. charge faster) by disabling unneeded devices such as the touch-sensitive keys on galaxysmtd. Change-Id: I9b2eae1af2e9687546af9dcb10ce1fcb4c1e1ed6,19/08/2012 06:09:07,,NOT-FOUND,https://github.com/AOKP-SGS3/system_core/commit/4ca14647eba97006d6c945b2a9fca1f58b14fee4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOKP-SGS3/system_core,,,,,
barney-parker,Arduino-Countdown-Timer,Circuit Diagram Updates Removed Frtizing diagram (didn't get on with it!) Added v0.1 and v0.2 jpg layouts Added 3 x displays to help debugging RTC issues... TODO: - Add 3 x momentary buttons - Add Batteries - Add Power Saving Features,19/08/2012 11:28:32,,FALSE-POSITIVE,https://github.com/barney-parker/Arduino-Countdown-Timer/commit/71d30ebfa5a0679c61039d9d7d8cc361d14a1e6f,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,barney-parker/Arduino-Countdown-Timer,,,,,
Wompi,robocode-bots,version 4.4 and major changes As you can see in the code changes this version got a huge change. The target is now averaged on the last heading changes and the bullet distance is back to 600. Stripped almost all energy save rules.,19/08/2012 21:18:27,,FALSE-POSITIVE,https://github.com/Wompi/robocode-bots/commit/0001b3e81830cfd33c0d2989a9309922dfd2059b,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,Wompi/robocode-bots,Wompi,,,Wompi,
tacowars,watch-my-back,fixed status LED. added some power saving commands. disabled softserial trace,21/08/2012 01:24:53,,OK,https://github.com/tacowars/watch-my-back/commit/0cc3759206cfec4cfb2780112efb789c1e9ecdda,,,[OK][Disabling devices],[OK] [Disable component] [Set sleep mode],[DO NOT ANALYZE],[Disable component] [Set sleep mode] [Disabling devices],EXISTS,[added some power saving commands],[power saving],[Configure lower power mode] [Power down on sleep] [Disable component] [Disable device],[Improve low power mode config],[Disable device],Multiple changes,Certain,MCU,No,Application,C,added some power saving commands,tacowars/watch-my-back,tacowars,[Low power idling],,tacowars,MCU
jpallister,lowpower-framework,Added plotting script for the first fractional factorial runs Script plots barcharts of the time and energy consumption for each option,21/08/2012 14:13:48,,FALSE-POSITIVE,https://github.com/jpallister/lowpower-framework/commit/89acfaf9afdbd768efb6bf01c3a8ea1cb44e25b8,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Energy consumption plot] [Add script],[FALSE-POSITIVE],[Energy consumption plot] [Add script],EXISTS,,,,,,,,,,,,,jpallister/lowpower-framework,jpallister,,,jpallister,
phette23,dotfiles,.osx: Add energy saver preferences,21/08/2012 17:48:28,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/phette23/dotfiles/commit/41431ac718d582462b244229c55b05f365e28602,,,[RELATED] [Add energy profile configuration],[RELATED] [Add energy profile configuration],[RELATED] [Added power menu],[Add energy profile configuration] [Added power menu],EXISTS,,,,,,,,,,,,,phette23/dotfiles,mathiasbynens,,,mathiasbynens,
JBX,semc-kernel-msm7x30,Intellidemand - better power savings,22/08/2012 01:25:36,,NOT-FOUND,https://github.com/JBX/semc-kernel-msm7x30/commit/7eee292c748f5e9e073df92f98368f129aae298c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JBX/semc-kernel-msm7x30,,,,,
fuss132,android_kernel_samsung_n1,arm: tegra: manage graphics clock Provides clock information for camera use cases to achieve optimal power saving. BUG 813159 Reviewed-on: http://git-master/r/31237 (cherry picked from commit 8180aabdb727b171ae9c49fbec991b3983ec87c8) Change-Id: I19e99d39ff00bf0619d314854ce1b2fff670a8ff Reviewed-on: http://git-master/r/37955 Reviewed-by: Niket Sirsi <nsirsi@nvidia.com> Tested-by: Niket Sirsi <nsirsi@nvidia.com>,26/08/2012 11:57:17,,OK,https://github.com/fuss132/android_kernel_samsung_n1/commit/4a23c2b0886bace7236c63c680e40be1799d634a,,,[OK][?],[OK] [Limit frequency] [Android],[DO NOT ANALYZE],[Limit frequency] [Android] [?],EXISTS,[manage graphics clock] [Provides clock information for camera use cases],[optimal power saving],[limit frequency],[DVFS],,,Certain,Android,BUG 813159,OS,C,arm: tegra: manage graphics clock Provides clock information for camera use cases to achieve optimal power saving,fuss132/android_kernel_samsung_n1,,[Frequency and voltage scaling],,fuss132,Kernel arch
nizardigital,android_device_a10,fix power consumption,27/08/2012 08:13:39,,NOT-FOUND,https://github.com/nizardigital/android_device_a10/commit/a0b4bc6f102ab8d3eb44756e3b556850a5d2a4b6,,,[NOT-FOUND],[NOT-FOUND],[NOT-FOUND],,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,nizardigital/android_device_a10,,,,,
radekp,qtmoko,bt - always start with bluetooth off On GTA04 this is needed to save power in suspend. Otherwise you would have to manually turn it off. Generaly it will save power even when not in suspend. In most cases users want it off. Maybe we could later implement some config file where it could remember last state before boot.,28/08/2012 11:12:16,,OK,https://github.com/radekp/qtmoko/commit/43da1afafc80e269a3223f46f49511d071e6cc06,,,[OK][Disabling devices],[OK] [Disable component] [Disable component on startup],[DO NOT ANALYZE],[Disable component] [Disable component on startup] [Disabling devices],EXISTS,[always start with bluetooth off],[on by default so needed to save power in suspend],[Disable component by default] [Disable component] [Disable device] [Disable component on startup],[Disable device] [Sub1: By default],,,Certain,QT !,No,Libraries and Utilities,C++,always start with bluetooth off On GTA04 this is needed to save power in suspend,radekp/qtmoko,radekp,[Miscellaneous],,radekp,Application platform !
edoko,AirKernel_NS_JBN,"Revert ""Add power saving state DEEP IDLE version 2."" This reverts commit ed03ffa8d17fe464c6fc215b126fe3b2b0cf3d6d. Conflicts: drivers/misc/Makefile",29/08/2012 16:04:51,,DUPLICATE,https://github.com/edoko/AirKernel_NS_JBN/commit/5f536cfd54c07da04f4d8b1056d849e4a730c357,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/edoko/AirKernel_NS_JBN/commit/190d4f4fed9d73ab55c714c8ceef4cbaf02e1c64] [original:REVERT],,[VERIFY] [https://github.com/edoko/AirKernel_NS_JBN/commit/190d4f4fed9d73ab55c714c8ceef4cbaf02e1c64] [original:REVERT],EXISTS,,,,,,,,,,,,,edoko/AirKernel_NS_JBN,edoko,,,edoko,
haiku,haiku,"x86: Initialize IA32_MSR_ENERGY_PERF_BIAS The lowest 4 bits of the MSR serves as a hint to the hardware to favor performance or energy saving. 0 means a hint preference for highest performance while 15 corresponds to the maximum energy savings. A value of 7 translates into a hint to balance performance with energy savings. The default reset value of the MSR is 0. If BIOS doesn't intialize the MSR, the hardware will run in performance state. This patch initialize the MSR with value of 7 for balance between performance and energy savings Signed-off-by: Fredrik Holmqvist <fredrik.holmqvist@gmail.com>",29/08/2012 20:38:07,,DUPLICATE,https://github.com/haiku/haiku/commit/19187c464b4598774f731cd015c4fbc893c25348,,,[OK][CONF][TRADES PERFORMANCE AND ENERGY],[OK] [Config] [Configure power saving],[OK] [Configure power saving],[Config] [Configure power saving] [CONF] [TRADES PERFORMANCE AND ENERGY],EXISTS,,,[Configure power saving],,,[169] Trade performance for power saving,Certain,Haiku,No,Kernel,C++,"x86: Initialize IA32_MSR_ENERGY_PERF_BIAS The lowest 4 bits of the MSR serves as a hint to the hardware to favor performance or energy saving. 0 means a hint preference for highest performance while 15 corresponds to the maximum energy savings. A value of 7 translates into a hint to balance performance with energy savings. The default reset value of the MSR is 0. If BIOS doesn't intialize the MSR, the hardware will run in performance state. This patch initialize the MSR with value of 7 for balance between performance and energy savings",haiku/haiku,yongcong,,,tqh,Kernel arch
movsim,movsim,"Bulk of additions concerning thesis (Studienarbeit) - support for totalVehicleElectricEnergyUsed, new field to separate fuel from energy consumption, variable message sign for all simulations starting with [routing], vehicle color mode EXIT_COLOR for all simulations starting with [ramp_metering] or [routing] - NOTE electric engine properties cannot yet be read from xml file",31/08/2012 16:06:18,,FALSE-POSITIVE,https://github.com/movsim/movsim/commit/df94c98b6307ecbe09c96fda838a06ddd60225b2,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,movsim/movsim,Tracii,,,Tracii,
xbmc,xbmc,Merge pull request #1326 from DDDamian/ExternalPlayer [AE] Add AE::Suspend()/Resume() for external players and power saving,01/09/2012 05:42:20,,UNABLE-TO-CATEGORIZE,https://github.com/xbmc/xbmc/commit/ef7579cbc0824c9a67811e8baf41b5969e0061d8,,,[OK] [Go to idle],[OK] [Go to idle],[DO NOT ANALYZE],[Go to idle],EXISTS,[Add AE::Suspend()/Resume() for external players and power saving],[power saving],[REVIEW] [Add suspend function] [Go to idle],?,,,Certain,XBMC !,No,Application,C++,Add AE::Suspend()/Resume() for external players and power saving,xbmc/xbmc,DDDamian,?,,DDDamian,Application
fiveohhh,tempTransmitter,"removed dead code and debug interval Didn't think debug interval was necessary since we blast it out all the time. With the server determining if enough time has passed, it will still only get logged at higher intervals. Might want to address this again if we are trying to get low power consumption.",02/09/2012 03:07:46,,FALSE-POSITIVE,https://github.com/fiveohhh/tempTransmitter/commit/93a33b64f2ffd07ef523b893b0b74a719491f310,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,fiveohhh/tempTransmitter,fiveohhh,,,fiveohhh,
thalamus,android-kernel,"idle2: v0.380 Post 0.370 suspend bugfix (revert that before applying this) Exit latencies back to measured values Statistics slimmed down significantly Disable switch added for DerTeufel1980 Couple of tests removed which were never true or which made the state bail for no reason. Variable renames for consistency. Use L2 cache OFF for C2 and C3 state. Resolves external abort issue and should save more juice. As we were flushing it fully anyway, it makes sense to turn it off to save power. It seems that the retention doesn't work particularly well and the L2 goes corrupt. Use TOP memory retention for C2, should save a bit more juice. Adjust wakeup sources. Refactor s5p_enter_idle_deep() to remove goto jumps. Use disable_hlt() when PM_SUSPEND_PREPARE is notified. Code cleanups of unused stuff.",03/09/2012 00:15:42,,NOT-FOUND,https://github.com/thalamus/android-kernel/commit/840d3afc0179203f9cb2fd53f0d944df311a721d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,thalamus/android-kernel,,,,,
aokp-sgt7,packages_apps_ROMControl,"ROMControl mass update! ~~~~~~~~~~~~~~~~~~~~~~~ - removed Tablet Tweaks, all options now live in their relevant sections :: * all performance related (kernel tweaks, etc) live in Performance * capacitive button control lives in ""Navigation Buttons"" (even if its not hardware related, it fits) * large recent thumbnails / screenshot sounds live in General UI * hide statusbar / notification peek / mirror statusbar live in Statusbar - General - enabled Power Saver options (be wary of these, they may cause issues... especially on CDMA tablets.) - updated ROMControl logo to ThaPhlash's AOKP logo (same as JB builds) - updated About section to show AOKP SGT7 website, facebook, twitter and google+ (features / SGT7 TE4M source removed due to space) - rearranged some sections / items around in to make ROMControl neater and flow better (IMO). - disabled notification icon transparency - its broken, and its not worth fixing (spent enough time on it already). - disabled menu location in navigation buttons - not needed / doesn't work on tablets. ... and probably more i have forgotten (been working on it for a few days now)",03/09/2012 14:38:04,,RELATED,https://github.com/aokp-sgt7/packages_apps_ROMControl/commit/229ece84f5de380ef4f78cd88130b9502e8ee2cb,,,[RELATED][Add power saving option][Android],[RELATED] [Add power saving option],[DO NOT ANALYZE],[Add power saving option] [Android],EXISTS,,,,,,,,,,,,,aokp-sgt7/packages_apps_ROMControl,,,,,
VanillaAOSP,samsung_kernel,"idle2: v0.380 Post 0.370 suspend bugfix (revert that before applying this) Exit latencies back to measured values Statistics slimmed down significantly Disable switch added for DerTeufel1980 Couple of tests removed which were never true or which made the state bail for no reason. Variable renames for consistency. Use L2 cache OFF for C2 and C3 state. Resolves external abort issue and should save more juice. As we were flushing it fully anyway, it makes sense to turn it off to save power. It seems that the retention doesn't work particularly well and the L2 goes corrupt. Use TOP memory retention for C2, should save a bit more juice. Adjust wakeup sources. Refactor s5p_enter_idle_deep() to remove goto jumps. Use disable_hlt() when PM_SUSPEND_PREPARE is notified. Code cleanups of unused stuff.",04/09/2012 00:05:55,,NOT-FOUND,https://github.com/VanillaAOSP/samsung_kernel/commit/3b5dfa72559722f610e48cf648cc98f2debab11d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,VanillaAOSP/samsung_kernel,,,,,
TeamChopsticks,android_kernel_samsung_msm8660-common,"cpufreq: boost the sampling rate on touch event For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate. Also, change sampling down factor proportional to the sampling rate. Change-Id: I111b1cf3b8ed133347149afc34d329d0384ecfcb Signed-off-by: Narayanan Gopalakrishnan <nargop@codeaurora.org> Conflicts: drivers/cpufreq/cpufreq_ondemand.c",04/09/2012 08:16:08,,NOT-FOUND,https://github.com/TeamChopsticks/android_kernel_samsung_msm8660-common/commit/ffbc496c84f10ba54fc90dda7e1d21f9d6782d0a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamChopsticks/android_kernel_samsung_msm8660-common,,,,,
TeamChopsticks,android_kernel_samsung_msm8660-common,"cpufreq: boost the sampling rate on touch event For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate. Also, change sampling down factor proportional to the sampling rate. Change-Id: I111b1cf3b8ed133347149afc34d329d0384ecfcb Signed-off-by: Narayanan Gopalakrishnan <nargop@codeaurora.org> Conflicts: drivers/cpufreq/cpufreq_ondemand.c",04/09/2012 08:20:27,,NOT-FOUND,https://github.com/TeamChopsticks/android_kernel_samsung_msm8660-common/commit/9cac01449c8af09da9b1d18cf3f0a3b99ca56e3b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamChopsticks/android_kernel_samsung_msm8660-common,,,,,
esitarski,CrossMgr,Added performance improvements to reduce power consumption.,06/09/2012 14:36:14,,OK,https://github.com/esitarski/CrossMgr/commit/9f87379b1a2a6d7421a0fc1efb102e08b22cb04c,,,[OK][Avoid method calls],[OK] [Improve performance],[DO NOT ANALYZE],[Improve performance] [Avoid method calls],EXISTS,[Added performance improvements],[reduce power consumption],[REVIEW] [Improve performance] [Avoid method calls] [Use tuples instead lists],?,,performance improvements to reduce power consumption,Certain,Python !,No,Application,Python,Added performance improvements to reduce power consumption.,esitarski/CrossMgr,esitarski,[Miscellaneous],,esitarski,Application
AndroidDeveloperAlliance,AffinityTUNA,"Add all sorts of combined patch sets to add newer omap power save features, clock features, i/o features, clear all wakeup sources when entering to low power state.",07/09/2012 01:29:14,,NOT-FOUND,https://github.com/AndroidDeveloperAlliance/AffinityTUNA/commit/a4229ac2069c96c62fc4fbce18b437658723dfd6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AndroidDeveloperAlliance/AffinityTUNA,,,,,
VanillaAOSP,samsung_kernel,"idle2: v0.380 Post 0.370 suspend bugfix (revert that before applying this) Exit latencies back to measured values Statistics slimmed down significantly Disable switch added for DerTeufel1980 Couple of tests removed which were never true or which made the state bail for no reason. Variable renames for consistency. Use L2 cache OFF for C2 and C3 state. Resolves external abort issue and should save more juice. As we were flushing it fully anyway, it makes sense to turn it off to save power. It seems that the retention doesn't work particularly well and the L2 goes corrupt. Use TOP memory retention for C2, should save a bit more juice. Adjust wakeup sources. Refactor s5p_enter_idle_deep() to remove goto jumps. Use disable_hlt() when PM_SUSPEND_PREPARE is notified. Code cleanups of unused stuff.",07/09/2012 20:56:08,,NOT-FOUND,https://github.com/VanillaAOSP/samsung_kernel/commit/0c2622188e79504edf1cd3eb03f30f883c20139d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,VanillaAOSP/samsung_kernel,,,,,
INBASD,Solar-Power-Project,"Big update the InsolationCalculation class Now has the method ""Calculate"" which accepts cloud cover, energy usage, energy cost, tarrif, solar system cost, latitude, solar system efficiency and panel area. the calculate class updates variables for yearly and total energy generation, yearly and total energy savings, return on investment after the simulation period, and the year at which the system will break even given these values.",09/09/2012 01:29:55,,FALSE-POSITIVE,https://github.com/INBASD/Solar-Power-Project/commit/6c8588c77f542b86e681bf5783b6b7c01f3e2109,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,INBASD/Solar-Power-Project,INBASD,,,INBASD,
hnl,DASH,APDS970x power consumption APDS-9700/APDS-9702 only use 2mA and not 20mA. APDS-9700 Datasheet: http://www.avagotech.com/docs/AV02-0893EN APDS-9702 Datasheet: http://www.avagotech.com/docs/AV02-2238EN Signed-off-by: Henning Nielsen Lund <hnl_dk@amigaos.dk>,09/09/2012 13:58:48,,FALSE-POSITIVE,https://github.com/hnl/DASH/commit/ff95c5ea1c2e437cd2f7c593491742d464ada60a,,,[OK][?],[OK] [Reduce amperage] [?],[DO NOT ANALYZE],[Reduce amperage] [?],EXISTS,,,,,,,,Android,,,,,hnl/DASH,hnl,,,hnl,
sonyericssondev,DASH,APDS970x power consumption APDS-9700/APDS-9702 only use 2mA and not 20mA. APDS-9700 Datasheet: http://www.avagotech.com/docs/AV02-0893EN APDS-9702 Datasheet: http://www.avagotech.com/docs/AV02-2238EN Signed-off-by: Henning Nielsen Lund <hnl_dk@amigaos.dk>,10/09/2012 11:13:06,,NOT-FOUND,https://github.com/sonyericssondev/DASH/commit/ff95c5ea1c2e437cd2f7c593491742d464ada60a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,sonyericssondev/DASH,,,,,
abourdon,powerapi-akka,"- 1st implementations of disk monitoring: - sensor-disk-api, which defines disk sensor types - sensor-disk-proc, which gather all ridden/written bytes by a process - formula-disk-api, which defined disk formula types - formula-disk-single, which compute the disk energy consumption by a process, in taking into accout only the primary physical disk - Disable sensor-cpu-sigar due to a lack of libraries - Downgrade to Scala 2.9.1 due to incompatibilities with the existing libraries - Cosmetic",10/09/2012 23:42:01,,FALSE-POSITIVE,https://github.com/abourdon/powerapi-akka/commit/21a826f28c89dd976517d19bbc754b5f442c1c14,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Disk energy computation] [Too big],[FALSE-POSIVITE],[Disk energy computation] [Too big],EXISTS,,,,,,,,,,,,,abourdon/powerapi-akka,,,,,
scverhagen,htc-kernel-doubleshot,cpufreq/ondemand: add early suspend drivers to adjust cpu sampling rates screen off: 6 * min sampling rate to reduce power consumption screen on: normal sampling rate set by init,11/09/2012 02:41:03,,OK,https://github.com/scverhagen/htc-kernel-doubleshot/commit/7b7bbdb3afeba939a3a51ac8b8dc6d3ec9e28806,,,[OK][Avoid polling],[OK] [Reduce sampling rate] [Reduce polling] [Reduce sampling rate on screen off] [On screen off],[DO NOT ANALYZE],[Reduce sampling rate] [Reduce polling] [Reduce sampling rate on screen off] [On screen off] [Avoid polling],EXISTS,[add early suspend drivers screen off: 6 * min sampling rate] [improve governor],[reduce power consumption],[Power saving action on screen off] [Reduce sampling rate] [Reduce sampling rate on screen off] ,[DVFS] [Sub1: Governor tuning],,Governor,Certain,Android,No,OS,C,screen off: 6 * min sampling rate to reduce power consumption,scverhagen/htc-kernel-doubleshot,faux123,[Frequency and voltage scaling],,,Driver cpufreq
dschuermann,apg,"completly new PasswordCacheService (more energy efficient), reworked Password dialogs",11/09/2012 17:57:08,,NOT-FOUND,https://github.com/dschuermann/apg/commit/4b8400685a62afa0f4cb21940e9583d21886535b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dschuermann/apg,,,,,
CyanogenMod,android_kernel_samsung_d2,"msm: smp: Remove WFE/SEV from secondary core bootup During the cold boot path once the secondary core is released out of reset we keep looping for the pen release variable. The wfe+sev in this path are just unnecessary as they provide negligible power savings, and the latency cost is not worth it. During the hotplug path the secondary core will be in wfi and only an interrupt will be able to bring the core out. Removing the wfe effectively lowers the hotplug latency. CRs-Fixed: 372035 Change-Id: Ife39339ec09181a4ca3cd3755733662bd8842c0c Signed-off-by: Taniya Das <tdas@codeaurora.org>",12/09/2012 02:13:55,,TRADEOFF,https://github.com/CyanogenMod/android_kernel_samsung_d2/commit/0d5bf57679c750035595a65a155aa0660e909b23,,,[TRADE-OFF],[TRADEOFF],[DO NOT ANALYZE],,EXISTS,[Remove wfe/sev],[Reduce latency],,,,,Certain,Android,CRs-Fixed: 372035,Kernel,"C,Assembly","During the cold boot path once the secondary core is released out of reset we keep looping for the pen release variable. The wfe+sev in this path are just unnecessary as they provide negligible power savings, and the latency cost is not worth it. During the hotplug path the secondary core will be in wfi and only an interrupt will be able to bring the core out. Removing the wfe effectively lowers the hotplug latency.",CyanogenMod/android_kernel_samsung_d2,,Responsiveness,,cyanogen,Kernel arch
ToxMod,android_system_core,charger: suspend when not animating Suspend will save power (i.e. charge faster) by disabling unneeded devices such as the touch-sensitive keys on galaxysmtd. Change-Id: I9b2eae1af2e9687546af9dcb10ce1fcb4c1e1ed6,15/09/2012 06:15:49,,NOT-FOUND,https://github.com/ToxMod/android_system_core/commit/33b3747d52ecdf5e7d4d6d0beb936f690db0318c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ToxMod/android_system_core,,,,,
hacklab-jkl,elovalo,Add power saving functions Currently it pulls PS_ON down which makes TLC5940 to shutdown but AVR doesn't yet go to power save mode. This makes most of the power saving. Related to #34 and #15.,15/09/2012 21:27:37,,NOT-FOUND,https://github.com/hacklab-jkl/elovalo/commit/388f23a0591284f9316c62614853d58898b4fc88,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,hacklab-jkl/elovalo,,,,,
esmil,msp3n1s,oneslave: set unused pins high to save power,15/09/2012 22:46:45,,OK,https://github.com/esmil/msp3n1s/commit/53781d72e339137113b9fea946a1acaa6a7176e7,,,[OK][?],[OK] [Set pin] [Hardware],[DO NOT ANALYZE],[Set pin] [Hardware] [?],EXISTS,[set unused pins high],[power saving],[Set pin] [Set pins high],[Pin configuration],,Hardware,Certain,MCU,No,Application,C,oneslave: set unused pins high to save power,esmil/msp3n1s,esmil,[Pin management],,esmil,Embedded application
blackoutinn372,BlackoutSolarCalculator,"changed layout, moved power consumption estimation, monthly generation implemented anonymous asyccall",17/09/2012 14:49:24,,FALSE-POSITIVE,https://github.com/blackoutinn372/BlackoutSolarCalculator/commit/a2aa081657c3ad51bafd472550a7981fc963b4d8,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],EXISTS,,,,,,,,,,,,,blackoutinn372/BlackoutSolarCalculator,sensmile,,,sensmile,
Joelz9614,BAMF_android_kernel_htc_msm8660,"msm: kgsl: Collect a sample only if GPU is active If the device is not in active state, collecting a sample is not necessary and will cause frequent wake-ups, resulting in higher power consumption. Change-Id: Icb4f82b1300cab3b4cc4ed17117a92725a5a11d4 Signed-off-by: Lynus Vaz <lvaz@codeaurora.org>",18/09/2012 06:23:26,,NOT-FOUND,https://github.com/Joelz9614/BAMF_android_kernel_htc_msm8660/commit/a11854387bb6f03ae558f9366a006afdd4083f40,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Joelz9614/BAMF_android_kernel_htc_msm8660,,,,,
freebsd,freebsd,"Implement my first cut at filtered frames in aggregation sessions. The hardware can optionally ""filter"" frames if successive transmissions to a given node (ie, ""entry in the keycache"") fail. That way the hardware can implement a kind of early abort of all the other frames queued to that destination, rather than simply trying to TX each frame to that destination (and failing.) The background: * If a frame comes back as being filtered, the hardware didn't try to TX it (or it was outside the TX burst opportunity.) So, take it as a hint that some (but not all, see below) frames to the destination may be filtered. * If the CLRDMASK bit is set in a TX descriptor, the ""filter to this destination"" bit in the keycache entry is cleared and TX to that host will be unconditionally retried. * Right now everything has the CLRDMASK bit set, so filtered frames tend to be aggregates and frames that fall outside of the WME burst window. It was a bit worse in the past as I had messed up the TX flags and CLRDMASK wasn't being set on aggregate frames. The annoying bits: * It's easy (ish) to do for aggregate session frames - firstly, they can be retried in any order as long as they're within the BAW, and there's already a bunch of infrastructure tracking how many frames the TID has queued to the hardware (tid->hwq_depth.) However, for frames that bypassed the software queue, hwq_depth doesn't get incremented. I'll fix that in a subsequent commit. * For non-aggregate session frames, the only retries that can occur are ones for sequence numbers that hvaen't successfully been TXed yet. Since there's no re-ordering going on in non-aggregate sessions, if any subsequent seqno frames make it out, any filtered frames before that seqno need to be dropped. Hence why this initially is just for aggregate session frames. * Since there may be intermediary frames to the destination that have CLRDMASK set - for example, any directly dispatched management frames to that destination - it's possible that there will be some filtered frames followed up by some non filtered frames. Thus, it can't be assumed that once you see a filtered frame for the given destination node, all subsequent frames for all TIDs will be filtered. Ok, with that in mind: * Create a per-TID filtered frame queue for frames that the hardware returns as filtered. * Track filtered frames per-tid, rather than per-node. It just makes the locking much easier. * When a filtered frame appears in the completion function, the node transitions to ""filtered"", and all subsequent completed error frames (filtered or otherwise) are put on the filtered frame queue. The TID is paused once (during the transition from non-filtered to filtered). * If a filtered frame retry count exceeds SWMAX_RETRIES, a BAR should be sent. * Once all the frames queued to the hardware for the given filtered frame TID, transition back from filtered frame to non-filtered frame, which means pre-pending all the filtered frames onto the head of the software queue, clearing the filtered frame state and unpausing the TID. Things get quite hairy around handling completion (aggr, non-aggr, norm, direct-dispatched frames to a hardware queue); whether it's an ""error"", ""cleanup"" or ""BAR"" state as well as filtered, which order to do things in (eg do filtered BEFORE checking for BAR, as the filter completion may be needed to actually transmit a BAR frame.) This work has definitely reminded me that I have to tidy up all the locking and remove some of the ridiculous lock/unlock/lock/unlock going on in the completion functions. It's also reminded me that I should really split out TID versus hardware TXQ locking, even if the underlying locking is still the destination hardware TXQ. Finally, this is all pre-requisite for working on AP mode power save support (PS-POLL, uAPSD) as well as improving performance to misbehaving nodes (as they can transition into filter mode, stopping any TX until everything has caught up.) Finally (ish) - this should also be done for non-aggregate sessions as there are still plenty of laptops and mobile devices that don't speak 802.11n but do wish for stable, useful power save AP support where packets aren't simply dropped. This requires software retransmission for non-aggregate sessions to be implemented, which includes the caveats I've mentioned above. Finally finally - this doesn't yet do anything about the CLRDMASK bit in the TX descriptor. That's still unconditionally set to 1. I'll debug the current work (mostly ensuring I haven't busted up the hairy transitions between BAR, filtered, error (all frames in an aggregate failing) and cleanup (when transitioning from aggregation -> non-aggregation.)) Finally finally finally - this is all original work by yours truely, rather than ported from the Atheros internal driver codebase or Linux ath9k. Tested: * AR9280, AR5416 in STA mode * AR9280, AR9130 in hostap mode * Lots and lots of iperf testing in very marginal and non-marginal conditions, complete with inducing filtered frames + BAR TX conditions.",18/09/2012 10:19:59,,NOT-FOUND,https://github.com/freebsd/freebsd/commit/eae277f7181ac71efacbf700af10ddc7a01e3e6d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,freebsd/freebsd,,,,,
freebsd,freebsd-head,"Implement my first cut at filtered frames in aggregation sessions. The hardware can optionally ""filter"" frames if successive transmissions to a given node (ie, ""entry in the keycache"") fail. That way the hardware can implement a kind of early abort of all the other frames queued to that destination, rather than simply trying to TX each frame to that destination (and failing.) The background: * If a frame comes back as being filtered, the hardware didn't try to TX it (or it was outside the TX burst opportunity.) So, take it as a hint that some (but not all, see below) frames to the destination may be filtered. * If the CLRDMASK bit is set in a TX descriptor, the ""filter to this destination"" bit in the keycache entry is cleared and TX to that host will be unconditionally retried. * Right now everything has the CLRDMASK bit set, so filtered frames tend to be aggregates and frames that fall outside of the WME burst window. It was a bit worse in the past as I had messed up the TX flags and CLRDMASK wasn't being set on aggregate frames. The annoying bits: * It's easy (ish) to do for aggregate session frames - firstly, they can be retried in any order as long as they're within the BAW, and there's already a bunch of infrastructure tracking how many frames the TID has queued to the hardware (tid->hwq_depth.) However, for frames that bypassed the software queue, hwq_depth doesn't get incremented. I'll fix that in a subsequent commit. * For non-aggregate session frames, the only retries that can occur are ones for sequence numbers that hvaen't successfully been TXed yet. Since there's no re-ordering going on in non-aggregate sessions, if any subsequent seqno frames make it out, any filtered frames before that seqno need to be dropped. Hence why this initially is just for aggregate session frames. * Since there may be intermediary frames to the destination that have CLRDMASK set - for example, any directly dispatched management frames to that destination - it's possible that there will be some filtered frames followed up by some non filtered frames. Thus, it can't be assumed that once you see a filtered frame for the given destination node, all subsequent frames for all TIDs will be filtered. Ok, with that in mind: * Create a per-TID filtered frame queue for frames that the hardware returns as filtered. * Track filtered frames per-tid, rather than per-node. It just makes the locking much easier. * When a filtered frame appears in the completion function, the node transitions to ""filtered"", and all subsequent completed error frames (filtered or otherwise) are put on the filtered frame queue. The TID is paused once (during the transition from non-filtered to filtered). * If a filtered frame retry count exceeds SWMAX_RETRIES, a BAR should be sent. * Once all the frames queued to the hardware for the given filtered frame TID, transition back from filtered frame to non-filtered frame, which means pre-pending all the filtered frames onto the head of the software queue, clearing the filtered frame state and unpausing the TID. Things get quite hairy around handling completion (aggr, non-aggr, norm, direct-dispatched frames to a hardware queue); whether it's an ""error"", ""cleanup"" or ""BAR"" state as well as filtered, which order to do things in (eg do filtered BEFORE checking for BAR, as the filter completion may be needed to actually transmit a BAR frame.) This work has definitely reminded me that I have to tidy up all the locking and remove some of the ridiculous lock/unlock/lock/unlock going on in the completion functions. It's also reminded me that I should really split out TID versus hardware TXQ locking, even if the underlying locking is still the destination hardware TXQ. Finally, this is all pre-requisite for working on AP mode power save support (PS-POLL, uAPSD) as well as improving performance to misbehaving nodes (as they can transition into filter mode, stopping any TX until everything has caught up.) Finally (ish) - this should also be done for non-aggregate sessions as there are still plenty of laptops and mobile devices that don't speak 802.11n but do wish for stable, useful power save AP support where packets aren't simply dropped. This requires software retransmission for non-aggregate sessions to be implemented, which includes the caveats I've mentioned above. Finally finally - this doesn't yet do anything about the CLRDMASK bit in the TX descriptor. That's still unconditionally set to 1. I'll debug the current work (mostly ensuring I haven't busted up the hairy transitions between BAR, filtered, error (all frames in an aggregate failing) and cleanup (when transitioning from aggregation -> non-aggregation.)) Finally finally finally - this is all original work by yours truely, rather than ported from the Atheros internal driver codebase or Linux ath9k. Tested: * AR9280, AR5416 in STA mode * AR9280, AR9130 in hostap mode * Lots and lots of iperf testing in very marginal and non-marginal conditions, complete with inducing filtered frames + BAR TX conditions. git-svn-id: svn+ssh://svn.freebsd.org/base/head@240639 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",18/09/2012 10:21:29,,NOT-FOUND,https://github.com/freebsd/freebsd-head/commit/87bed85cccb457178233291d5199cfe21f1a52da,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,freebsd/freebsd-head,,,,,
freebsd,freebsd,"Implement my first cut at filtered frames in aggregation sessions. The hardware can optionally ""filter"" frames if successive transmissions to a given node (ie, ""entry in the keycache"") fail. That way the hardware can implement a kind of early abort of all the other frames queued to that destination, rather than simply trying to TX each frame to that destination (and failing.) The background: * If a frame comes back as being filtered, the hardware didn't try to TX it (or it was outside the TX burst opportunity.) So, take it as a hint that some (but not all, see below) frames to the destination may be filtered. * If the CLRDMASK bit is set in a TX descriptor, the ""filter to this destination"" bit in the keycache entry is cleared and TX to that host will be unconditionally retried. * Right now everything has the CLRDMASK bit set, so filtered frames tend to be aggregates and frames that fall outside of the WME burst window. It was a bit worse in the past as I had messed up the TX flags and CLRDMASK wasn't being set on aggregate frames. The annoying bits: * It's easy (ish) to do for aggregate session frames - firstly, they can be retried in any order as long as they're within the BAW, and there's already a bunch of infrastructure tracking how many frames the TID has queued to the hardware (tid->hwq_depth.) However, for frames that bypassed the software queue, hwq_depth doesn't get incremented. I'll fix that in a subsequent commit. * For non-aggregate session frames, the only retries that can occur are ones for sequence numbers that hvaen't successfully been TXed yet. Since there's no re-ordering going on in non-aggregate sessions, if any subsequent seqno frames make it out, any filtered frames before that seqno need to be dropped. Hence why this initially is just for aggregate session frames. * Since there may be intermediary frames to the destination that have CLRDMASK set - for example, any directly dispatched management frames to that destination - it's possible that there will be some filtered frames followed up by some non filtered frames. Thus, it can't be assumed that once you see a filtered frame for the given destination node, all subsequent frames for all TIDs will be filtered. Ok, with that in mind: * Create a per-TID filtered frame queue for frames that the hardware returns as filtered. * Track filtered frames per-tid, rather than per-node. It just makes the locking much easier. * When a filtered frame appears in the completion function, the node transitions to ""filtered"", and all subsequent completed error frames (filtered or otherwise) are put on the filtered frame queue. The TID is paused once (during the transition from non-filtered to filtered). * If a filtered frame retry count exceeds SWMAX_RETRIES, a BAR should be sent. * Once all the frames queued to the hardware for the given filtered frame TID, transition back from filtered frame to non-filtered frame, which means pre-pending all the filtered frames onto the head of the software queue, clearing the filtered frame state and unpausing the TID. Things get quite hairy around handling completion (aggr, non-aggr, norm, direct-dispatched frames to a hardware queue); whether it's an ""error"", ""cleanup"" or ""BAR"" state as well as filtered, which order to do things in (eg do filtered BEFORE checking for BAR, as the filter completion may be needed to actually transmit a BAR frame.) This work has definitely reminded me that I have to tidy up all the locking and remove some of the ridiculous lock/unlock/lock/unlock going on in the completion functions. It's also reminded me that I should really split out TID versus hardware TXQ locking, even if the underlying locking is still the destination hardware TXQ. Finally, this is all pre-requisite for working on AP mode power save support (PS-POLL, uAPSD) as well as improving performance to misbehaving nodes (as they can transition into filter mode, stopping any TX until everything has caught up.) Finally (ish) - this should also be done for non-aggregate sessions as there are still plenty of laptops and mobile devices that don't speak 802.11n but do wish for stable, useful power save AP support where packets aren't simply dropped. This requires software retransmission for non-aggregate sessions to be implemented, which includes the caveats I've mentioned above. Finally finally - this doesn't yet do anything about the CLRDMASK bit in the TX descriptor. That's still unconditionally set to 1. I'll debug the current work (mostly ensuring I haven't busted up the hairy transitions between BAR, filtered, error (all frames in an aggregate failing) and cleanup (when transitioning from aggregation -> non-aggregation.)) Finally finally finally - this is all original work by yours truely, rather than ported from the Atheros internal driver codebase or Linux ath9k. Tested: * AR9280, AR5416 in STA mode * AR9280, AR9130 in hostap mode * Lots and lots of iperf testing in very marginal and non-marginal conditions, complete with inducing filtered frames + BAR TX conditions. git-svn-id: svn+ssh://svn.freebsd.org/base/head@240639 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",18/09/2012 10:22:46,,FALSE-POSITIVE,https://github.com/freebsd/freebsd/commit/87bed85cccb457178233291d5199cfe21f1a52da,,,,,,,EXISTS,,,[REVIEW],,,,,,,,,,freebsd/freebsd,,,,,
dannomac,freebsd,"Implement my first cut at filtered frames in aggregation sessions. The hardware can optionally ""filter"" frames if successive transmissions to a given node (ie, ""entry in the keycache"") fail. That way the hardware can implement a kind of early abort of all the other frames queued to that destination, rather than simply trying to TX each frame to that destination (and failing.) The background: * If a frame comes back as being filtered, the hardware didn't try to TX it (or it was outside the TX burst opportunity.) So, take it as a hint that some (but not all, see below) frames to the destination may be filtered. * If the CLRDMASK bit is set in a TX descriptor, the ""filter to this destination"" bit in the keycache entry is cleared and TX to that host will be unconditionally retried. * Right now everything has the CLRDMASK bit set, so filtered frames tend to be aggregates and frames that fall outside of the WME burst window. It was a bit worse in the past as I had messed up the TX flags and CLRDMASK wasn't being set on aggregate frames. The annoying bits: * It's easy (ish) to do for aggregate session frames - firstly, they can be retried in any order as long as they're within the BAW, and there's already a bunch of infrastructure tracking how many frames the TID has queued to the hardware (tid->hwq_depth.) However, for frames that bypassed the software queue, hwq_depth doesn't get incremented. I'll fix that in a subsequent commit. * For non-aggregate session frames, the only retries that can occur are ones for sequence numbers that hvaen't successfully been TXed yet. Since there's no re-ordering going on in non-aggregate sessions, if any subsequent seqno frames make it out, any filtered frames before that seqno need to be dropped. Hence why this initially is just for aggregate session frames. * Since there may be intermediary frames to the destination that have CLRDMASK set - for example, any directly dispatched management frames to that destination - it's possible that there will be some filtered frames followed up by some non filtered frames. Thus, it can't be assumed that once you see a filtered frame for the given destination node, all subsequent frames for all TIDs will be filtered. Ok, with that in mind: * Create a per-TID filtered frame queue for frames that the hardware returns as filtered. * Track filtered frames per-tid, rather than per-node. It just makes the locking much easier. * When a filtered frame appears in the completion function, the node transitions to ""filtered"", and all subsequent completed error frames (filtered or otherwise) are put on the filtered frame queue. The TID is paused once (during the transition from non-filtered to filtered). * If a filtered frame retry count exceeds SWMAX_RETRIES, a BAR should be sent. * Once all the frames queued to the hardware for the given filtered frame TID, transition back from filtered frame to non-filtered frame, which means pre-pending all the filtered frames onto the head of the software queue, clearing the filtered frame state and unpausing the TID. Things get quite hairy around handling completion (aggr, non-aggr, norm, direct-dispatched frames to a hardware queue); whether it's an ""error"", ""cleanup"" or ""BAR"" state as well as filtered, which order to do things in (eg do filtered BEFORE checking for BAR, as the filter completion may be needed to actually transmit a BAR frame.) This work has definitely reminded me that I have to tidy up all the locking and remove some of the ridiculous lock/unlock/lock/unlock going on in the completion functions. It's also reminded me that I should really split out TID versus hardware TXQ locking, even if the underlying locking is still the destination hardware TXQ. Finally, this is all pre-requisite for working on AP mode power save support (PS-POLL, uAPSD) as well as improving performance to misbehaving nodes (as they can transition into filter mode, stopping any TX until everything has caught up.) Finally (ish) - this should also be done for non-aggregate sessions as there are still plenty of laptops and mobile devices that don't speak 802.11n but do wish for stable, useful power save AP support where packets aren't simply dropped. This requires software retransmission for non-aggregate sessions to be implemented, which includes the caveats I've mentioned above. Finally finally - this doesn't yet do anything about the CLRDMASK bit in the TX descriptor. That's still unconditionally set to 1. I'll debug the current work (mostly ensuring I haven't busted up the hairy transitions between BAR, filtered, error (all frames in an aggregate failing) and cleanup (when transitioning from aggregation -> non-aggregation.)) Finally finally finally - this is all original work by yours truely, rather than ported from the Atheros internal driver codebase or Linux ath9k. Tested: * AR9280, AR5416 in STA mode * AR9280, AR9130 in hostap mode * Lots and lots of iperf testing in very marginal and non-marginal conditions, complete with inducing filtered frames + BAR TX conditions.",18/09/2012 10:30:19,,NOT-FOUND,https://github.com/dannomac/freebsd/commit/eae277f7181ac71efacbf700af10ddc7a01e3e6d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dannomac/freebsd,,,,,
yuradzhavala,Comfort-service,Save energy systems page added. Navigation updated according to new structure,21/09/2012 14:36:36,,NOT-FOUND,https://github.com/yuradzhavala/Comfort-service/commit/e366ee563c8a2ef0d341b7586d11c5624ee1a00e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,yuradzhavala/Comfort-service,,,,,
TI-OpenLink,wl18xx_fw,"update mc FW version 8.4.0.0.11 MAC Firmware version: 8.4.0.0.11 PHY Firmware version: 8.2.0.0.141 - forcing power save on and off doesn't work with Aruba - hangin max bar retries, maximum tx retries station aging and roaming trigger - no unicast probe to 5GHz channels - TxEngine_SendTemplate needs cleanup - don't clear and restore RX_CFG before radio tune (only clear RX_FILTER_CFG) as clearing RX_CFG may allow some frames to pass the filter - ASU: verify that CTS Duration is not infinite (due to bug in NAV PRotection) - NAV PRotection patch - clip CTS duration at 100 ms - PLT MAC addrees fix - Multicast worng duration bug fix - FW Generated templates are now edited in the template flow manager instead of DMA_DONE stage - FW templates can now be encryped properly as they are modified before DMA and encryption. - Added new stage to TxCallback Stages: TX_TEMPLATE_FLOW_MNGR - Tx Limit mechanism has been enabled - Tx Limit Module has been re-implemented to support subsets of Tx Queue Types - Access to cache null pointer has been fixed - Calculating Tx frame duration has been fixed for Tx Limit use Known issues: - throughput for 5Ghz P2P SIS40 TCP TX is 39.6 Mbit for both V9 and V10. - ASU doesn't activate Tx Limit (the code has been commented) - COEX - Tx Limit integration tests should be performed Signed-off-by: Ido Reis <idor@ti.com>",24/09/2012 15:00:06,,BINARIES,https://github.com/TI-OpenLink/wl18xx_fw/commit/377ef816398a0e7b3e078fa10abb5039b3392ae8,,,[FALSE-POSITIVE],[BINARIES],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,TI-OpenLink/wl18xx_fw,idor,,,idor,
CyanogenMod,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",25/09/2012 06:08:44,,DUPLICATE,https://github.com/CyanogenMod/android_packages_apps_Phone/commit/fa2b5a82bd8dee2599f3d8db2d68961ad14d13a8,,,,,,,EXISTS,,,,,,,,,,,,,CyanogenMod/android_packages_apps_Phone,,,,arco,
IceColdJelly,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",25/09/2012 19:20:27,,NOT-FOUND,https://github.com/IceColdJelly/android_packages_apps_Phone/commit/77517aeb6ebd79418f4fb16ca49377d96e9ea141,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,IceColdJelly/android_packages_apps_Phone,,,,,
SchedMD,slurm,Patches to energy consumption logic Fix to some un/pack logic Fix to test12.5 for new sacct help format Address various compiler warnings,25/09/2012 19:50:44,,FALSE-POSITIVE,https://github.com/SchedMD/slurm/commit/b57eabfa175389646b259e90ef4f7a4a2309fad9,,,[FALSE-POSIVITE][DIDN'T SEE ANY ENERGY CONSUMPTION OPTIMIZATION],[FALSE-POSITIVE],[FALSE-POSIVITE],[DIDN'T SEE ANY ENERGY CONSUMPTION OPTIMIZATION],EXISTS,,,,,,,,,,,,,SchedMD/slurm,jette,,,jette,
freebsd,freebsd,"Map the non-QoS TID to the voice queue, in order to ensure important things like EAPOL frames make it out. After a whole bunch of hacking/testing, I discovered that they weren't being early-dropped by the stack (but I should look at ensuring that later..) but were even making to the hardware transmit queue. They were mostly even being received by the remote end. However, the remote end was completely ignoring them. This didn't happen under 150-170MBit TCP tests as I'm guessing the TX queue stayed very busy and the STA didn't do any scanning. However, when doing 100Mbit/s of TCP traffic, the STA would do background scanning - which involves it coming in and out of powersave mode with the AP. Now, this is a total and utter hack around the real problems, which are: * I need to implement proper power save handling and integrate it into the filtered frames support, so the driver/stack doesn't send frames whilst the station is actually in sleep; * .. but frames were actually making it to the STA (macbook pro) and the AP did receive an ACK; but a tcpdump on the receiving side showed the EAPOL frame never made it. So the stack was dropping it for some reason; * Importantly - the EAPOL frames are currently going into the non-QoS TID, which maps to the BE queue and is susceptible to that queue being busy doing other things, but; * There's other traffic going on in the non-QoS TID from other contexts when scanning is going on and it's possible there's some races causing sequence number/IV issues, but; * Importantly importantlly, I think the interaction with TID 16 multicast traffic in power save mode is causing issues - since I -believe- the sequence number space being used by the EAPOL frames on TID 16 overlaps with the multicast frames that have sequence numbers allocated and are then stuffed on the cabq. Since with EAPOL frames being in TID 16 and queued to the BE queue, it's going to be waiting to be serviced with all of the aggregate traffic going on - and if the CABQ gets emptied beforehand, those TID 16 multicast frames with sequence numbers will go out beforehand. Now, there's quite likely a bunch of ""stuff happening slightly out of sequence"" going on due to the nature of the TX path (read: lots of overlapping and concurrent ath_start() and ath_raw_xmit() calls going on, sigh) but I thought I had caught them all and stuffed each TID TX behind a lock (that lasted as long as it needed to in order to get the frame onto the relevant destination queue - thus keeping things in order.) Unfortunately the last problem is the big one and I'm going to stare at it some more. If it _is_ So this is a work around for now to ensure that EAPOL frames actually make it out before any other stuff in the non-QoS TID and HOPEFULLY before the CABQ gets active. I'm now going to spend a little time in the TX path figuring out exactly why the sender is rejecting things. There's two (well, three if you count EAPOL contents invalid) possibilities: * The sequence number is out of order (ie, something else like the multicast traffic on CABQ) is going out first on TID 16; * The CCMP IV is out of order (similar to above - but less likely, as the TX key for multicast traffic is different to unicast traffic); * EAPOL contents strangely invalid. AP: Ubiquiti RSPRO, AR9160/AR9220 NICs STA: Macbook Pro, Broadcom 11n NIC",26/09/2012 03:50:34,,NOT-FOUND,https://github.com/freebsd/freebsd/commit/758b3b774bd36445ead832ae38d581cc1cde706a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,freebsd/freebsd,,,,,
freebsd,freebsd-head,"Map the non-QoS TID to the voice queue, in order to ensure important things like EAPOL frames make it out. After a whole bunch of hacking/testing, I discovered that they weren't being early-dropped by the stack (but I should look at ensuring that later..) but were even making to the hardware transmit queue. They were mostly even being received by the remote end. However, the remote end was completely ignoring them. This didn't happen under 150-170MBit TCP tests as I'm guessing the TX queue stayed very busy and the STA didn't do any scanning. However, when doing 100Mbit/s of TCP traffic, the STA would do background scanning - which involves it coming in and out of powersave mode with the AP. Now, this is a total and utter hack around the real problems, which are: * I need to implement proper power save handling and integrate it into the filtered frames support, so the driver/stack doesn't send frames whilst the station is actually in sleep; * .. but frames were actually making it to the STA (macbook pro) and the AP did receive an ACK; but a tcpdump on the receiving side showed the EAPOL frame never made it. So the stack was dropping it for some reason; * Importantly - the EAPOL frames are currently going into the non-QoS TID, which maps to the BE queue and is susceptible to that queue being busy doing other things, but; * There's other traffic going on in the non-QoS TID from other contexts when scanning is going on and it's possible there's some races causing sequence number/IV issues, but; * Importantly importantlly, I think the interaction with TID 16 multicast traffic in power save mode is causing issues - since I -believe- the sequence number space being used by the EAPOL frames on TID 16 overlaps with the multicast frames that have sequence numbers allocated and are then stuffed on the cabq. Since with EAPOL frames being in TID 16 and queued to the BE queue, it's going to be waiting to be serviced with all of the aggregate traffic going on - and if the CABQ gets emptied beforehand, those TID 16 multicast frames with sequence numbers will go out beforehand. Now, there's quite likely a bunch of ""stuff happening slightly out of sequence"" going on due to the nature of the TX path (read: lots of overlapping and concurrent ath_start() and ath_raw_xmit() calls going on, sigh) but I thought I had caught them all and stuffed each TID TX behind a lock (that lasted as long as it needed to in order to get the frame onto the relevant destination queue - thus keeping things in order.) Unfortunately the last problem is the big one and I'm going to stare at it some more. If it _is_ So this is a work around for now to ensure that EAPOL frames actually make it out before any other stuff in the non-QoS TID and HOPEFULLY before the CABQ gets active. I'm now going to spend a little time in the TX path figuring out exactly why the sender is rejecting things. There's two (well, three if you count EAPOL contents invalid) possibilities: * The sequence number is out of order (ie, something else like the multicast traffic on CABQ) is going out first on TID 16; * The CCMP IV is out of order (similar to above - but less likely, as the TX key for multicast traffic is different to unicast traffic); * EAPOL contents strangely invalid. AP: Ubiquiti RSPRO, AR9160/AR9220 NICs STA: Macbook Pro, Broadcom 11n NIC git-svn-id: svn+ssh://svn.freebsd.org/base/head@240946 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",26/09/2012 03:51:39,,NOT-FOUND,https://github.com/freebsd/freebsd-head/commit/1d999441398c65dbfd4de93062a37598fa1e617c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,freebsd/freebsd-head,,,,,
freebsd,freebsd,"Map the non-QoS TID to the voice queue, in order to ensure important things like EAPOL frames make it out. After a whole bunch of hacking/testing, I discovered that they weren't being early-dropped by the stack (but I should look at ensuring that later..) but were even making to the hardware transmit queue. They were mostly even being received by the remote end. However, the remote end was completely ignoring them. This didn't happen under 150-170MBit TCP tests as I'm guessing the TX queue stayed very busy and the STA didn't do any scanning. However, when doing 100Mbit/s of TCP traffic, the STA would do background scanning - which involves it coming in and out of powersave mode with the AP. Now, this is a total and utter hack around the real problems, which are: * I need to implement proper power save handling and integrate it into the filtered frames support, so the driver/stack doesn't send frames whilst the station is actually in sleep; * .. but frames were actually making it to the STA (macbook pro) and the AP did receive an ACK; but a tcpdump on the receiving side showed the EAPOL frame never made it. So the stack was dropping it for some reason; * Importantly - the EAPOL frames are currently going into the non-QoS TID, which maps to the BE queue and is susceptible to that queue being busy doing other things, but; * There's other traffic going on in the non-QoS TID from other contexts when scanning is going on and it's possible there's some races causing sequence number/IV issues, but; * Importantly importantlly, I think the interaction with TID 16 multicast traffic in power save mode is causing issues - since I -believe- the sequence number space being used by the EAPOL frames on TID 16 overlaps with the multicast frames that have sequence numbers allocated and are then stuffed on the cabq. Since with EAPOL frames being in TID 16 and queued to the BE queue, it's going to be waiting to be serviced with all of the aggregate traffic going on - and if the CABQ gets emptied beforehand, those TID 16 multicast frames with sequence numbers will go out beforehand. Now, there's quite likely a bunch of ""stuff happening slightly out of sequence"" going on due to the nature of the TX path (read: lots of overlapping and concurrent ath_start() and ath_raw_xmit() calls going on, sigh) but I thought I had caught them all and stuffed each TID TX behind a lock (that lasted as long as it needed to in order to get the frame onto the relevant destination queue - thus keeping things in order.) Unfortunately the last problem is the big one and I'm going to stare at it some more. If it _is_ So this is a work around for now to ensure that EAPOL frames actually make it out before any other stuff in the non-QoS TID and HOPEFULLY before the CABQ gets active. I'm now going to spend a little time in the TX path figuring out exactly why the sender is rejecting things. There's two (well, three if you count EAPOL contents invalid) possibilities: * The sequence number is out of order (ie, something else like the multicast traffic on CABQ) is going out first on TID 16; * The CCMP IV is out of order (similar to above - but less likely, as the TX key for multicast traffic is different to unicast traffic); * EAPOL contents strangely invalid. AP: Ubiquiti RSPRO, AR9160/AR9220 NICs STA: Macbook Pro, Broadcom 11n NIC git-svn-id: svn+ssh://svn.freebsd.org/base/head@240946 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",26/09/2012 03:52:32,,FALSE-POSITIVE,https://github.com/freebsd/freebsd/commit/1d999441398c65dbfd4de93062a37598fa1e617c,,,,,,,EXISTS,,,[REVIEW],,,,,,,,,,freebsd/freebsd,,,,,
dannomac,freebsd,"Map the non-QoS TID to the voice queue, in order to ensure important things like EAPOL frames make it out. After a whole bunch of hacking/testing, I discovered that they weren't being early-dropped by the stack (but I should look at ensuring that later..) but were even making to the hardware transmit queue. They were mostly even being received by the remote end. However, the remote end was completely ignoring them. This didn't happen under 150-170MBit TCP tests as I'm guessing the TX queue stayed very busy and the STA didn't do any scanning. However, when doing 100Mbit/s of TCP traffic, the STA would do background scanning - which involves it coming in and out of powersave mode with the AP. Now, this is a total and utter hack around the real problems, which are: * I need to implement proper power save handling and integrate it into the filtered frames support, so the driver/stack doesn't send frames whilst the station is actually in sleep; * .. but frames were actually making it to the STA (macbook pro) and the AP did receive an ACK; but a tcpdump on the receiving side showed the EAPOL frame never made it. So the stack was dropping it for some reason; * Importantly - the EAPOL frames are currently going into the non-QoS TID, which maps to the BE queue and is susceptible to that queue being busy doing other things, but; * There's other traffic going on in the non-QoS TID from other contexts when scanning is going on and it's possible there's some races causing sequence number/IV issues, but; * Importantly importantlly, I think the interaction with TID 16 multicast traffic in power save mode is causing issues - since I -believe- the sequence number space being used by the EAPOL frames on TID 16 overlaps with the multicast frames that have sequence numbers allocated and are then stuffed on the cabq. Since with EAPOL frames being in TID 16 and queued to the BE queue, it's going to be waiting to be serviced with all of the aggregate traffic going on - and if the CABQ gets emptied beforehand, those TID 16 multicast frames with sequence numbers will go out beforehand. Now, there's quite likely a bunch of ""stuff happening slightly out of sequence"" going on due to the nature of the TX path (read: lots of overlapping and concurrent ath_start() and ath_raw_xmit() calls going on, sigh) but I thought I had caught them all and stuffed each TID TX behind a lock (that lasted as long as it needed to in order to get the frame onto the relevant destination queue - thus keeping things in order.) Unfortunately the last problem is the big one and I'm going to stare at it some more. If it _is_ So this is a work around for now to ensure that EAPOL frames actually make it out before any other stuff in the non-QoS TID and HOPEFULLY before the CABQ gets active. I'm now going to spend a little time in the TX path figuring out exactly why the sender is rejecting things. There's two (well, three if you count EAPOL contents invalid) possibilities: * The sequence number is out of order (ie, something else like the multicast traffic on CABQ) is going out first on TID 16; * The CCMP IV is out of order (similar to above - but less likely, as the TX key for multicast traffic is different to unicast traffic); * EAPOL contents strangely invalid. AP: Ubiquiti RSPRO, AR9160/AR9220 NICs STA: Macbook Pro, Broadcom 11n NIC",26/09/2012 04:30:26,,NOT-FOUND,https://github.com/dannomac/freebsd/commit/758b3b774bd36445ead832ae38d581cc1cde706a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dannomac/freebsd,,,,,
davros-,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",27/09/2012 16:40:21,,DUPLICATE,https://github.com/davros-/android_packages_apps_Phone/commit/70e023422d3a68b7cd83630cbdab922786f9a21e,,,,,,,EXISTS,,,,,,,,,,,,,davros-/android_packages_apps_Phone,,,,davros-,
mozilla-b2g,gaia,Merge pull request #5359 from fabi1cazenave/battery [settings] description of the Power Save Mode,28/09/2012 02:53:13,,FALSE-POSITIVE,https://github.com/mozilla-b2g/gaia/commit/e78222a1cd83c13fa2c8987659633c61c1804543,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [UI labels],[DO NOT ANALYZE],[UI labels],EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,vingtetun,,,vingtetun,
greg-pe,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",28/09/2012 10:15:18,,DUPLICATE,https://github.com/greg-pe/android_packages_apps_Phone/commit/7cd574d2de0f14a2470c88b8bf1647f9ba5b0ead,,,,,,,EXISTS,,,,,,,,,,,,,greg-pe/android_packages_apps_Phone,,,,greg-pe,
AOKP,android_system_core,charger: suspend when not animating Suspend will save power (i.e. charge faster) by disabling unneeded devices such as the touch-sensitive keys on galaxysmtd. Change-Id: I9b2eae1af2e9687546af9dcb10ce1fcb4c1e1ed6,28/09/2012 21:27:29,,NOT-FOUND,https://github.com/AOKP/android_system_core/commit/ca999269256002cb422fdc648abf4aec55b28384,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOKP/android_system_core,,,,,
anudipa,phonelab,Added project PowerReflect which calculates power consumption,01/10/2012 20:39:29,,FALSE-POSITIVE,https://github.com/anudipa/phonelab/commit/caef7e69f1ae9138fbc4c555bfa561019e00a45b,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],EXISTS,,,,,,,,,,,,,anudipa/phonelab,anudipa,,,anudipa,
krendil,asi-estimator,Beginnings of suggest power consumption,02/10/2012 00:54:59,,FALSE-POSITIVE,https://github.com/krendil/asi-estimator/commit/348c279d7119c340097e4df26a965a018b8651c0,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],EXISTS,,,,,,,,,,,,,krendil/asi-estimator,shkibr,,,shkibr,
harunjo,galaxsih-kernel-JB-S3,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",02/10/2012 10:31:35,,NOT-FOUND,https://github.com/harunjo/galaxsih-kernel-JB-S3/commit/a156d6b4efff6a76ba30045270dbaf915426dabd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,harunjo/galaxsih-kernel-JB-S3,,,,,
ethermania,MPCountdown,"Hardware is ready! - Inverted the digit sequence (I forgot the hardware chain has the LSB at the last) - Please, only one strobe at the end of the shift register updating procedure! - Implemented debounce for pushbuttons with automatic repeat when pressed - Changed the way how setup is performed. Now it works better than before - The MSB digit is not yet implemented (it's handled directly by the Arduino port and not by latches like the other) - Multiplexing time is now ""free-run"" and we can have at maximum of two LEDs for each digit lit. Multiplexing is not strictly required but reduces the overall power consumption to more or less 80mAmps.",02/10/2012 23:30:39,,UNABLE-TO-CATEGORIZE,https://github.com/ethermania/MPCountdown/commit/e07ea562dfaf00e7437c88b1885d6b528b680dec,,,[OK][?],[UNABLE-TO-CATEGORIZE] [Multiplexing],[DO NOT ANALYZE],[Multiplexing] [?],EXISTS,,,,,,,,,,,,,ethermania/MPCountdown,,,,,
manveru0,FeaCore_Phoenix_S3_JellyBean,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values. thx to AndreiLux commit a837fae1b510f3f11787eade2154c4a44f082e43 1 parent a366e3c4f2 AndreiLux authored 4 months ago",03/10/2012 18:53:17,,DUPLICATE,https://github.com/manveru0/FeaCore_Phoenix_S3_JellyBean/commit/75b63e0493830178b0dbad7cb934ab3a6edee5f1,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/AndreiLux/Perseus-S3/commit/bf3bd7010bb335fe2989f8d3d5eeb00589fe5f6d] [original:OK],,[VERIFY] [https://github.com/AndreiLux/Perseus-S3/commit/bf3bd7010bb335fe2989f8d3d5eeb00589fe5f6d] [original:OK],EXISTS,,,,,,,,,,,,,manveru0/FeaCore_Phoenix_S3_JellyBean,manveru0,,,manveru0,
lirokoa,htc_pico_kernel,Add power save scheduler remove network QoS,03/10/2012 19:12:45,,OK,https://github.com/lirokoa/htc_pico_kernel/commit/f9c359ffc5891dae6eef230da7ddd5684367e6f3,,,[OK][Remove Scheduler],[OK] [Enable power saving] [Governor],[DO NOT ANALYZE],[Enable power saving] [Governor] [Remove Scheduler],EXISTS,[Add power save scheduler],[power saving],[Enable power saving governor]  [Script] [Config],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,OS,Defconfig,Add power save scheduler,lirokoa/htc_pico_kernel,,[Frequency and voltage scaling],,,Kernel arch
freebsd,freebsd,"Pause and unpause the software queues for a given node based on the net80211 node power save state. * Add an ATH_NODE_UNLOCK_ASSERT() check * Add a new node field - an_is_powersave * Pause/unpause the queue based on the node state * Attempt to handle net80211 concurrency issues so the queue doesn't get paused/unpaused more than once at a time from the net80211 power save code. Whilst here (and breaking my usual rule), set CLRDMASK when a queue is unpaused, regardless of whether the queue has some pending traffic. This means the first frame from that TID (now or later) will hvae CLRDMASK set. Also whilst here, bump the swretrymax counters whenever the filtered frames code expires a frame. Again, breaking my rule, but this is just a statistics thing rather than a functional change. This doesn't fix ps-poll (but it doesn't break it too much worse than it is at the present) or correcting the TID updates. That's next on the list. Tested: * AR9220 AP (Atheros AP96 reference design) * Macbook Pro and LG Optimus 1 Android phone, both setting and clearing power save state (but not using PS-POLL.)",03/10/2012 23:35:14,,NOT-FOUND,https://github.com/freebsd/freebsd/commit/24a64f7cc21b32a6c7fe32af16f03a59335e5e45,,,4929393111dc5f2f84d24d2ff539489175073cb1,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,freebsd/freebsd,,,,,
freebsd,freebsd-head,"Pause and unpause the software queues for a given node based on the net80211 node power save state. * Add an ATH_NODE_UNLOCK_ASSERT() check * Add a new node field - an_is_powersave * Pause/unpause the queue based on the node state * Attempt to handle net80211 concurrency issues so the queue doesn't get paused/unpaused more than once at a time from the net80211 power save code. Whilst here (and breaking my usual rule), set CLRDMASK when a queue is unpaused, regardless of whether the queue has some pending traffic. This means the first frame from that TID (now or later) will hvae CLRDMASK set. Also whilst here, bump the swretrymax counters whenever the filtered frames code expires a frame. Again, breaking my rule, but this is just a statistics thing rather than a functional change. This doesn't fix ps-poll (but it doesn't break it too much worse than it is at the present) or correcting the TID updates. That's next on the list. Tested: * AR9220 AP (Atheros AP96 reference design) * Macbook Pro and LG Optimus 1 Android phone, both setting and clearing power save state (but not using PS-POLL.) git-svn-id: svn+ssh://svn.freebsd.org/base/head@241170 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",03/10/2012 23:35:41,,NOT-FOUND,https://github.com/freebsd/freebsd-head/commit/4929393111dc5f2f84d24d2ff539489175073cb1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,freebsd/freebsd-head,,,,,
freebsd,freebsd,"Pause and unpause the software queues for a given node based on the net80211 node power save state. * Add an ATH_NODE_UNLOCK_ASSERT() check * Add a new node field - an_is_powersave * Pause/unpause the queue based on the node state * Attempt to handle net80211 concurrency issues so the queue doesn't get paused/unpaused more than once at a time from the net80211 power save code. Whilst here (and breaking my usual rule), set CLRDMASK when a queue is unpaused, regardless of whether the queue has some pending traffic. This means the first frame from that TID (now or later) will hvae CLRDMASK set. Also whilst here, bump the swretrymax counters whenever the filtered frames code expires a frame. Again, breaking my rule, but this is just a statistics thing rather than a functional change. This doesn't fix ps-poll (but it doesn't break it too much worse than it is at the present) or correcting the TID updates. That's next on the list. Tested: * AR9220 AP (Atheros AP96 reference design) * Macbook Pro and LG Optimus 1 Android phone, both setting and clearing power save state (but not using PS-POLL.) git-svn-id: svn+ssh://svn.freebsd.org/base/head@241170 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",03/10/2012 23:36:48,,FALSE-POSITIVE,https://github.com/freebsd/freebsd/commit/4929393111dc5f2f84d24d2ff539489175073cb1,,,,,,,EXISTS,,,,,,,,,,,,,freebsd/freebsd,,,,,
maddoggin,platform_packages_apps_CellBroadcastReceiver,CB: Enable or Disable broadcast messages Send set config broadcast messages to modem when user changes preferences from CellBroadcast App. This is necessary to reduce power consumpution. Change-Id: I6953aa8e07769437ccc3661f46e86faca602a4fb,04/10/2012 00:07:10,,NOT-FOUND,https://github.com/maddoggin/platform_packages_apps_CellBroadcastReceiver/commit/ed7f94f3121c82b47816af65bff70b7164b1d6db,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,maddoggin/platform_packages_apps_CellBroadcastReceiver,,,,,
dannomac,freebsd,"Pause and unpause the software queues for a given node based on the net80211 node power save state. * Add an ATH_NODE_UNLOCK_ASSERT() check * Add a new node field - an_is_powersave * Pause/unpause the queue based on the node state * Attempt to handle net80211 concurrency issues so the queue doesn't get paused/unpaused more than once at a time from the net80211 power save code. Whilst here (and breaking my usual rule), set CLRDMASK when a queue is unpaused, regardless of whether the queue has some pending traffic. This means the first frame from that TID (now or later) will hvae CLRDMASK set. Also whilst here, bump the swretrymax counters whenever the filtered frames code expires a frame. Again, breaking my rule, but this is just a statistics thing rather than a functional change. This doesn't fix ps-poll (but it doesn't break it too much worse than it is at the present) or correcting the TID updates. That's next on the list. Tested: * AR9220 AP (Atheros AP96 reference design) * Macbook Pro and LG Optimus 1 Android phone, both setting and clearing power save state (but not using PS-POLL.)",04/10/2012 00:30:29,,NOT-FOUND,https://github.com/dannomac/freebsd/commit/24a64f7cc21b32a6c7fe32af16f03a59335e5e45,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dannomac/freebsd,,,,,
CyanogenMod,android_kernel_htc_msm8960,"cpufreq: boost the sampling rate on touch event For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate. Also, change sampling down factor proportional to the sampling rate. Change-Id: I111b1cf3b8ed133347149afc34d329d0384ecfcb Signed-off-by: Narayanan Gopalakrishnan <nargop@codeaurora.org>",05/10/2012 08:53:15,,TRADEOFF,https://github.com/CyanogenMod/android_kernel_htc_msm8960/commit/694447e65dd4af2af7193021ab67c4cad91ff412,,,[TRADEOFF][UX RESPONSIVENESS],[TRADEOFF] [Cool],[DO NOT ANALYZE],[Cool] [UX RESPONSIVENESS],EXISTS,[Increase sampling rate to improve UI responsiveness],[Improve UI responsiveness],,,,,Certain,Android,No,Driver,C,"For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate.",CyanogenMod/android_kernel_htc_msm8960,,Responsiveness,,intervigilium,Drivers cpufreq
Evervolv,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",06/10/2012 02:32:28,,DUPLICATE,https://github.com/Evervolv/android_packages_apps_Phone/commit/4adf87de06be9b6b56bcbfb758a011eadaf6c214,,,,,,,EXISTS,,,,,,,,,,,,,Evervolv/android_packages_apps_Phone,,,,drewis,
denahiro,TrainScheduler,"Updated turnaround, and added output for peak energy consumption",06/10/2012 13:17:40,,FALSE-POSITIVE,https://github.com/denahiro/TrainScheduler/commit/c4ea071bb79c9b1a96123304755056573a3098a6,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,denahiro/TrainScheduler,denahiro,,,denahiro,
mathkid95,linux_samsung_jb,"Touchscreen: Fix unresponsive touchscreen Set mergetimeout to 10 Timeout on how long a touch might everstay merged - units of 0.2s, used to tradeoff power consumption against being able to detect a touch de-merging early Set mergethreshold to 40 The treshhold for the point when two peaks are considered one touch This fixes http://code.google.com/p/cyanogenmod/issues/detail?id=3255 Change-Id: If770fd1247f2cf845de45577ed1337f19fa8534e",07/10/2012 17:19:19,,TRADEOFF,https://github.com/mathkid95/linux_samsung_jb/commit/37b5d2319a430f22fea619ddc0379bf8cf6cb6fc,,,[TRADEOFF][UX RESPONSIVENESS],[TRADEOFF] [Increase touch merge timeout] [Android],[DO NOT ANALYZE],[Increase touch merge timeout] [Android] [UX RESPONSIVENESS],EXISTS,[Increase touch merge timeout],[Improve UI responsiveness],,,,,Certain,Android,No,Kernel,C,"Touchscreen: Fix unresponsive touchscreen Set mergetimeout to 10 Timeout on how long a touch might everstay merged - units of 0.2s, used to tradeoff power consumption against being able to detect a touch de-merging early",mathkid95/linux_samsung_jb,elektroschmock,Responsiveness,,,Kernel arch
ToxMod,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",08/10/2012 04:00:32,,NOT-FOUND,https://github.com/ToxMod/android_packages_apps_Phone/commit/0848f6f9a3db6e9ab4e9facdfcf2a11baf8affed,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ToxMod/android_packages_apps_Phone,,,,,
radekp,linux-2.6,"gta04 - apply voltage for VSIM (external GPS antenna) http://lists.goldelico.com/pipermail/gta04-owner/2012-September/002961.html On Thu, 13 Sep 2012 19:03:26 +0200 Christoph Mair <christoph.mair at gmail.com> wrote: > On Wed, Sep 12, 2012 at 8:38 PM, Radek Polak <psonek2 at seznam.cz> wrote: > > QtMoko v48 is out now, you can download images for Freerunner and GTA04 from > > here [1][2]. For more info about QtMoko please visit our homepage [3]. > > Thanks for another great release! > > > * changes for 3.5 kernel on gta04 > > * turning of gps antena on gta04 during startup to save power > > I've noticed that my device does not recognize the external antenna > anymore. The VSIM regulator which supplies the antenna delivers only > 1.8V instead of 2.8V. I haven't looked at the kernel source yet, but > there might be a bug somewhere because 'cat > /sys/class/regulator/regulator.8/microvolts' returns 1.8V while the > min and max parameters are set to 2.8V Try diff --git a/arch/arm/mach-omap2/board-omap3gta04.c b/arch/arm/mach-omap2/board-omap3gta04.c index 8d750d2..19b9fe3 100644 --- a/arch/arm/mach-omap2/board-omap3gta04.c +++ b/arch/arm/mach-omap2/board-omap3gta04.c @@ -572,6 +572,7 @@ static struct regulator_init_data gta04_vsim = { .name = ""VSIM"", .min_uV = 2800000, .max_uV = 2800000, + .apply_uV = 1, .valid_modes_mask = REGULATOR_MODE_NORMAL | REGULATOR_MODE_STANDBY, .valid_ops_mask = REGULATOR_CHANGE_VOLTAGE without this, it just assumes the voltage is correct. NeilBrown",08/10/2012 04:27:43,,FALSE-POSITIVE,https://github.com/radekp/linux-2.6/commit/b2d9afb967e94a58c57308036caf50c36c320e59,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,radekp/linux-2.6,radekp,,,radekp,
digitalcode,packages_apps_ROMControl,disable power saver powermenu,08/10/2012 09:35:35,,NOT-FOUND,https://github.com/digitalcode/packages_apps_ROMControl/commit/37f61dde4138de7590024ad7d80bf8f971fbdf32,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,digitalcode/packages_apps_ROMControl,,,,,
digitalcode,packages_apps_ROMControl,disable power saver powermenu,09/10/2012 10:00:51,,DUPLICATE,https://github.com/digitalcode/packages_apps_ROMControl/commit/c7e1abb38f0703eb95f819575efae672938b4cf0,,,,,,,EXISTS,,,,,,,,,,,,,digitalcode/packages_apps_ROMControl,digitalcode,,,digitalcode,
ericdea,cmsi370,added the header 'Energy Saver' using bootstrap.,09/10/2012 21:39:35,,FALSE-POSITIVE,https://github.com/ericdea/cmsi370/commit/0ad72c62b1fd9561239e1a9817aeafee034db7a2,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Ui label],[FALSE-POSIVITE],[Ui label],EXISTS,,,,,,,,,,,,,ericdea/cmsi370,,,,,
VanirAOSP,packages_apps_phone,change debugging in phone and merge fix ring volume reset take 2 from cyanogenmod and disable accelerometer in call to prevent power consumption spike Conflicts: src/com/android/phone/InCallScreen.java Change-Id: Icb6ad7be620607d5d82c37c22a29ebbf2dc40604,11/10/2012 12:16:42,,OK,https://github.com/VanirAOSP/packages_apps_phone/commit/1a3f3ecff8aad041ec847f7234d6328da6af43b1,,,[OK][Disabling devices][APP specific][Android],[OK] [Disable component] [Disable component when in call],[DO NOT ANALYZE],[Disable component] [Disable component when in call] [Disabling devices] [APP specific] [Android],EXISTS,[disable accelerometer in call],[prevent power consumption spike],[Disable device when in call],[Disable device] [Condition: in call],,,Certain,Android,No,Application,Java,disable accelerometer in call to prevent power consumption spike,VanirAOSP/packages_apps_phone,AlmightyMegadeth00,[Disabling feature/devices],[in call],nuclearmistake,Application
WillGreen,dentros,Exposed hardware model height and max power consumption in device detail page.,12/10/2012 21:05:47,,NOT-FOUND,https://github.com/WillGreen/dentros/commit/13eb1d836f7e9144bbd60f8e668b1039cb2a9429,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,WillGreen/dentros,,,,,
cozybit,open80211s,fixup! mac80211: add power save support structure to mesh interface,12/10/2012 22:35:40,,NOT-FOUND,https://github.com/cozybit/open80211s/commit/433c13eb94d16c4096282a541f0c91598d5c9f32,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,cozybit/open80211s,,,,,
IceColdJelly,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02",13/10/2012 18:59:07,,DUPLICATE,https://github.com/IceColdJelly/android_packages_apps_Phone/commit/b5bc820d2a111fcf3953d5ce3d4bd934be7e02f1,,,,,,,EXISTS,,,,,,,,,,,,,IceColdJelly/android_packages_apps_Phone,,,,LorDClockaN,
Andromadus,htc7x30-3.0,"Linux 3.0.46 mn10300: only add -mmem-funcs to KBUILD_CFLAGS if gcc supports it commit 9957423f035c2071f6d1c5d2f095cdafbeb25ad7 upstream. It seems the current (gcc 4.6.3) no longer provides this so make it conditional. As reported by Tony before, the mn10300 architecture cross-compiles with gcc-4.6.3 if -mmem-funcs is not added to KBUILD_CFLAGS. Reported-by: Tony Breeds <tony@bakeyournoodle.com> Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org> Cc: David Howells <dhowells@redhat.com> Cc: Koichi Yasutake <yasutake.koichi@jp.panasonic.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> kbuild: make: fix if_changed when command contains backslashes commit c353acba28fb3fa1fd05fd6b85a9fc7938330f9c upstream. The call if_changed mechanism does not work when the command contains backslashes. This basically is an issue with lzo and bzip2 compressed kernels. The compressed binaries do not contain the uncompressed image size, so these use size_append to append the size. This results in backslashes in the executed command. With this if_changed always detects a change in the command and rebuilds the compressed image even if nothing has changed. Fix this by escaping backslashes in make-cmd Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de> Signed-off-by: Jan Luebbe <jlu@pengutronix.de> Cc: Sam Ravnborg <sam@ravnborg.org> Cc: Bernhard Walle <bernhard@bwalle.de> Cc: Michal Marek <mmarek@suse.cz> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> media: rc: ite-cir: Initialise ite_dev::rdev earlier commit 4b961180ef275035b1538317ffd0e21e80e63e77 upstream. ite_dev::rdev is currently initialised in ite_probe() after rc_register_device() returns. If a newly registered device is opened quickly enough, we may enable interrupts and try to use ite_dev::rdev before it has been initialised. Move it up to the earliest point we can, right after calling rc_allocate_device(). Reported-and-tested-by: YunQiang Su <wzssyqa@gmail.com> Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ACPI: run _OSC after ACPI_FULL_INITIALIZATION commit fc54ab72959edbf229b65ac74b2f122d799ca002 upstream. The _OSC method may exist in module level code, so it must be called after ACPI_FULL_INITIALIZATION On some new platforms with Zero-Power-Optical-Disk-Drive (ZPODD) support, this fix is necessary to save power. Signed-off-by: Lin Ming <ming.m.lin@intel.com> Tested-by: Aaron Lu <aaron.lu@intel.com> Signed-off-by: Len Brown <len.brown@intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> PCI: acpiphp: check whether _ADR evaluation succeeded commit dfb117b3e50c52c7b3416db4a4569224b8db80bb upstream. Check whether we evaluated _ADR successfully. Previously we ignored failure, so we would have used garbage data from the stack as the device and function number. We return AE_OK so that we ignore only this slot and continue looking for other slots. Found by Coverity (CID 113981). Signed-off-by: Bjorn Helgaas <bhelgaas@google.com> [bwh: Backported to 2.6.32/3.0: adjust context] Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> lib/gcd.c: prevent possible div by 0 commit e96875677fb2b7cb739c5d7769824dff7260d31d upstream. Account for all properties when a and/or b are 0: gcd(0, 0) = 0 gcd(a, 0) = a gcd(0, b) = b Fixes no known problems in current kernels. Signed-off-by: Davidlohr Bueso <dave@gnu.org> Cc: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> kernel/sys.c: call disable_nonboot_cpus() in kernel_restart() commit f96972f2dc6365421cf2366ebd61ee4cf060c8d5 upstream. As kernel_power_off() calls disable_nonboot_cpus(), we may also want to have kernel_restart() call disable_nonboot_cpus(). Doing so can help machines that require boot cpu be the last alive cpu during reboot to survive with kernel restart. This fixes one reboot issue seen on imx6q (Cortex-A9 Quad). The machine requires that the restart routine be run on the primary cpu rather than secondary ones. Otherwise, the secondary core running the restart routine will fail to come to online after reboot. Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drivers/scsi/atp870u.c: fix bad use of udelay commit 0f6d93aa9d96cc9022b51bd10d462b03296be146 upstream. The ACARD driver calls udelay() with a value > 2000, which leads to to the following compilation error on ARM: ERROR: ""__bad_udelay"" [drivers/scsi/atp870u.ko] undefined! make[1]: *** [__modpost] Error 1 This is because udelay is defined on ARM, roughly speaking, as #define udelay(n) ((n) > 2000 ? __bad_udelay() : \ __const_udelay((n) * ((2199023U*HZ)>>11))) The argument to __const_udelay is the number of jiffies to wait divided by 4, but this does not work unless the multiplication does not overflow, and that is what the build error is designed to prevent. The intended behavior can be achieved by using mdelay to call udelay multiple times in a loop. [jrnieder@gmail.com: adding context] Signed-off-by: Martin Michlmayr <tbm@cyrius.com> Signed-off-by: Jonathan Nieder <jrnieder@gmail.com> Cc: James Bottomley <James.Bottomley@HansenPartnership.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> workqueue: add missing smp_wmb() in process_one_work() commit 959d1af8cffc8fd38ed53e8be1cf4ab8782f9c00 upstream. WORK_STRUCT_PENDING is used to claim ownership of a work item and process_one_work() releases it before starting execution. When someone else grabs PENDING, all pre-release updates to the work item should be visible and all updates made by the new owner should happen afterwards. Grabbing PENDING uses test_and_set_bit() and thus has a full barrier; however, clearing doesn't have a matching wmb. Given the preceding spin_unlock and use of clear_bit, I don't believe this can be a problem on an actual machine and there hasn't been any related report but it still is theretically possible for clear_pending to permeate upwards and happen before work->entry update. Add an explicit smp_wmb() before work_clear_pending(). Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm: Workaround incompatibility of ESN and async crypto [ Upstream commit 3b59df46a449ec9975146d71318c4777ad086744 ] ESN for esp is defined in RFC 4303. This RFC assumes that the sequence number counters are always up to date. However, this is not true if an async crypto algorithm is employed. If the sequence number counters are not up to date on sequence number check, we may incorrectly update the upper 32 bit of the sequence number. This leads to a DOS. We workaround this by comparing the upper sequence number, (used for authentication) with the upper sequence number computed after the async processing. We drop the packet if these numbers are different. To do this, we introduce a recheck function that does this check in the ESN case. Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm_user: return error pointer instead of NULL [ Upstream commit 864745d291b5ba80ea0bd0edcbe67273de368836 ] When dump_one_state() returns an error, e.g. because of a too small buffer to dump the whole xfrm state, xfrm_state_netlink() returns NULL instead of an error pointer. But its callers expect an error pointer and therefore continue to operate on a NULL skbuff. This could lead to a privilege escalation (execution of user code in kernel context) if the attacker has CAP_NET_ADMIN and is able to map address 0. Signed-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm_user: return error pointer instead of NULL #2 [ Upstream commit c25463722509fef0ed630b271576a8c9a70236f3 ] When dump_one_policy() returns an error, e.g. because of a too small buffer to dump the whole xfrm policy, xfrm_policy_netlink() returns NULL instead of an error pointer. But its caller expects an error pointer and therefore continues to operate on a NULL skbuff. Signed-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm: fix a read lock imbalance in make_blackhole [ Upstream commit 433a19548061bb5457b6ab77ed7ea58ca6e43ddb ] if xfrm_policy_get_afinfo returns 0, it has already released the read lock, xfrm_policy_put_afinfo should not be called again. Signed-off-by: Li RongQing <roy.qing.li@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm_user: fix info leak in copy_to_user_auth() [ Upstream commit 4c87308bdea31a7b4828a51f6156e6f721a1fcc9 ] copy_to_user_auth() fails to initialize the remainder of alg_name and therefore discloses up to 54 bytes of heap memory via netlink to userland. Use strncpy() instead of strcpy() to fill the  ...",14/10/2012 04:32:22,,UNABLE-TO-CATEGORIZE,https://github.com/Andromadus/htc7x30-3.0/commit/b150e1b26d683e68b8d5ae0be612f0aa26287f87,,,[FALSE-POSITIVE],[Big commit] [Giga commit],[DO NOT ANALYZE],[Giga commit],EXISTS,,,,,,,,,,,,,Andromadus/htc7x30-3.0,gregkh,,,Juansheng,
Chiru,ChiruAddons,Added a noise background for indicating missing webgl context (tablet devices seem to lose the context if they are in power saving mode long enough).,15/10/2012 08:58:28,,FALSE-POSITIVE,https://github.com/Chiru/ChiruAddons/commit/16af87e103d8cdea96e6072aeabdbfef1d77e780,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,Chiru/ChiruAddons,K1ll3rF0x,,,K1ll3rF0x,
hsenot,bip,Initial support for adding an energy efficient project to a building,16/10/2012 08:20:12,,FALSE-POSITIVE,https://github.com/hsenot/bip/commit/339b6a576306e3730f283b03689a1a04e2b96499,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Energy efficient project],[FALSE-POSITIVE],[Energy efficient project],EXISTS,,,,,,,,,,,,,hsenot/bip,hsenot,,,hsenot,
ivanich,android_kernel_htc_msm8660,"msm_fb: display: no early suspend for writeback panel Writeback panel is not real physical panel and no power consumption concern, so it is removed from early suspend registration to avoid open fb2 error during suspend/resume. Change-Id: Ic61f69e069f2da8c73f2b5a13d103a2f20034d20 Signed-off-by: Huaibin Yang <huaibiny@codeaurora.org> Conflicts: drivers/video/msm/msm_fb.c",16/10/2012 19:58:55,,FALSE-POSITIVE,https://github.com/ivanich/android_kernel_htc_msm8660/commit/e7e6bb9d828979ab998da532daca3fed08d5dabc,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,ivanich/android_kernel_htc_msm8660,,,,ivanich,
TI-OpenLink,wl12xx,wl12xx: decrease elp timeout to 20ms The current elp timeout set to 200 ms is too high. While its purpose was to avoid going to ELP during Tx/Rx the problem is that it keeps the device awake also after issuing commands when there's no traffic. In Android this is a real problem as RSSI is polled by the framework every 3 seconds and keeping the chip out of ELP for 200ms each time has a significant power consumption effect. Fix that by changing to 20ms. This prevents excessive real elp sleeps and wakeups during Rx/Tx with 12xx. There's no real need any more for setting a hard coded 5ms while in forced_ps. The fw won't enter elp anyways before the dynamic-ps timeout expired as well (and it entered ps successfully). (Based on a similar patch by Eliad for wlcore) Signed-off-by: Eyal Shapira <eyal@wizery.com>,18/10/2012 16:41:04,,OK,https://github.com/TI-OpenLink/wl12xx/commit/8ed24b48205054f3691451be611d3b1d01e0c283,,,[OK][Avoid polling],[OK] [Decrease timeout] [Decrease timer] [Idle sooner],[DO NOT ANALYZE],[Decrease timeout] [Decrease timer] [Idle sooner] [Avoid polling],EXISTS,[decrease elp timeout to 20ms],[current timeout keeps device awake even when there is no traffic],[Decrease timeout] [Decrease suspend timeout] [Decrease timer] [Idle sooner],[Reduce timeout] [Sub1: Low power mode],,,Certain,Android,No,OS,C,In Android this is a real problem as RSSI is polled by the framework every 3 seconds and keeping the chip out of ELP for 200ms each time has a significant power consumption effect.,TI-OpenLink/wl12xx,eyalsh,[Timing out],,eyalsh,Driver
FelipeRosa,ArdOS,The idle process now puts the device in the sleep mode to save power,18/10/2012 21:45:46,,OK,https://github.com/FelipeRosa/ArdOS/commit/7f762cc7fedcbc38c982ec2d04c38d72fedf39ad,,,[OK][Go to idle],[OK] [Go to idle] [Sleep on idle],[DO NOT ANALYZE],[Go to idle] [Sleep on idle],EXISTS,[puts the device in the sleep mode],[power saving],[Go to idle] [Go to sleep] [Sleep on idle],[Go to low power mode],,,Certain,Arduino ArdOS,No,OS,C,The idle process now puts the device in the sleep mode to save power,FelipeRosa/ArdOS,FelipeRosa,[Low power idling],,FelipeRosa,Kernel
dorimanx,initramfs3,"Shutdown S2W on screen ON, and activate on OFF(if set by user!) + MORE Removed tuning of bus freq on screen on/off, it's has no meaning, bus freq is 133 on screen off any way, moved wait time on screen off to top, to give app some power to prevent slowdown. when screen is OFF and all code change to power save. then after 5 sec do the tweaks, IF not connected to power.",18/10/2012 22:13:02,,OK,https://github.com/dorimanx/initramfs3/commit/b423b7c7a8afecbeb95a0441acc8e8d3fdc45211,,,[OK][Disabling devices],[OK] [Disable device] [Disable slide2wake] [Disable component],[DO NOT ANALYZE],[Disable device] [Disable slide2wake] [Disable component] [Disabling devices],EXISTS,[disable slide2wake on screen ON],[it's not needed],[Power saving action on screen on] [Disable slide2wake on screen on] [Disable component] [Script] [Config],[Disable feature] [Condition: screen on],,,Certain,Android,No,Libraries and Utilities,Shell,when screen is OFF and all code change to power save.,dorimanx/initramfs3,dorimanx,[Disabling feature/devices],[screen on],dorimanx,Script sbin/shell
kozmikkick,kozmikvigor,"msm: kgsl: Collect a sample only if GPU is active If the device is not in active state, collecting a sample is not necessary and will cause frequent wake-ups, resulting in higher power consumption. Change-Id: Icb4f82b1300cab3b4cc4ed17117a92725a5a11d4 Signed-off-by: Lynus Vaz <lvaz@codeaurora.org>",20/10/2012 06:22:49,,DUPLICATE,https://github.com/kozmikkick/kozmikvigor/commit/ca6c5ea0dd8a28af3f874bad9e67164f1961537a,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/kozmikvigor,,,,kozmikkick,
kozmikkick,kozmikvigor,"cpufreq: interactive governor: default timer 10ms, maxspeed load 95% Modify default timer from 30ms to 10ms, sampling 2 jiffies after idle exit on ARM as in Honeycomb. Modify default go_maxspeed_load from 85% loaded to 95% loaded, for use in phones where power savings is more important (tablets may be best served overriding this). Change-Id: I3361a6279979bfae1df5262666a2e30ea7a44328 Signed-off-by: Todd Poynor <toddpoynor@google.com>",20/10/2012 06:27:28,,DUPLICATE,https://github.com/kozmikkick/kozmikvigor/commit/f6a86b00a9f433f4c34bfb0e5f4f9a49acc71363,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/kozmikvigor,,,,kozmikkick,
jamescoxon,PicoAtlas,"added code for Pico 74 - flight 19/10/12 based on a 1.8v pAVA board, some night time power saving using slow-hell.",20/10/2012 11:05:18,,UNABLE-TO-CATEGORIZE,https://github.com/jamescoxon/PicoAtlas/commit/30346b1726ad112a4632bc0aa8746d742ae208b6,,,[OK][?],[OK] [Set GPS power mode] [Disable GPS] [Disable component],[DO NOT ANALYZE],[Set GPS power mode] [Disable GPS] [Disable component] [?],EXISTS,[night time power saving using slow-hell],[power saving],,?,,,Certain,Arduino,No,Embedded application,,some night time power saving using slow-hell,jamescoxon/PicoAtlas,jamescoxon,?,,jamescoxon,Arduino application
scverhagen,htc-kernel-doubleshot,"Rebase to 3.0.46 mn10300: only add -mmem-funcs to KBUILD_CFLAGS if gcc supports it commit 9957423f035c2071f6d1c5d2f095cdafbeb25ad7 upstream. It seems the current (gcc 4.6.3) no longer provides this so make it conditional. As reported by Tony before, the mn10300 architecture cross-compiles with gcc-4.6.3 if -mmem-funcs is not added to KBUILD_CFLAGS. Reported-by: Tony Breeds <tony@bakeyournoodle.com> Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org> Cc: David Howells <dhowells@redhat.com> Cc: Koichi Yasutake <yasutake.koichi@jp.panasonic.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> kbuild: make: fix if_changed when command contains backslashes commit c353acba28fb3fa1fd05fd6b85a9fc7938330f9c upstream. The call if_changed mechanism does not work when the command contains backslashes. This basically is an issue with lzo and bzip2 compressed kernels. The compressed binaries do not contain the uncompressed image size, so these use size_append to append the size. This results in backslashes in the executed command. With this if_changed always detects a change in the command and rebuilds the compressed image even if nothing has changed. Fix this by escaping backslashes in make-cmd Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de> Signed-off-by: Jan Luebbe <jlu@pengutronix.de> Cc: Sam Ravnborg <sam@ravnborg.org> Cc: Bernhard Walle <bernhard@bwalle.de> Cc: Michal Marek <mmarek@suse.cz> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> media: rc: ite-cir: Initialise ite_dev::rdev earlier commit 4b961180ef275035b1538317ffd0e21e80e63e77 upstream. ite_dev::rdev is currently initialised in ite_probe() after rc_register_device() returns. If a newly registered device is opened quickly enough, we may enable interrupts and try to use ite_dev::rdev before it has been initialised. Move it up to the earliest point we can, right after calling rc_allocate_device(). Reported-and-tested-by: YunQiang Su <wzssyqa@gmail.com> Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ACPI: run _OSC after ACPI_FULL_INITIALIZATION commit fc54ab72959edbf229b65ac74b2f122d799ca002 upstream. The _OSC method may exist in module level code, so it must be called after ACPI_FULL_INITIALIZATION On some new platforms with Zero-Power-Optical-Disk-Drive (ZPODD) support, this fix is necessary to save power. Signed-off-by: Lin Ming <ming.m.lin@intel.com> Tested-by: Aaron Lu <aaron.lu@intel.com> Signed-off-by: Len Brown <len.brown@intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> PCI: acpiphp: check whether _ADR evaluation succeeded commit dfb117b3e50c52c7b3416db4a4569224b8db80bb upstream. Check whether we evaluated _ADR successfully. Previously we ignored failure, so we would have used garbage data from the stack as the device and function number. We return AE_OK so that we ignore only this slot and continue looking for other slots. Found by Coverity (CID 113981). Signed-off-by: Bjorn Helgaas <bhelgaas@google.com> [bwh: Backported to 2.6.32/3.0: adjust context] Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> lib/gcd.c: prevent possible div by 0 commit e96875677fb2b7cb739c5d7769824dff7260d31d upstream. Account for all properties when a and/or b are 0: gcd(0, 0) = 0 gcd(a, 0) = a gcd(0, b) = b Fixes no known problems in current kernels. Signed-off-by: Davidlohr Bueso <dave@gnu.org> Cc: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> kernel/sys.c: call disable_nonboot_cpus() in kernel_restart() commit f96972f2dc6365421cf2366ebd61ee4cf060c8d5 upstream. As kernel_power_off() calls disable_nonboot_cpus(), we may also want to have kernel_restart() call disable_nonboot_cpus(). Doing so can help machines that require boot cpu be the last alive cpu during reboot to survive with kernel restart. This fixes one reboot issue seen on imx6q (Cortex-A9 Quad). The machine requires that the restart routine be run on the primary cpu rather than secondary ones. Otherwise, the secondary core running the restart routine will fail to come to online after reboot. Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drivers/scsi/atp870u.c: fix bad use of udelay commit 0f6d93aa9d96cc9022b51bd10d462b03296be146 upstream. The ACARD driver calls udelay() with a value > 2000, which leads to to the following compilation error on ARM: ERROR: ""__bad_udelay"" [drivers/scsi/atp870u.ko] undefined! make[1]: *** [__modpost] Error 1 This is because udelay is defined on ARM, roughly speaking, as #define udelay(n) ((n) > 2000 ? __bad_udelay() : \ __const_udelay((n) * ((2199023U*HZ)>>11))) The argument to __const_udelay is the number of jiffies to wait divided by 4, but this does not work unless the multiplication does not overflow, and that is what the build error is designed to prevent. The intended behavior can be achieved by using mdelay to call udelay multiple times in a loop. [jrnieder@gmail.com: adding context] Signed-off-by: Martin Michlmayr <tbm@cyrius.com> Signed-off-by: Jonathan Nieder <jrnieder@gmail.com> Cc: James Bottomley <James.Bottomley@HansenPartnership.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> workqueue: add missing smp_wmb() in process_one_work() commit 959d1af8cffc8fd38ed53e8be1cf4ab8782f9c00 upstream. WORK_STRUCT_PENDING is used to claim ownership of a work item and process_one_work() releases it before starting execution. When someone else grabs PENDING, all pre-release updates to the work item should be visible and all updates made by the new owner should happen afterwards. Grabbing PENDING uses test_and_set_bit() and thus has a full barrier; however, clearing doesn't have a matching wmb. Given the preceding spin_unlock and use of clear_bit, I don't believe this can be a problem on an actual machine and there hasn't been any related report but it still is theretically possible for clear_pending to permeate upwards and happen before work->entry update. Add an explicit smp_wmb() before work_clear_pending(). Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm: Workaround incompatibility of ESN and async crypto [ Upstream commit 3b59df46a449ec9975146d71318c4777ad086744 ] ESN for esp is defined in RFC 4303. This RFC assumes that the sequence number counters are always up to date. However, this is not true if an async crypto algorithm is employed. If the sequence number counters are not up to date on sequence number check, we may incorrectly update the upper 32 bit of the sequence number. This leads to a DOS. We workaround this by comparing the upper sequence number, (used for authentication) with the upper sequence number computed after the async processing. We drop the packet if these numbers are different. To do this, we introduce a recheck function that does this check in the ESN case. Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm_user: return error pointer instead of NULL [ Upstream commit 864745d291b5ba80ea0bd0edcbe67273de368836 ] When dump_one_state() returns an error, e.g. because of a too small buffer to dump the whole xfrm state, xfrm_state_netlink() returns NULL instead of an error pointer. But its callers expect an error pointer and therefore continue to operate on a NULL skbuff. This could lead to a privilege escalation (execution of user code in kernel context) if the attacker has CAP_NET_ADMIN and is able to map address 0. Signed-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm_user: return error pointer instead of NULL #2 [ Upstream commit c25463722509fef0ed630b271576a8c9a70236f3 ] When dump_one_policy() returns an error, e.g. because of a too small buffer to dump the whole xfrm policy, xfrm_policy_netlink() returns NULL instead of an error pointer. But its caller expects an error pointer and therefore continues to operate on a NULL skbuff. Signed-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm: fix a read lock imbalance in make_blackhole [ Upstream commit 433a19548061bb5457b6ab77ed7ea58ca6e43ddb ] if xfrm_policy_get_afinfo returns 0, it has already released the read lock, xfrm_policy_put_afinfo should not be called again. Signed-off-by: Li RongQing <roy.qing.li@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> xfrm_user: fix info leak in copy_to_user_auth() [ Upstream commit 4c87308bdea31a7b4828a51f6156e6f721a1fcc9 ] copy_to_user_auth() fails to initialize the remainder of alg_name and therefore discloses up to 54 bytes of heap memory via netlink to userland. Use strncpy() instead of strcpy() to fill  ...",21/10/2012 03:45:24,,DUPLICATE,https://github.com/scverhagen/htc-kernel-doubleshot/commit/5d3ee95b38738e06289ffc5b88f61b224404ac93,,,,[VERIFIED] [https://github.com/Andromadus/htc7x30-3.0/commit/b150e1b26d683e68b8d5ae0be612f0aa26287f87],,[https://github.com/Andromadus/htc7x30-3.0/commit/b150e1b26d683e68b8d5ae0be612f0aa26287f87],EXISTS,,,,,,,,,,,,,scverhagen/htc-kernel-doubleshot,scverhagen,,,scverhagen,
blackoutinn372,BlackoutSolarCalculator,Added Power Consumption support for the desktop client. Added Power Consumption and Savings web service methods for the desktop client.,21/10/2012 08:37:33,,FALSE-POSITIVE,https://github.com/blackoutinn372/BlackoutSolarCalculator/commit/35a73c23fd16655a15c033f96f288fcc14161927,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute power consumption],[DO NOT ANALYZE],[Compute power consumption],EXISTS,,,,,,,,,,,,,blackoutinn372/BlackoutSolarCalculator,,,,,
jcw,glcdlib,advanced power savings (graph data is fake),21/10/2012 20:50:31,,OK,https://github.com/jcw/glcdlib/commit/2419c991a57eb6f64aa104b6abbf8e47ba287c51,,,[OK][Go to idle],[OK] [Go to idle],[DO NOT ANALYZE],[Go to idle],EXISTS,"[go to sleep, wakeup again just before the next packet]",[power saving],[Sleep while waiting] [Go to idle] [Go to sleep],[Go to low power],,,Certain,Arduino,No,Application,Ino,advanced power savings,jcw/glcdlib,jcw,[Low power idling],,jcw,Arduino application
norbertc,nexus-kernel,"EXPERIMENTAL: Fix unresponsive touchscreen Touchscreen: Fix unresponsive touchscreen Set mergetimeout to 10 Timeout on how long a touch might everstay merged - units of 0.2s, used to tradeoff power consumption against being able to detect a touch de-merging early Set mergethreshold to 40 The treshhold for the point when two peaks are considered one touch This fixes http://code.google.com/p/cyanogenmod/issues/detail?id=3255",22/10/2012 18:55:01,,DUPLICATE,https://github.com/norbertc/nexus-kernel/commit/86e7ad0d849d0e0a140358bc74bc3835f95e698e,,,[DUP],[DUPLICATE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,norbertc/nexus-kernel,elektroschmock,,,norbertc,
pkerpedjiev,ernwin,ImgHelixEnergy efficiency improvements.,23/10/2012 04:39:48,,FALSE-POSITIVE,https://github.com/pkerpedjiev/ernwin/commit/87c38788bdfe5072367479c2a5f0f2497e8cd4ea,,,[FALSE-POSIVITE],[FALSE-POSIVITE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,pkerpedjiev/ernwin,,,,,
RomaVis,eeenote-kernel,"Power saving update(unstable & testing!) -Dynamic VCC_CORE, VCC_SRAM management in software -Correct power-down sequence and regulator states In conclusion, longer battery life :)",23/10/2012 06:56:43,,NOT-FOUND,https://github.com/RomaVis/eeenote-kernel/commit/5dbb5e77f09122c1a9b78654a7c5d5998b853ea1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,RomaVis/eeenote-kernel,,,,,
temasek,android_kernel_samsung_smdk4412,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,24/10/2012 08:51:18,,FALSE-POSITIVE,https://github.com/temasek/android_kernel_samsung_smdk4412/commit/41b9f74dd4756ff865a59c656834869da51a11ac,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,temasek/android_kernel_samsung_smdk4412,AndreiLux,,,temasek,
TI-OpenLink,wl18xx_fw,"update mc FW version 8.5.0.0.7 MAC Firmware version: 8.5.0.0.7 PHY Firmware version: 8.2.0.0.147 (8.4.0.0.27) - Low Number of AP are found when scan, due to wrong calculation of templates duration the fix is to set the IO Method of the templates (all of them) according to the Role Context - PLT Mode fix for Channel 8 problem (8.5.0.0.2) - Traffic Analyzer: new feature that detects traffic per role and AC - Presence Adapter: calibration of parameters - ACL Role: calibration of parameters (8.5.0.0.3) - management frame initial SN taken from system link (GLOBAL) in order not to cause frame SN duplication - Forward RX DELBA frames to host - set ADDREQ inactivity timeout larger then FW internal timeout (8.5.0.0.4) - New MAC PHY API interface: semaphore, ability to release context, wait for PHY completion - Calibration API run as SWI, trigger and call back mode - Max Allowed time to PHY in RTTT mode - Limit channel tune retry, if failing - New PHY Rev 8.2.0.0.147 (8.5.0.0.5) - SG: make block bits reflect system state even when BT is off - SG: remove unneeded field currentBtMasterSlave from coexindications - SG: MCS00120131 – Smallest available time for WLAN is set only during SCO (not sniff), cleared & updated only for SCB change for SCO - Dubi - SG: Don't dilute CTS on AP role (same as legacy) - SG: Max RxT value for AP role is set only by calculation according to lower basic rate and not host configurable - SG: Add fix value of 300 to RxT calculation - SG: Use change Phy priority table new API every decision manger switch antenna decision; disabled in compilation - SG: remove coex specific code regarding MinAbortTxIntervalUsec - Drop frames when working in PLT/TX simulation mode. (Bug fix for logger tag, and channel 8 mismatch) - Power save bit in immediate response frame was moved from tx start to rx complete (8.5.0.0.6) - Enable TX Limit to ASU after fixing some issues - Fix for BT Scan & Inquiry - Fix Beacon TX Window duration - Fix in round robin - Fix in presence adaptor - Fixes in Time Scheduler and watch dog (8.5.0.0.7) - New traffic analyzer feature: classify P2P long UDP BE AC frames as WiFi Display traffic (WFD) and request VI bandwidth from scheduler Signed-off-by: Ido Reis <idor@ti.com>",24/10/2012 15:52:22,,BINARIES,https://github.com/TI-OpenLink/wl18xx_fw/commit/aec348438739d1f46f7f6f21e2a4528b52e7d254,,,[FALSE-POSITIVE],[BINARIES],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,TI-OpenLink/wl18xx_fw,idor,,,idor,
AdiPat,android_kernel_tegra_n1,"time: RCU permitted to stop idle entry via softirq RCU needs to be able to use softirq to stop idle entry in order to be able to drain RCU callbacks from the current CPU, which in turn enables faster entry into dyntick-idle mode, which in turn reduces power consumption. This commit therefore silences the error message that is sometimes produced when the going-idle CPU suddenly finds that it has an RCU_SOFTIRQ to process. Signed-off-by: Paul E. McKenney <paul.mckenney@linaro.org> backported by faux123 from Linux 3.5+ to Linux 3.0",24/10/2012 19:24:48,,FALSE-POSITIVE,https://github.com/AdiPat/android_kernel_tegra_n1/commit/eaf199192ff57048279a32ee4302df3e0bfcd87f,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,AdiPat/android_kernel_tegra_n1,faux123,,,AdiPat,
KingLemming,BuildCraft,"Machine Power Request Alteration Adjustment to machine power request behavior - machines requesting more energy than they can possibly use when at/near maximum stored energy results in improper power network distribution behavior. This simple change corrects that so that power is not wasted far above the level that it should be. Ex: A quarry requests 200 MJ/t but can only possibly use 39 MJ/t max. As conductive pipes distribute based on this request value, smaller machines may get passed over by a golden pipe only to have ""useful"" power be completely wasted at a quarry due to overfill. Note that if there is not enough energy on the system to power the quarry at max speed, the 200 MJ/t request is still used in the ""weighting"" calculation for distribution. Under this change, generation in excess of the total system load will be lost at the wooden pipes on a power network, and generation vs load should be a much more straightforward and sensible calculation. Total power consumed by the system is reduced only insofar as that distribution will operate properly and ensure that all machines on a network are running at maximum speed before waste occurs.",25/10/2012 05:03:38,,NOT-FOUND,https://github.com/KingLemming/BuildCraft/commit/45a758de2c830ed0cfb7f3f1c81c1d3f9c79e2aa,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,KingLemming/BuildCraft,,,,,
rickysarraf,laptop-mode-tools,"Be specific on what file systems we want to handle I don't want an ever growing list of unreal file systems to maintain. Also, it is not a good idea to assume all real file systems support all common options. Example: btrfs will not play well with commit intervals Similarly, what power saving measuers do we want to apply on network file systems - smbfs, nfs etc. Hence, we will now be explicit on what we not to control",25/10/2012 15:20:28,,FALSE-POSITIVE,https://github.com/rickysarraf/laptop-mode-tools/commit/ee5d8eeee254c24029c04a0214aa59bc20996c84,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,rickysarraf/laptop-mode-tools,rickysarraf,,,rickysarraf,
qiumaoyuan,x220-archlinux,tweak power saving mode at boot time,25/10/2012 15:40:32,,NOT-FOUND,https://github.com/qiumaoyuan/x220-archlinux/commit/bccb18ea13c7866a700a66568976fa2354b553c3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,qiumaoyuan/x220-archlinux,,,,,
Quarx2k,jordan-kernel,omapzoom: HSMMC:Set disable timeout to 1ms The disable timeout is reduced from 100ms to 1ms in order to obtain aggressive power saving.,26/10/2012 12:41:31,,OK,https://github.com/Quarx2k/jordan-kernel/commit/20a7f3c48359f52237ce7079f1346d3e524aab2d,,,[OK][Deacrease Timeout][Does not make sense],[OK] [Decrease timeout] [Decrease timer] [Idle sooner] [Android],[DO NOT ANALYZE],[Decrease timeout] [Decrease timer] [Idle sooner] [Android] [Deacrease Timeout] [Does not make sense],EXISTS,[reduce disable timeout],[aggressive power saving],[Decrease inactivity timeout] [Decrease MMC inactivity timeout],[Reduce timeout] [Sub1: Disable device],,,Certain,Android,No,OS,C,The disable timeout is reduced from 100ms to 1ms in order to obtain aggressive power saving,Quarx2k/jordan-kernel,Quarx2k,[Timing out],,Quarx2k,Driver drivers
AffinitySERIES,device_asus_grouper,"grouper: update prebuilt kernel 6996d91 ASoC: rt5640: add mixer control to swap L/R channels in DAC b3fbb75 ALS : help power consumption when system can't enter sleep mode by partial wake lock. 6bd10ce Battery: remove battery_callback wake lock to accelerate LP0 mode 2f694c2 Revert ""Revert ""cpufreq: Disable hotplug during UI interaction"""" b02a79a Revert ""Don't exit LP mode if no wakeup source causes ""display on"""" 79a27d6 Revert ""The power consumption improvement."" Change-Id: I06fe287b892a6d2f4e9e960edc5b5f47dabef10c",28/10/2012 07:43:54,,BINARIES,https://github.com/AffinitySERIES/device_asus_grouper/commit/8929702da2bc59b414c1901ce626f35081c3e37a,,,,,,,EXISTS,,,,,,,,,,,,,AffinitySERIES/device_asus_grouper,,,,,
VanirAOSP,PopcornKernel-Tuna,"omap44xx: cpuidle: Update target residencies to saner values The current values are insane. There is no possible way power saving can be attained by heading into C4 for not much more than 1ms. The average values are in the 20ms range, so why do we need to even entertain entering at much lower values when we will use more power than we save in doing so. The actual recommended values are shown in 79e796f but for some obscure reason, in 16385c7 and 22e2193 they were updated to match the exit_latency. This seems horribly wrong to me as there comes a point when the target residency is so low that you use more power actually entering the state than you gain from the insignificant amount of time you spend there. With the values in this commit, C4 state is used for >95% of the time when the screen is off, with C3 picking up the remainder. During audio playback, C4 is used ~50% of the time, C3 is used ~25% of the time and C2 picks up whatever is left. Credit thalamus Change-Id: Iadc0ba68a2de43919a0d1b6451dc1613e3d454d6",30/10/2012 02:25:51,,OK,https://github.com/VanirAOSP/PopcornKernel-Tuna/commit/4203efd9820495e1612bca6386a4c0303e842e18,,,[OK][?],[OK] [Bug fix] [Increase residency],[DO NOT ANALYZE],[Bug fix] [Increase residency] [?],EXISTS,[update target residency for low power c-state],[current residency used more power than saved because device spent too little time in low power c-state],[Increase target residency on lower C states] [Stay longer on lower power states],[Increase sleep],,,Certain,Android,Yes,OS,C,"There is no possible way power saving can be attained by heading into C4 for not much more than 1ms. The average values are in the 20ms range, so why do we need to even entertain entering at much lower values when we will use more power than we save in doing so.",VanirAOSP/PopcornKernel-Tuna,sonicxml,[Energy bug],,sonicxml,Driver cpuidle
arapov,linux-aa,"gpio/omap: fix off-mode bug: clear debounce settings on free/reset This change was originally titled ""gpio/omap: fix off-mode bug: clear debounce clock enable mask on free/reset"". The title has been updated slightly to reflect (what should be) the final fix. When a GPIO is freed or shutdown, we need to ensure that any debounce settings are cleared and if the GPIO is the only GPIO in the bank that is currently using debounce, then disable the debounce clock as well to save power. Currently, the debounce settings are not cleared on a GPIO free or shutdown and so during a context restore on subsequent off-mode transition, the previous debounce values are restored from the shadow copies (bank->context.debounce*) leading to mismatch state between driver state and hardware state. This was discovered when board code was doing gpio_request_one() gpio_set_debounce() gpio_free() which was leaving the GPIO debounce settings in a confused state. If that GPIO bank is subsequently used with off-mode enabled, bogus state would be restored, leaving GPIO debounce enabled which then prevented the CORE powerdomain from transitioning. To fix this, introduce a new function called _clear_gpio_debounce() to clear any debounce settings when the GPIO is freed or shutdown. If this GPIO is the last debounce-enabled GPIO in the bank, the debounce will also be cut. Please note that we cannot use _gpio_dbck_disable() to disable the debounce clock because this has been specifically created for the gpio suspend path and is intended to shutdown the debounce clock while debounce is enabled. Special thanks to Kevin Hilman for root causing the bug. This fix is a collaborative effort with inputs from Kevin Hilman, Grazvydas Ignotas and Santosh Shilimkar. Testing: - This has been unit tested on an OMAP3430 Beagle board, by requesting a gpio, enabling debounce and then freeing the gpio and checking the register contents, the saved register context and the debounce clock state. - Kevin Hilman tested on 37xx/EVM board which configures GPIO debounce for the ads7846 touchscreen in its board file using the above sequence, and so was failing off-mode tests in dynamic idle. Verified that off-mode tests are passing with this patch. V5 changes: - Corrected author Reported-by: Paul Walmsley <paul@pwsan.com> Cc: Igor Grinberg <grinberg@compulab.co.il> Cc: Grazvydas Ignotas <notasas@gmail.com> Cc: Jon Hunter <jon-hunter@ti.com> Signed-off-by: Jon Hunter <jon-hunter@ti.com> Reviewed-by: Kevin Hilman <khilman@ti.com> Tested-by: Kevin Hilman <khilman@ti.com> Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>",01/11/2012 08:14:46,,NOT-FOUND,https://github.com/arapov/linux-aa/commit/c9c55d9211150b589d2d39a45cf5f96c70a51a47,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,arapov/linux-aa,,,,,
arapov,linux-aa,"gpio/omap: fix off-mode bug: clear debounce settings on free/reset This change was originally titled ""gpio/omap: fix off-mode bug: clear debounce clock enable mask on free/reset"". The title has been updated slightly to reflect (what should be) the final fix. When a GPIO is freed or shutdown, we need to ensure that any debounce settings are cleared and if the GPIO is the only GPIO in the bank that is currently using debounce, then disable the debounce clock as well to save power. Currently, the debounce settings are not cleared on a GPIO free or shutdown and so during a context restore on subsequent off-mode transition, the previous debounce values are restored from the shadow copies (bank->context.debounce*) leading to mismatch state between driver state and hardware state. This was discovered when board code was doing gpio_request_one() gpio_set_debounce() gpio_free() which was leaving the GPIO debounce settings in a confused state. If that GPIO bank is subsequently used with off-mode enabled, bogus state would be restored, leaving GPIO debounce enabled which then prevented the CORE powerdomain from transitioning. To fix this, introduce a new function called _clear_gpio_debounce() to clear any debounce settings when the GPIO is freed or shutdown. If this GPIO is the last debounce-enabled GPIO in the bank, the debounce will also be cut. Please note that we cannot use _gpio_dbck_disable() to disable the debounce clock because this has been specifically created for the gpio suspend path and is intended to shutdown the debounce clock while debounce is enabled. Special thanks to Kevin Hilman for root causing the bug. This fix is a collaborative effort with inputs from Kevin Hilman, Grazvydas Ignotas and Santosh Shilimkar. Testing: - This has been unit tested on an OMAP3430 Beagle board, by requesting a gpio, enabling debounce and then freeing the gpio and checking the register contents, the saved register context and the debounce clock state. - Kevin Hilman tested on 37xx/EVM board which configures GPIO debounce for the ads7846 touchscreen in its board file using the above sequence, and so was failing off-mode tests in dynamic idle. Verified that off-mode tests are passing with this patch. V5 changes: - Corrected author Reported-by: Paul Walmsley <paul@pwsan.com> Cc: Igor Grinberg <grinberg@compulab.co.il> Cc: Grazvydas Ignotas <notasas@gmail.com> Cc: Jon Hunter <jon-hunter@ti.com> Signed-off-by: Jon Hunter <jon-hunter@ti.com> Reviewed-by: Kevin Hilman <khilman@ti.com> Tested-by: Kevin Hilman <khilman@ti.com> Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>",01/11/2012 08:14:47,,NOT-FOUND,https://github.com/arapov/linux-aa/commit/c9c55d9211150b589d2d39a45cf5f96c70a51a47,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,arapov/linux-aa,,,,,
arapov,linux-aa,"gpio/omap: fix off-mode bug: clear debounce settings on free/reset This change was originally titled ""gpio/omap: fix off-mode bug: clear debounce clock enable mask on free/reset"". The title has been updated slightly to reflect (what should be) the final fix. When a GPIO is freed or shutdown, we need to ensure that any debounce settings are cleared and if the GPIO is the only GPIO in the bank that is currently using debounce, then disable the debounce clock as well to save power. Currently, the debounce settings are not cleared on a GPIO free or shutdown and so during a context restore on subsequent off-mode transition, the previous debounce values are restored from the shadow copies (bank->context.debounce*) leading to mismatch state between driver state and hardware state. This was discovered when board code was doing gpio_request_one() gpio_set_debounce() gpio_free() which was leaving the GPIO debounce settings in a confused state. If that GPIO bank is subsequently used with off-mode enabled, bogus state would be restored, leaving GPIO debounce enabled which then prevented the CORE powerdomain from transitioning. To fix this, introduce a new function called _clear_gpio_debounce() to clear any debounce settings when the GPIO is freed or shutdown. If this GPIO is the last debounce-enabled GPIO in the bank, the debounce will also be cut. Please note that we cannot use _gpio_dbck_disable() to disable the debounce clock because this has been specifically created for the gpio suspend path and is intended to shutdown the debounce clock while debounce is enabled. Special thanks to Kevin Hilman for root causing the bug. This fix is a collaborative effort with inputs from Kevin Hilman, Grazvydas Ignotas and Santosh Shilimkar. Testing: - This has been unit tested on an OMAP3430 Beagle board, by requesting a gpio, enabling debounce and then freeing the gpio and checking the register contents, the saved register context and the debounce clock state. - Kevin Hilman tested on 37xx/EVM board which configures GPIO debounce for the ads7846 touchscreen in its board file using the above sequence, and so was failing off-mode tests in dynamic idle. Verified that off-mode tests are passing with this patch. V5 changes: - Corrected author Reported-by: Paul Walmsley <paul@pwsan.com> Cc: Igor Grinberg <grinberg@compulab.co.il> Cc: Grazvydas Ignotas <notasas@gmail.com> Cc: Jon Hunter <jon-hunter@ti.com> Signed-off-by: Jon Hunter <jon-hunter@ti.com> Reviewed-by: Kevin Hilman <khilman@ti.com> Tested-by: Kevin Hilman <khilman@ti.com> Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>",01/11/2012 08:14:49,,NOT-FOUND,https://github.com/arapov/linux-aa/commit/c9c55d9211150b589d2d39a45cf5f96c70a51a47,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,arapov/linux-aa,,,,,
arapov,linux-aa,"gpio/omap: fix off-mode bug: clear debounce settings on free/reset This change was originally titled ""gpio/omap: fix off-mode bug: clear debounce clock enable mask on free/reset"". The title has been updated slightly to reflect (what should be) the final fix. When a GPIO is freed or shutdown, we need to ensure that any debounce settings are cleared and if the GPIO is the only GPIO in the bank that is currently using debounce, then disable the debounce clock as well to save power. Currently, the debounce settings are not cleared on a GPIO free or shutdown and so during a context restore on subsequent off-mode transition, the previous debounce values are restored from the shadow copies (bank->context.debounce*) leading to mismatch state between driver state and hardware state. This was discovered when board code was doing gpio_request_one() gpio_set_debounce() gpio_free() which was leaving the GPIO debounce settings in a confused state. If that GPIO bank is subsequently used with off-mode enabled, bogus state would be restored, leaving GPIO debounce enabled which then prevented the CORE powerdomain from transitioning. To fix this, introduce a new function called _clear_gpio_debounce() to clear any debounce settings when the GPIO is freed or shutdown. If this GPIO is the last debounce-enabled GPIO in the bank, the debounce will also be cut. Please note that we cannot use _gpio_dbck_disable() to disable the debounce clock because this has been specifically created for the gpio suspend path and is intended to shutdown the debounce clock while debounce is enabled. Special thanks to Kevin Hilman for root causing the bug. This fix is a collaborative effort with inputs from Kevin Hilman, Grazvydas Ignotas and Santosh Shilimkar. Testing: - This has been unit tested on an OMAP3430 Beagle board, by requesting a gpio, enabling debounce and then freeing the gpio and checking the register contents, the saved register context and the debounce clock state. - Kevin Hilman tested on 37xx/EVM board which configures GPIO debounce for the ads7846 touchscreen in its board file using the above sequence, and so was failing off-mode tests in dynamic idle. Verified that off-mode tests are passing with this patch. V5 changes: - Corrected author Reported-by: Paul Walmsley <paul@pwsan.com> Cc: Igor Grinberg <grinberg@compulab.co.il> Cc: Grazvydas Ignotas <notasas@gmail.com> Cc: Jon Hunter <jon-hunter@ti.com> Signed-off-by: Jon Hunter <jon-hunter@ti.com> Reviewed-by: Kevin Hilman <khilman@ti.com> Tested-by: Kevin Hilman <khilman@ti.com> Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>",01/11/2012 08:14:50,,NOT-FOUND,https://github.com/arapov/linux-aa/commit/c9c55d9211150b589d2d39a45cf5f96c70a51a47,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,arapov/linux-aa,,,,,
olafhering,linux,"gpio/omap: fix off-mode bug: clear debounce settings on free/reset This change was originally titled ""gpio/omap: fix off-mode bug: clear debounce clock enable mask on free/reset"". The title has been updated slightly to reflect (what should be) the final fix. When a GPIO is freed or shutdown, we need to ensure that any debounce settings are cleared and if the GPIO is the only GPIO in the bank that is currently using debounce, then disable the debounce clock as well to save power. Currently, the debounce settings are not cleared on a GPIO free or shutdown and so during a context restore on subsequent off-mode transition, the previous debounce values are restored from the shadow copies (bank->context.debounce*) leading to mismatch state between driver state and hardware state. This was discovered when board code was doing gpio_request_one() gpio_set_debounce() gpio_free() which was leaving the GPIO debounce settings in a confused state. If that GPIO bank is subsequently used with off-mode enabled, bogus state would be restored, leaving GPIO debounce enabled which then prevented the CORE powerdomain from transitioning. To fix this, introduce a new function called _clear_gpio_debounce() to clear any debounce settings when the GPIO is freed or shutdown. If this GPIO is the last debounce-enabled GPIO in the bank, the debounce will also be cut. Please note that we cannot use _gpio_dbck_disable() to disable the debounce clock because this has been specifically created for the gpio suspend path and is intended to shutdown the debounce clock while debounce is enabled. Special thanks to Kevin Hilman for root causing the bug. This fix is a collaborative effort with inputs from Kevin Hilman, Grazvydas Ignotas and Santosh Shilimkar. Testing: - This has been unit tested on an OMAP3430 Beagle board, by requesting a gpio, enabling debounce and then freeing the gpio and checking the register contents, the saved register context and the debounce clock state. - Kevin Hilman tested on 37xx/EVM board which configures GPIO debounce for the ads7846 touchscreen in its board file using the above sequence, and so was failing off-mode tests in dynamic idle. Verified that off-mode tests are passing with this patch. V5 changes: - Corrected author Reported-by: Paul Walmsley <paul@pwsan.com> Cc: Igor Grinberg <grinberg@compulab.co.il> Cc: Grazvydas Ignotas <notasas@gmail.com> Cc: Jon Hunter <jon-hunter@ti.com> Signed-off-by: Jon Hunter <jon-hunter@ti.com> Reviewed-by: Kevin Hilman <khilman@ti.com> Tested-by: Kevin Hilman <khilman@ti.com> Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>",01/11/2012 16:45:36,,DUPLICATE,https://github.com/olafhering/linux/commit/c9c55d9211150b589d2d39a45cf5f96c70a51a47,,,,,,,EXISTS,,,,,,,,,,,,,olafhering/linux,jonhunter,,,linusw,
FDemicheli,contiki-branch,Metric avg energy consumed,03/11/2012 11:20:50,,FALSE-POSITIVE,https://github.com/FDemicheli/contiki-branch/commit/5b18c3b191fb9a9bb7212d217207851f8af9d3a4,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,FDemicheli/contiki-branch,,,,,
AlexanderBlagodatskih,tuna-jb,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,04/11/2012 06:49:03,,NOT-FOUND,https://github.com/AlexanderBlagodatskih/tuna-jb/commit/e458139e9e88d4cf9450842c2f21b4e5451faba0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AlexanderBlagodatskih/tuna-jb,,,,,
AlexanderBlagodatskih,tuna,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,04/11/2012 08:58:56,,NOT-FOUND,https://github.com/AlexanderBlagodatskih/tuna/commit/e458139e9e88d4cf9450842c2f21b4e5451faba0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AlexanderBlagodatskih/tuna,,,,,
skybert,my-little-friends,added my rc.local with good power saving features for T420s,05/11/2012 20:54:12,,OK,https://github.com/skybert/my-little-friends/commit/63d5aee73ac7a0f2cde4a7957ca1e6c83a65131a,,,[OK][Changing Device's Conf],[OK] [Add power saving script] [Scale CPU frequency],[DO NOT ANALYZE],[Add power saving script] [Scale CPU frequency] [Changing Device's Conf],EXISTS,[added my rc.local with good power saving features],[power saving],[Add power saving script] [Script] [Config],[OUTLIER],,Multiple changes,Certain,Personal config files?,No,Libraries and Utilities,Script rc,added my rc.local with good power saving features for T420s,skybert/my-little-friends,skybert,[OUTLIER],,skybert,Script rc
daib,streamit,parse router performance counters and compute power consumption by calling a orion2 program,07/11/2012 06:56:45,,FALSE-POSITIVE,https://github.com/daib/streamit/commit/9e307411369875d976b56c10dc8349e6763b29e6,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute energy consumption],[DO NOT ANALYZE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,daib/streamit,daib,,,daib,
SchedMD,slurm,"Updates to energy accounting work The patch contains: 1) general code cleanup 2) documentation concerning the energy framework 3) fix for sstat header/data mismatch problem 4) changes on the rapl plugin to print the average power consumption between 2 measurements in place of an instantaneous value: this is printed for CurrentWatts value of ""scontrol show node"" 5)the memory leak that Moe located on cpu frequency code we are currently working on the following : - the requested frequency as described by Martin - rapl fine grain measurements (socket level) - the ipmi plugin based on freeipmi and we hope to have them either during your 2.5.0.rc1 testing period or for the 2.5.1",07/11/2012 20:03:59,,FALSE-POSITIVE,https://github.com/SchedMD/slurm/commit/ab74dece7aa085f1fc9b08b91089239549ab8129,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute energy consumption],[DO NOT ANALYZE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,SchedMD/slurm,,,,jette,
madpenguin8,arduino-sullair-reset,Power save work Setup some power saving functionality for future use.,07/11/2012 21:20:34,,OK,https://github.com/madpenguin8/arduino-sullair-reset/commit/b62e735c6edf7a13234a24a97e639ed9315c86b0,,,[FALSE-POSITIVE],[RELATED] [Set pin] [Hardware],[DO NOT ANALYZE],[Set pin] [Hardware],EXISTS,[Setup some power saving functionality for future use],Power save work,,[Disable device],[Configure pin],,Certain,Arduino,No,Application,C,,madpenguin8/arduino-sullair-reset,madpenguin8,[Disabling feature/devices],,madpenguin8,Embedded application
dpinney,omf,"Energy consumption now broken out into load, losses, DG and substation contributions.",07/11/2012 21:22:22,,FALSE-POSITIVE,https://github.com/dpinney/omf/commit/40a9e3ca099e4873238a759981d99c658ecaf60c,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE] [Smart grid],[FALSE-POSITIVE],[FALSE-POSITIVE] [Smart grid],EXISTS,,,,,,,,,,,,,dpinney/omf,,,,,
AlexanderBlagodatskih,lightning-kernel,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,08/11/2012 10:47:13,,NOT-FOUND,https://github.com/AlexanderBlagodatskih/lightning-kernel/commit/e458139e9e88d4cf9450842c2f21b4e5451faba0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AlexanderBlagodatskih/lightning-kernel,,,,,
AlexanderBlagodatskih,android-omap-tuna-3.0-jb,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,09/11/2012 12:29:32,,NOT-FOUND,https://github.com/AlexanderBlagodatskih/android-omap-tuna-3.0-jb/commit/e458139e9e88d4cf9450842c2f21b4e5451faba0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AlexanderBlagodatskih/android-omap-tuna-3.0-jb,,,,,
serac,powermon,Add feature to compare power consumption with other stations on usage page.,09/11/2012 19:53:49,,FALSE-POSITIVE,https://github.com/serac/powermon/commit/4db357b015c2d51fd13c45bcd8886030ce060750,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute energy consumption],[DO NOT ANALYZE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,serac/powermon,serac,,,serac,
winki,SpaceWars,energy consum,12/11/2012 16:15:29,,FALSE-POSITIVE,https://github.com/winki/SpaceWars/commit/71d6b2f27a5f3207550ce58ab35633ad0f64a0bc,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,winki/SpaceWars,kurky91,,,kurky91,
cmenard,T889_Kernel,Fix Samsung's Power Saving Mode Thanks to Andreilux for this. Set to 1.2ghz as 1ghz is way too slow. Signed-off-by: Curtis Menard <curtis.menard@gmail.com>,13/11/2012 01:01:41,,TRADEOFF,https://github.com/cmenard/T889_Kernel/commit/aad4979c533bd07454959831c2235428d50374be,https://github.com/cmenard/T889_Kernel/commit/aad4979c533bd07454959831c2235428d50374be,,https://github.com/cmenard/T889_Kernel/commit/aad4979c533bd07454959831c2235428d50374be,https://github.com/cmenard/T889_Kernel/commit/aad4979c533bd07454959831c2235428d50374be,https://github.com/cmenard/T889_Kernel/commit/aad4979c533bd07454959831c2235428d50374be,https://github.com/cmenard/T889_Kernel/commit/aad4979c533bd07454959831c2235428d50374be,EXISTS,[Increase frequency],[Improve performance] [Fix power saving mode],,,,,Certain,Android,Yes,Kernel,C,Fix Samsung's Power Saving Mode Thanks to Andreilux for this.  Set to 1.2ghz as 1ghz is way too slow.,cmenard/T889_Kernel,cmenard,Performance,,cmenard,Kernel power
lenb,linux,"tools/power turbostat: print Watts Intel's Sandy Bridge and Ivy Bridge processor generations support RAPL (Run-Time-Average-Power-Limiting). Per the Intel SDM (Intel® 64 and IA-32 Architectures Software Developer Manual) RAPL provides hardware power information and control via MSRs (Model Specific Registers). RAPL MSRs are designed primarily as a method to implement power capping. However, even if power capping is not enabled, the RAPL regsiters are useful for monitoring system power and operation. Turbostat now displays the information provided by reading RAPL MSRs. As always, turbostat never writes any MSRs. turbostat's default display now includes Watts for hardware that supports RAPL: [root@sandy]# turbostat cor CPU %c0 GHz TSC %c1 %c3 %c6 %c7 %pc2 %pc3 %pc6 %pc7 Pkg_W Cor_W GFX_W 0.07 0.80 2.29 0.13 0.00 0.00 99.80 0.43 0.00 0.72 98.16 3.49 0.12 0.14 0 0 0.14 0.80 2.29 0.12 0.00 0.00 99.74 0.43 0.00 0.72 98.16 3.49 0.12 0.14 0 4 0.04 0.80 2.29 0.22 1 1 0.06 0.80 2.29 0.08 0.00 0.00 99.86 1 5 0.03 0.80 2.29 0.10 2 2 0.17 0.80 2.29 0.14 0.00 0.00 99.69 2 6 0.03 0.79 2.29 0.28 3 3 0.03 0.80 2.29 0.07 0.00 0.00 99.90 3 7 0.04 0.80 2.29 0.06 The Pkg_W column shows Watts for each package (socket) in the system. On multi-socket systems, the system summary on the 1st row shows the total. The Cor_W column shows Watts due to processors cores. Core_W is included in Pkg_W. The optional GFX_W column shows Watts due to the graphics ""un-core"". GFX_W is included in Pkg_W. The optional PKG_% column shows the % of time in the measurement interval that RAPL power limiting is in effect. Note that the RAPL energy counters have some limitations. First hardware updates the countesr about once every milli-second. This is fine for typical turbostat measurement intervals > 1 sec. However, when turbostat is used to measure events that approach 1ms, the counters are less useful. Second, the energy counters are 32-bits long and subject to wrapping. For example, the counter increments in 15 micro-Joule units on my local server, and the part could (in theory) consume energy at its TDP specification of 130 Watts. Here the 32-bit Joule counter coult wrap as soon as 8 minutes. Turbostat detects and handles up to 1 counter overflow per interval. But when the measurement interval exceeds the guaranteed counter range, we can't detect if more than 1 overflow occured. So in this case turbostat indicates that the results are in question by replacing the fractional part of the result with ""**"": Pkg_W Cor_W GFX_W 3** 0** 0** Third, the RAPL counters are energy (Joule) counters -- they sum up weighted events in the package to estimate energy consumed. They are not analong power (Watt) meters. In practice, they tend to under-count because they don't cover every possible use of energy in the package. Also, the accuracy of the RAPL counters will vary between product generations, and between SKU's in the same product generation. turbostat's -v option now displays per-Package Thermal Design Power (TDP). This is the specification for the part's maximum power consumption. eg. on a 2-package SNB-Xeon system: cpu0: 130.00 Watts Pkg Thermal Design Spec cpu8: 130.00 Watts Pkg Thermal Design Spec Finally, turbostat's -R option enables decoding and output of all RAPL registers on turbostat startup. Increment turbostat version number to 3. Signed-off-by: Len Brown <len.brown@intel.com>",14/11/2012 20:36:33,,FALSE-POSITIVE,https://github.com/lenb/linux/commit/f3c7bfa850840c6c96a26796786ffdc7761519ef,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute energy consumption],[DO NOT ANALYZE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,lenb/linux,lenb,,,lenb,
Evervolv,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02 Conflicts: src/com/android/phone/PhoneApp.java",15/11/2012 04:52:21,,NOT-FOUND,https://github.com/Evervolv/android_packages_apps_Phone/commit/c737f6a6394049b3477e1d010ab65ed51977a104,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Evervolv/android_packages_apps_Phone,,,,,
texane,nrf,"[ update, wip ] adc, disable digital inputs for reduced power consumption",15/11/2012 10:17:47,,OK,https://github.com/texane/nrf/commit/54356a43e338109b732981c8b4f2746cc38ce8a3,,,[OK][Disabling component],[OK] [Disable component] [Disable input],[DO NOT ANALYZE],[Disable component] [Disable input] [Disabling component],EXISTS,[disable digital inputs],[reduce power consumption],[Disable component] [Disable input],[Pin configuration] [Sub1: Disable digital input],,,Certain,MCU,No,Hardware,C,"adc, disable digital inputs for reduced power consumption",texane/nrf,,[Pin management],,,?
halaszk,SGS3,Dynamically adjust cpu_max_limit according to scaling_max setting without breaking power save mode tnx yank555-lu,16/11/2012 15:35:39,,FALSE-POSITIVE,https://github.com/halaszk/SGS3/commit/c20fafdff666a1bd3aa2860c385ae0c42c06dfb0,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,halaszk/SGS3,halaszk,,,halaszk,
winki,SpaceWars,energy consum and ressource production optimization,17/11/2012 12:23:30,,DUPLICATE,https://github.com/winki/SpaceWars/commit/f999dfe15d0ef1ab23bc307cbda7419cf6adc04f,,,[DUPLICATE],[DUPLICATE] [71d6b2f27a5f3207550ce58ab35633ad0f64a0bc],[DUPLICATE],[71d6b2f27a5f3207550ce58ab35633ad0f64a0bc],EXISTS,,,,,,,,,,,,,winki/SpaceWars,kurky91,,,kurky91,
rodan,playa,add power consumption profile,18/11/2012 06:26:52,,FALSE-POSITIVE,https://github.com/rodan/playa/commit/707aea6c55a4867090cde6720283277dfc218d26,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,rodan/playa,rodan,,,rodan,
pfriedel,TinyFiveCircle,And turning off BOD again - it killed the sleep power consumption.,19/11/2012 21:03:33,,UNABLE-TO-CATEGORIZE,https://github.com/pfriedel/TinyFiveCircle/commit/5be8d675d1269a31c7817ebc9a3a9f43ab155279,,,[OK][?],[UNABLE-TO-CATEGORIZE] [App specific],[DO NOT ANALYZE],[App specific] [?],EXISTS,,,,,,,,,,,,,pfriedel/TinyFiveCircle,pfriedel,,,pfriedel,
shanev,dotfiles,.osx: Add energy saver preferences,19/11/2012 23:18:30,,DUPLICATE,https://github.com/shanev/dotfiles/commit/41431ac718d582462b244229c55b05f365e28602,,,,,,,EXISTS,,,,,,,,,,,,,shanev/dotfiles,mathiasbynens,,,mathiasbynens,
mcgrof,qca-swiss-army-knife,qca-swiss-army-knife: refresh 9565 initvals Enable hw PLL power save to reduce power consumption in sleep state Signed-off-by: Rajkumar Manoharan <rmanohar@qca.qualcomm.com> Signed-off-by: Luis R. Rodriguez <mcgrof@qca.qualcomm.com>,20/11/2012 01:29:01,,UNABLE-TO-CATEGORIZE,https://github.com/mcgrof/qca-swiss-army-knife/commit/5fbd4b3d4d908901774646fded50197032ac479f,,,[OK][?],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[?],EXISTS,,,,,,,,,,,,,mcgrof/qca-swiss-army-knife,,,,mcgrof,
lenb,linux,"tools/power turbostat: print Watts Intel's Sandy Bridge and Ivy Bridge processor generations support RAPL (Run-Time-Average-Power-Limiting). Per the Intel SDM (Intel® 64 and IA-32 Architectures Software Developer Manual) RAPL provides hardware power information and control via MSRs (Model Specific Registers). RAPL MSRs are designed primarily as a method to implement power capping. However, even if power capping is not enabled, the RAPL registers are useful for monitoring system power and operation. Turbostat now displays the information provided by reading RAPL MSRs. As always, turbostat never writes any MSRs. turbostat's default display now includes Watts for hardware that supports RAPL: [root@sandy]# turbostat cor CPU %c0 GHz TSC %c1 %c3 %c6 %c7 %pc2 %pc3 %pc6 %pc7 Pkg_W Cor_W GFX_W 0.07 0.80 2.29 0.13 0.00 0.00 99.80 0.43 0.00 0.72 98.16 3.49 0.12 0.14 0 0 0.14 0.80 2.29 0.12 0.00 0.00 99.74 0.43 0.00 0.72 98.16 3.49 0.12 0.14 0 4 0.04 0.80 2.29 0.22 1 1 0.06 0.80 2.29 0.08 0.00 0.00 99.86 1 5 0.03 0.80 2.29 0.10 2 2 0.17 0.80 2.29 0.14 0.00 0.00 99.69 2 6 0.03 0.79 2.29 0.28 3 3 0.03 0.80 2.29 0.07 0.00 0.00 99.90 3 7 0.04 0.80 2.29 0.06 The Pkg_W column shows Watts for each package (socket) in the system. On multi-socket systems, the system summary on the 1st row shows the sum for all sockets together. The Cor_W column shows Watts due to processors cores. Core_W is included in Pkg_W. The optional GFX_W column shows Watts due to the graphics ""un-core"". GFX_W is included in Pkg_W. The optional RAM_W column on server processors shows Watts due to DRAM DIMMS. The optional PKG_% and RAM_% columns on server processors shows the % of time in the measurement interval that RAPL power limiting is in effect on the package and on DRAM. Note that the RAPL energy counters have some limitations. First hardware updates the countesr about once every milli-second. This is fine for typical turbostat measurement intervals > 1 sec. However, when turbostat is used to measure events that approach 1ms, the counters are less useful. Second, the energy counters are 32-bits long and subject to wrapping. For example, the counter increments in 15 micro-Joule units on my local server, and the part could (in theory) consume energy at its TDP specification of 130 Watts. Here the 32-bit Joule counter coult wrap as soon as 8 minutes. Turbostat detects and handles up to 1 counter overflow per interval. But when the measurement interval exceeds the guaranteed counter range, we can't detect if more than 1 overflow occured. So in this case turbostat indicates that the results are in question by replacing the fractional part of the result with ""**"": Pkg_W Cor_W GFX_W 3** 0** 0** Third, the RAPL counters are energy (Joule) counters -- they sum up weighted events in the package to estimate energy consumed. They are not analong power (Watt) meters. In practice, they tend to under-count because they don't cover every possible use of energy in the package. Also, the accuracy of the RAPL counters will vary between product generations, and between SKU's in the same product generation. turbostat's -v option now displays per-Package Thermal Design Power (TDP). This is the specification for the part's maximum power consumption. eg. on a 2-package SNB-Xeon system: cpu0: 130.00 Watts Pkg Thermal Design Spec cpu0: 35.00 Watts DRAM Thermal Design Spec cpu8: 130.00 Watts Pkg Thermal Design Spec cpu8: 35.00 Watts DRAM Thermal Design Spec Finally, turbostat's -R option enables decoding and output of all RAPL registers on turbostat startup. Increment turbostat version number to 3. Signed-off-by: Len Brown <len.brown@intel.com>",20/11/2012 01:48:55,,NOT-FOUND,https://github.com/lenb/linux/commit/2441a44db6a3cc20e94a96bc2aae54eb1ec4cf7f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,lenb/linux,,,,,
riverzhou,otter-omap-3,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>",20/11/2012 13:53:32,,OK,https://github.com/riverzhou/otter-omap-3/commit/8ef6b3c00b0bc811e9aae548e90e56902818efbe,,,[OK][?],[OK] [Disable power down mode] [App specific],[DO NOT ANALYZE],[Disable power down mode] [App specific] [?],EXISTS,[Prohibit usage of Power-Down mode],[ZQ calibration very short power-down cycles create bandwidth issues and increases overall system power consumption],[Configure lower power mode] [Disable power down mode] [Disable power down mode on low power] ,[Energy bug],,Cool,Certain,Android,Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417,OS,C,"Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, theguideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4.",riverzhou/otter-omap-3,grygoriyS,[Energy bug],,,Kernel arch
riverzhou,otter-omap-3,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>",20/11/2012 13:55:42,,DUPLICATE,https://github.com/riverzhou/otter-omap-3/commit/3d198ff06f31cd283e62f629624c3baee51bef37,,,,,,,EXISTS,,,,,,,,,,,,,riverzhou/otter-omap-3,grygoriyS,,,,
Kuzma30,kernel3NookTablet,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>",20/11/2012 15:38:51,,DUPLICATE,https://github.com/Kuzma30/kernel3NookTablet/commit/7b8328fc285dd8f0d3fdfdd35304df8a65d1f4d9,,,,,,,EXISTS,,,,,,,,,,,,,Kuzma30/kernel3NookTablet,grygoriyS,,,Kuzma30,
ersatzavian,ei-fw-tom,Added wifi power save to pig firmware,21/11/2012 01:09:48,,OK,https://github.com/tombrew/ei-fw-tom/commit/0495769e473144ff53134461ce69fb48f66efad6,https://github.com/ersatzavian/ei-fw-tom/commit/0495769e473144ff53134461ce69fb48f66efad6,,[OK][SET WIFI POWER SAVE],[OK] [Enable power save] [Enable wifi power save],[DO NOT ANALYZE],[Enable power save] [Enable wifi power save] [SET WIFI POWER SAVE],EXISTS,[Added wifi power save],[power saving],[Enable device power save] [Enable wifi power save],[Enable device low power mode],,Trade latency for power consumption,Certain,Eletric Imp?,No,Application,Nut ?,Added wifi power save to pig firmware,ersatzavian/ei-fw-tom,tombrew,[Disabling feature/devices],,tombrew,Embedded application
joelagnel,linux-kernel,"AM33XX: Clock: Fix JTAG disconnect during kernel boot Debugss currently uses default clk ops which does not increment usecount on the clock structure, this causes kernel to disable debugss clock when CONFIG_OMAP_CLOCKRESET is set, causing JTAG disconnect, as it thinks it is unused to save power. We avoid using these ops and rely on omap2_clk_enable/disable instead which increments the usecount. Signed-off-by: Joel A Fernandes <joelagnel@ti.com>",21/11/2012 01:32:27,,FALSE-POSITIVE,https://github.com/joelagnel/linux-kernel/commit/1f0e27b85882e894f96421a7421d939f5eed9c7d,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,joelagnel/linux-kernel,,,,,
succulent,kernel3NookTablet,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. REVERTED - As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>reverted",22/11/2012 19:54:36,,NOT-FOUND,https://github.com/succulent/kernel3NookTablet/commit/74e67d1cea260c0b642d6278d69031a46acb4e32,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,succulent/kernel3NookTablet,,,,,
abourdon,powerapi-akka,Added new formula-cpu-max CPU Formula module which computes the CPU power consumption of a process in making the ratio between the CPU process usage and the CPU power at the maximum charge.,23/11/2012 14:12:42,,FALSE-POSITIVE,https://github.com/abourdon/powerapi-akka/commit/2725c1d8bf5c9fce1eee9636ae552fe022d7a049,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute energy consumption],[DO NOT ANALYZE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,abourdon/powerapi-akka,,,,,
lenb,linux,"tools/power turbostat: v3.0: monitor Watts and Temperature Show power in Watts and temperature in Celsius when hardware support is present. Intel's Sandy Bridge and Ivy Bridge processor generations support RAPL (Run-Time-Average-Power-Limiting). Per the Intel SDM (Intel® 64 and IA-32 Architectures Software Developer Manual) RAPL provides hardware energy counters and power control MSRs (Model Specific Registers). RAPL MSRs are designed primarily as a method to implement power capping. However, they are useful for monitoring system power whether or not power capping is used. In addition, Turbostat now shows temperature from DTS (Digital Thermal Sensor) and PTM (Package Thermal Monitor) hardware, if present. As before, turbostat reads MSRs, and never writes MSRs. New columns are present in turbostat output: The Pkg_W column shows Watts for each package (socket) in the system. On multi-socket systems, the system summary on the 1st row shows the sum for all sockets together. The Cor_W column shows Watts due to processors cores. Note that Core_W is included in Pkg_W. The optional GFX_W column shows Watts due to the graphics ""un-core"". Note that GFX_W is included in Pkg_W. The optional RAM_W column on server processors shows Watts due to DRAM DIMMS. As DRAM DIMMs are outside the processor package, RAM_W is not included in Pkg_W. The optional PKG_% and RAM_% columns on server processors shows the % of time in the measurement interval that RAPL power limiting is in effect on the package and on DRAM. Note that the RAPL energy counters have some limitations. First, hardware updates the counters about once every milli-second. This is fine for typical turbostat measurement intervals > 1 sec. However, when turbostat is used to measure events that approach 1ms, the counters are less useful. Second, the 32-bit energy counters are subject to wrapping. For example, a counter incrementing 15 micro-Joule units on a 130 Watt TDP server processor could (in theory) roll over in about 9 minutes. Turbostat detects and handles up to 1 counter overflow per measurement interval. But when the measurement interval exceeds the guaranteed counter range, we can't detect if more than 1 overflow occured. So in this case turbostat indicates that the results are in question by replacing the fractional part of the Watts in the output with ""**"": Pkg_W Cor_W GFX_W 3** 0** 0** Third, the RAPL counters are energy (Joule) counters -- they sum up weighted events in the package to estimate energy consumed. They are not analong power (Watt) meters. In practice, they tend to under-count because they don't cover every possible use of energy in the package. The accuracy of the RAPL counters will vary between product generations, and between SKU's in the same product generation, and with temperature. turbostat's -v (verbose) option now displays more power and thermal configuration information -- as shown on the turbostat.8 manual page. For example, it now displays the Package and DRAM Thermal Design Power (TDP): cpu0: MSR_PKG_POWER_INFO: 0x2f064001980410 (130 W TDP, RAPL 51 - 200 W, 0.045898 sec.) cpu0: MSR_DRAM_POWER_INFO,: 0x28025800780118 (35 W TDP, RAPL 15 - 75 W, 0.039062 sec.) cpu8: MSR_PKG_POWER_INFO: 0x2f064001980410 (130 W TDP, RAPL 51 - 200 W, 0.045898 sec.) cpu8: MSR_DRAM_POWER_INFO,: 0x28025800780118 (35 W TDP, RAPL 15 - 75 W, 0.039062 sec.) Signed-off-by: Len Brown <len.brown@intel.com>",24/11/2012 06:41:05,,FALSE-POSITIVE,https://github.com/lenb/linux/commit/32cc109cbbeac76d7a772e2dd4d6f9480313528c,,,[RELATED] [Improve power usage visualization],[RELATED] [Improve power usage visualization],[RELATED] [Improve power usage visualization],[Improve power usage visualization],EXISTS,,,,,,,,,,,,,lenb/linux,lenb,,,lenb,
Laurenceb,STM32InertialMonitor,power saving and file setup cleanup,26/11/2012 20:42:52,,UNABLE-TO-CATEGORIZE,https://github.com/Laurenceb/STM32InertialMonitor/commit/b5525113155e331cbaa9e6ad33277f0272a7967a,,,[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,Laurenceb/STM32InertialMonitor,Laurenceb,,,Laurenceb,
jackybourgeois,newp,library implementation progress: -> environment definition -> global energy consumption mng,27/11/2012 00:17:15,,FALSE-POSITIVE,https://github.com/jackybourgeois/newp/commit/9115f1ea021c8018acf44dba1a85e926e4a3d6ce,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSIVITE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,jackybourgeois/newp,jackybourgeois,,,jackybourgeois,
AOKPZMod,android_device_huawei_hws7300u,Add Power save mod (Device Settings),27/11/2012 07:14:11,,RELATED,https://github.com/AOKP-MEDIAPAD/android_device_huawei_hws7300u/commit/863b09ae91bb8ad106c2b389d1ebb73e889edb85,https://github.com/AOKPZMod/android_device_huawei_hws7300u/commit/863b09ae91bb8ad106c2b389d1ebb73e889edb85,,[RELATED] [ADD POWER MENU],[RELATED] [Add power menu],[RELATED] [ADD POWER MENU],[Add power menu],EXISTS,,,,,,,,,,,,,AOKPZMod/android_device_huawei_hws7300u,,,,,
FDemicheli,contiki-branch,"Modified code of MLT metric that select path with minor avg energy consumed, and code of MLT that select path with minor total energy consumed. The purpose is to reduce the number of exchanges od preferred parent.",28/11/2012 08:05:55,,FALSE-POSITIVE,https://github.com/FDemicheli/contiki-branch/commit/e7692b3953ac43fd0774cf283f6762240539468b,,,[FALSE-POSIVITE],[FALSE-POSITIVE],[FALSE-POSIVITE],,EXISTS,,,,,,,,,,,,,FDemicheli/contiki-branch,,,,,
pawitp,android_kernel_samsung_aries,"Revert ""bcmdhd: Disable MAX power saving mode as disabled by Samsung"" Jellybean 4.2 now provides a user-configurable option ""Wi-Fi optmization"" in Wi-Fi advanced settings which enables/disables suspend mode. This reverts commit 1a4e897e86dad6c1c531ea55c93580e52e18a4e2.",30/11/2012 12:02:17,,FALSE-POSITIVE,https://github.com/pawitp/android_kernel_samsung_aries/commit/ab2dc26b9959854edaa89580b611739de1b9563e,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Revert],[DO NOT ANALYZE],[Revert],EXISTS,,,,,,,,,,,,,pawitp/android_kernel_samsung_aries,pawitp,,,pawitp,
jt1134,android_kernel_samsung_aries,"Revert ""bcmdhd: Disable MAX power saving mode as disabled by Samsung"" Jellybean 4.2 now provides a user-configurable option ""Wi-Fi optmization"" in Wi-Fi advanced settings which enables/disables suspend mode. This reverts commit 1a4e897e86dad6c1c531ea55c93580e52e18a4e2.",01/12/2012 02:44:32,,DUPLICATE,https://github.com/jt1134/android_kernel_samsung_aries/commit/333b69c64ad9547ecee687824dfa0d858cd9a05c,,,,,,,EXISTS,,,,,,,,,,,,,jt1134/android_kernel_samsung_aries,pawitp,,,jt1134,
steven676,ti-omap-encore-kernel3,"Remove MMC_PM_KEEP_POWER from wl1271 mmc interface This was a workaround for suspend/resume issues with wifi on, which appear to have been solved by one or more of the various PM patches that's gone into the kernel since. Remove the workaround, which should reduce system power consumption in suspend.",01/12/2012 10:23:59,,NOT-FOUND,https://github.com/steven676/ti-omap-encore-kernel3/commit/a6c00adc8c8337d0eb8adae61806c23b5682bbfb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,steven676/ti-omap-encore-kernel3,,,,,
CyanogenMod,android_kernel_samsung_aries,"Revert ""bcmdhd: Disable MAX power saving mode as disabled by Samsung"" Jellybean 4.2 now provides a user-configurable option ""Wi-Fi optmization"" in Wi-Fi advanced settings which enables/disables suspend mode. This reverts commit 1a4e897e86dad6c1c531ea55c93580e52e18a4e2.",02/12/2012 02:35:32,,DUPLICATE,https://github.com/CyanogenMod/android_kernel_samsung_aries/commit/ab2dc26b9959854edaa89580b611739de1b9563e,,,,,,,EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_samsung_aries,pawitp,,,pawitp,
CyanogenMod,android_kernel_samsung_aries,"Update notes for submitted changes * Revert ""bcmdhd: Disable MAX power saving mode as disabled by Samsung""",02/12/2012 02:36:00,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_kernel_samsung_aries/commit/4ef0e000ec5f9a6014f6a2f0f2946714b4adc933,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_samsung_aries,pawitp,,,,
pcgen,pcgen-svn,[ 1340088 ] Willpower save should be Will git-svn-id: svn+ssh://svn.code.sf.net/p/pcgen/code/Trunk/pcgen@33 ef53c05b-3124-4d59-ae7d-fe3273f42be7,04/12/2012 06:50:37,,NOT-FOUND,https://github.com/pcgen/pcgen-svn/commit/e200bf43d6c0d5b1833a39242e57b235a4048c2a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,pcgen/pcgen-svn,,,,,
CyanogenMod,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",05/12/2012 15:15:35,,TRADEOFF,https://github.com/CyanogenMod/android_frameworks_base/commit/c70ebdae9f02d133504874bb8d0ed842c4e812c2,,,[TRADE-OFF][BETTER USER EXP],[TRADEOFF] [Android],[DO NOT ANALYZE],[Android] [BETTER USER EXP],EXISTS,[Prevent going to power saving mode] [Change:Prevent scanning during DHCP],[Improve user experience],,,,,Certain,Android,No,OS software stack,Java,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail.",CyanogenMod/android_frameworks_base,,Responsiveness,,chirayudesai,Software stack framework
AndroidRul3z,platform_frameworks_base-1,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",05/12/2012 16:02:02,,NOT-FOUND,https://github.com/AndroidRul3z/platform_frameworks_base-1/commit/5843a84f5111fdccc29c6ca127bf04acd78686b9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AndroidRul3z/platform_frameworks_base-1,,,,,
groeck,linux,"x86,AMD: Power driver support for AMD's family 16h processors Add family 16h PCI ID to AMD's power driver to allow it report power consumption on these processors. Signed-off-by: Boris Ostrovsky <boris.ostrovsky@amd.com> Cc: stable@vger.kernel.org Signed-off-by: Guenter Roeck <linux@roeck-us.net>",06/12/2012 16:03:35,,NOT-FOUND,https://github.com/groeck/linux/commit/22e32f4f57778ebc6e17812fa3008361c05d64f9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,groeck/linux,,,,,
IceColdJelly42,frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",07/12/2012 13:17:34,,DUPLICATE,https://github.com/IceColdJelly42/frameworks_base/commit/3a19c92a4ea4d5dcda9207efc5ba071a555d8c75,,,,,,,EXISTS,,,,,,,,,,,,,IceColdJelly42/frameworks_base,,,,LorDClockaN,
AndroidRul3z,platform_frameworks_base-1,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",07/12/2012 18:21:39,,NOT-FOUND,https://github.com/AndroidRul3z/platform_frameworks_base-1/commit/8d4ba99f790efd9451539cf1e05fb79405da7654,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AndroidRul3z/platform_frameworks_base-1,,,,,
greg-pe,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",08/12/2012 10:23:09,,DUPLICATE,https://github.com/greg-pe/android_frameworks_base/commit/cac5389202b78be15badc684fa73505301ea85b7,,,,,,,EXISTS,,,,,,,,,,,,,greg-pe/android_frameworks_base,,,,greg-pe,
Buckmarble,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",08/12/2012 11:01:09,,NOT-FOUND,https://github.com/Buckmarble/android_frameworks_base/commit/6d9d347b2cd2b10343694bf8fb2790b794ffcb4d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Buckmarble/android_frameworks_base,,,,,
Buckmarble,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",09/12/2012 01:11:10,,NOT-FOUND,https://github.com/Buckmarble/android_frameworks_base/commit/7b85730be7e054186d5bc0c5a34b5d7c36b15883,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Buckmarble/android_frameworks_base,,,,,
Buckmarble,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",09/12/2012 04:16:47,,NOT-FOUND,https://github.com/Buckmarble/android_frameworks_base/commit/c0b5f1de3e0fabed7302f69c74c9ced5d12a0dd4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Buckmarble/android_frameworks_base,,,,,
carz2,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",09/12/2012 04:39:02,,DUPLICATE,https://github.com/carz2/android_frameworks_base/commit/82ef17bf313c953a89ec8e9b29693d246d21c33b,,,,,,,EXISTS,,,,,,,,,,,,,carz2/android_frameworks_base,,,,carz2,
niker,elitekernel_oxp,Extreme power saving mode (tm),10/12/2012 05:18:26,,OK,https://github.com/niker/elitekernel_oxp/commit/58a3b12682922d1d9ac338ecf5eb972716e45886,,,[OK][SCALE CPU FREQ],[OK] [Scale CPU frequency] [Set frequency] [Set min frequency] [Android],[DO NOT ANALYZE],[Scale CPU frequency] [Set frequency] [Set min frequency] [Android] [SCALE CPU FREQ],EXISTS,[Extreme power saving mode] [improve governor],[power saving],[Limit minimum frequency] [Reduce minimum frequency] [Scale CPU frequency],[DVFS],,,Certain,Android,No,OS,C,Extreme power saving mode (tm),niker/elitekernel_oxp,,[Frequency and voltage scaling],,,Kernel arch
STS-Dev-Team,android_kernel_motorola_msm8960-common,"wlan: Release 3.2.1.13 The following changes were incorporated in this release: === Dump neighbor state info when scan is not allowed This commit only adds a debug statement and supplements the changes made previously. === Improve convergence of LFR roam candidate scan algorithm When no roam candidates are found, the existing scan algorithm takes long time to converge and there is no guarantee that all channels will be scanned. This not only impacts power consumption, but also affects roam convergence by not being able to find roam candidates quickly. The algorithm is being modified as follows in an attempt to address both power and convergence of the algorithm: 1. If no candidates were found for the very first time, re-register with TL by lowering the lookup threshold by 3 dBm. Once look up DOWN notification is received, we will scan on channels in the occupied list followed by ALL valid channels not in the occupied list. 2. If still no candidates are found, start neighbor scan results refresh timer (default is 20s). Upon expiry of the timer, once again scan on channels in the occupied list followed by ALL valid channels not in the occupied list. 3. If still no candidates are found, abort scanning and go back to connected state. At this instant, only lookup UP event is registered with TL. This changelist includes the following: a) Above mentioned scan algorithm. b) Populate occupied list only with channels where candidates matching the profile are found. c) Initialize the occupied list only when a connection is made to a profile different from the previous profile. d) Use lookup UP threshold 2dB higher than lookup DOWN threshold. NOTE: This change is being made ONLY for LFR. === De-register lookup UP indication during pre-auth Upon receiving a lookup UP indication, it suggests that the link to the current AP has improved and we clean-up all scan control info before moving back to connected state. However, if we receive a lookup UP indication while we are in the middle of a pre-auth, it can lead to several race conditions: 1) Lookup UP indication received after SME posted pre-auth message to PE and before PE posts the auth response back to SME. In this instance, while SME layer cancels the pre-auth, the PE/LIM would have created an FT session which goes unaccounted for. This extra session causes subsequent scans to fail and eventually results in a HB failure. 2) Lookup UP indication received after reassoc and before key exchange. This instance is even more severe. When this happens, we would ignore the connect indication received following key exchange. Due to this, all layers except the neighbor roam engine has moved to the new AP while the roam engine still thinks we are associated to the older AP. Due to this mis-matched roam profile, we end up: (i) rejecting new candidate APs found during scan, (ii) pre-auth with the AP we are currently associated to, etc. This is being fixed by de-registering for lookup UP indication as soon as we receive the reassoc DOWN indication. If the pre-auth fails with all available roam candidates, we once again register for a lookup UP indication. === Only flush non-P2P results from scan cache prior to LFR scan Currently, we flush the scan results from the scan cache prior to LFR scans. This might unnecessarily purge P2P scan results and might delay finding P2P clients in concurrency mode. This fix only purges non-P2P clients prior to LFR scans. === Insure that LFR BG scanning is not performed for any non-Infra association Insure that LFR BG scanning is not performed for any non-Infra association. Modify csrRoamIsFastRoamEnabled() to check the persona for the association. Return FALSE is the persona is not VOS_STA_MODE. === Remove call to palStopTimer for preauth Remove call to palStopTimer in csrNeighborRoamPreauthRspHandler. === Fix driver hang in csrRoamRoamingStateDisassocRspProcessor During roam, we disassociate with the current AP before reassociating with the new one. Upon receiving the disassoc response from PE, we look-up for the hand-off candidate in the scan results list to get the Bss description. If this look-up fails, the current code is unable to recover and leads to a driver hang. While it removes the roam command from SME active queue, it does not reschedule another one from the pending queue due to which no pending SME commands get processed and the SME queue gets stuck. The recovery mechanism is being fixed as follows: 1. Look-up for the hand-off candidate in the scan results list. 2. If the look-up fails, then we need to disconnect and clean-up. a) For this, inform HDD about the roam failure and disconnect. b) Post a disassoc request to PE with BSSID of hand-off candidate so that it cleans-up the FT session that was created when pre-auth was completed. c) Upon receiving the disassoc response, call csrRoamComplete with reason as eCsrJoinFailure so that SME layer cleans-up as well. This also takes care of removing the roam command from the active queue and schedules the next command from the pending queue, thereby unblocking the SME layer. === Populate Correct Scan Mode for Roam The init scan request in Riva is failing with reason code ""QWLANFW_STATUS_BMPS_NO_REPLY_TO_NULLFRAME_FROM_AP"". In Riva in case of roaming, we should be ignoring the tx complete status and hence not returning a failure when transmission of NULL frame to the AP fails. However since the scan mode populated in the init scan request sent from the host is incorrect we are seeing a failure. This fix is to populate the scan mode in LIM to reflect a roaming type regardless of the next state. === Send EDCA Parameters After Reassoc The EDCA parameters are being sent down to Riva before receiving the reassoc response, as a result all the values in the request are zero. Send the EDCA parameters after re-assoc response is received. === Update csrRoamInitGlobals() to support static linking For Nexus 4 the WLAN driver is statically linked. On this platform it was observed that occasionally if a P2P session was established, that subsequently the HotSpot mode could not be enabled (reference Google bug 7499425: Cannot enable WiFi-Tethering, if WiFi-Direct was connected). Analysis of the logs showed that CSR did not allow the HotSpot session to be created because it thought another beaconing session, namely a P2P GO session, was already active. It turns out that CSR utilizes a static global structure csrRoamRoamSession to maintain per-session information. On Product Lines where the WLAN driver is dynamically loaded this static structure is reinitialized by the OS when the driver changes modes of operation, since the driver will be reloaded when the mode changes. But when the driver is statically linked this static structure is not reinitialized. Hence when the driver changes from STA + P2P mode to HotSpot mode, CSR believe P2P mode is still enabled. Therefore modify csrRoamInitGlobals() to always initialize csrRoamRoamSession before using it. In addition delete two other static structures, csrRoamPowerTableFromEeprom and csrRoamPowerTableFromEeprom40MHz, which are no longer being used. ===",10/12/2012 15:02:36,,NOT-FOUND,https://github.com/STS-Dev-Team/android_kernel_motorola_msm8960-common/commit/f6b984fd0a8bba92aaf3d79bdb037523f0eb6d12,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,STS-Dev-Team/android_kernel_motorola_msm8960-common,,,,,
SchedMD,slurm,Minor clarification to power save mode documentation,10/12/2012 22:31:37,,FALSE-POSITIVE,https://github.com/SchedMD/slurm/commit/ad77aee02cf168542d6f16abf3b0db7d8b8b65e0,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,SchedMD/slurm,jette,,,jette,
LiquidSmooth,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",11/12/2012 07:44:05,,DUPLICATE,https://github.com/LiquidSmooth/android_frameworks_base/commit/91a0afcda7f393f393ff8421112b3e49054c2dd3,,,,,,,EXISTS,,,,,,,,,,,,,LiquidSmooth/android_frameworks_base,,,,nocoast,
Buckmarble,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",11/12/2012 11:22:47,,NOT-FOUND,https://github.com/Buckmarble/android_frameworks_base/commit/bf24eba77a9c941a5aa3dfb5f1117b224c6cc8e0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Buckmarble/android_frameworks_base,,,,,
SuperNexus,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02 Conflicts: src/com/android/phone/PhoneApp.java",12/12/2012 10:22:00,,NOT-FOUND,https://github.com/SuperNexus/android_packages_apps_Phone/commit/4616eec18656e095865933e9e7754ded27bc3cf7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,SuperNexus/android_packages_apps_Phone,,,,,
rascarlo,platform_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",12/12/2012 18:10:57,,NOT-FOUND,https://github.com/rascarlo/platform_frameworks_base/commit/60db8ed2f51a7e82fd1e0333b8535ab0b1c62b2c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,rascarlo/platform_frameworks_base,,,,,
burstlam,android_packages_apps_Phone,"Ported Phone: Disable accelerometer sensor while in-call and screen UI is off (CM) orginal threads : https://github.com/CyanogenMod/android_packages_apps_Phone/commit/fa2b5a82bd8dee2599f3d8db2d68961ad14d13a8 During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption Change-Id: Ie6aef2db0f634ce51e84a3736cfb85cf2ff43202 CRs-Fixed: 336244",14/12/2012 08:59:43,,NOT-FOUND,https://github.com/burstlam/android_packages_apps_Phone/commit/e4d8c7e62c2e5e95d4722efdb0862970a6745641,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,burstlam/android_packages_apps_Phone,,,,,
orschiro,Linux,Disable mobile broadband to save power,15/12/2012 09:59:04,,NOT-FOUND,https://github.com/orschiro/Linux/commit/596a37db9f2de38aba13f63957666e5118e0f65e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,orschiro/Linux,,,,,
Buckmarble,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",15/12/2012 20:30:49,,NOT-FOUND,https://github.com/Buckmarble/android_frameworks_base/commit/c009e82beff5280cf85f66d76d9c55166be99f15,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Buckmarble/android_frameworks_base,,,,,
SlimRoms,frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",16/12/2012 00:12:57,,DUPLICATE,https://github.com/SlimRoms/frameworks_base/commit/b191a5d3665eefc8dc6faae6719c320b7586f02b,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/frameworks_base,,,,,
snandlal,frameworks_base,"Don't enable the light sensor if it's not being used We want to fully disable the lightsensor when it's not used, for two reasons: 1 - Power savings 2 - Sensors that control the backlight directly need to be disabled when brightness control is set to manual. Forcibly enabling the sensor when the screen turns on makes these devices incapable of using manual brightness. Change-Id: I64c1114348ff096e0a72b265f6f141d1ecef249c Fix button backlights that depend on ALS On a few devices, lighting the buttons when the screen turns on depends on the lightsensor, regardless of the user preference. So go back to enabling the sensor whenever the screen turns on, and enforce the user preference after running through the light settings once. Change-Id: I6f036a32315eb7688a9cd11d4bd70dbca1b2fa8b",17/12/2012 03:35:51,,NOT-FOUND,https://github.com/snandlal/frameworks_base/commit/f2ebcbc89044884eae24e2fc85213872b0107674,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,snandlal/frameworks_base,,,,,
burstlam,android_packages_apps_Phone,"Ported Phone: Disable accelerometer sensor while in-call and screen UI is off (CM) orginal threads : https://github.com/CyanogenMod/android_packages_apps_Phone/commit/fa2b5a82bd8dee2599f3d8db2d68961ad14d13a8 During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption Change-Id: Ie6aef2db0f634ce51e84a3736cfb85cf2ff43202 CRs-Fixed: 336244 Conflicts: src/com/android/phone/PhoneGlobals.java",17/12/2012 03:39:00,,OK,https://github.com/burstlam/android_packages_apps_Phone/commit/1e509fe6d08f66d7fab47e01c632a6bd181afb34,,,[OK][DISABLING DEVICES],[OK] [Disable component] [Disable accelerometer] [Android] [Power saving action on screen off],[DO NOT ANALYZE],[Disable component] [Disable accelerometer] [Android] [Power saving action on screen off] [DISABLING DEVICES],EXISTS,[Disable accelerometer sensor while in-call and screen UI is off],[Krait is woken up frequently by the sensors even when the Screen UI is off while in-call],[Disable component] [Disable component when in call] [Power saving action on screen off] [Disabling devices],[Disable device] [Condition: in call and  screen off],,,Certain,Android,CRs-Fixed: 336244,Application,Java,"uring an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform",burstlam/android_packages_apps_Phone,burstlam,[Energy bug],[in call and  screen off],burstlam,Application
smokin-guns,SmokinGuns,Merged enhancement by TheDoctor: Energy save git-svn-id: https://smokinguns.svn.sourceforge.net/svnroot/smokinguns/trunk@664 07eb42f0-b032-4355-afd3-42b1f3832223,19/12/2012 23:27:57,,OK,https://github.com/smokin-guns/SmokinGuns/commit/9ccbe2834ccb8ea68237b54138e87759e4a0576a,,,[OK][REMOVING INACTIVE CLIENTS],[OK] [Drop connection on inactivity],[OK] [APP SPECIFIC],[Drop connection on inactivity] [REMOVING INACTIVE CLIENTS] [APP SPECIFIC],EXISTS,[Energy save],[power saving],[REVIEW],[Improve timeout] [Sub1: Drop connection] [Condition: inactivity],,,Certain,-,No,Application,C,Merged enhancement by TheDoctor: Energy save,smokin-guns/SmokinGuns,,[Timing out],[inactivity],,Application
gokhanmoral,siyahkernel-sgs3,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,20/12/2012 20:25:54,,DUPLICATE,https://github.com/gokhanmoral/siyahkernel-sgs3/commit/f8769763ff67b99e724d033ba233dd8f75951d82,,,,,,,EXISTS,,,,,,,,,,,,,gokhanmoral/siyahkernel-sgs3,AndreiLux,,,gokhanmoral,
amidabuddha,saga-ics-crc-3.0.16,"Linux 3.0.57 powerpc/ptrace: Fix build with gcc 4.6 commit e69b742a6793dc5bf16f6eedca534d4bc10d68b2 upstream. gcc (rightfully) complains that we are accessing beyond the end of the fpr array (we do, to access the fpscr). The only sane thing to do (whether anything in that code can be called remotely sane is debatable) is to special case fpscr and handle it as a separate statement. I initially tried to do it it by making the array access conditional to index < PT_FPSCR and using a 3rd else leg but for some reason gcc was unable to understand it and still spewed the warning. So I ended up with something a tad more intricated but it seems to build on 32-bit and on 64-bit with and without VSX. Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Signed-off-by: Michael Neuling <mikey@neuling.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> workqueue: convert BUG_ON()s in __queue_delayed_work() to WARN_ON_ONCE()s commit fc4b514f2727f74a4587c31db87e0e93465518c3 upstream. 8852aac25e (""workqueue: mod_delayed_work_on() shouldn't queue timer on 0 delay"") unexpectedly uncovered a very nasty abuse of delayed_work in megaraid - it allocated work_struct, casted it to delayed_work and then pass that into queue_delayed_work(). Previously, this was okay because 0 @delay short-circuited to queue_work() before doing anything with delayed_work. 8852aac25e moved 0 @delay test into __queue_delayed_work() after sanity check on delayed_work making megaraid trigger BUG_ON(). Although megaraid is already fixed by c1d390d8e6 (""megaraid: fix BUG_ON() from incorrect use of delayed work""), this patch converts BUG_ON()s in __queue_delayed_work() to WARN_ON_ONCE()s so that such abusers, if there are more, trigger warning but don't crash the machine. Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Xiaotian Feng <xtfeng@gmail.com> Signed-off-by: Shuah Khan <shuah.khan@hp.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> mm: dmapool: use provided gfp flags for all dma_alloc_coherent() calls commit 387870f2d6d679746020fa8e25ef786ff338dc98 upstream. dmapool always calls dma_alloc_coherent() with GFP_ATOMIC flag, regardless the flags provided by the caller. This causes excessive pruning of emergency memory pools without any good reason. Additionaly, on ARM architecture any driver which is using dmapools will sooner or later trigger the following error: ""ERROR: 256 KiB atomic DMA coherent pool is too small! Please increase it with coherent_pool= kernel parameter!"". Increasing the coherent pool size usually doesn't help much and only delays such error, because all GFP_ATOMIC DMA allocations are always served from the special, very limited memory pool. This patch changes the dmapool code to correctly use gfp flags provided by the dmapool caller. Reported-by: Soeren Moch <smoch@web.de> Reported-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com> Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Tested-by: Andrew Lunn <andrew@lunn.ch> Tested-by: Soeren Moch <smoch@web.de> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> x86,AMD: Power driver support for AMD's family 16h processors commit 22e32f4f57778ebc6e17812fa3008361c05d64f9 upstream. Add family 16h PCI ID to AMD's power driver to allow it report power consumption on these processors. Signed-off-by: Boris Ostrovsky <boris.ostrovsky@amd.com> Signed-off-by: Guenter Roeck <linux@roeck-us.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> telephony: ijx: buffer overflow in ixj_write_cid() [Not needed in 3.8 or newer as this driver is removed there. - gregkh] We get this from user space and nothing has been done to ensure that these strings are NUL terminated. Reported-by: Chen Gang <gang.chen@asianux.com> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> tmpfs: fix shared mempolicy leak commit 18a2f371f5edf41810f6469cb9be39931ef9deb9 upstream. This fixes a regression in 3.7-rc, which has since gone into stable. Commit 00442ad04a5e (""mempolicy: fix a memory corruption by refcount imbalance in alloc_pages_vma()"") changed get_vma_policy() to raise the refcount on a shmem shared mempolicy; whereas shmem_alloc_page() went on expecting alloc_page_vma() to drop the refcount it had acquired. This deserves a rework: but for now fix the leak in shmem_alloc_page(). Hugh: shmem_swapin() did not need a fix, but surely it's clearer to use the same refcounting there as in shmem_alloc_page(), delete its onstack mempolicy, and the strange mpol_cond_copy() and __mpol_cond_copy() - those were invented to let swapin_readahead() make an unknown number of calls to alloc_pages_vma() with one mempolicy; but since 00442ad04a5e, alloc_pages_vma() has kept refcount in balance, so now no problem. Reported-and-tested-by: Tommi Rantala <tt.rantala@gmail.com> Signed-off-by: Mel Gorman <mgorman@suse.de> Signed-off-by: Hugh Dickins <hughd@google.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> x86: hpet: Fix masking of MSI interrupts commit 6acf5a8c931da9d26c8dd77d784daaf07fa2bff0 upstream. HPET_TN_FSB is not a proper mask bit; it merely toggles between MSI and legacy interrupt delivery. The proper mask bit is HPET_TN_ENABLE, so use both bits when (un)masking the interrupt. Signed-off-by: Jan Beulich <jbeulich@suse.com> Link: http://lkml.kernel.org/r/5093E09002000078000A60E6@nat28.tlf.novell.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> USB: add new zte 3g-dongle's pid to option.c commit 31b6a1048b7292efff8b5b53ae3d9d29adde385e upstream. Signed-off-by: Rui li <li.rui27@zte.com.cn> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> USB: option: blacklist network interface on Huawei E173 commit f36446cf9bbebaa03a80d95cfeeafbaf68218249 upstream. The Huawei E173 will normally appear as 12d1:1436 in Linux. But the modem has another mode with different device ID and a slightly different set of descriptors. This is the mode used by Windows like this: 3Modem: USB\VID_12D1&PID_140C&MI_00\6&3A1D2012&0&0000 Networkcard: USB\VID_12D1&PID_140C&MI_01\6&3A1D2012&0&0001 Appli.Inter: USB\VID_12D1&PID_140C&MI_02\6&3A1D2012&0&0002 PC UI Inter: USB\VID_12D1&PID_140C&MI_03\6&3A1D2012&0&0003 All interfaces have the same ff/ff/ff class codes in this mode. Blacklisting the network interface to allow it to be picked up by the network driver. Reported-by: Thomas Schäfer <tschaefer@t-online.de> Signed-off-by: Bjørn Mork <bjorn@mork.no> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> USB: ftdi_sio: Add support for Newport AGILIS motor drivers commit d7e14b375b40c04cd735b115713043b69a2c68ac upstream. The Newport AGILIS model AG-UC8 compact piezo motor controller (http://search.newport.com/?q=*&x2=sku&q2=AG-UC8) is yet another device using an FTDI USB-to-serial chip. It works fine with the ftdi_sio driver when adding options ftdi-sio product=0x3000 vendor=0x104d to modprobe.d. udevadm reports ""Newport"" as the manufacturer, and ""Agilis"" as the product name. Signed-off-by: Martin Teichmann <lkb.teichmann@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> usb: ftdi_sio: fixup BeagleBone A5+ quirk commit 1a88d5eee2ef2ad1d3c4e32043e9c4c5347d4fc1 upstream. BeagleBone A5+ devices ended up getting shipped with the 'BeagleBone/XDS100V2' product string, and not XDS100 like it was agreed, so adjust the quirk to match. For details, see the thread on the beagle list: https://groups.google.com/forum/#!msg/beagleboard/zrFPew9_Wvo/ibWr1-eE8JwJ Signed-off-by: Peter Korsgaard <jacmet@sunsite.dk> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> USB: cp210x: add Virtenio Preon32 device id commit 356fe44f4b8ece867bdb9876b1854d7adbef9de2 upstream. Signed-off-by: Markus Becker <mab@comnets.uni-bremen.de> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> USB: mark uas driver as BROKEN commit fb37ef98015f864d22be223a0e0d93547cd1d4ef upstream. As reported https://bugzilla.kernel.org/show_bug.cgi?id=51031, the UAS driver causes problems and has been asked to be not built into any of the major distributions. To prevent users from running into problems with it, and for distros that were not notified, just mark the whole thing as broken. Acked-by: Sarah Sharp <sarah.a.sharp@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ACPI / battery: Correct battery capacity values on Thinkpads commit 4000e626156935dfb626321ce09cae2c833eabbb upstream. Add a quirk to correctly report battery capacity on 2010 and 2011 Lenovo Thinkpad models. The affected models that I tested (x201, t410, t410s, and x220) exhibit a problem where, when battery capacity reporting unit is mAh, the values being reported are wrong. Pre-2010 and 2012 models appear to always report in mWh and are thus unaffected. Also, in mid-2012 Lenovo issued a BIOS update for the 2011 models that fixes the issue (tested on x220 with a post-1.29 BIOS). No such update is available for the 2010 models, so those still need this patch. Problem description: for some reason, the affected Thinkpads switch the reporting unit between mAh and mWh; generally, mAh is used when a laptop is plugged in and mWh when it's unplugged, although a suspend/resume or rmmod/modprobe is needed for the switch to take effect. The values reported in mAh are *always* wrong. This does not appear to be a kernel regression; I believe that the values were never reported correctly. I tested back to kernel 2.6.34, with multiple machines and BIOS versions. Simply plugging a laptop into mains before turning it on is enough to reproduce the problem. Here's a sample /proc/acpi/battery/BAT0/info from Thinkpad x220 (before a BIOS update) with a 4-cell battery: present: yes design capacity: 2886 mAh last full capacity: 2909 mAh battery technology: rechargeable design voltag ...",20/12/2012 23:49:39,,FALSE-POSITIVE,https://github.com/amidabuddha/saga-ics-crc-3.0.16/commit/02e4f378b58d43bf13fb5e80d9709d171ecb54ec,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Linux],[DO NOT ANALYZE],[Linux],EXISTS,,,,,,,,,,,,,amidabuddha/saga-ics-crc-3.0.16,gregkh,,,amidabuddha,
LucasPickering,Infinite-Alloys,"Added FuncHelper, added energy consumption to gui",21/12/2012 21:37:30,,FALSE-POSITIVE,https://github.com/Bob-A-Red-Dino/Infinite-Alloys/commit/1e8a80e342d50a1aa98b828c5a47040c063911b6,https://github.com/LucasPickering/Infinite-Alloys/commit/1e8a80e342d50a1aa98b828c5a47040c063911b6,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSIVITE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,LucasPickering/Infinite-Alloys,Bob-A-Red-Dino,,,Bob-A-Red-Dino,
ktoonsez,KT747-JB,msm_fb: display: add mdp bandwidth runtime calculation Currently mdp bandwidth request logic is based on source image size and number of layers. This logic can not support complicated mdp usecases and it is not power efficient. The logic is improved by calculating mdp bandwidth request at runtime from all pipes and mixers. CRs-fixed: 425823 Change-Id: I63206f00f8d3017a2449f8ac617fce3ba2a4d36c Signed-off-by: Huaibin Yang <huaibiny@codeaurora.org>,22/12/2012 00:31:53,,UNABLE-TO-CATEGORIZE,https://github.com/ktoonsez/KT747-JB/commit/9f4da2643633a0b9b8c96134138453c2d74268b9,,,[FALSE-POSITIVE],[UNABLE-TO-CATEGORIZE] [Android],[DO NOT ANALYZE],[Android],EXISTS,,,,,,,,,,,,,ktoonsez/KT747-JB,,,,ktoonsez,
davet321,android_kernel_samsung_tuna,"x86,AMD: Power driver support for AMD's family 16h processors commit 22e32f4f57778ebc6e17812fa3008361c05d64f9 upstream. Add family 16h PCI ID to AMD's power driver to allow it report power consumption on these processors. Signed-off-by: Boris Ostrovsky <boris.ostrovsky@amd.com> Signed-off-by: Guenter Roeck <linux@roeck-us.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",23/12/2012 15:29:01,,NOT-FOUND,https://github.com/davet321/android_kernel_samsung_tuna/commit/cde5ccfd7fff61f9b652dc7b42a40168e3e45f93,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,davet321/android_kernel_samsung_tuna,,,,,
groeck,linux,hwmon: (coretemp) Report package power and energy consumption Supported by SandyBridge and newer CPUs. Signed-off-by: Guenter Roeck <linux@roeck-us.net>,23/12/2012 18:56:37,,NOT-FOUND,https://github.com/groeck/linux/commit/c23c4d3b9350e918b219fbeb0ea220dbb399812b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,groeck/linux,,,,,
groeck,linux,hwmon: (coretemp) Report package power and energy consumption Supported by SandyBridge and newer CPUs. Signed-off-by: Guenter Roeck <linux@roeck-us.net>,23/12/2012 21:06:42,,NOT-FOUND,https://github.com/groeck/linux/commit/0d99f43174d9eb509d9df48633dc8e05963ce8e4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,groeck/linux,,,,,
simone201,neak-n7100-jb,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,26/12/2012 12:10:07,,DUPLICATE,https://github.com/simone201/neak-n7100-jb/commit/8530841ec9492e3b36ae39576bac49d06894f664,,,,,,,EXISTS,,,,,,,,,,,,,simone201/neak-n7100-jb,AndreiLux,,,simone201,
ThinkingBridge,platform_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",29/12/2012 11:43:36,,NOT-FOUND,https://github.com/ThinkingBridge/platform_frameworks_base/commit/4bb2202aa189e267b1047372c141dc44e9fdcc96,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ThinkingBridge/platform_frameworks_base,,,,,
radekp,linux-2.6,"gta04 - apply voltage for VSIM (external GPS antenna) http://lists.goldelico.com/pipermail/gta04-owner/2012-September/002961.html On Thu, 13 Sep 2012 19:03:26 +0200 Christoph Mair <christoph.mair at gmail.com> wrote: > On Wed, Sep 12, 2012 at 8:38 PM, Radek Polak <psonek2 at seznam.cz> wrote: > > QtMoko v48 is out now, you can download images for Freerunner and GTA04 from > > here [1][2]. For more info about QtMoko please visit our homepage [3]. > > Thanks for another great release! > > > * changes for 3.5 kernel on gta04 > > * turning of gps antena on gta04 during startup to save power > > I've noticed that my device does not recognize the external antenna > anymore. The VSIM regulator which supplies the antenna delivers only > 1.8V instead of 2.8V. I haven't looked at the kernel source yet, but > there might be a bug somewhere because 'cat > /sys/class/regulator/regulator.8/microvolts' returns 1.8V while the > min and max parameters are set to 2.8V Try diff --git a/arch/arm/mach-omap2/board-omap3gta04.c b/arch/arm/mach-omap2/board-omap3gta04.c index 8d750d2..19b9fe3 100644 --- a/arch/arm/mach-omap2/board-omap3gta04.c +++ b/arch/arm/mach-omap2/board-omap3gta04.c @@ -572,6 +572,7 @@ static struct regulator_init_data gta04_vsim = { .name = ""VSIM"", .min_uV = 2800000, .max_uV = 2800000, + .apply_uV = 1, .valid_modes_mask = REGULATOR_MODE_NORMAL | REGULATOR_MODE_STANDBY, .valid_ops_mask = REGULATOR_CHANGE_VOLTAGE without this, it just assumes the voltage is correct. NeilBrown",29/12/2012 23:12:23,,DUPLICATE,https://github.com/radekp/linux-2.6/commit/5b67365ab9c9a7164f31b4fb51d6227f5ba9805a,,,,,,,EXISTS,,,,,,,,,,,,,radekp/linux-2.6,radekp,,,radekp,
BMc08GT,device_samsung_d2-common,"d2-common: Disable wifi background scan and fine tune wifi * lower power consumption for wifi (match mako) * QCOM WiFi chipset does not implement PNO, which leads to PNO commands being mishandled in the kernel, causing memory corruption. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com>",30/12/2012 06:16:46,,NOT-FOUND,https://github.com/BMc08GT/device_samsung_d2-common/commit/9c86f37cf02e6b8d9ae6fbba5e4aa177ff0acd54,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BMc08GT/device_samsung_d2-common,,,,,
RaymanFX,kernel_sony_msm8x60,mach-msm: rework overclocking system add back L2 bandwith boost on overclocking add additional 1.7 GHZ overclocking frequency preserve qualcomm's RPM management to save power,30/12/2012 12:09:36,,UNABLE-TO-CATEGORIZE,https://github.com/RaymanFX/kernel_sony_msm8x60/commit/cf94db1dc29d48d9e9d0ab895fd5574c77de5557,,,[FALSE-POSITIVE],[UNABLE-TO-CATEGORIZE] [Giga commit],[DO NOT ANALYZE],[Giga commit],EXISTS,,,,,,,,,,,,,RaymanFX/kernel_sony_msm8x60,RaymanFX,,,RaymanFX,
Root-Box,device_samsung_d2-common,"d2-common: Disable wifi background scan and fine tune wifi * lower power consumption for wifi (match mako) * QCOM WiFi chipset does not implement PNO, which leads to PNO commands being mishandled in the kernel, causing memory corruption. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com>",30/12/2012 23:22:56,,NOT-FOUND,https://github.com/Root-Box/device_samsung_d2-common/commit/4b5790bcc96c380720b96d2eec2d5f2e18f87390,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Root-Box/device_samsung_d2-common,,,,,
VanirAOSP,frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",30/12/2012 23:26:38,,DUPLICATE,https://github.com/VanirAOSP/platform_frameworks_base/commit/86eca2f8e456a26696a1b6fd840f6e52de4f909d,https://github.com/VanirAOSP/frameworks_base/commit/86eca2f8e456a26696a1b6fd840f6e52de4f909d,,,,,,EXISTS,,,,,,,,,,,,,VanirAOSP/frameworks_base,,,,,
thracemerin,lge-kernel-mako,"Squashed commit of the following: commit 945b23951bbb461e2403fda202efb73e7693b9ad Author: Jack Pham <jackp@codeaurora.org> Date: Thu Aug 30 19:06:24 2012 -0700 usb: misc: Avoid excessive logging during disconnect When the device is in the midst of being disconnected, calls to usb_autopm_get_interface() may fail, and a ERR-level message is printed. Callers of such I/O functions may repeatedly try calling again, and could end up flooding the console leading to a watchdog timeout. Replace these printks with DBG-level messages since the device disconnection is normal and the errors they indicate are usually benign. CRs-fixed: 394256 Change-Id: Icf9000faa9001832734ff9c64cd903b375cc2017 Signed-off-by: Jack Pham <jackp@codeaurora.org> commit 808348761908fb9f43c59b181b6c459510567bc1 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Fri Aug 24 19:42:31 2012 -0700 usb: ks_bridge: Fix memory leaks in the driver This change addresses two memory leaks:- 1) misc device is not getting deregistered during device disconnect. Hence call misc_deregister() in disconnect. 2) Driver returns without freeing previous instances of the driver data structure if memory allocation fails. Hence free up memory allocated for ks_bridge structure. Change-Id: I90133a002aa9d38597de8d1b21d3aad621552d46 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit 7333cf184469dd7b212d0166bfecbfcec4e44d22 Author: Ofir Cohen <ofirc@codeaurora.org> Date: Sun Dec 23 13:41:57 2012 +0200 usb: ehci-msm-hsic: Add asynchronous reset to HSIC Add support for asynchronous block reset to the HSIC hardware. In platforms that uses an asynchronous reset methodology, the HSIC alt_core_clk is not presented. Change-Id: I0dc0e1bf294260a5530e01660d970cc939a9dbec Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> commit e6ed503eb192ed2e25db42fae2374eb1f3588711 Author: Manu Gautam <mgautam@codeaurora.org> Date: Wed Nov 21 14:30:04 2012 +0530 USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org> commit 2cf18a56ee86170160203edcc0604e1001ccd85c Author: Ofir Cohen <ofirc@codeaurora.org> Date: Wed Nov 14 11:18:50 2012 +0200 usb: ehci-msm-hsic: Change HSIC reset sequence Due to USB HW changes, RST CMD resets CSC/CCS fields in PORTSC and PCI bit in USBSTS. Therefore HSIC reset sequence should be changed to avoid case that the device was powered up before the host and due to a RST CMD the host will miss that the device is connected. CRs-Fixed: 417642 Change-Id: I2b1fb2a92658058d70ccc6cb5f73174ce4128b72 Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> commit cd7804ca095958a0b2bd785a024740c3ef6a9877 Author: Ofir Cohen <ofirc@codeaurora.org> Date: Tue Nov 20 11:17:24 2012 +0200 usb: ehci-msm-hsic: Add support in device tree to MSM HSIC host Add support in device tree to MSM HSIC host including support in GDSC (Global Distributed Switch Controller) for new platforms. Change-Id: I6b0df0eabb03278b97b2b69f9fcdc2ef3806ba0b Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> commit a409b984ba473f5fc6b4a4e094a08e7201a721f1 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Oct 17 13:48:10 2012 -0700 EHCI: HSIC: Add support to vote for SVS digital voltage HSIC HW can operate at SVS digital voltage when it is active. Currently HSIC is voting for 120Mhz SFAB and 64Mhz DFAB clock frequencies. Clock frequencies are directly proportional to SVS voltage. If DFAB is running at 64Mhz or SFAB is running at 120Mhz or higher SVS is not possible even though HSIC votes for it. Hence do not vote for SFAB clock frequency and only vote for 32Mhz for DFAB in order to allow SVS to happen. Voting for SVS voltage reduces current consumption by 3mA in HSDPA network. Change-Id: I8a6844efbbe90a8ea118be8450f8210717c2641b Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> mako: EHCI: HSIC: Add support to vote for SVS digital voltage HSIC HW can operate at SVS digital voltage when it is active. Currently HSIC is voting for 120Mhz SFAB and 64Mhz DFAB clock frequencies. Clock frequencies are directly proportional to SVS voltage. If DFAB is running at 64Mhz or SFAB is running at 120Mhz or higher SVS is not possible even though HSIC votes for it. Hence do not vote for SFAB clock frequency and only vote for 32Mhz for DFAB in order to allow SVS to happen. Voting for SVS voltage reduces current consumption by 3mA in HSDPA network. Change-Id: I8a6844efbbe90a8ea118be8450f8210717c2641b Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit 1eab506d8c5dfe894c50c73cf42f6831045aade3 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Oct 17 12:29:51 2012 -0700 EHCI: HSIC: Allow standalone power collapse when HSIC is active HSIC generates interrupt at 4ms interval. If idle power collapse is enabled when HSIC is active, krait keeps on going into idle power collapse requesting RPM to handle the sleep set requirement. If HSIC interrupt comes after 4ms interval, krait comes out of idle power collapse and it again ask RPM to handle this request therefore keeps RPM busy handling requests due to frequent idle power collapse. This has a power impact. Hence only allow standalone power collapse when HSIC is active to avoid RPM involvement in assisting kraits to power collapse. Vote for idle power collapse when HSIC goes to low power mode. Change-Id: Iee8bc1fa180499f2d26fbac955a6a6ed767fdeb4 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> Conflicts: arch/arm/mach-msm/board-8064.c commit 64d165220ae72789b4de2d83ace5b63c6d502041 Author: Jack Pham <jackp@codeaurora.org> Date: Wed Oct 10 02:03:50 2012 +0200 usb: ehci-msm-hsic: Remove usage of MSM_GPIO_TO_INT MSM_GPIO_TO_INT is a platform-specific macro that should only be used in board files, not drivers. In this case, we actually don't need the GPIO number in the driver itself and only need to manipulate it using the IRQ number it maps to, so perform the mapping in the device file. Change-Id: I99eb964f3c7c4e90a4d75d16b2b29c687c3437ca Signed-off-by: Jack Pham <jackp@codeaurora.org> commit be1def2657593882828f47adb9824958cdafc0f1 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Tue Oct 16 17:57:08 2012 -0700 usb: Decrease autosuspend delay to 200ms upon usb disconnect Reduce overall HSIC wakelock active time by decreasing autosuspend delay for HSIC mdm device from 1 sec to 200ms. However when diag is active it would send poll events for every 500ms causing frequent supsend/resume. Avoid this by increasing autosuspend delay to 1 sec when diag is active. Also, set autosuspend delay for root hub to 0 by default. These changes reduce time HSIC controller is active when the bus is idle for better power savings. CRs-Fixed: 404378 Change-Id: I0500f6b125dff158e6e0c10f3f2023b18ce9dd30 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit c03dc417ebb68af712fc81e04806286eae892714 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Sep 26 15:09:27 2012 -0700 usb: Add support to set autosuspend delay by controller driver USB core driver sets the autosuspend delay to 1 sec for root hub and its children by default. In case if delay needs to be changed for a particular controller, it requires class driver to explicitly call PM API to set the new values. Hence add a call back handler to set autosuspend delay in controller driver. This makes class driver code generic. Change-Id: I62121651f0a9648a2909ca7eb4081a6c2567ed01 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit 247276cb443d342221c0353eb021c800d7303eef Author: Jack Pham <jackp@codeaurora.org> Date: Fri Sep 28 17:45:38 2012 -0700 usb: ehci-msm-hsic: Fix compilation error The ehci-msm-hsic driver's bus suspend and resume functions depend on ehci_hcd's bus_suspend/resume functions, which are NULL when CONFIG_PM is not defined. Fix the compilation error by also #defining these sub-driver functions NULL, as they are effectively no-ops. Change-Id: Ie250dfae3caccb737ce26bdda17c5b21d358eced Signed-off-by: Jack Pham <jackp@codeaurora.org> commit 18d0c8178569134497827cd907d29504b4c3ada8 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Aug 15 09:06:35 2012 -0700 EHCI: HSIC: Add enhancements to debug logging This change addresses following enhancements to debug logging:- 1) Add data payload logging which is not currently supported. This helps to sniff first 32 bytes of data being sent and received. Data payload logging is enabled by default. To disable data payload logging:- echo 0 > /sys/module/ehci_hcd/parameters/enable_payload_log 2) Current urb submission event logging does not cover root hub submissions, hence move urb submission logging to hcd driver. 3) Current urb submission event logging does not return the correct status if submission fails. Hence log the return status of urb submission. CRs-Fixed: 393294 Change-Id: Ic7e555e1545ec7d7b0e4042cd35235e0af26fb01 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit ae1688c016f9ca89e402266b60461b937e227d60 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Thu Aug 30 14:23:38 2012 -0700 EHCI: HSIC: Handle wakeup interrupt properly during probe During HSIC probe driver registers the level triggered interrupt on wakeup gpio. Wakeup irq line is disabled based on the return status of interrupt registration. There is a possibility that wakeup gpio is already pulled high after registering the interrupt which can cause wakeup interrupts to be fired on continuously without getting chance to disable the irq line. Hence do not enable wake up interrupt on request irq. CRs-Fixed: 394540 Change-Id: I3175cd8710f1d982c33a5392cc49106ee66d0aa6 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit 77f1629257c5cfa8133b82b6670be3973965ee85 Author: Pavankumar Kondeti <pkondeti@codeaurora.org> Date:  ...",31/12/2012 17:36:13,,NOT-FOUND,https://github.com/thracemerin/lge-kernel-mako/commit/e8a65c1ae1ac65da7c64c0b28e4a59a9ec9a73b4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,thracemerin/lge-kernel-mako,,,,,
thracemerin,lge-kernel-mako,"Fixes for msm_hsic_host wakelock from codeaurora. Squashed commit of the following: commit 945b23951bbb461e2403fda202efb73e7693b9ad Author: Jack Pham <jackp@codeaurora.org> Date: Thu Aug 30 19:06:24 2012 -0700 usb: misc: Avoid excessive logging during disconnect When the device is in the midst of being disconnected, calls to usb_autopm_get_interface() may fail, and a ERR-level message is printed. Callers of such I/O functions may repeatedly try calling again, and could end up flooding the console leading to a watchdog timeout. Replace these printks with DBG-level messages since the device disconnection is normal and the errors they indicate are usually benign. CRs-fixed: 394256 Change-Id: Icf9000faa9001832734ff9c64cd903b375cc2017 Signed-off-by: Jack Pham <jackp@codeaurora.org> commit 808348761908fb9f43c59b181b6c459510567bc1 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Fri Aug 24 19:42:31 2012 -0700 usb: ks_bridge: Fix memory leaks in the driver This change addresses two memory leaks:- 1) misc device is not getting deregistered during device disconnect. Hence call misc_deregister() in disconnect. 2) Driver returns without freeing previous instances of the driver data structure if memory allocation fails. Hence free up memory allocated for ks_bridge structure. Change-Id: I90133a002aa9d38597de8d1b21d3aad621552d46 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit 7333cf184469dd7b212d0166bfecbfcec4e44d22 Author: Ofir Cohen <ofirc@codeaurora.org> Date: Sun Dec 23 13:41:57 2012 +0200 usb: ehci-msm-hsic: Add asynchronous reset to HSIC Add support for asynchronous block reset to the HSIC hardware. In platforms that uses an asynchronous reset methodology, the HSIC alt_core_clk is not presented. Change-Id: I0dc0e1bf294260a5530e01660d970cc939a9dbec Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> commit e6ed503eb192ed2e25db42fae2374eb1f3588711 Author: Manu Gautam <mgautam@codeaurora.org> Date: Wed Nov 21 14:30:04 2012 +0530 USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org> commit 2cf18a56ee86170160203edcc0604e1001ccd85c Author: Ofir Cohen <ofirc@codeaurora.org> Date: Wed Nov 14 11:18:50 2012 +0200 usb: ehci-msm-hsic: Change HSIC reset sequence Due to USB HW changes, RST CMD resets CSC/CCS fields in PORTSC and PCI bit in USBSTS. Therefore HSIC reset sequence should be changed to avoid case that the device was powered up before the host and due to a RST CMD the host will miss that the device is connected. CRs-Fixed: 417642 Change-Id: I2b1fb2a92658058d70ccc6cb5f73174ce4128b72 Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> commit cd7804ca095958a0b2bd785a024740c3ef6a9877 Author: Ofir Cohen <ofirc@codeaurora.org> Date: Tue Nov 20 11:17:24 2012 +0200 usb: ehci-msm-hsic: Add support in device tree to MSM HSIC host Add support in device tree to MSM HSIC host including support in GDSC (Global Distributed Switch Controller) for new platforms. Change-Id: I6b0df0eabb03278b97b2b69f9fcdc2ef3806ba0b Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> commit a409b984ba473f5fc6b4a4e094a08e7201a721f1 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Oct 17 13:48:10 2012 -0700 EHCI: HSIC: Add support to vote for SVS digital voltage HSIC HW can operate at SVS digital voltage when it is active. Currently HSIC is voting for 120Mhz SFAB and 64Mhz DFAB clock frequencies. Clock frequencies are directly proportional to SVS voltage. If DFAB is running at 64Mhz or SFAB is running at 120Mhz or higher SVS is not possible even though HSIC votes for it. Hence do not vote for SFAB clock frequency and only vote for 32Mhz for DFAB in order to allow SVS to happen. Voting for SVS voltage reduces current consumption by 3mA in HSDPA network. Change-Id: I8a6844efbbe90a8ea118be8450f8210717c2641b Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> mako: EHCI: HSIC: Add support to vote for SVS digital voltage HSIC HW can operate at SVS digital voltage when it is active. Currently HSIC is voting for 120Mhz SFAB and 64Mhz DFAB clock frequencies. Clock frequencies are directly proportional to SVS voltage. If DFAB is running at 64Mhz or SFAB is running at 120Mhz or higher SVS is not possible even though HSIC votes for it. Hence do not vote for SFAB clock frequency and only vote for 32Mhz for DFAB in order to allow SVS to happen. Voting for SVS voltage reduces current consumption by 3mA in HSDPA network. Change-Id: I8a6844efbbe90a8ea118be8450f8210717c2641b Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit 1eab506d8c5dfe894c50c73cf42f6831045aade3 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Oct 17 12:29:51 2012 -0700 EHCI: HSIC: Allow standalone power collapse when HSIC is active HSIC generates interrupt at 4ms interval. If idle power collapse is enabled when HSIC is active, krait keeps on going into idle power collapse requesting RPM to handle the sleep set requirement. If HSIC interrupt comes after 4ms interval, krait comes out of idle power collapse and it again ask RPM to handle this request therefore keeps RPM busy handling requests due to frequent idle power collapse. This has a power impact. Hence only allow standalone power collapse when HSIC is active to avoid RPM involvement in assisting kraits to power collapse. Vote for idle power collapse when HSIC goes to low power mode. Change-Id: Iee8bc1fa180499f2d26fbac955a6a6ed767fdeb4 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> Conflicts: arch/arm/mach-msm/board-8064.c commit 64d165220ae72789b4de2d83ace5b63c6d502041 Author: Jack Pham <jackp@codeaurora.org> Date: Wed Oct 10 02:03:50 2012 +0200 usb: ehci-msm-hsic: Remove usage of MSM_GPIO_TO_INT MSM_GPIO_TO_INT is a platform-specific macro that should only be used in board files, not drivers. In this case, we actually don't need the GPIO number in the driver itself and only need to manipulate it using the IRQ number it maps to, so perform the mapping in the device file. Change-Id: I99eb964f3c7c4e90a4d75d16b2b29c687c3437ca Signed-off-by: Jack Pham <jackp@codeaurora.org> commit be1def2657593882828f47adb9824958cdafc0f1 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Tue Oct 16 17:57:08 2012 -0700 usb: Decrease autosuspend delay to 200ms upon usb disconnect Reduce overall HSIC wakelock active time by decreasing autosuspend delay for HSIC mdm device from 1 sec to 200ms. However when diag is active it would send poll events for every 500ms causing frequent supsend/resume. Avoid this by increasing autosuspend delay to 1 sec when diag is active. Also, set autosuspend delay for root hub to 0 by default. These changes reduce time HSIC controller is active when the bus is idle for better power savings. CRs-Fixed: 404378 Change-Id: I0500f6b125dff158e6e0c10f3f2023b18ce9dd30 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit c03dc417ebb68af712fc81e04806286eae892714 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Sep 26 15:09:27 2012 -0700 usb: Add support to set autosuspend delay by controller driver USB core driver sets the autosuspend delay to 1 sec for root hub and its children by default. In case if delay needs to be changed for a particular controller, it requires class driver to explicitly call PM API to set the new values. Hence add a call back handler to set autosuspend delay in controller driver. This makes class driver code generic. Change-Id: I62121651f0a9648a2909ca7eb4081a6c2567ed01 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit 247276cb443d342221c0353eb021c800d7303eef Author: Jack Pham <jackp@codeaurora.org> Date: Fri Sep 28 17:45:38 2012 -0700 usb: ehci-msm-hsic: Fix compilation error The ehci-msm-hsic driver's bus suspend and resume functions depend on ehci_hcd's bus_suspend/resume functions, which are NULL when CONFIG_PM is not defined. Fix the compilation error by also #defining these sub-driver functions NULL, as they are effectively no-ops. Change-Id: Ie250dfae3caccb737ce26bdda17c5b21d358eced Signed-off-by: Jack Pham <jackp@codeaurora.org> commit 18d0c8178569134497827cd907d29504b4c3ada8 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Aug 15 09:06:35 2012 -0700 EHCI: HSIC: Add enhancements to debug logging This change addresses following enhancements to debug logging:- 1) Add data payload logging which is not currently supported. This helps to sniff first 32 bytes of data being sent and received. Data payload logging is enabled by default. To disable data payload logging:- echo 0 > /sys/module/ehci_hcd/parameters/enable_payload_log 2) Current urb submission event logging does not cover root hub submissions, hence move urb submission logging to hcd driver. 3) Current urb submission event logging does not return the correct status if submission fails. Hence log the return status of urb submission. CRs-Fixed: 393294 Change-Id: Ic7e555e1545ec7d7b0e4042cd35235e0af26fb01 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit ae1688c016f9ca89e402266b60461b937e227d60 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Thu Aug 30 14:23:38 2012 -0700 EHCI: HSIC: Handle wakeup interrupt properly during probe During HSIC probe driver registers the level triggered interrupt on wakeup gpio. Wakeup irq line is disabled based on the return status of interrupt registration. There is a possibility that wakeup gpio is already pulled high after registering the interrupt which can cause wakeup interrupts to be fired on continuously without getting chance to disable the irq line. Hence do not enable wake up interrupt on request irq. CRs-Fixed: 394540 Change-Id: I3175cd8710f1d982c33a5392cc49106ee66d0aa6 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> commit 77f1629257c5cfa8133b82b6670be3973965ee85 Author: P ...",31/12/2012 17:40:29,,NOT-FOUND,https://github.com/thracemerin/lge-kernel-mako/commit/3e2690eec4543f25d7c446189acfa907dc4390c4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,thracemerin/lge-kernel-mako,,,,,
InstigatorX,SGH-Krait,"x86,AMD: Power driver support for AMD's family 16h processors commit 22e32f4f57778ebc6e17812fa3008361c05d64f9 upstream. Add family 16h PCI ID to AMD's power driver to allow it report power consumption on these processors. Signed-off-by: Boris Ostrovsky <boris.ostrovsky@amd.com> Signed-off-by: Guenter Roeck <linux@roeck-us.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",31/12/2012 20:08:50,,DUPLICATE,https://github.com/InstigatorX/SGH-Krait/commit/446886819efc94a01a775386fb6749ccb2d0afaa,,,,,,,EXISTS,,,,,,,,,,,,,InstigatorX/SGH-Krait,ostr,,,InstigatorX,
virtadpt,Byzantium,Changed 'Text mode' to 'Power saving mode' at Haxwithaxe's suggestion. Signed-off-by: The Doctor <drwho@virtadpt.net>,31/12/2012 21:42:11,,FALSE-POSITIVE,https://github.com/virtadpt/Byzantium/commit/417429168d935bfbb08f2da9e281550c1b17b5a0,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Ui label],[DO NOT ANALYZE],[Ui label],EXISTS,,,,,,,,,,,,,virtadpt/Byzantium,virtadpt,,,virtadpt,
niker,elitekernel_oxp,Extreme power saving - power saving now limits max active cores to 3,01/01/2013 19:42:45,,OK,https://github.com/niker/elitekernel_oxp/commit/594d30170d4d5d3e76132b3e5730e6161db96026,,,[OK][DISABLING DEVICES],[OK] [Disable component] [Disable cores] [Limit enabled cores] [Android],[DO NOT ANALYZE],[Disable component] [Disable cores] [Limit enabled cores] [Android] [DISABLING DEVICES],EXISTS,[limits max active cores to 3],[power saving],[Reduce active cores on power save] [Limit number of active cores],[Core configuration],,,Certain,Android,No,OS,C,Extreme power saving - power saving now limits max active cores to 3,niker/elitekernel_oxp,,[Miscellaneous],,,Kernel arch
CyanogenMod,lge-kernel-mako,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org>,02/01/2013 02:00:55,,UNABLE-TO-CATEGORIZE,https://github.com/CyanogenMod/lge-kernel-mako/commit/cd92faa44a032782b6ecaa42ba40597bc3c92d38,,,[OK][Disabling devices],[UNABLE-TO-CATEGORIZE] [Enable clock shutdown],[DO NOT ANALYZE],[Enable clock shutdown] [Disabling devices],EXISTS,,,,,,,,,,,,,CyanogenMod/lge-kernel-mako,,,,zyonee,
steev,linux,"gpt: i.MX3,5,6 GPT clock rework, now DT ""pure"", seperate sched_clock init This essentially aligns with Highbank and anything with an architected/twd timer (Cortex-A9) whereby timer initialization (i.e. clocksource/clockevent) is somewhat seperated from the setup_sched_clock call. This way multiple timers can be registered for the platform, and the more timers the better for the system (many high resolution timers firing rarely compared to one high resolution timer constantly serving events should equal lower power consumption) and the sched_clock can be set up on the more stable of those timers (on i.MX the architected timer would be preferred - so i.MX6 guys I wonder why you're not using it - but on i.MX5 this could be GPT or EPIT depending on use of the ""other"" timer type). This screws non-DT platforms as they have no way of initializing the timer anymore, but a small stub (or resurrection of mxc_timer_init) and a little split of the register function could bring it back. Caveat: on i.MX53 and i.MX6 there are two EPIT timers. How the hell do we register TWO timers as above and then pick ONE of them as a possible sched_clock source? If we convert EPIT to the same DT-pure framework like the architected or twd...?",02/01/2013 06:09:45,,RELATED,https://github.com/steev/linux/commit/7931006c1448a9e1bd10f2bede291eefee8db00d,,,[RELATED],[RELATED] [Power saving enabler feature],[DO NOT ANALYZE],[Power saving enabler feature],EXISTS,,,,,,,,,,,,,steev/linux,,,,,
thracemerin,lge-kernel-mako,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org>,02/01/2013 22:39:05,,DUPLICATE,https://github.com/thracemerin/lge-kernel-mako/commit/cd92faa44a032782b6ecaa42ba40597bc3c92d38,,,,,,,EXISTS,,,,,,,,,,,,,thracemerin/lge-kernel-mako,,,,zyonee,
BMc08GT,device_samsung_d2-common,d2-common: Disable wifi background scan and fine tune wifi * lower power consumption for wifi (match mako) * DIsable wifi bg scan momentarily Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com>,04/01/2013 08:54:59,,NOT-FOUND,https://github.com/BMc08GT/device_samsung_d2-common/commit/f412cb9096747f242502536636dea2c55ee61cbf,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BMc08GT/device_samsung_d2-common,,,,,
RudyLu,gaia,"Bug 825653 - Power save mode turns off by itself. r=Alive, a=bb+",07/01/2013 15:38:46,,OK,https://github.com/RudyLu/gaia/commit/630d40945a74355389339709a967beb0a9a767df,,,[OK][DYNAMIC ADJUSTMENT],[OK] [Bug fix],[DO NOT ANALYZE],[Bug fix] [DYNAMIC ADJUSTMENT],EXISTS,[Fix Power save mode turns off by itself],[power saving],[Bug fix],[Energy bug],,,Certain,Firefox Gaia,Bug 825653,Application,Javascript,Power save mode turns off by itself,RudyLu/gaia,RudyLu,[Miscellaneous],,RudyLu,Application browser
mozilla-b2g,gaia,"Merge pull request #7323 from RudyLu/powersave/auto_switch_off Bug 825653 - Power save mode turns off by itself. r=Alive, a=bb+",07/01/2013 15:47:19,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/2972142320b74c12c130e044b62c691dea158f8b,,,,[VERIFIED] [https://github.com/RudyLu/gaia/commit/630d40945a74355389339709a967beb0a9a767df],,[https://github.com/RudyLu/gaia/commit/630d40945a74355389339709a967beb0a9a767df],EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,RudyLu,,,RudyLu,
ttaubert,gaia,"Merge pull request #7323 from RudyLu/powersave/auto_switch_off Bug 825653 - Power save mode turns off by itself. r=Alive, a=bb+",07/01/2013 15:48:25,,NOT-FOUND,https://github.com/ttaubert/gaia/commit/2972142320b74c12c130e044b62c691dea158f8b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ttaubert/gaia,RudyLu,,,RudyLu,
mozilla-b2g,gaia,"Bug 825653 - Power save mode turns off by itself. r=Alive, a=bb+",07/01/2013 23:21:34,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/66dda3949881415d9f462e57851c039c1c51c2b1,,,,,,,EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,RudyLu,,,samjoch,
mozilla-b2g,gaia,"Bug 825653 - Power save mode turns off by itself. r=Alive, a=bb+",07/01/2013 23:31:46,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/66dda3949881415d9f462e57851c039c1c51c2b1,,,,,,,EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,RudyLu,,,samjoch,
basiclines,gaia,"Bug 825653 - Power save mode turns off by itself. r=Alive, a=bb+",07/01/2013 23:50:53,,DUPLICATE,https://github.com/basiclines/gaia/commit/66dda3949881415d9f462e57851c039c1c51c2b1,,,,,,,EXISTS,,,,,,,,,,,,,basiclines/gaia,RudyLu,,,samjoch,
basiclines,gaia,"Bug 825653 - Power save mode turns off by itself. r=Alive, a=bb+",07/01/2013 23:55:43,,DUPLICATE,https://github.com/basiclines/gaia/commit/66dda3949881415d9f462e57851c039c1c51c2b1,,,,,,,EXISTS,,,,,,,,,,,,,basiclines/gaia,RudyLu,,,samjoch,
KFire-Android,kernel_omap,uart: disable console out to uart -- power savings Change-Id: I6d8fead3c536c29ded23ec82af22a47fe3784aa5,08/01/2013 00:00:10,,NOT-FOUND,https://github.com/KFire-Android/kernel_omap/commit/06c4bb4f61277aed07de17495924c391f3edf418,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,KFire-Android/kernel_omap,,,,,
sergivila,gaia,"Merge pull request #7323 from RudyLu/powersave/auto_switch_off Bug 825653 - Power save mode turns off by itself. r=Alive, a=bb+",08/01/2013 12:58:41,,DUPLICATE,https://github.com/sergivila/gaia/commit/2972142320b74c12c130e044b62c691dea158f8b,,,,,,,EXISTS,,,,,,,,,,,,,sergivila/gaia,RudyLu,,,RudyLu,
openstack-infra,system-config,New project: Kwapi (Energy Efficiency Monitoring) Change-Id: I560d591ce6e9a8235ceae433954c414410e95adf Reviewed-on: https://review.openstack.org/19109 Reviewed-by: Monty Taylor <mordred@inaugust.com> Reviewed-by: James E. Blair <corvus@inaugust.com> Approved: Jeremy Stanley <fungi@yuggoth.org> Reviewed-by: Jeremy Stanley <fungi@yuggoth.org> Tested-by: Jenkins,09/01/2013 00:58:25,,FALSE-POSITIVE,https://github.com/openstack-infra/config/commit/5f12699abdbd861b05907c4727b5855624a943dd,https://github.com/openstack-infra/system-config/commit/5f12699abdbd861b05907c4727b5855624a943dd,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSIVITE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,openstack-infra/system-config,,,,,
openstack-infra,system-config,Update notes for submitted changes * New project: Kwapi (Energy Efficiency Monitoring),09/01/2013 00:58:27,,FALSE-POSITIVE,https://github.com/openstack-infra/config/commit/0520de2715d087d2f539d27ace2977bc6f43c1f5,https://github.com/openstack-infra/system-config/commit/0520de2715d087d2f539d27ace2977bc6f43c1f5,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Document],[FALSE-POSIVITE],[Document],EXISTS,,,,,,,,,,,,,openstack-infra/system-config,,,,,
KFire-Android,android_device_amazon_otter,update prebuilt kernel for 3.0.50 w/ power savings Change-Id: I41954e06ef17d683d99f101c2ec0bc056e80b742,09/01/2013 19:00:11,,BINARIES,https://github.com/KFire-Android/android_device_amazon_otter/commit/dafd52e8a8ffcb76d9e5fb3742ff324f61c15c73,,,,,,,EXISTS,,,,,,,,,,,,,KFire-Android/android_device_amazon_otter,Hashcode,,,Hashcode,
KFire-Android,android_device_amazon_otter,update prebuilt kernel for 3.0.50 w/ power savings Change-Id: I41954e06ef17d683d99f101c2ec0bc056e80b742,09/01/2013 19:07:49,,DUPLICATE,https://github.com/KFire-Android/android_device_amazon_otter/commit/dafd52e8a8ffcb76d9e5fb3742ff324f61c15c73,,,,,,,EXISTS,,,,,,,,,,,,,KFire-Android/android_device_amazon_otter,Hashcode,,,Hashcode,
alivedise,gaia,Bug 828295 - Remove power saving in quick settings,10/01/2013 22:48:08,,FALSE-POSITIVE,https://github.com/alivedise/gaia/commit/8900cc53a1e94ee1adc24ebd48be1de7ac7cd6ad,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,alivedise/gaia,alivedise,,,alivedise,
team751,2013RobotCode,Current limiter finished to this point. It now calculates the drivetrain's power consumption over the last 5 seconds and prints that out.,11/01/2013 00:36:20,,FALSE-POSITIVE,https://github.com/team751/2013RobotCode/commit/a79d53a2591bd4ec03e9ff13994efcf33305f0cd,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute energy consumption],[DO NOT ANALYZE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,team751/2013RobotCode,,,,,
mozilla-b2g,gaia,"Merge pull request #7532 from alivedise/bugzilla/828295/remove-power-saving-in-quick-settings Bug 828295 - Remove power saving in quick settings, r=timdream, b=vingtetun",11/01/2013 10:33:30,,FALSE-POSITIVE,https://github.com/mozilla-b2g/gaia/commit/bd92968109591837129f92b2eab30300547dedf6,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,timdream,,,timdream,
BMc08GT,device_samsung_msm8960-common,"msm8960: cne: Enable cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com>",12/01/2013 08:34:04,,NOT-FOUND,https://github.com/BMc08GT/device_samsung_msm8960-common/commit/5667ca5853f169205ce3439df0855a474f8f2b01,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BMc08GT/device_samsung_msm8960-common,,,,,
7h3ju57,frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1)",12/01/2013 21:23:18,,NOT-FOUND,https://github.com/7h3ju57/frameworks_base/commit/3c9891783121c69d40b9dab72858c036a8a4c4da,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,7h3ju57/frameworks_base,,,,,
Hellorheaven,domoserv,adding xpl files+ modify structure of conf file xpl-mysql for logging to mysql xpl-teleinfo.c (to be compile) for acquire power consumption from cartelectronic teleinformation and send information xpl network domoserv conf file structure modify for being compatiible with perl and php,13/01/2013 08:58:52,,FALSE-POSITIVE,https://github.com/Hellorheaven/domoserv/commit/4e63f16d46b97a9b799ad4175771db9ba4f3b287,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,Hellorheaven/domoserv,Hellorheaven,,,Hellorheaven,
franciscofranco,mako,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,13/01/2013 10:50:22,,DUPLICATE,https://github.com/franciscofranco/mako/commit/46ce053c222315578982bf37e50bfca7102cbf73,,,,[VERIFIED] [https://github.com/CyanogenMod/lge-kernel-mako/commit/cd92faa44a032782b6ecaa42ba40597bc3c92d38],,[https://github.com/CyanogenMod/lge-kernel-mako/commit/cd92faa44a032782b6ecaa42ba40597bc3c92d38],EXISTS,,,,,,,,,,,,,franciscofranco/mako,,,,franciscofranco,
thracemerin,lge-kernel-mako,"Squashed commit of the following: commit 6d33897d46c00114610f4cbcf56f63427f6b86a9 Author: Ido Shayevitz <idos@codeaurora.org> Date: Wed Jan 9 14:49:59 2013 +0200 USB: HSIC: Fix setting of strobe and data gpios for HSIC host Since the following commit I3e8828ddc232936df3e21c8e1158af92b16996a2 the ehci msm hsic host driver read device tree settings as the strobe and the data gpios. In case that these gpios not exists in the device tree the return value is negative. The return value was assigned to unsigned variables, therefore the driver assumes that there are such gpios. This fix handles correctly the return value of the of_get_named_gpio. Change-Id: Ia5dde57cc36438b977791df658375e0946123096 Signed-off-by: Ido Shayevitz <idos@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit 293ff55b6487d5f824dd1f92e2a4740872bad690 Author: Jack Pham <jackp@codeaurora.org> Date: Thu Aug 30 19:06:24 2012 -0700 usb: misc: Avoid excessive logging during disconnect When the device is in the midst of being disconnected, calls to usb_autopm_get_interface() may fail, and a ERR-level message is printed. Callers of such I/O functions may repeatedly try calling again, and could end up flooding the console leading to a watchdog timeout. Replace these printks with DBG-level messages since the device disconnection is normal and the errors they indicate are usually benign. CRs-fixed: 394256 Change-Id: Icf9000faa9001832734ff9c64cd903b375cc2017 Signed-off-by: Jack Pham <jackp@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit 43d6bac89bf799bef7f772a1c9d9e51a2f3fb545 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Fri Aug 24 19:42:31 2012 -0700 usb: ks_bridge: Fix memory leaks in the driver This change addresses two memory leaks:- 1) misc device is not getting deregistered during device disconnect. Hence call misc_deregister() in disconnect. 2) Driver returns without freeing previous instances of the driver data structure if memory allocation fails. Hence free up memory allocated for ks_bridge structure. Change-Id: I90133a002aa9d38597de8d1b21d3aad621552d46 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit 115edfc2c21d0710392ba5abe846b9c49f4d3bae Author: Ofir Cohen <ofirc@codeaurora.org> Date: Sun Dec 23 13:41:57 2012 +0200 usb: ehci-msm-hsic: Add asynchronous reset to HSIC Add support for asynchronous block reset to the HSIC hardware. In platforms that uses an asynchronous reset methodology, the HSIC alt_core_clk is not presented. Change-Id: I0dc0e1bf294260a5530e01660d970cc939a9dbec Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit facef861960c8b544e977971111403c684a7c0b5 Author: Manu Gautam <mgautam@codeaurora.org> Date: Wed Nov 21 14:30:04 2012 +0530 USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit fc2a50fe00aeb66ccebc2509abbeafcb6d7450db Author: Ofir Cohen <ofirc@codeaurora.org> Date: Wed Nov 14 11:18:50 2012 +0200 usb: ehci-msm-hsic: Change HSIC reset sequence Due to USB HW changes, RST CMD resets CSC/CCS fields in PORTSC and PCI bit in USBSTS. Therefore HSIC reset sequence should be changed to avoid case that the device was powered up before the host and due to a RST CMD the host will miss that the device is connected. CRs-Fixed: 417642 Change-Id: I2b1fb2a92658058d70ccc6cb5f73174ce4128b72 Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit a4b8da2d26aecc1d0716a0c4d39e6130a197e12a Author: Ofir Cohen <ofirc@codeaurora.org> Date: Tue Nov 20 11:17:24 2012 +0200 usb: ehci-msm-hsic: Add support in device tree to MSM HSIC host Add support in device tree to MSM HSIC host including support in GDSC (Global Distributed Switch Controller) for new platforms. Change-Id: I6b0df0eabb03278b97b2b69f9fcdc2ef3806ba0b Signed-off-by: Ofir Cohen <ofirc@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit c707a6153d544caeaf049b6db26ee42a79d4e5f6 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Oct 17 13:48:10 2012 -0700 EHCI: HSIC: Add support to vote for SVS digital voltage HSIC HW can operate at SVS digital voltage when it is active. Currently HSIC is voting for 120Mhz SFAB and 64Mhz DFAB clock frequencies. Clock frequencies are directly proportional to SVS voltage. If DFAB is running at 64Mhz or SFAB is running at 120Mhz or higher SVS is not possible even though HSIC votes for it. Hence do not vote for SFAB clock frequency and only vote for 32Mhz for DFAB in order to allow SVS to happen. Voting for SVS voltage reduces current consumption by 3mA in HSDPA network. Change-Id: I8a6844efbbe90a8ea118be8450f8210717c2641b Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> mako: EHCI: HSIC: Add support to vote for SVS digital voltage HSIC HW can operate at SVS digital voltage when it is active. Currently HSIC is voting for 120Mhz SFAB and 64Mhz DFAB clock frequencies. Clock frequencies are directly proportional to SVS voltage. If DFAB is running at 64Mhz or SFAB is running at 120Mhz or higher SVS is not possible even though HSIC votes for it. Hence do not vote for SFAB clock frequency and only vote for 32Mhz for DFAB in order to allow SVS to happen. Voting for SVS voltage reduces current consumption by 3mA in HSDPA network. Change-Id: I8a6844efbbe90a8ea118be8450f8210717c2641b Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit d7bc304203ce627770dcd22a8924c301b72a7e76 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Oct 17 12:29:51 2012 -0700 EHCI: HSIC: Allow standalone power collapse when HSIC is active HSIC generates interrupt at 4ms interval. If idle power collapse is enabled when HSIC is active, krait keeps on going into idle power collapse requesting RPM to handle the sleep set requirement. If HSIC interrupt comes after 4ms interval, krait comes out of idle power collapse and it again ask RPM to handle this request therefore keeps RPM busy handling requests due to frequent idle power collapse. This has a power impact. Hence only allow standalone power collapse when HSIC is active to avoid RPM involvement in assisting kraits to power collapse. Vote for idle power collapse when HSIC goes to low power mode. Change-Id: Iee8bc1fa180499f2d26fbac955a6a6ed767fdeb4 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Conflicts: arch/arm/mach-msm/board-8064.c Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit 09f1ba69b6047782529196a70d69d1c1bb6b8dc7 Author: Jack Pham <jackp@codeaurora.org> Date: Wed Oct 10 02:03:50 2012 +0200 usb: ehci-msm-hsic: Remove usage of MSM_GPIO_TO_INT MSM_GPIO_TO_INT is a platform-specific macro that should only be used in board files, not drivers. In this case, we actually don't need the GPIO number in the driver itself and only need to manipulate it using the IRQ number it maps to, so perform the mapping in the device file. Change-Id: I99eb964f3c7c4e90a4d75d16b2b29c687c3437ca Signed-off-by: Jack Pham <jackp@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit 21a9a8fe1a98d84b7f7959f21b49151db9eb6e14 Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Sep 26 15:09:27 2012 -0700 usb: Add support to set autosuspend delay by controller driver USB core driver sets the autosuspend delay to 1 sec for root hub and its children by default. In case if delay needs to be changed for a particular controller, it requires class driver to explicitly call PM API to set the new values. Hence add a call back handler to set autosuspend delay in controller driver. This makes class driver code generic. Change-Id: I62121651f0a9648a2909ca7eb4081a6c2567ed01 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit 89ed188efd282e99de3a1ec8812dc5720498d34b Author: Jack Pham <jackp@codeaurora.org> Date: Fri Sep 28 17:45:38 2012 -0700 usb: ehci-msm-hsic: Fix compilation error The ehci-msm-hsic driver's bus suspend and resume functions depend on ehci_hcd's bus_suspend/resume functions, which are NULL when CONFIG_PM is not defined. Fix the compilation error by also #defining these sub-driver functions NULL, as they are effectively no-ops. Change-Id: Ie250dfae3caccb737ce26bdda17c5b21d358eced Signed-off-by: Jack Pham <jackp@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> commit 38ba8a8a63816089a6d877148abfcfdbd120b02b Author: Hemant Kumar <hemantk@codeaurora.org> Date: Wed Aug 15 09:06:35 2012 -0700 EHCI: HSIC: Add enhancements to debug logging This change addresses following enhancements to debug logging:- 1) Add data payload logging which is not currently supported. This helps to sniff first 32 bytes of data being sent and received. Data payload logging is enabled by default. To disable data payload logging:- echo 0 > /sys/module/ehci_hcd/parameters/enable_payload_log 2) Current urb submission event logging does not cover root hub submissions, hence move urb submission logging to hcd driver. 3) Current urb submission event logging does not return the correct status if submission fails. Hence log the return status of urb submission. CRs-Fixed: 393294 Change-Id: Ic7e555e1545ec7d7b0e4042cd35235e0af26fb01 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gma ...",13/01/2013 17:33:33,,NOT-FOUND,https://github.com/thracemerin/lge-kernel-mako/commit/dffd04c406b414beeb09012ebb0f7958fc3774d6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,thracemerin/lge-kernel-mako,,,,,
MachineMuse,MachineMusePowersuits,Fixed tool power consumption & tweaked recipes,14/01/2013 06:12:19,,FALSE-POSITIVE,https://github.com/MachineMuse/MachineMusePowersuits/commit/f9e986e4d550d2ec13539f792893e79e66cd75cf,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game] [Minecraft],[DO NOT ANALYZE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,MachineMuse/MachineMusePowersuits,MachineMuse,,,MachineMuse,
webOS-ports,webos-telephonyd,Implement settings class to save power state on service initialization and restore it on next start Open-webOS-DCO-1.0-Signed-off-by: Simon Busch <morphis@gravedo.de>,14/01/2013 10:20:13,,FALSE-POSITIVE,https://github.com/webOS-ports/webos-telephonyd/commit/ae99c16b897e42e0e26e5fcabf4231c4262ca911,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,webOS-ports/webos-telephonyd,morphis,,,morphis,
IceColdJelly42,frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com> Change-Id: I6cc4a380555a64cebe23e918096ad5751444f010",15/01/2013 18:29:54,,OK,https://github.com/IceColdJelly42/frameworks_av/commit/442a7f36d7993e57a98ba7f162dfd9897fde10c7,,,[OK][?],[OK] [Bug fix] [App specific],[DO NOT ANALYZE],[Bug fix] [App specific] [?],EXISTS,[Fix to release wakelock after closeoutput],[if closeOutput is called after releaseWakelock is done it may result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption.],[Bug fix] [Release wakelock after releasing resources],[Energy bug],,,Certain,Android,Change-Id: I6cc4a380555a64cebe23e918096ad5751444f010,OS,C++,Fix to release wakelock after closeoutput This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption,IceColdJelly42/frameworks_av,,[Energy bug],,LorDClockaN,Software stack
burstlam,android_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com> Change-Id: I6cc4a380555a64cebe23e918096ad5751444f010",15/01/2013 18:42:34,,NOT-FOUND,https://github.com/burstlam/android_frameworks_av/commit/07ab73c04b8246293e9229116f0fa6cbd86a3be3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,burstlam/android_frameworks_av,,,,,
cozybit,open80211s,fix mac80211: mesh power save basics,16/01/2013 09:44:18,,NOT-FOUND,https://github.com/cozybit/open80211s/commit/7f56093e8d076c98dec72810528a713d0de907bb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,cozybit/open80211s,,,,,
AOKP,frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com> Change-Id: I6cc4a380555a64cebe23e918096ad5751444f010",16/01/2013 17:46:05,,DUPLICATE,https://github.com/AOKP/frameworks_av/commit/d83bbf8a678db974c60779eeb2dbaa58373e0fc4,,,,,,,EXISTS,,,,,,,,,,,,,AOKP/frameworks_av,,,,,
maxwen,frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com> Change-Id: I6cc4a380555a64cebe23e918096ad5751444f010",16/01/2013 21:18:55,,NOT-FOUND,https://github.com/maxwen/frameworks_av/commit/3a6f875eaa9ee077cb8aaefbd4dc096c707ac664,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,maxwen/frameworks_av,,,,,
androidarmv6,android_kernel_lge_msm7x27,"kernel: Prevent unnecessary rfkill event generation. Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Change-Id: I3ac4e141fbdf1315b74d3bad6aa96f34b00c3f92 CRs-fixed: 398283 Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Deepthi Gowri <deepthi@codeaurora.org>",16/01/2013 22:19:17,,OK,https://github.com/androidarmv6/android_kernel_lge_msm7x27/commit/a6ef72fddaf6a04daf6b0adc0da8d9c77aaadedd,,,[OK][Prevent unnecessary resource usage],[OK] [Prevent unnecessary event] [App specific] [Android],[DO NOT ANALYZE],[Prevent unnecessary event] [App specific] [Android] [Prevent unnecessary resource usage],EXISTS,[Prevent unnecessary rfkill event generation],[events are delivered to userspace processes causing these processes to unnecessarilly wake up],[Prevent unnecessary event] [Prevent unnecessary resource usage],[Avoid unnecessary work],,,Certain,Android,CRs-fixed: 398283,OS,C,"Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption",androidarmv6/android_kernel_lge_msm7x27,,[Energy bug],,AndroidMeda,Kernel
dastin1015,android_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. CRs-fixed: 438179 Change-Id: Ibe103804daf2cb09bade998d6d34c3a34508dd09",16/01/2013 22:47:56,,NOT-FOUND,https://github.com/dastin1015/android_frameworks_av/commit/86b94235ad6e9088d36381a37df057c3b2840fc2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dastin1015/android_frameworks_av,,,,,
TeamYOLO,TeamYoloBattlecode,changed how rally code works to be centralized in the hq for less power consumption (we are going green),17/01/2013 02:35:47,,NOT-FOUND,https://github.com/TeamYOLO/TeamYoloBattlecode/commit/b5a9a1fcfd9d2718449f356e5a0c21236eef5d99,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamYOLO/TeamYoloBattlecode,,,,,
ThinkingBridge,platform_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com> Change-Id: I6cc4a380555a64cebe23e918096ad5751444f010",17/01/2013 12:47:55,,NOT-FOUND,https://github.com/ThinkingBridge/platform_frameworks_av/commit/1c07801f0c3232ed6d4f4da5eb8f35104a89ed7e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ThinkingBridge/platform_frameworks_av,,,,,
zen-kernel,zen-kernel,ath9k_hw: Enable hw PLL power save for AR9462 commit 1680260226a8fd2aab590319da83ad8e610da9bd upstream. This reduced the power consumption to half in full and network sleep. Signed-off-by: Rajkumar Manoharan <rmanohar@qca.qualcomm.com> Cc: Paul Stewart <pstew@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,17/01/2013 22:07:50,,OK,https://github.com/damentz/zen-kernel/commit/bcc86b4d54b8f0ad6818c2ee2e1d113fd2fffb02,https://github.com/zen-kernel/zen-kernel/commit/bcc86b4d54b8f0ad6818c2ee2e1d113fd2fffb02,,[OK][?],[OK] [Enable power save],[OK] [Enable power save],[Enable power save] [?],EXISTS,[Enable hw PLL power save],[reduced power consumption],[Enable device power save],[Enable device power save],,,Certain,Linux zen !,No,OS,C,This reduced the power consumption to half in full and network sleep.,zen-kernel/zen-kernel,,[Disabling feature/devices],,,Driver
eegorov,zen-kernel,ath9k_hw: Enable hw PLL power save for AR9462 commit 1680260226a8fd2aab590319da83ad8e610da9bd upstream. This reduced the power consumption to half in full and network sleep. Signed-off-by: Rajkumar Manoharan <rmanohar@qca.qualcomm.com> Cc: Paul Stewart <pstew@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,18/01/2013 11:27:12,,DUPLICATE,https://github.com/eegorov/zen-kernel/commit/bcc86b4d54b8f0ad6818c2ee2e1d113fd2fffb02,,,,,,,EXISTS,,,,,,,,,,,,,eegorov/zen-kernel,,,,gregkh,
Team-Hydra,android_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. CRs-fixed: 438179 Change-Id: Ibe103804daf2cb09bade998d6d34c3a34508dd09",18/01/2013 20:02:50,,DUPLICATE,https://github.com/Team-Hydra/android_frameworks_av/commit/aceb95de5478a388e3fd7ced297708287d0f1104,,,,,,,EXISTS,,,,,,,,,,,,,Team-Hydra/android_frameworks_av,,,,dastin1015,
faux123,mako,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org>,18/01/2013 21:37:34,,DUPLICATE,https://github.com/faux123/mako/commit/f25e548832f19c9bb7425ef215934071f879fd0c,,,,,,,EXISTS,,,,,,,,,,,,,faux123/mako,,,,faux123,
ptmr3,SGH-T889_Kernel,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,18/01/2013 21:45:01,,NOT-FOUND,https://github.com/ptmr3/SGH-T889_Kernel/commit/0d0ce983e818835acc6ac2a595147d952e2efee4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ptmr3/SGH-T889_Kernel,,,,,
beloglazov,ccpe-2014-experiments,Added a script for estimating energy savings,19/01/2013 05:23:59,,FALSE-POSITIVE,https://github.com/beloglazov/spe-2013-experiments/commit/add3e3094b80efd0e9e5d45b54eab8743d4115bc,https://github.com/beloglazov/ccpe-2014-experiments/commit/add3e3094b80efd0e9e5d45b54eab8743d4115bc,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSIVITE],,EXISTS,,,,,,,,,,,,,beloglazov/ccpe-2014-experiments,,,,,
TeamChopsticks,android_kernel_samsung_msm8660-common,"cpufreq: boost the sampling rate on touch event For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate. Also, change sampling down factor proportional to the sampling rate. Change-Id: I111b1cf3b8ed133347149afc34d329d0384ecfcb Signed-off-by: Narayanan Gopalakrishnan <nargop@codeaurora.org>",20/01/2013 02:21:36,,NOT-FOUND,https://github.com/TeamChopsticks/android_kernel_samsung_msm8660-common/commit/b480a4dcda4c5e012cf3b9b9c48fa8c01b57a39c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamChopsticks/android_kernel_samsung_msm8660-common,,,,,
SlimRoms,frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com> Change-Id: I6cc4a380555a64cebe23e918096ad5751444f010",20/01/2013 19:42:44,,DUPLICATE,https://github.com/SlimRoms/frameworks_av/commit/9518083201efb643f064f13a23b47c0f111c3841,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/frameworks_av,,,,kufikugel,
Haifen,lge-kernel-mako,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org>,20/01/2013 23:15:43,,DUPLICATE,https://github.com/Haifen/lge-kernel-mako/commit/cd92faa44a032782b6ecaa42ba40597bc3c92d38,,,,,,,EXISTS,,,,,,,,,,,,,Haifen/lge-kernel-mako,,,,zyonee,
mathkid95,linux_lg_jb,"msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> (cherry picked from commit d27ca4a7526a890f9d2979acefda3561e49d2e66) Signed-off-by: Sudhir Sharma <sudsha@codeaurora.org> (cherry picked from commit 3af7249c36ab53923fdf216df3b3ba2c7f847851)",21/01/2013 19:30:14,,NOT-FOUND,https://github.com/mathkid95/linux_lg_jb/commit/949fbccad15e2e7f693d3a3cffc5032fe0eadd30,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mathkid95/linux_lg_jb,,,,,
mathkid95,linux_lg_jb,"msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> (cherry picked from commit d27ca4a) Signed-off-by: Sudhir Sharma <sudsha@codeaurora.org> (cherry picked from commit 3af7249)",21/01/2013 23:08:34,,OK,https://github.com/mathkid95/linux_lg_jb/commit/508f681dc12f7c34bb0d01cbc5034003f89db1d8,,,[OK][?],[OK] [Add new power state],[DO NOT ANALYZE],[Add new power state] [?],EXISTS,[Introduce a new low power state],[state will lower the voltage to retention],[Add new power state] [Add new lower voltage state],[Add power saving state],,,Certain,Android,No,OS,C,"Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating",mathkid95/linux_lg_jb,,[Miscellaneous],,,Kernel arch
Ferroin,mspbinclk,Updated to be more energy efficient.,22/01/2013 21:12:16,,UNABLE-TO-CATEGORIZE,https://github.com/Ferroin/mspbinclk/commit/c561c0db151d2988fdfce2f3482cc4846cdf45b9,,,[OK][?],[OK] [Use interrupts] [Idle till interrupt],[OK][?],[Use interrupts] [Idle till interrupt] [?],EXISTS,,,,,,,,,,,,,Ferroin/mspbinclk,Ferroin,,,Ferroin,
riverzhou,otter-omap-3,"Fixed I2C hang on transmit, as well as fixed error where time would be corrupted upon sending data through I2C. Tweaked low power settings to reduce power consumption.",22/01/2013 21:41:47,,DUPLICATE,https://github.com/riverzhou/otter-omap-3/commit/8ef6b3c00b0bc811e9aae548e90e56902818efbe,,,[OK][Tweaked settings],[DUPLICATE] [8ef6b3c00b0bc811e9aae548e90e56902818efbe],[DO NOT ANALYZE],[8ef6b3c00b0bc811e9aae548e90e56902818efbe] [Tweaked settings],EXISTS,,,,,,,,,,,,,riverzhou/otter-omap-3,bklippenstein,,,bklippenstein,
Ferroin,mspbinclk,"Multiple energy efficiency optimizations * Changed Timer_A0 interval to 60000 cycles, thus reducing interrupt frequency. * Moved update routine to Timer_A0 interrupt handler, reducing the number of interrupt sources from 4 to 3.",23/01/2013 01:10:40,,OK,https://github.com/Ferroin/mspbinclk/commit/c2c0939482269a54823593f56cb3d59641a8557e,,,[OK][REDUCING INTERRUPTS],[OK] [Reduce interrupt frequency] [Reduce interrupt sources],[OK] [IMPROVING INTERRUPT FREQUENCY],[Reduce interrupt frequency] [Reduce interrupt sources] [REDUCING INTERRUPTS] [IMPROVING INTERRUPT FREQUENCY],EXISTS,[Reduced timer interval] [Moved update routine to Timer_A0 interrupt handler],[reducing interrupt frequency] [reducing the number of interrupt sources from 4 to 3],[Reduce interrupt frequency] [Reduce interrupt sources],[Reduce interrupt],,Multiple changes,Certain,Embedded !,No,Application,Assembly,Multiple energy efficiency optimizations,Ferroin/mspbinclk,Ferroin,[Miscellaneous],,Ferroin,Embedded application !
samm-git,device_alcatel_OT993D,enable power save,24/01/2013 19:51:50,,OK,https://github.com/samm-git/device_alcatel_OT993D/commit/d108dccc376b62e79ab5800ceac6a3d5a6acb07e,,,[OK][SCALING CPU FREQ],[OK] [Enable power saving] [Governor] [Ondemand governor],[DO NOT ANALYZE],[Enable power saving] [Governor] [Ondemand governor] [SCALING CPU FREQ],EXISTS,[enable power save],[optimize battery usage],[Use ondemand governor] [Configure governor] [Script] [Config],[Select power saving governor],,Governor on demand,Certain,Android,No,Libraries and Utilities,recovery.rc,enable power save,samm-git/device_alcatel_OT993D,samm-git,[Frequency and voltage scaling],,samm-git,Script
kubanecxxx,termostat,power consumption optimization,24/01/2013 21:35:25,,OK,https://github.com/kubanecxxx/termostat/commit/b8173424c335631bcbbe0bbdb641e4833309201d,,,[OK][?],[OK] [Go to idle] [Disable component],[DO NOT ANALYZE],[Go to idle] [Disable component] [?],EXISTS,[idle waiting for interrupt] [disable device],[power saving],[Use interrupt] [Go to idle] [Disable component] [Disable device],[Wait for interrupt idling] ?,[Enable component low power mode],Multiple changes,Certain,?,No,Application,C++,power consumption optimization,kubanecxxx/termostat,kubanecxxx,[Polling avoidance],,kubanecxxx,Application !
linrunner,TLP,Use iw for wifi power save if available; iwconfig is considered deprecated.,24/01/2013 21:37:47,,FALSE-POSITIVE,https://github.com/linrunner/TLP/commit/9a0660c8cb6d93760ff4be0ac14de961aa1e0ac7,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
PecanCM,lge-kernel-pecan,"kernel: Prevent unnecessary rfkill event generation. Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Change-Id: I3ac4e141fbdf1315b74d3bad6aa96f34b00c3f92 CRs-fixed: 398283 Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Deepthi Gowri <deepthi@codeaurora.org>",25/01/2013 07:59:16,,DUPLICATE,https://github.com/PecanCM/lge-kernel-pecan/commit/61b7c4b70aeacb809439879107f246c93c9eb419,,,,,,,EXISTS,,,,,,,,,,,,,PecanCM/lge-kernel-pecan,,,,,
dsmilely,dsmilely.github.com,ubuntu power saving setting,26/01/2013 02:58:58,,NOT-FOUND,https://github.com/dsmilely/dsmilely.github.com/commit/b95b28ea12bb256f0a3cbd37af62c9172b410736,,,[FALSE-POSITIVE],[FALSE-POSITIVE],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dsmilely/dsmilely.github.com,dsmilely,,,dsmilely,
CyanogenMod,android_device_sony_montblanc-common,montblanc: enable power saving after boot Change-Id: Ic55f496db42abe14ab6c56f5121cf5102f54d4ca,26/01/2013 15:21:51,,OK,https://github.com/CyanogenMod/android_device_sony_montblanc-common/commit/bd032afd36ab0bd45c105239550d0d97d46bcf33,,,[OK][SCALE CPU FREQ],[OK] [Scale CPU frequency] [Set min frequency] [Governor] [Android],[DO NOT ANALYZE],[Scale CPU frequency] [Set min frequency] [Governor] [Android] [SCALE CPU FREQ],EXISTS,[enable power saving after boot] [config governor],[power saving],[Scale CPU frequency] [Set min frequency] [Configure governor] [Script] [Config],[DVFS] [Sub1: Governor tuning],,"Governor on demand, multiple changes",Certain,Android,No,Libraries and Utilities,init.rc,montblanc: enable power saving after boot,CyanogenMod/android_device_sony_montblanc-common,freexperia,[Frequency and voltage scaling],,freexperia,Script
CyanogenMod,android_device_sony_montblanc-common,Update notes for submitted changes * montblanc: enable power saving after boot,26/01/2013 15:21:52,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_device_sony_montblanc-common/commit/55cdbc1d03d9b0d20f843a66a26a3e0b08b1da82,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_sony_montblanc-common,freexperia,,,,
CyanogenMod,android_frameworks_av,"libstagefright: Collection of fixes for TunnelPlayer -Handling of EOS, and triggering EOS was wrong in TunnelPlayer. Seeking when EOS was posted to the HAL was wrong. EOS should not be posted till seek is complete -Also, EOS should not be posted to the app if we are seeking -Player should wake up when seeked, even after EOS was posted from player to HAL -Fixed this issue by cleaning up the code for EOS -Disable tunnel mode playback for streaming use cases to avoid jittery playback Change-Id: I21699d2d5874bde6cbfe549ce0251b252e9a4090 CRs-Fixed: 433346 CRs-Fixed: 432233 CRs-Fixed: 429868 libstagefright: Add new mime for QC TS container - Add new mime type for TS container that is sniffed by extended extractor. This is needed for media extractor to determine which parser to create. Change-Id: I18dcebbbf3b31cea7db29a4dd65385638343bec1 libstagefright: Use software decoder for ADTS content. Use software decoder for widevine content which uses ADTS format. CRs-fixed: 431096 (cherry picked from commit 3edf2e703bcdc47f122864865056d5cb65b7ab43) Change-Id: I50eba673ddd6ec2bbb737577978e61902ff68d13 audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. CRs-fixed: 438179 Change-Id: Ibe103804daf2cb09bade998d6d34c3a34508dd09 libstagefright: Add support to change clip duration to enable LPA Added support to change the clip duration threshold value for LPA playback. A new system property 'lpa.min_duration' has been added which controls the minimum clip length for enabling LPA. The default threshold value has been retained as 60sec. Change-Id: I6a8be6d6bf67495977d8c75e5be14723a31353b1 frameworks/av: Skip tunnel mode for playback through AudioCache In the use case of playback using SoundPool, decoded data is cached from player and further rendered through AudioCache. Avoid Tunnel mode for the use case AAC format through SoundPool Change-Id: I21005a5b39f9fb480ae0d525ecb560fec4382620 CRs-Fixed: 437539 frameworks/base: dumpsys rendering statistics for Stagefright - this adds extra fps statisticis - report via dumpsys Change-Id: I7b4d4582c4eb2ccf2d11557844dade92f9e587c0 CRs-Fixed: 435013 libstagefright: Stop extractor source after start in TunnelPlayer Issue: In the use case of frequent suspend resume during Video Playback with HDMI Connected, we encounter a scenario where tunnel player is created and destroyed without the extractor source started. In such use case, stopping the source in reset during the tunnel player destruction leads to failure during assertion check. Fix: Check for mStarted flag to ensure that stop on source is called only after they are started. Change-Id: Ib18e7ee3d10b2cc706944e358046f163d156706c CRs-Fixed: 440239",27/01/2013 03:49:51,,DUPLICATE,https://github.com/CyanogenMod/android_frameworks_av/commit/d7a251d1422895694f71764678ff48d021224752,,,,[?] [This might be a SOFT-DUP of 545] [Bug fix] [Release resource before unlocking] [VERIFY],,[This might be a SOFT-DUP of 545] [Bug fix] [Release resource before unlocking] [VERIFY],EXISTS,,,,,,,,,,,,,CyanogenMod/android_frameworks_av,,,,,
milaq,android_kernel_lge_p940,notification leds: blinkenlights adapted from ricardos workqueue/alarm implementation from p990: https://github.com/CyanogenMod/lge-kernel-star/commit/6e8556777a775845e34a4a11bc93423ec254cf7b should be way more power efficient than previous (always-on) implementation as it allows the device to enter deepsleep in between pulses,27/01/2013 23:42:55,,OK,https://github.com/milaq/android_kernel_lge_p940/commit/966e528a42805232f850b922f2d92ede9208a438,,,[OK][USE SLEEP STATES],[OK] [Go to idle] [Use interrupts] [Android],[DO NOT ANALYZE],[Go to idle] [Use interrupts] [Android] [USE SLEEP STATES],EXISTS,[Insert a ~4 second pause between pulses ],[allows the device to enter deepsleep in between pulses] [more efficient then previous always on implementation],[Use workqueue] [Pause between pulses],?,,,Uncertain should,Android,No,OS,C,should be way more power efficient than previous (always-on) implementation as it allows the device to enter deepsleep in between pulses,milaq/android_kernel_lge_p940,milaq,[Miscellaneous],,milaq,Driver
milaq,android_kernel_lge_p940,notification leds: blinkenlights adapted from ricardos workqueue/alarm implementation from p990: https://github.com/CyanogenMod/lge-kernel-star/commit/6e8556777a775845e34a4a11bc93423ec254cf7b should be way more power efficient than previous (always-on) implementation as it allows the device to enter deepsleep in between pulses,27/01/2013 23:44:31,,DUPLICATE,https://github.com/milaq/android_kernel_lge_p940/commit/de5e5f15a529dd7fc068ceaa67ffb39eb38f0173,,,,,,,EXISTS,,,,,,,,,,,,,milaq/android_kernel_lge_p940,milaq,,,milaq,
milaq,android_kernel_lge_p940,notification leds: use only one thread and decrease pulse lenght - should aid in further reducing power consumption,28/01/2013 01:33:47,,OK,https://github.com/milaq/android_kernel_lge_p940/commit/d030acbaf9ee681eb44407e35d1c582d5ac8ee4e,,,[OK][USE A SINGLE THREAD],[OK] [Use single thread] [Reduce component usage] [Android],[DO NOT ANALYZE],[Use single thread] [Reduce component usage] [Android] [USE A SINGLE THREAD],EXISTS,[use only one thread] [reduce pulse length],[should aid in further reducing power consumption],[Use single thread] [Reduce component usage],[Use single thread queue],[Reduce LED usage],Multiple changes,Uncertain should,Android,No,OS,C,notification leds: use only one thread and decrease pulse lenght - should aid in further reducing power consumption,milaq/android_kernel_lge_p940,milaq,[Miscellaneous],,milaq,Driver
supremeAVgeek,android_kernel_meizu_m9,add deep idle power saving state,28/01/2013 13:11:45,,NOT-FOUND,https://github.com/supremeAVgeek/android_kernel_meizu_m9/commit/6ac3b1b3378e50bf3aae180a3d0823762eb1ae27,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,supremeAVgeek/android_kernel_meizu_m9,,,,,
supremeAVgeek,android_kernel_meizu_m9,add deep idle power saving state,28/01/2013 13:21:10,,NOT-FOUND,https://github.com/supremeAVgeek/android_kernel_meizu_m9/commit/2278fd87b545f4aa5ce68f0fcf8f45cc3a54471e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,supremeAVgeek/android_kernel_meizu_m9,,,,,
milaq,android_device_lge_p940,update prebuilt kernel * power consumption optimizations to notification led,28/01/2013 15:35:11,,BINARIES,https://github.com/milaq/android_device_lge_p940/commit/77a248a5a60e20fc7f50c041e2018f6b5230576a,,,,,,,EXISTS,,,,,,,,,,,,,milaq/android_device_lge_p940,milaq,,,milaq,
ivendor,android_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. (cherry picked from commit fb48938f73e335ac66c83e6adba96431e050ec94) Change-Id: Ib8d05a38f28d7e2f0bdf9e420e5db526cf874bc6 CRs-Fixed: 430786",28/01/2013 23:30:39,,NOT-FOUND,https://github.com/ivendor/android_frameworks_av/commit/05136066b2c63b850a3cc79115b358b139bfc0d4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ivendor/android_frameworks_av,,,,,
Team-Hydra,android_kernel_htc_jewel,"cpufreq: boost the sampling rate on touch event For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate. Also, change sampling down factor proportional to the sampling rate. Change-Id: I111b1cf3b8ed133347149afc34d329d0384ecfcb Signed-off-by: Narayanan Gopalakrishnan <nargop@codeaurora.org>",29/01/2013 00:29:58,,NOT-FOUND,https://github.com/Team-Hydra/android_kernel_htc_jewel/commit/73392cc0a4fdd75cd5b2365c4d05285a5d9c4ffc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-Hydra/android_kernel_htc_jewel,,,,,
cornedor,performance-tool,Bugfixes and added power save profile.,29/01/2013 22:54:20,,RELATED,https://github.com/cornedor/performance-tool/commit/d18fd5fea6b7c07d051fcb63f8fa10f21718b1c7,,,[RELATED][ADD POWER SAVE PROFILE][ANDROID],[RELATED] [Add power saving option] [Android],[DO NOT ANALYZE],[Add power saving option] [Android] [ADD POWER SAVE PROFILE],EXISTS,,,,,,,,,,,,,cornedor/performance-tool,cornedor,,,cornedor,
jsnweitzel,android_frameworks_av,"libstagefright: Collection of fixes for TunnelPlayer -Handling of EOS, and triggering EOS was wrong in TunnelPlayer. Seeking when EOS was posted to the HAL was wrong. EOS should not be posted till seek is complete -Also, EOS should not be posted to the app if we are seeking -Player should wake up when seeked, even after EOS was posted from player to HAL -Fixed this issue by cleaning up the code for EOS -Disable tunnel mode playback for streaming use cases to avoid jittery playback Change-Id: I21699d2d5874bde6cbfe549ce0251b252e9a4090 CRs-Fixed: 433346 CRs-Fixed: 432233 CRs-Fixed: 429868 libstagefright: Add new mime for QC TS container - Add new mime type for TS container that is sniffed by extended extractor. This is needed for media extractor to determine which parser to create. Change-Id: I18dcebbbf3b31cea7db29a4dd65385638343bec1 libstagefright: Use software decoder for ADTS content. Use software decoder for widevine content which uses ADTS format. CRs-fixed: 431096 (cherry picked from commit 3edf2e703bcdc47f122864865056d5cb65b7ab43) Change-Id: I50eba673ddd6ec2bbb737577978e61902ff68d13 audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. CRs-fixed: 438179 Change-Id: Ibe103804daf2cb09bade998d6d34c3a34508dd09 libstagefright: Add support to change clip duration to enable LPA Added support to change the clip duration threshold value for LPA playback. A new system property 'lpa.min_duration' has been added which controls the minimum clip length for enabling LPA. The default threshold value has been retained as 60sec. Change-Id: I6a8be6d6bf67495977d8c75e5be14723a31353b1 frameworks/av: Skip tunnel mode for playback through AudioCache In the use case of playback using SoundPool, decoded data is cached from player and further rendered through AudioCache. Avoid Tunnel mode for the use case AAC format through SoundPool Change-Id: I21005a5b39f9fb480ae0d525ecb560fec4382620 CRs-Fixed: 437539 frameworks/base: dumpsys rendering statistics for Stagefright - this adds extra fps statisticis - report via dumpsys Change-Id: I7b4d4582c4eb2ccf2d11557844dade92f9e587c0 CRs-Fixed: 435013 libstagefright: Stop extractor source after start in TunnelPlayer Issue: In the use case of frequent suspend resume during Video Playback with HDMI Connected, we encounter a scenario where tunnel player is created and destroyed without the extractor source started. In such use case, stopping the source in reset during the tunnel player destruction leads to failure during assertion check. Fix: Check for mStarted flag to ensure that stop on source is called only after they are started. Change-Id: Ib18e7ee3d10b2cc706944e358046f163d156706c CRs-Fixed: 440239",30/01/2013 06:27:13,,NOT-FOUND,https://github.com/jsnweitzel/android_frameworks_av/commit/008f9d73c9e5ed018f144d6632fa22379d3fdea5,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jsnweitzel/android_frameworks_av,,,,,
jsnweitzel,android_frameworks_av,"libstagefright: Collection of fixes for TunnelPlayer -Handling of EOS, and triggering EOS was wrong in TunnelPlayer. Seeking when EOS was posted to the HAL was wrong. EOS should not be posted till seek is complete -Also, EOS should not be posted to the app if we are seeking -Player should wake up when seeked, even after EOS was posted from player to HAL -Fixed this issue by cleaning up the code for EOS -Disable tunnel mode playback for streaming use cases to avoid jittery playback Change-Id: I21699d2d5874bde6cbfe549ce0251b252e9a4090 CRs-Fixed: 433346 CRs-Fixed: 432233 CRs-Fixed: 429868 libstagefright: Add new mime for QC TS container - Add new mime type for TS container that is sniffed by extended extractor. This is needed for media extractor to determine which parser to create. Change-Id: I18dcebbbf3b31cea7db29a4dd65385638343bec1 libstagefright: Use software decoder for ADTS content. Use software decoder for widevine content which uses ADTS format. CRs-fixed: 431096 (cherry picked from commit 3edf2e703bcdc47f122864865056d5cb65b7ab43) Change-Id: I50eba673ddd6ec2bbb737577978e61902ff68d13 audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. CRs-fixed: 438179 Change-Id: Ibe103804daf2cb09bade998d6d34c3a34508dd09 libstagefright: Add support to change clip duration to enable LPA Added support to change the clip duration threshold value for LPA playback. A new system property 'lpa.min_duration' has been added which controls the minimum clip length for enabling LPA. The default threshold value has been retained as 60sec. Change-Id: I6a8be6d6bf67495977d8c75e5be14723a31353b1 frameworks/av: Skip tunnel mode for playback through AudioCache In the use case of playback using SoundPool, decoded data is cached from player and further rendered through AudioCache. Avoid Tunnel mode for the use case AAC format through SoundPool Change-Id: I21005a5b39f9fb480ae0d525ecb560fec4382620 CRs-Fixed: 437539 frameworks/base: dumpsys rendering statistics for Stagefright - this adds extra fps statisticis - report via dumpsys Change-Id: I7b4d4582c4eb2ccf2d11557844dade92f9e587c0 CRs-Fixed: 435013 libstagefright: Stop extractor source after start in TunnelPlayer Issue: In the use case of frequent suspend resume during Video Playback with HDMI Connected, we encounter a scenario where tunnel player is created and destroyed without the extractor source started. In such use case, stopping the source in reset during the tunnel player destruction leads to failure during assertion check. Fix: Check for mStarted flag to ensure that stop on source is called only after they are started. Change-Id: Ib18e7ee3d10b2cc706944e358046f163d156706c CRs-Fixed: 440239",31/01/2013 00:46:18,,NOT-FOUND,https://github.com/jsnweitzel/android_frameworks_av/commit/299340a9c064e4b5ff2da4b718efd1b344833611,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jsnweitzel/android_frameworks_av,,,,,
LiquidSmooth,android_frameworks_av,"libstagefright: Collection of fixes for TunnelPlayer -Handling of EOS, and triggering EOS was wrong in TunnelPlayer. Seeking when EOS was posted to the HAL was wrong. EOS should not be posted till seek is complete -Also, EOS should not be posted to the app if we are seeking -Player should wake up when seeked, even after EOS was posted from player to HAL -Fixed this issue by cleaning up the code for EOS -Disable tunnel mode playback for streaming use cases to avoid jittery playback Change-Id: I21699d2d5874bde6cbfe549ce0251b252e9a4090 CRs-Fixed: 433346 CRs-Fixed: 432233 CRs-Fixed: 429868 libstagefright: Add new mime for QC TS container - Add new mime type for TS container that is sniffed by extended extractor. This is needed for media extractor to determine which parser to create. Change-Id: I18dcebbbf3b31cea7db29a4dd65385638343bec1 libstagefright: Use software decoder for ADTS content. Use software decoder for widevine content which uses ADTS format. CRs-fixed: 431096 (cherry picked from commit 3edf2e703bcdc47f122864865056d5cb65b7ab43) Change-Id: I50eba673ddd6ec2bbb737577978e61902ff68d13 audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. CRs-fixed: 438179 Change-Id: Ibe103804daf2cb09bade998d6d34c3a34508dd09 libstagefright: Add support to change clip duration to enable LPA Added support to change the clip duration threshold value for LPA playback. A new system property 'lpa.min_duration' has been added which controls the minimum clip length for enabling LPA. The default threshold value has been retained as 60sec. Change-Id: I6a8be6d6bf67495977d8c75e5be14723a31353b1 frameworks/av: Skip tunnel mode for playback through AudioCache In the use case of playback using SoundPool, decoded data is cached from player and further rendered through AudioCache. Avoid Tunnel mode for the use case AAC format through SoundPool Change-Id: I21005a5b39f9fb480ae0d525ecb560fec4382620 CRs-Fixed: 437539 frameworks/base: dumpsys rendering statistics for Stagefright - this adds extra fps statisticis - report via dumpsys Change-Id: I7b4d4582c4eb2ccf2d11557844dade92f9e587c0 CRs-Fixed: 435013 libstagefright: Stop extractor source after start in TunnelPlayer Issue: In the use case of frequent suspend resume during Video Playback with HDMI Connected, we encounter a scenario where tunnel player is created and destroyed without the extractor source started. In such use case, stopping the source in reset during the tunnel player destruction leads to failure during assertion check. Fix: Check for mStarted flag to ensure that stop on source is called only after they are started. Change-Id: Ib18e7ee3d10b2cc706944e358046f163d156706c CRs-Fixed: 440239",31/01/2013 06:04:01,,NOT-FOUND,https://github.com/LiquidSmooth/android_frameworks_av/commit/7c1067691489ddcdcc81ee1d2041525b370ea30a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LiquidSmooth/android_frameworks_av,,,,,
Juansheng,android_frameworks_av,"libstagefright: Collection of fixes for TunnelPlayer -Handling of EOS, and triggering EOS was wrong in TunnelPlayer. Seeking when EOS was posted to the HAL was wrong. EOS should not be posted till seek is complete -Also, EOS should not be posted to the app if we are seeking -Player should wake up when seeked, even after EOS was posted from player to HAL -Fixed this issue by cleaning up the code for EOS -Disable tunnel mode playback for streaming use cases to avoid jittery playback Change-Id: I21699d2d5874bde6cbfe549ce0251b252e9a4090 CRs-Fixed: 433346 CRs-Fixed: 432233 CRs-Fixed: 429868 libstagefright: Add new mime for QC TS container - Add new mime type for TS container that is sniffed by extended extractor. This is needed for media extractor to determine which parser to create. Change-Id: I18dcebbbf3b31cea7db29a4dd65385638343bec1 libstagefright: Use software decoder for ADTS content. Use software decoder for widevine content which uses ADTS format. CRs-fixed: 431096 (cherry picked from commit 3edf2e703bcdc47f122864865056d5cb65b7ab43) Change-Id: I50eba673ddd6ec2bbb737577978e61902ff68d13 audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. CRs-fixed: 438179 Change-Id: Ibe103804daf2cb09bade998d6d34c3a34508dd09 libstagefright: Add support to change clip duration to enable LPA Added support to change the clip duration threshold value for LPA playback. A new system property 'lpa.min_duration' has been added which controls the minimum clip length for enabling LPA. The default threshold value has been retained as 60sec. Change-Id: I6a8be6d6bf67495977d8c75e5be14723a31353b1 frameworks/av: Skip tunnel mode for playback through AudioCache In the use case of playback using SoundPool, decoded data is cached from player and further rendered through AudioCache. Avoid Tunnel mode for the use case AAC format through SoundPool Change-Id: I21005a5b39f9fb480ae0d525ecb560fec4382620 CRs-Fixed: 437539 frameworks/base: dumpsys rendering statistics for Stagefright - this adds extra fps statisticis - report via dumpsys Change-Id: I7b4d4582c4eb2ccf2d11557844dade92f9e587c0 CRs-Fixed: 435013 libstagefright: Stop extractor source after start in TunnelPlayer Issue: In the use case of frequent suspend resume during Video Playback with HDMI Connected, we encounter a scenario where tunnel player is created and destroyed without the extractor source started. In such use case, stopping the source in reset during the tunnel player destruction leads to failure during assertion check. Fix: Check for mStarted flag to ensure that stop on source is called only after they are started. Change-Id: Ib18e7ee3d10b2cc706944e358046f163d156706c CRs-Fixed: 440239",31/01/2013 08:33:29,,NOT-FOUND,https://github.com/Juansheng/android_frameworks_av/commit/8a98a9940d781a2948b68cb8452928d88070146a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Juansheng/android_frameworks_av,,,,,
o11s,open80211s,"{cfg,nl,mac}80211: make peer inactivity limit accessible to userspace For mesh power save it is useful to remove inactive peers whose beacons we should not track anymore. This patch allows modifiying the corresponding peer inactivity limit, to expire peers that we have not received frames or beacons from recently. It is checked in the mesh housekeeping routine (currently every 60 HZ). Signed-off-by: Marco Porsch <marco.porsch@etit.tu-chemnitz.de>",31/01/2013 11:27:58,,FALSE-POSITIVE,https://github.com/cozybit/open80211s/commit/67ffff71c05804f47845cd4f3c1a6f2864fef0d5,https://github.com/o11s/open80211s/commit/67ffff71c05804f47845cd4f3c1a6f2864fef0d5,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,o11s/open80211s,,,,,
MachineMuse,MachineMusePowersuits,Fixed night vision power consumption,01/02/2013 05:54:44,,FALSE-POSITIVE,https://github.com/MachineMuse/MachineMusePowersuits/commit/eb3b69febb09605ff4f63c0526bc0ad0cec4c125,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game] [Minecraft],[DO NOT ANALYZE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,MachineMuse/MachineMusePowersuits,MachineMuse,,,MachineMuse,
dhiru1602,android_kernel_samsung_latona,mach:mcbsp: change dma mode for power saving,01/02/2013 23:22:40,,OK,https://github.com/dhiru1602/android_kernel_samsung_latona/commit/2a2ce1115240d248e381ba97bef133a3577ffb44,,,[OK][CHANGE DMA MODE],[OK][CHANGE DMA MODE] [Android],[DO NOT ANALYZE],[CHANGE DMA MODE] [Android],EXISTS,[change dma mode],[power saving],[Change DMA mode],?,,Direct memory access,Certain,Android,No,OS,C,mach:mcbsp: change dma mode for power saving,dhiru1602/android_kernel_samsung_latona,dhiru1602,[Use power efficient library/device],,dhiru1602,Kernel arch
zyonee,android_device_lge_mako,mako: reduce the power consumption in off-mode charging,02/02/2013 09:14:08,,NOT-FOUND,https://github.com/zyonee/android_device_lge_mako/commit/bec610e5e3af36d5ef9f251faa8e22c7d066b7bf,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zyonee/android_device_lge_mako,,,,,
mytoh,configs,add cpu power saving settings,02/02/2013 15:34:30,,OK,https://github.com/mytoh/configs/commit/1febcfef47a2486b098a81d53a8e3baf9ad6b187,,,[FALSE-POSITIVE],[OK] [Enable power saving] [Execute power saving program],[DO NOT ANALYZE],[Enable power saving] [Execute power saving program],EXISTS,[add cpu power saving settings],[power saving],[Configure lower C-state] [Script] [Config],[Use low power state],,Multiple changes,Certain,Personal config files?,No,Libraries and Utilities,*.local,add cpu power saving settings,mytoh/configs,mytoh,[Use power efficient library/device],,mytoh,Script
h0uz3,hSCADA,Added JSON-Output for power consumption.,02/02/2013 18:59:59,,NOT-FOUND,https://github.com/h0uz3/hSCADA/commit/0690f79129a8583061547ab1fbd39b44aeeb154e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,h0uz3/hSCADA,,,,,
jakdillard,platform_device_lge_mako,mako: reduce the power consumption in off-mode charging Change-Id: I6e49d765b8fa20498cf4694a1f842311ef45fd0b,02/02/2013 20:13:11,,NOT-FOUND,https://github.com/jakdillard/platform_device_lge_mako/commit/dd485bc33cc87df90df2c2a1bd956edd2145ad79,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jakdillard/platform_device_lge_mako,,,,,
lolhi,at1-S0834211,intellidemand: dynamic change of sampling rate based on screen on/off using early_suspend/late_resume drivers to 2x min_sampling rate while screen is off to reduce frequency transitions in hope to reduce power consumption further,03/02/2013 09:09:34,,DUPLICATE,https://github.com/lolhi/at1-S0834211/commit/81b20cd0d6a7fd95a44e74b14655768014be1b4c,,,,,,,EXISTS,,,,,,,,,,,,,lolhi/at1-S0834211,faux123,,,lolhi,
bhanvadia,lge-mako-kernel,"power: charger: need sometime to handle the usb disconnecting events When being completely charged in the offmode charging and pulling out TA from sleep condition, I gave 1 sec. delay until entering sleep condition again, in order to prevent the phenomenon that a device doesn't turn off. We need sometime for an userspace application to handle the usb disconnection events. There is no effect of power consumption. Change-Id: I0851cc2b47c3780fd68d3e8965fd0d6f5b7e8312",03/02/2013 11:10:12,,FALSE-POSITIVE,https://github.com/bhanvadia/lge-mako-kernel/commit/9f66b18ebb77ae698034d4c7d06fefa830170b93,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,bhanvadia/lge-mako-kernel,,,,bhanvadia,
simone201,neak-n7100-jb,Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode,03/02/2013 13:35:26,,DUPLICATE,https://github.com/simone201/neak-n7100-jb/commit/5ce7b212a382e590b5717f688108fa97e91b3336,,,[DUP],[?] [DUPLICATE] [c20fafdff666a1bd3aa2860c385ae0c42c06dfb0],[DO NOT ANALYZE],[DUPLICATE] [c20fafdff666a1bd3aa2860c385ae0c42c06dfb0],EXISTS,,,,,,,,,,,,,simone201/neak-n7100-jb,yank555-lu,,,simone201,
austinay,lge_kernel_msm7x27,"kernel: Prevent unnecessary rfkill event generation. Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Change-Id: I3ac4e141fbdf1315b74d3bad6aa96f34b00c3f92 CRs-fixed: 398283 Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Deepthi Gowri <deepthi@codeaurora.org>",03/02/2013 18:48:38,,NOT-FOUND,https://github.com/austinay/lge_kernel_msm7x27/commit/5dc92b6c5ac9a42b4ded47e2503f06ee738e344a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,austinay/lge_kernel_msm7x27,,,,,
Evervolv,android_kernel_htc_msm7x30,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,03/02/2013 20:48:01,,DUPLICATE,https://github.com/Evervolv/android_kernel_htc_msm7x30/commit/b2db45e03422c2a9a407139cf1d09b20bc27f1ec,,,,,,,EXISTS,,,,,,,,,,,,,Evervolv/android_kernel_htc_msm7x30,dvdhrm,,,,
MachineMuse,MachineMusePowersuits,changed sprint/walk boost energy consumption,03/02/2013 22:19:27,,FALSE-POSITIVE,https://github.com/MachineMuse/MachineMusePowersuits/commit/8f3e602942968382aaf7cc5d9eda4ab6fac03278,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSIVITE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,MachineMuse/MachineMusePowersuits,MachineMuse,,,MachineMuse,
Evervolv,android_kernel_htc_primoc,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,04/02/2013 00:15:38,,DUPLICATE,https://github.com/Evervolv/android_kernel_htc_primoc/commit/fe240dc32534283fc5cd852f554d368f85477c45,,,,,,,EXISTS,,,,,,,,,,,,,Evervolv/android_kernel_htc_primoc,dvdhrm,,,alexnpage,
CyanogenMod,android_device_sony_blue-common,blue: Apply gamma curve to backlight Currently the backlight brightness is a linear function of the commanded brightness - but human vision is not linear. To compensate for this we apply a gamma curve to the backlight brightness. This makes the perceived brightness more linear in relation to the brightness settings. TODO: Determine what effect this has on the power profile estimates and if we care about the innacuracies in screen power consumption reporting... power_profile estimates are pretty unreliable as it is. Change-Id: Ib14fe7752ae3617cb9da9c5ddb3e7f52b1db5e05,04/02/2013 10:01:03,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_device_sony_blue-common/commit/029a3cc2cb6dfc95c9647fc60420bbdb7468d759,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_sony_blue-common,Entropy512,,,Kali-,
CyanogenMod,android_device_sony_blue-common,blue: Apply gamma curve to backlight Currently the backlight brightness is a linear function of the commanded brightness - but human vision is not linear. To compensate for this we apply a gamma curve to the backlight brightness. This makes the perceived brightness more linear in relation to the brightness settings. TODO: Determine what effect this has on the power profile estimates and if we care about the innacuracies in screen power consumption reporting... power_profile estimates are pretty unreliable as it is. Change-Id: Ib14fe7752ae3617cb9da9c5ddb3e7f52b1db5e05,04/02/2013 10:06:11,,DUPLICATE,https://github.com/CyanogenMod/android_device_sony_blue-common/commit/e47eefa6910efbe78b8683d373e01ffc6d3c0953,,,,,,,EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_sony_blue-common,Entropy512,,,Kali-,
SEL-Columbia,SharedSolar_datamunge,modify submin2hourly.csv so that if there is a gap in the data then the first measurement after the gap is ignored. This should help elimate false peaks in energy consumption data.,04/02/2013 18:14:16,,FALSE-POSITIVE,https://github.com/leem99/SharedSolar_datamunge/commit/39bcdb2aff7da5e066d12cdcb22c46b0a9eb3184,https://github.com/SEL-Columbia/SharedSolar_datamunge/commit/39bcdb2aff7da5e066d12cdcb22c46b0a9eb3184,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSIVITE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,SEL-Columbia/SharedSolar_datamunge,,,,,
thracemerin,lge-kernel-mako,"mako: charger: disable hsic host and mdm driver in charger mode In off-mode charging, hsic host driver never release wake_lock. Due to this, system cannot enter the suspend during off-mode charging. This patch disable the hsic host driver and mdm driver in off-mode charging to reduce power consumption. Change-Id: I8580af1d5a9d754982b198c9bd47a98e4b69c725 Conflicts: arch/arm/mach-msm/lge/mako/board-mako.c",04/02/2013 23:32:22,,NOT-FOUND,https://github.com/thracemerin/lge-kernel-mako/commit/f28ca44c88575bd75931e5059d7a38265410d984,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,thracemerin/lge-kernel-mako,,,,,
thracemerin,lge-kernel-mako,"power: charger: need sometime to handle the usb disconnecting events When being completely charged in the offmode charging and pulling out TA from sleep condition, I gave 1 sec. delay until entering sleep condition again, in order to prevent the phenomenon that a device doesn't turn off. We need sometime for an userspace application to handle the usb disconnection events. There is no effect of power consumption. Change-Id: I0851cc2b47c3780fd68d3e8965fd0d6f5b7e8312",04/02/2013 23:35:45,,DUPLICATE,https://github.com/thracemerin/lge-kernel-mako/commit/b873debb6820a456c48ab9f14440a566cb5300e9,,,,,,,EXISTS,,,,,,,,,,,,,thracemerin/lge-kernel-mako,,,,thracemerin,
o11s,open80211s,fixup!mac80211: mesh power save doze scheduling,05/02/2013 09:23:21,,OK,https://github.com/cozybit/open80211s/commit/c3fa67e72cd3aea24659c1af43d2037728a19b57,https://github.com/o11s/open80211s/commit/c3fa67e72cd3aea24659c1af43d2037728a19b57,,[OK][?][INCREASE SCAN INTERVAL],[OK] [Increase scan interval],[DO NOT ANALYZE],[Increase scan interval] [?],EXISTS,[fix mesh doze scheduling],[power saving],[Increase scan interval],[Increase scan interval],,,Certain,?,No,OS,C,fixup!mac80211: mesh power save doze scheduling,o11s/open80211s,,[Polling avoidance],,,Kernel net
norbertc,nexus-kernel,"power: charger: need sometime to handle the usb disconnecting events When being completely charged in the offmode charging and pulling out TA from sleep condition, I gave 1 sec. delay until entering sleep condition again, in order to prevent the phenomenon that a device doesn't turn off. We need sometime for an userspace application to handle the usb disconnection events. There is no effect of power consumption. Change-Id: I0851cc2b47c3780fd68d3e8965fd0d6f5b7e8312",05/02/2013 16:37:01,,NOT-FOUND,https://github.com/norbertc/nexus-kernel/commit/5194a3d00fd6a8fae12eda3a8bf2be4d6c7b11ea,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,norbertc/nexus-kernel,,,,,
mathkid95,linux_lg_jb,"power: charger: need sometime to handle the usb disconnecting events When being completely charged in the offmode charging and pulling out TA from sleep condition, I gave 1 sec. delay until entering sleep condition again, in order to prevent the phenomenon that a device doesn't turn off. We need sometime for an userspace application to handle the usb disconnection events. There is no effect of power consumption. Change-Id: I0851cc2b47c3780fd68d3e8965fd0d6f5b7e8312",05/02/2013 21:46:42,,DUPLICATE,https://github.com/mathkid95/linux_lg_jb/commit/564a4624ac8dbdcaf97565e3ac3c01b2d85af0e9,,,,,,,EXISTS,,,,,,,,,,,,,mathkid95/linux_lg_jb,,,,,
CyanogenMod,android_frameworks_av,"Squashed commit of updates from CodeAurora auido: Add amr-wb+ codec to ACodec. -Add an entry for amr-wb+ decoder in ACodec. -amr-wb+ non tunnel will be enabled by default. Change-Id: Ied8902eb83da29a3164eb99e88630570a43f681e libstagefright: Create MP3 decoder libraries without OMX layer - With the current MP3 OMX SW decoders, the decoding time is increased w.r.t the libraries without OMX layer that are present in GB. This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode Change-Id: I835ab6d013a326f111e513586f884bacd5f7106a audioflinger: EffectModules are updated with device change Issue: Effects modules are not updated with the device change information Fix: 1) Add setDevice information to mLPAEffectChain 2) Remove the return after sending the device route information to Direct track so that mixer thread is also aware of the device change for EffectsChain Change-Id: I82936cd47290946a5e4772e448669d81e0e4d6f5 libmedia : Add a NULL pointer check - Print frame count in AudioTrack::dump() only if the control block is valid Change-Id: Icf594eb721b48795c43d7bd165f6086031ce6efd CRs-Fixed: 435050 libstagefright: Query AudioSystem for suggested record mute duration - AudioSource mutes a pre-defined duration (defined by kAutoRampStartUs) at the beginning of a recording. - Instead, query the audio system for any ongoing playback streams and use its output latency to calculate the duration to mute the incoming PCM stream. - This assumes all current playback threads will be paused once recording is started. Change-Id: Ie9b1d62e7be803ef1d8a59127b95c73e03fa5ce6 CRs-Fixed: 438149 libstagefright: Convert mono to stereo for LPA clips - Sound effects are not supported for mono clips - Repetative calling of effects_configure and effect_process for mono clips is resulting in crash in the sound effects library. - So, Mono clips are now converted to stereo by copying the left sample to right. - This is same as what Resampler does in Non-LPA Playback. This commit is a port of fcc0647fab20ceaf1c07bc10bb243f14c48b114c CRs-Fixed: 421639 Change-Id: Ie579c8d11afe3db8d42a35956e8bf23eeb88cfe6 audioflinger: Fix to set volume from MediaPlayer in Tunnel mode Issue: MediaPlayer.setVolume does not have effect on Playback volume in TunnelPlayer mode Fix: the left and right volume parameters of setVolume are hardcoded and defaulted in DirectAudioTrack. Updating the parameters from the input arguments fixes the issue Change-Id: I8a107ce57284b225b17d95fed0f69e3adc5fb131 CRs-Fixed: 441849 libstagefright: Enable Tunnel Decode for select formats - Enable tunnel mode decode only if the audio mime type matches a supported list. Change-Id: I32afd83e5fda1e90cb671dd747f17cb83bb84fc1 CRs-Fixed:437651 framework/av:: Add support to decode mp3 data in mp4 container - Added support to decode mp3 data in mp4 container packed as mp4a atom and .mp3 atom as well. Port of 8fa3774adf9259b33ee721cfaeff26da42c29928 Change-Id: I1a04022f30a9f6516575440aba7652986ab7dc58 CRs-Fixed: 439897 audiomixer: Use High Quality resampler Use very high quality resampler to upsample to 48KHz sample rate. Change-Id: I1ba5b839f1e74ae71b405538d970e6a966bd1d47 CRs-fixed: 416730 audioflinger: Fix a deadlock - A deadlock will happen if the obit recipient registered by the DirectAudioTrack is called. - Fix this by moving the lock acquisition in DirectAudioTrack::clearPowerManager() to after DirectAudioTrack::releaseWakeLock() is called. - Also synchronize use of mPowerManager in the DirectAudioTrack destructor with DirectAudioTrack::clearPowerManager() Change-Id: Ib127db1406c4a61a4054ca0cf30f4c7347a5c92a CRs-Fixed: 444093 libstagefright: TunnelPlayer: update condition to send SEEK_COMPLETE - If the client tries to seek to 0 (e.g as a result of LOOPING) without ever calling getPosition(), we will always sent an immediate seek notification without seeking. Change-Id: Id2b9d00c611278d0521cb6fd402710f0ec37bbdd CRs-Fixed: 441411 libstagefright: Remove unnecessary code from TunnelPlayer - TunnelPlayer tries to mimick AudioPlayer when trying to delete the extractor source. - It is needed for AudioPlayer as the OMXCodec object is referenced by the CallbackDispatcher as well as AudioPlayer. - This condition is not true for TunnelPlayer, so why do it. Change-Id: I79c4e17d01910e73ad01c5640ef374626313a18e CRs-Fixed: 442365 Add MediaDebug header from CAF Change-Id: I68dbe72f86a49685b82b64927d1aa80231647a7a",06/02/2013 09:40:58,,OK,https://github.com/CyanogenMod/android_frameworks_av/commit/12170a107e7c96170a38dbe43e98447c87624bd7,,,[OK][?],[OK] [Big commit],[DO NOT ANALYZE],[Big commit] [?],EXISTS,[remove OMX layer for MP3],[increases decoding time and reduces power savings in LPA mode],[Remove unnecessary layer] [Improve performance],[Avoid unnecessary work],,Improve performance,Certain,Android,Change-Id: I835ab6d013a326f111e513586f884bacd5f7106a,OS,C++,This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode,CyanogenMod/android_frameworks_av,,[Energy bug],,cyanogen,Software stack framework
milaq,android_device_lge_p940,update prebuilt kernel * restructure commit history * remove some interactive governor tweaks due to to high power consumtion (performance not affected) * add bfq scheduler,07/02/2013 23:16:40,,BINARIES,https://github.com/milaq/android_device_lge_p940/commit/0ec6a074592f345932a9fddd3ef5ec69feeb7cd9,,,,,,,EXISTS,,,,,,,,,,,,,milaq/android_device_lge_p940,milaq,,,milaq,
jakdillard,platform_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",08/02/2013 03:34:27,,NOT-FOUND,https://github.com/jakdillard/platform_frameworks_base/commit/5aeb774ad14150b22c17d002a96ba888e71eb71c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jakdillard/platform_frameworks_base,,,,,
ThinkingBridge,platform_frameworks_av,"libstagefright: Collection of fixes for TunnelPlayer -Handling of EOS, and triggering EOS was wrong in TunnelPlayer. Seeking when EOS was posted to the HAL was wrong. EOS should not be posted till seek is complete -Also, EOS should not be posted to the app if we are seeking -Player should wake up when seeked, even after EOS was posted from player to HAL -Fixed this issue by cleaning up the code for EOS -Disable tunnel mode playback for streaming use cases to avoid jittery playback Change-Id: I21699d2d5874bde6cbfe549ce0251b252e9a4090 CRs-Fixed: 433346 CRs-Fixed: 432233 CRs-Fixed: 429868 libstagefright: Add new mime for QC TS container - Add new mime type for TS container that is sniffed by extended extractor. This is needed for media extractor to determine which parser to create. Change-Id: I18dcebbbf3b31cea7db29a4dd65385638343bec1 libstagefright: Use software decoder for ADTS content. Use software decoder for widevine content which uses ADTS format. CRs-fixed: 431096 (cherry picked from commit 3edf2e703bcdc47f122864865056d5cb65b7ab43) Change-Id: I50eba673ddd6ec2bbb737577978e61902ff68d13 audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. CRs-fixed: 438179 Change-Id: Ibe103804daf2cb09bade998d6d34c3a34508dd09 libstagefright: Add support to change clip duration to enable LPA Added support to change the clip duration threshold value for LPA playback. A new system property 'lpa.min_duration' has been added which controls the minimum clip length for enabling LPA. The default threshold value has been retained as 60sec. Change-Id: I6a8be6d6bf67495977d8c75e5be14723a31353b1 frameworks/av: Skip tunnel mode for playback through AudioCache In the use case of playback using SoundPool, decoded data is cached from player and further rendered through AudioCache. Avoid Tunnel mode for the use case AAC format through SoundPool Change-Id: I21005a5b39f9fb480ae0d525ecb560fec4382620 CRs-Fixed: 437539 frameworks/base: dumpsys rendering statistics for Stagefright - this adds extra fps statisticis - report via dumpsys Change-Id: I7b4d4582c4eb2ccf2d11557844dade92f9e587c0 CRs-Fixed: 435013 libstagefright: Stop extractor source after start in TunnelPlayer Issue: In the use case of frequent suspend resume during Video Playback with HDMI Connected, we encounter a scenario where tunnel player is created and destroyed without the extractor source started. In such use case, stopping the source in reset during the tunnel player destruction leads to failure during assertion check. Fix: Check for mStarted flag to ensure that stop on source is called only after they are started. Change-Id: Ib18e7ee3d10b2cc706944e358046f163d156706c CRs-Fixed: 440239",08/02/2013 06:08:14,,NOT-FOUND,https://github.com/ThinkingBridge/platform_frameworks_av/commit/6c8beb4f2738d45598929dfa4504bd6b7a254a7d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ThinkingBridge/platform_frameworks_av,,,,,
ThinkingBridge,platform_frameworks_av,"Squashed commit of updates from CodeAurora auido: Add amr-wb+ codec to ACodec. -Add an entry for amr-wb+ decoder in ACodec. -amr-wb+ non tunnel will be enabled by default. Change-Id: Ied8902eb83da29a3164eb99e88630570a43f681e libstagefright: Create MP3 decoder libraries without OMX layer - With the current MP3 OMX SW decoders, the decoding time is increased w.r.t the libraries without OMX layer that are present in GB. This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode Change-Id: I835ab6d013a326f111e513586f884bacd5f7106a audioflinger: EffectModules are updated with device change Issue: Effects modules are not updated with the device change information Fix: 1) Add setDevice information to mLPAEffectChain 2) Remove the return after sending the device route information to Direct track so that mixer thread is also aware of the device change for EffectsChain Change-Id: I82936cd47290946a5e4772e448669d81e0e4d6f5 libmedia : Add a NULL pointer check - Print frame count in AudioTrack::dump() only if the control block is valid Change-Id: Icf594eb721b48795c43d7bd165f6086031ce6efd CRs-Fixed: 435050 libstagefright: Query AudioSystem for suggested record mute duration - AudioSource mutes a pre-defined duration (defined by kAutoRampStartUs) at the beginning of a recording. - Instead, query the audio system for any ongoing playback streams and use its output latency to calculate the duration to mute the incoming PCM stream. - This assumes all current playback threads will be paused once recording is started. Change-Id: Ie9b1d62e7be803ef1d8a59127b95c73e03fa5ce6 CRs-Fixed: 438149 libstagefright: Convert mono to stereo for LPA clips - Sound effects are not supported for mono clips - Repetative calling of effects_configure and effect_process for mono clips is resulting in crash in the sound effects library. - So, Mono clips are now converted to stereo by copying the left sample to right. - This is same as what Resampler does in Non-LPA Playback. This commit is a port of fcc0647fab20ceaf1c07bc10bb243f14c48b114c CRs-Fixed: 421639 Change-Id: Ie579c8d11afe3db8d42a35956e8bf23eeb88cfe6 audioflinger: Fix to set volume from MediaPlayer in Tunnel mode Issue: MediaPlayer.setVolume does not have effect on Playback volume in TunnelPlayer mode Fix: the left and right volume parameters of setVolume are hardcoded and defaulted in DirectAudioTrack. Updating the parameters from the input arguments fixes the issue Change-Id: I8a107ce57284b225b17d95fed0f69e3adc5fb131 CRs-Fixed: 441849 libstagefright: Enable Tunnel Decode for select formats - Enable tunnel mode decode only if the audio mime type matches a supported list. Change-Id: I32afd83e5fda1e90cb671dd747f17cb83bb84fc1 CRs-Fixed:437651 framework/av:: Add support to decode mp3 data in mp4 container - Added support to decode mp3 data in mp4 container packed as mp4a atom and .mp3 atom as well. Port of 8fa3774adf9259b33ee721cfaeff26da42c29928 Change-Id: I1a04022f30a9f6516575440aba7652986ab7dc58 CRs-Fixed: 439897 audiomixer: Use High Quality resampler Use very high quality resampler to upsample to 48KHz sample rate. Change-Id: I1ba5b839f1e74ae71b405538d970e6a966bd1d47 CRs-fixed: 416730 audioflinger: Fix a deadlock - A deadlock will happen if the obit recipient registered by the DirectAudioTrack is called. - Fix this by moving the lock acquisition in DirectAudioTrack::clearPowerManager() to after DirectAudioTrack::releaseWakeLock() is called. - Also synchronize use of mPowerManager in the DirectAudioTrack destructor with DirectAudioTrack::clearPowerManager() Change-Id: Ib127db1406c4a61a4054ca0cf30f4c7347a5c92a CRs-Fixed: 444093 libstagefright: TunnelPlayer: update condition to send SEEK_COMPLETE - If the client tries to seek to 0 (e.g as a result of LOOPING) without ever calling getPosition(), we will always sent an immediate seek notification without seeking. Change-Id: Id2b9d00c611278d0521cb6fd402710f0ec37bbdd CRs-Fixed: 441411 libstagefright: Remove unnecessary code from TunnelPlayer - TunnelPlayer tries to mimick AudioPlayer when trying to delete the extractor source. - It is needed for AudioPlayer as the OMXCodec object is referenced by the CallbackDispatcher as well as AudioPlayer. - This condition is not true for TunnelPlayer, so why do it. Change-Id: I79c4e17d01910e73ad01c5640ef374626313a18e CRs-Fixed: 442365 Add MediaDebug header from CAF Change-Id: I68dbe72f86a49685b82b64927d1aa80231647a7a",08/02/2013 06:09:09,,NOT-FOUND,https://github.com/ThinkingBridge/platform_frameworks_av/commit/0768e28d1f65c7ce5ffec951b1b7cc43ed605509,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ThinkingBridge/platform_frameworks_av,,,,,
PolishBloodProject,android_frameworks_base,"Prevent scanning during DHCP process Wi-Fi should be in active state during the entire DHCP process, and shouldn't go to IEEE 802.11 power save mode. If the framework requests scan during the DHCP process, the Wi-Fi chip has to start scanning on channels different from the current one, and going to power save mode is a prerequisite for scan. The result directly impacts user experience: DHCP process takes longer, and even can fail. Change-Id: I8171388bb70072e4c42cb3c074dd955da84e494b",08/02/2013 12:40:28,,DUPLICATE,https://github.com/PolishBloodProject/android_frameworks_base/commit/42caede39bfb608418d3b79744948bdea178cc91,,,,,,,EXISTS,,,,,,,,,,,,,PolishBloodProject/android_frameworks_base,,,,pcfighter,
AOKP,kernel_samsung_d2,"d2:kernel: Up to date Hightlights: WPA/WPA2 tethering (credit Imoseyon) IntelliDemand CPU Governor (credit Faux --with modifications for boostpulse to work w/ ondemand) 3.0.62 GPU OC to 480 Mhz (not ON yet) separate commit to follow) Battery saving enhancements Retention sleep mode .... Revert ""msm: board-8960: Disable idle standalone PC"" This reverts commit 05c962aa7c12b25e68fa97a9b182eadf4cdba275. msm: pm: backport Retention mode code from 4 to 2 cores board-m2_vzw: Re-enable idle standalone PC board-m2_vzw: backport retention mode for 2 cores board-m2_vzw: add rpmrs level for retention mode msm: 8960: Set last sleep mode variable for WFI Set the last sleep mode variable correctly when entering WFI sleep mode. Change-Id: I68bbb09b46fe5d7229fbbc67f636294f0d9e92d6 Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> msm: pm-8x60: Don't restore ACPU frequency for hotplug cases. During hotplug if power collapse fails don't try to restore the ACPU clock frequency. For normal hotplug exit ACPU drivers save and restore as part of hotplug notifications. CRs-fixed: 334002 Change-Id: I94aee59b7769fb06614d4804797ce62e952437e3 Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> Conflicts: arch/arm/mach-msm/pm-8x60.c msm: pm-8x60: Fix bug where device enter low power mode An incorrect ordering in the check of allowed modes, results in standalone power collapse not getting selected when the secondary cores are online. Change-Id: Idc7177b78bd0ce7563cc27afbf6c12d3bc1f9f9a Signed-off-by: Mahesh Sivasubramanian <msivasub@codeaurora.org> Conflicts: arch/arm/mach-msm/pm-8x60.c msm: pm: Add support for retention on each core Allow each core on 8974 to enter retention and retain the state of the CPU. On 8960 as hardware restriction does not permit all cores to enter retention at the same time, allow only core 0 to enter retention when all other cores are offline to maintain backward compatibility. Change-Id: I6690e901afc9fa3a27010c264fa3acc9a0722c1a Signed-off-by: Priyanka Mathur <pmathur@codeaurora.org> msm: pm: Remove idle wakelock checking Now that all users of idle wakelocks are migrated to pm_qos we can remove the idle wakelock checks from the pm code. Change-Id: I19cca1d0b28a2943178b9d9eade2b594fd94a139 Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Conflicts: arch/arm/mach-msm/pm-8x60.c arch/arm/mach-msm/pm2.c pm: add more debug for pm sleep modes m2_vzw: Enable Krait Retention att/spr board: port pm sleep mode tweaks to ATT and SPR board-m2-vzw: tweak Retention voltage Keep stock values (5e96151) but lower Retention voltage board-m2-att/spr: apply the same two sleep state commits from vzw commits 092598f & 5e96151 msm: vidc: Add the change to prevent memory leak Memory allocated for ""buf_entry"" and ""sched_cctxt"" is not freed in case if error is returned. This change prevents possible memory leak in video decoder driver. CRs-fixed: 432323 Change-Id: I1c8775fb701f1568f704b6ddbb4e835304d2a817 Signed-off-by: Shobhit Pandey <cshopan@codeaurora.org> msm_fb: display: update var in display commit Need the value of var in display commit to update the double buffers. If not, double buffering doesn't work in minui (eg. recovery and off-charger mode) Change-Id: I1fba52243cc781f18742131759245911d32c9b18 Signed-off-by: Devin Kim <dojip.kim@lge.com> Signed-off-by: Naseer Ahmed <naseer@codeaurora.org> msm_fb: display: add mdp new update method Enable new mdp update method which requires flush bit to be set before updating mixer cfg register for both smart and dump panel Change-Id: I97b9d221da574a96707748ec83dd1acff6dcb654 Signed-off-by: Kuogee Hsieh <khsieh@codeaurora.org> msm: Adreno 2xx GPU overclocking to 480 MHz Conflicts: arch/arm/mach-msm/Kconfig lib/lzo: Update LZO compression to current upstream version This commit updates the kernel LZO code to the current upsteam version which features a significant speed improvement - benchmarking the Calgary and Silesia test corpora typically shows a doubled performance in both compression and decompression on modern i386/x86_64/powerpc machines. Signed-off-by: Markus F.X.J. Oberhumer <markus@oberhumer.com> Proportional Rate Reduction for TCP. This patch implements Proportional Rate Reduction (PRR) for TCP. PRR is an algorithm that determines TCP's sending rate in fast recovery. PRR avoids excessive window reductions and aims for the actual congestion window size at the end of recovery to be as close as possible to the window determined by the congestion control algorithm. PRR also improves accuracy of the amount of data sent during loss recovery. The patch implements the recommended flavor of PRR called PRR-SSRB (Proportional rate reduction with slow start reduction bound) and replaces the existing rate halving algorithm. PRR improves upon the existing Linux fast recovery under a number of conditions including: 1) burst losses where the losses implicitly reduce the amount of outstanding data (pipe) below the ssthresh value selected by the congestion control algorithm and, 2) losses near the end of short flows where application runs out of data to send. As an example, with the existing rate halving implementation a single loss event can cause a connection carrying short Web transactions to go into the slow start mode after the recovery. This is because during recovery Linux pulls the congestion window down to packets_in_flight+1 on every ACK. A short Web response often runs out of new data to send and its pipe reduces to zero by the end of recovery when all its packets are drained from the network. Subsequent HTTP responses using the same connection will have to slow start to raise cwnd to ssthresh. PRR on the other hand aims for the cwnd to be as close as possible to ssthresh by the end of recovery. A description of PRR and a discussion of its performance can be found at the following links: - IETF Draft: http://tools.ietf.org/html/draft-mathis-tcpm-proportional-rate-reduction-01 - IETF Slides: http://www.ietf.org/proceedings/80/slides/tcpm-6.pdf http://tools.ietf.org/agenda/81/slides/tcpm-2.pdf - Paper to appear in Internet Measurements Conference (IMC) 2011: Improving TCP Loss Recovery Nandita Dukkipati, Matt Mathis, Yuchung Cheng Signed-off-by: Nandita Dukkipati <nanditad@google.com> Signed-off-by: David S. Miller <davem@davemloft.net> bfq: prevent aliased requests from starving I/O fs/dyn_sync_cntrl: dynamic sync control The dynamic sync control interface uses Android kernel's unique early suspend / lat resume interface. While screen is on, file sync is disabled when screen is off, a file sync is called to flush all outstanding writes and restore file sync operation as normal. Signed-off-by: Paul Reioux <reioux@gmail.com> cpufreq/cpufreq_intellidemand: intellidemand cpufreq governor (version 3.0) Intellidemand is inspired by ondemand governor. Its main features are: - auto cpu hotplugging based on runnable thread average calculations - detection of browsing mode (long screen on activities with moderate run queue depth =< 45 ) - limit max frequencies when in browsing mode to conserve battery for long duration tasks Browsing State Determination: 1- Browsing state is enabled as power-on default. Browsing state is disabled when run queue depth is > 45 (very high instantaneous spikes) Browsing State Limit Max Freq Logic (sliding window algorithm): 1- While Screen is ON > 3 min, and average load of the CPU is < 35%, then CPU Max frequencies will remain power-on default 2- While Screen is On, if average CPU load > 35%, both CPUs max frequencies will be limited to a lower user configurable max value 3- While Screen is On, After both CPUs' Max is limited to lowered max, when the average CPU load has dropped down to less than < 25%, then both CPUs Max freq will be restored to back to power-on default Runnable Thread Auto-hotplug (fast hotplug / slow unplug algorithm): 1- When average number of running thread is < threshold, 2nd cpu will be unplugged. 2- When > threshold, 2nd cpu will be hotplugged. 3- The logic applies a fast hotplug and slow unplug algorithm so 2nd core will stay enabled longer to help deal with performance spikes changes from Ver 2.0 -> Ver 3.0: - remove GPU Busy dependency for browsing state detection (this will make the governor more portable to other platforms without specific GPU architecture knowledge) dependencies: -- Qualcomm's run queue average logic (SOC independent logic) -- TI's runnable thread average logic (SOC independent logic) adapted for use on Samsung Galaxy S3 series Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: arch/arm/mach-msm/cpufreq.c intellidemand: add bug fixes - Fix crash input event handler on governor switch - Fix panic when setting sampling rate Signed-off-by: faux123 <reioux@gmail.com> intellidemand: Add boost pulse capability Boost pulse increases UI performance by increasing CPU freq and reduce sampling time. Signed-off-by: faux123 <reioux@gmail.com> intellidemand: add a run queue persistence to determine browsing state persistence will allow for better browsing state detection rather than just purely based on run queue depth alone Signed-off-by: faux123 <reioux@gmail.com> intellidemand: code derps clean up! Signed-off-by: faux123 <reioux@gmail.com> intellidemand: performance tune up Signed-off-by: faux123 <reioux@gmail.com> d2|vzw|usc: add intellidemand Also lean out governors for d2(att|tmo) Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com> net: wireless: bcmdhd: Update to version 5.90.195.114 - Get AP beacon and DTIM to set proper DTIM skipping Change-Id: I6bc23f050c144bf8361078ad587bcadbfe3a37fc Signed-off-by ...",08/02/2013 15:51:52,,UNABLE-TO-CATEGORIZE,https://github.com/AOKP/kernel_samsung_d2/commit/05c8400dee4de518102629912adb502c2fba90e6,,,[FALSE-POSITIVE],[UNABLE-TO-CATEGORIZE] [Giga commit] [Android],[DO NOT ANALYZE],[Giga commit] [Android],EXISTS,,,,,,,,,,,,,AOKP/kernel_samsung_d2,,,,,
VanirAOSP,frameworks_av,"Squashed commit of updates from CodeAurora http://review.cyanogenmod.org/#/c/31508/ PS-2 rebase on new dependancy ____________________________ auido: Add amr-wb+ codec to ACodec. -Add an entry for amr-wb+ decoder in ACodec. -amr-wb+ non tunnel will be enabled by default. Id: Ied8902eb83da29a3164eb99e88630570a43f681e libstagefright: Create MP3 decoder libraries without OMX layer - With the current MP3 OMX SW decoders, the decoding time is increased w.r.t the libraries without OMX layer that are present in GB. This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode Id: I835ab6d013a326f111e513586f884bacd5f7106a audioflinger: EffectModules are updated with device change Issue: Effects modules are not updated with the device change information Fix: 1) Add setDevice information to mLPAEffectChain 2) Remove the return after sending the device route information to Direct track so that mixer thread is also aware of the device change for EffectsChain Id: I82936cd47290946a5e4772e448669d81e0e4d6f5 libmedia : Add a NULL pointer check - Print frame count in AudioTrack::dump() only if the control block is valid Id: Icf594eb721b48795c43d7bd165f6086031ce6efd CRs-Fixed: 435050 libstagefright: Query AudioSystem for suggested record mute duration - AudioSource mutes a pre-defined duration (defined by kAutoRampStartUs) at the beginning of a recording. - Instead, query the audio system for any ongoing playback streams and use its output latency to calculate the duration to mute the incoming PCM stream. - This assumes all current playback threads will be paused once recording is started. Id: Ie9b1d62e7be803ef1d8a59127b95c73e03fa5ce6 CRs-Fixed: 438149 libstagefright: Convert mono to stereo for LPA clips - Sound effects are not supported for mono clips - Repetative calling of effects_configure and effect_process for mono clips is resulting in crash in the sound effects library. - So, Mono clips are now converted to stereo by copying the left sample to right. - This is same as what Resampler does in Non-LPA Playback. This commit is a port of fcc0647fab20ceaf1c07bc10bb243f14c48b114c CRs-Fixed: 421639 Id: Ie579c8d11afe3db8d42a35956e8bf23eeb88cfe6 audioflinger: Fix to set volume from MediaPlayer in Tunnel mode Issue: MediaPlayer.setVolume does not have effect on Playback volume in TunnelPlayer mode Fix: the left and right volume parameters of setVolume are hardcoded and defaulted in DirectAudioTrack. Updating the parameters from the input arguments fixes the issue Id: I8a107ce57284b225b17d95fed0f69e3adc5fb131 CRs-Fixed: 441849 libstagefright: Enable Tunnel Decode for select formats - Enable tunnel mode decode only if the audio mime type matches a supported list. Id: I32afd83e5fda1e90cb671dd747f17cb83bb84fc1 CRs-Fixed:437651 framework/av:: Add support to decode mp3 data in mp4 container - Added support to decode mp3 data in mp4 container packed as mp4a atom and .mp3 atom as well. Port of 8fa3774adf9259b33ee721cfaeff26da42c29928 Id: I1a04022f30a9f6516575440aba7652986ab7dc58 CRs-Fixed: 439897 audiomixer: Use High Quality resampler Use very high quality resampler to upsample to 48KHz sample rate. Change-Id: I1ba5b839f1e74ae71b405538d970e6a966bd1d47 CRs-fixed: 416730 audioflinger: Fix a deadlock - A deadlock will happen if the obit recipient registered by the DirectAudioTrack is called. - Fix this by moving the lock acquisition in DirectAudioTrack::clearPowerManager() to after DirectAudioTrack::releaseWakeLock() is called. - Also synchronize use of mPowerManager in the DirectAudioTrack destructor with DirectAudioTrack::clearPowerManager() Id: Ib127db1406c4a61a4054ca0cf30f4c7347a5c92a CRs-Fixed: 444093 libstagefright: TunnelPlayer: update condition to send SEEK_COMPLETE - If the client tries to seek to 0 (e.g as a result of LOOPING) without ever calling getPosition(), we will always sent an immediate seek notification without seeking. ID: Id2b9d00c611278d0521cb6fd402710f0ec37bbdd CRs-Fixed: 441411 libstagefright: Remove unnecessary code from TunnelPlayer - TunnelPlayer tries to mimick AudioPlayer when trying to delete the extractor source. - It is needed for AudioPlayer as the OMXCodec object is referenced by the CallbackDispatcher as well as AudioPlayer. - This condition is not true for TunnelPlayer, so why do it. ID: I79c4e17d01910e73ad01c5640ef374626313a18e CRs-Fixed: 442365 Add MediaDebug header from CAF ID: I68dbe72f86a49685b82b64927d1aa80231647 Signed-off-by: DHO <DHO@dho.im> Conflicts: media/libstagefright/AwesomePlayer.cpp media/libstagefright/TunnelPlayer.cpp services/audioflinger/AudioFlinger.cpp",08/02/2013 17:02:25,,DUPLICATE,https://github.com/VanirAOSP/android_frameworks_av/commit/ea648a9af8e818b216346ba87a88672fdc6ac1a0,https://github.com/VanirAOSP/frameworks_av/commit/ea648a9af8e818b216346ba87a88672fdc6ac1a0,,[DUPLICATE],[DUPLICATE],[DUPLICATE],,EXISTS,,,,,,,,,,,,,VanirAOSP/frameworks_av,,,,,
ptmr3,android_kernel_samsung_smdk4412,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,08/02/2013 21:35:09,,NOT-FOUND,https://github.com/ptmr3/android_kernel_samsung_smdk4412/commit/113750c268cb360eab8b03e765fbe54de5989f79,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ptmr3/android_kernel_samsung_smdk4412,,,,,
BMc08GT,kernel_samsung_d2,"d2:kernel: Up to date Hightlights: WPA/WPA2 tethering (credit Imoseyon) IntelliDemand CPU Governor (credit Faux --with modifications for boostpulse to work w/ ondemand) 3.0.62 GPU OC to 480 Mhz (not ON yet) separate commit to follow) Battery saving enhancements Retention sleep mode .... Revert ""msm: board-8960: Disable idle standalone PC"" This reverts commit 05c962aa7c12b25e68fa97a9b182eadf4cdba275. msm: pm: backport Retention mode code from 4 to 2 cores board-m2_vzw: Re-enable idle standalone PC board-m2_vzw: backport retention mode for 2 cores board-m2_vzw: add rpmrs level for retention mode msm: 8960: Set last sleep mode variable for WFI Set the last sleep mode variable correctly when entering WFI sleep mode. Change-Id: I68bbb09b46fe5d7229fbbc67f636294f0d9e92d6 Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> msm: pm-8x60: Don't restore ACPU frequency for hotplug cases. During hotplug if power collapse fails don't try to restore the ACPU clock frequency. For normal hotplug exit ACPU drivers save and restore as part of hotplug notifications. CRs-fixed: 334002 Change-Id: I94aee59b7769fb06614d4804797ce62e952437e3 Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> Conflicts: arch/arm/mach-msm/pm-8x60.c msm: pm-8x60: Fix bug where device enter low power mode An incorrect ordering in the check of allowed modes, results in standalone power collapse not getting selected when the secondary cores are online. Change-Id: Idc7177b78bd0ce7563cc27afbf6c12d3bc1f9f9a Signed-off-by: Mahesh Sivasubramanian <msivasub@codeaurora.org> Conflicts: arch/arm/mach-msm/pm-8x60.c msm: pm: Add support for retention on each core Allow each core on 8974 to enter retention and retain the state of the CPU. On 8960 as hardware restriction does not permit all cores to enter retention at the same time, allow only core 0 to enter retention when all other cores are offline to maintain backward compatibility. Change-Id: I6690e901afc9fa3a27010c264fa3acc9a0722c1a Signed-off-by: Priyanka Mathur <pmathur@codeaurora.org> msm: pm: Remove idle wakelock checking Now that all users of idle wakelocks are migrated to pm_qos we can remove the idle wakelock checks from the pm code. Change-Id: I19cca1d0b28a2943178b9d9eade2b594fd94a139 Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Conflicts: arch/arm/mach-msm/pm-8x60.c arch/arm/mach-msm/pm2.c pm: add more debug for pm sleep modes m2_vzw: Enable Krait Retention att/spr board: port pm sleep mode tweaks to ATT and SPR board-m2-vzw: tweak Retention voltage Keep stock values (5e96151) but lower Retention voltage board-m2-att/spr: apply the same two sleep state commits from vzw commits 092598f & 5e96151 msm: vidc: Add the change to prevent memory leak Memory allocated for ""buf_entry"" and ""sched_cctxt"" is not freed in case if error is returned. This change prevents possible memory leak in video decoder driver. CRs-fixed: 432323 Change-Id: I1c8775fb701f1568f704b6ddbb4e835304d2a817 Signed-off-by: Shobhit Pandey <cshopan@codeaurora.org> msm_fb: display: update var in display commit Need the value of var in display commit to update the double buffers. If not, double buffering doesn't work in minui (eg. recovery and off-charger mode) Change-Id: I1fba52243cc781f18742131759245911d32c9b18 Signed-off-by: Devin Kim <dojip.kim@lge.com> Signed-off-by: Naseer Ahmed <naseer@codeaurora.org> msm_fb: display: add mdp new update method Enable new mdp update method which requires flush bit to be set before updating mixer cfg register for both smart and dump panel Change-Id: I97b9d221da574a96707748ec83dd1acff6dcb654 Signed-off-by: Kuogee Hsieh <khsieh@codeaurora.org> msm: Adreno 2xx GPU overclocking to 480 MHz Conflicts: arch/arm/mach-msm/Kconfig lib/lzo: Update LZO compression to current upstream version This commit updates the kernel LZO code to the current upsteam version which features a significant speed improvement - benchmarking the Calgary and Silesia test corpora typically shows a doubled performance in both compression and decompression on modern i386/x86_64/powerpc machines. Signed-off-by: Markus F.X.J. Oberhumer <markus@oberhumer.com> Proportional Rate Reduction for TCP. This patch implements Proportional Rate Reduction (PRR) for TCP. PRR is an algorithm that determines TCP's sending rate in fast recovery. PRR avoids excessive window reductions and aims for the actual congestion window size at the end of recovery to be as close as possible to the window determined by the congestion control algorithm. PRR also improves accuracy of the amount of data sent during loss recovery. The patch implements the recommended flavor of PRR called PRR-SSRB (Proportional rate reduction with slow start reduction bound) and replaces the existing rate halving algorithm. PRR improves upon the existing Linux fast recovery under a number of conditions including: 1) burst losses where the losses implicitly reduce the amount of outstanding data (pipe) below the ssthresh value selected by the congestion control algorithm and, 2) losses near the end of short flows where application runs out of data to send. As an example, with the existing rate halving implementation a single loss event can cause a connection carrying short Web transactions to go into the slow start mode after the recovery. This is because during recovery Linux pulls the congestion window down to packets_in_flight+1 on every ACK. A short Web response often runs out of new data to send and its pipe reduces to zero by the end of recovery when all its packets are drained from the network. Subsequent HTTP responses using the same connection will have to slow start to raise cwnd to ssthresh. PRR on the other hand aims for the cwnd to be as close as possible to ssthresh by the end of recovery. A description of PRR and a discussion of its performance can be found at the following links: - IETF Draft: http://tools.ietf.org/html/draft-mathis-tcpm-proportional-rate-reduction-01 - IETF Slides: http://www.ietf.org/proceedings/80/slides/tcpm-6.pdf http://tools.ietf.org/agenda/81/slides/tcpm-2.pdf - Paper to appear in Internet Measurements Conference (IMC) 2011: Improving TCP Loss Recovery Nandita Dukkipati, Matt Mathis, Yuchung Cheng Signed-off-by: Nandita Dukkipati <nanditad@google.com> Signed-off-by: David S. Miller <davem@davemloft.net> bfq: prevent aliased requests from starving I/O fs/dyn_sync_cntrl: dynamic sync control The dynamic sync control interface uses Android kernel's unique early suspend / lat resume interface. While screen is on, file sync is disabled when screen is off, a file sync is called to flush all outstanding writes and restore file sync operation as normal. Signed-off-by: Paul Reioux <reioux@gmail.com> cpufreq/cpufreq_intellidemand: intellidemand cpufreq governor (version 3.0) Intellidemand is inspired by ondemand governor. Its main features are: - auto cpu hotplugging based on runnable thread average calculations - detection of browsing mode (long screen on activities with moderate run queue depth =< 45 ) - limit max frequencies when in browsing mode to conserve battery for long duration tasks Browsing State Determination: 1- Browsing state is enabled as power-on default. Browsing state is disabled when run queue depth is > 45 (very high instantaneous spikes) Browsing State Limit Max Freq Logic (sliding window algorithm): 1- While Screen is ON > 3 min, and average load of the CPU is < 35%, then CPU Max frequencies will remain power-on default 2- While Screen is On, if average CPU load > 35%, both CPUs max frequencies will be limited to a lower user configurable max value 3- While Screen is On, After both CPUs' Max is limited to lowered max, when the average CPU load has dropped down to less than < 25%, then both CPUs Max freq will be restored to back to power-on default Runnable Thread Auto-hotplug (fast hotplug / slow unplug algorithm): 1- When average number of running thread is < threshold, 2nd cpu will be unplugged. 2- When > threshold, 2nd cpu will be hotplugged. 3- The logic applies a fast hotplug and slow unplug algorithm so 2nd core will stay enabled longer to help deal with performance spikes changes from Ver 2.0 -> Ver 3.0: - remove GPU Busy dependency for browsing state detection (this will make the governor more portable to other platforms without specific GPU architecture knowledge) dependencies: -- Qualcomm's run queue average logic (SOC independent logic) -- TI's runnable thread average logic (SOC independent logic) adapted for use on Samsung Galaxy S3 series Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: arch/arm/mach-msm/cpufreq.c intellidemand: add bug fixes - Fix crash input event handler on governor switch - Fix panic when setting sampling rate Signed-off-by: faux123 <reioux@gmail.com> intellidemand: Add boost pulse capability Boost pulse increases UI performance by increasing CPU freq and reduce sampling time. Signed-off-by: faux123 <reioux@gmail.com> intellidemand: add a run queue persistence to determine browsing state persistence will allow for better browsing state detection rather than just purely based on run queue depth alone Signed-off-by: faux123 <reioux@gmail.com> intellidemand: code derps clean up! Signed-off-by: faux123 <reioux@gmail.com> intellidemand: performance tune up Signed-off-by: faux123 <reioux@gmail.com> d2|vzw|usc: add intellidemand Also lean out governors for d2(att|tmo) Signed-off-by: bmc08gt <bmc08gt.teamb00sted@gmail.com> net: wireless: bcmdhd: Update to version 5.90.195.114 - Get AP beacon and DTIM to set proper DTIM skipping Change-Id: I6bc23f050c144bf8361078ad587bcadbfe3a37fc Signed-off-by ...",08/02/2013 22:04:57,,NOT-FOUND,https://github.com/BMc08GT/kernel_samsung_d2/commit/05c8400dee4de518102629912adb502c2fba90e6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BMc08GT/kernel_samsung_d2,,,,,
jamescoxon,APRS_Projects,"made a few small changes to variables, added all the geofence tests though I feel perhaps a case setup would be better then else if. Currently no GPS power saving.",10/02/2013 21:08:34,,FALSE-POSITIVE,https://github.com/jamescoxon/APRS_Projects/commit/d5ad4842b6bd7a50ba64d4e91a5f470e22c3e30b,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,jamescoxon/APRS_Projects,jamescoxon,,,jamescoxon,
jamescoxon,APRS_Projects,"added basic powersaving, after we've got details of lock and sats we check if these are sufficent and if possible put the gps into power saving, if they aren't back in to maximum performance. The issue is that power saving is poorly implemented on the Ublox 6 so we need to be careful not to miss it loosing lock or it'll freeze up",10/02/2013 21:25:04,,OK,https://github.com/jamescoxon/APRS_Projects/commit/894f32276ff5826c6292f42aaf313c0003a18262,,,[OK][?],[OK] [Enable power saving mode],[DO NOT ANALYZE],[Enable power saving mode] [?],EXISTS,[put gps in power saving if data is enough],[power saving],[Enable gps power saving mode if data is enough] [Enable device power saving],[Enable device low power mode] [Condition: enough data],,,Certain,Arduino,No,Application,Ino,added basic powersaving,jamescoxon/APRS_Projects,jamescoxon,[Disabling feature/devices],[enough data],jamescoxon,Arduino application
humberos,android_kernel_samsung_smdk4412,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,11/02/2013 02:43:31,,DUPLICATE,https://github.com/humberos/android_kernel_samsung_smdk4412/commit/09ec0061f3d4700a933f6ea5e0dcfaeeb1161bf6,,,,,,,EXISTS,,,,,,,,,,,,,humberos/android_kernel_samsung_smdk4412,AndreiLux,,,humberos,
lolhi,at1-Kernel,intellidemand: dynamic change of sampling rate based on screen on/off using early_suspend/late_resume drivers to 2x min_sampling rate while screen is off to reduce frequency transitions in hope to reduce power consumption further,11/02/2013 03:25:33,,DUPLICATE,https://github.com/lolhi/at1-Kernel/commit/9f29ab313af5b468c751c983680ab09bd1496909,,,,,,,EXISTS,,,,,,,,,,,,,lolhi/at1-Kernel,faux123,,,lolhi,
dnschneid,crouton,"Add powerd-poking daemon for massive power savings. The powerd daemon auto-launches with X11 and pokes the system powerd while the X11 session is not idle. It also monitors the screensaver setting and continuously pokes powerd if the screensaver is inhibited (e.g. you are watching a video). This means that we can leave powerd running, which has huge battery benefits.",12/02/2013 04:03:12,,OK,https://github.com/dnschneid/crouton/commit/a49df080508237d7f86234dd6a629264ea8f8223,,,[OK][?],[OK] [Use power saving program],[DO NOT ANALYZE],[Use power saving program] [?],EXISTS,[Add powerd-poking daemon],[massive power savings],[Use power saving program] [Add power saving daemon] [Script],[Using power saving service],,,Certain,ChromiumOS,No,Libraries and Utilities,?,Add powerd-poking daemon for massive power savings.,dnschneid/crouton,dnschneid,[Use power efficient library/device],,dnschneid,Script
CyanogenMod,android_kernel_htc_endeavoru,"HID: uhid: introduce user-space I/O driver support for HID This adds a dummy driver that will support user-space I/O drivers for the HID subsystem. This allows to write transport-level drivers like USB-HID and Bluetooth-HID in user-space. Low-Energy Bluetooth needs this to feed HID data that is parsed in user-space back into the kernel. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add internal message buffer When receiving messages from the HID subsystem, we need to process them and store them in an internal buffer so user-space can read() on the char device to retrieve the messages. This adds a static buffer for 32 messages to each uhid device. Each message is dynamically allocated so the uhid_device structure does not get too big. uhid_queue() adds a message to the buffer. If the buffer is full, the message is discarded. uhid_queue_event() is an helper for messages without payload. This also adds a public header: uhid.h. It contains the declarations for the user-space API. It is built around ""struct uhid_event"" which contains a type field which specifies the event type and each event can then add a variable-length payload. For now, there is only a dummy event but later patches will add new event types and payloads. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this case it doesn't matter if a cached result is returned or the exact new result as user-space does not know which thread returns first from poll() and the following read(). So it is safe to compare the values without locking. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add documentation This describes the protocol used by uhid for user-space applications. It describes the details like non-blocking I/O and readv/writev for multiple events per syscall. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add example program This adds an example user-space program that emulates a 3 button mouse with wheel. It detects keyboard presses and moves the mouse accordingly. It register a fake HID device to feed the raw HID reports into the kernel. In this example, you could use uinput to get the same result, but this shows how to get the same behavior with uhid so you don't need HID parsers in user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ‘uhid_hid_get_raw’: drivers/hid/uhid.c:157: warning: ‘len’ may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>",12/02/2013 10:23:52,,DUPLICATE,https://github.com/CyanogenMod/android_kernel_htc_endeavoru/commit/30291058d6ed4b2cc56a881fc1d7043780d3fc75,,,[DUPLICATE],[DUPLICATE],[DUPLICATE],,EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_htc_endeavoru,dvdhrm,,,gorbi,
SlimRoms,android_system_core,"charger: suspend enable in charger mode To reduce power consumption after charging completion, enable suspend when LCD is turned off. Bug: 7429504 Change-Id: I34731dc392661c9051a20cea74f70d94a8aaeb42 Signed-off-by: Iliyan Malchev <malchev@google.com>",12/02/2013 15:09:13,,OK,https://github.com/SlimRoms/android_system_core/commit/f87e2f88134f0d24e59d5f879fd6dbee14d4be0b,,,[OK][Go to idle],[OK] [Go to idle] [Go to idle when screen off] [Power saving action on screen off],[DO NOT ANALYZE],[Go to idle] [Go to idle when screen off] [Power saving action on screen off],EXISTS,[enable suspend when LCD is off],[reduce power consumption after charging completion],[Go to idle] [Enable low power when screen off] [Power saving action on screen off],[Go to low power mode] [Condition: screen off],,,Certain,Android,Bug: 7429504,OS,C,"To reduce power consumption after charging completion, enable suspend when LCD is turned off.",SlimRoms/android_system_core,,[Energy bug],[screen off],mnm9994u,Software stack core
FSCL,FSCL.Runtime,Fixed sample for energy consumption monitoring,12/02/2013 16:35:55,,FALSE-POSITIVE,https://github.com/GabrieleCocco/FSCL.KernelRunner/commit/ff5775e7c411fe8d42da9cc33239f442aa02bda6,https://github.com/FSCL/FSCL.Runtime/commit/ff5775e7c411fe8d42da9cc33239f442aa02bda6,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSIVITE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,FSCL/FSCL.Runtime,,,,,
dsb9938,GT-N8013-JB-Kernel,1600MHz CPU OC Corrected CPU freq. going above scaling_max (even if only fractions of seconds) Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode,13/02/2013 10:45:16,,DUPLICATE,https://github.com/dsb9938/GT-N8013-JB-Kernel/commit/5d2bf6f39ab04972d41bfd570e3fb2392d889556,,,,[FALSE-POSITIVE] [VERIFY] [No original],,[VERIFY] [No original],EXISTS,,,,,,,,,,,,,dsb9938/GT-N8013-JB-Kernel,yank555-lu,,,dsb9938,
Team-2502,RobotCode2013,"Made a competition and normal version, normal is a power saving mode and competition goes all out.",14/02/2013 03:20:02,,FALSE-POSITIVE,https://github.com/Team-2502/RobotCode2013/commit/19b2e95164a9368b74d4fc81b140c76efdf753d6,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,Team-2502/RobotCode2013,Josh-Larson,,,Josh-Larson,
o11s,open80211s,"{cfg,nl,mac}80211: make peer inactivity limit accessible to userspace For mesh power save it is useful to remove inactive peers whose beacons we should not track anymore. This patch allows modifiying the corresponding peer inactivity limit, to expire peers that we have not received frames or beacons from recently. It is checked in the mesh housekeeping routine (currently every 60 HZ). Signed-off-by: Marco Porsch <marco.porsch@etit.tu-chemnitz.de>",14/02/2013 15:44:18,,DUPLICATE,https://github.com/cozybit/open80211s/commit/3860443e3d191fd904b2db391d8185b70fe224d4,https://github.com/o11s/open80211s/commit/3860443e3d191fd904b2db391d8185b70fe224d4,,,,,,EXISTS,,,,,,,,,,,,,o11s/open80211s,,,,,
gastonfariasb,wehaus-web,Save Energy Agrego Save Energy y corrigo errores de ORTO GRafia.,14/02/2013 17:58:56,,FALSE-POSITIVE,https://github.com/matiasanaya/wehaus-web/commit/a1271aa43ac100b1fb658e18e14c0ec3c41c2ca5,https://github.com/gastonfariasb/wehaus-web/commit/a1271aa43ac100b1fb658e18e14c0ec3c41c2ca5,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Document],[FALSE-POSIVITE],[Document],EXISTS,,,,,,,,,,,,,gastonfariasb/wehaus-web,,,,,
SEL-Columbia,SharedSolar_datamunge,Added Bar plot which shows net energy consumption in Uganda and How it Changes over time.,14/02/2013 19:33:27,,FALSE-POSITIVE,https://github.com/leem99/SharedSolar_datamunge/commit/eb6535119334b4f44f406d69e9b5fb827138dcf4,https://github.com/SEL-Columbia/SharedSolar_datamunge/commit/eb6535119334b4f44f406d69e9b5fb827138dcf4,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Game],[FALSE-POSIVITE],[Game],EXISTS,,,,,,,,,,,,,SEL-Columbia/SharedSolar_datamunge,,,,,
tbalden,android_device_htc_endeavoru,"Editing ramdisk and Settings overlay with performance related settings. It enables max freq cap with official endeavoru CM kernel, and fixes low power core frequencies being not used without htc's pnp manager and kernel hotplug mod. Optimal for gaming and for low power consumption at the same time.",14/02/2013 20:08:36,,OK,https://github.com/tbalden/android_device_htc_endeavoru/commit/b2babf82e9802519f33ccb76a194aff1d1bdd71a,,,[OK][SCALE CPU FREQ],[OK] [Scale CPU frequency] [Set governor] [Limit frequency],[DO NOT ANALYZE],[Scale CPU frequency] [Set governor] [Limit frequency] [SCALE CPU FREQ],EXISTS,[config governor] [fixes low power core frequencies being not used],[power saving],[Configure governor] [Scale CPU frequency] [Script] [Config],[DVFS] [Sub1: Governor tuning],,Multiple changes,Certain,Android,No,Libraries and Utilities,init.rc,Optimal for gaming and for low power consumption at the same time.,tbalden/android_device_htc_endeavoru,tbalden,[Frequency and voltage scaling],,tbalden,Script init.rc
crybert,slim_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. (cherry picked from commit fb48938f73e335ac66c83e6adba96431e050ec94) Change-Id: Ib8d05a38f28d7e2f0bdf9e420e5db526cf874bc6 CRs-Fixed: 430786 Conflicts: services/audioflinger/AudioFlinger.cpp",15/02/2013 16:05:48,,DUPLICATE,https://github.com/crybert/slim_frameworks_av/commit/d03ff6964b897d70ffcfa42996db7fbb30f4fd96,,,,[OK] [Bug fix] [Release resource before unlocking] [VERIFY],,[Bug fix] [Release resource before unlocking] [VERIFY],EXISTS,,,,,,,,,,,,,crybert/slim_frameworks_av,,,,crybert,
crybert,slim_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. (cherry picked from commit fb48938f73e335ac66c83e6adba96431e050ec94) Change-Id: Ib8d05a38f28d7e2f0bdf9e420e5db526cf874bc6 CRs-Fixed: 430786",15/02/2013 17:13:47,,DUPLICATE,https://github.com/crybert/slim_frameworks_av/commit/c437b81e28524303a6cac832df4593bfa516193f,,,,,,,EXISTS,,,,,,,,,,,,,crybert/slim_frameworks_av,,,,crybert,
ugers,android_system_core,"charger: suspend enable in charger mode To reduce power consumption after charging completion, enable suspend when LCD is turned off. Bug: 7429504 Change-Id: I34731dc392661c9051a20cea74f70d94a8aaeb42 Signed-off-by: Iliyan Malchev <malchev@google.com>",15/02/2013 17:22:31,,DUPLICATE,https://github.com/ugers/android_system_core/commit/3493f18985973e35f83b34b737c8fbcb179007c3,,,,,,,EXISTS,,,,,,,,,,,,,ugers/android_system_core,,,,,
ParanoidZTE,android_system_core,"charger: suspend enable in charger mode To reduce power consumption after charging completion, enable suspend when LCD is turned off. Bug: 7429504 Change-Id: I34731dc392661c9051a20cea74f70d94a8aaeb42 Signed-off-by: Iliyan Malchev <malchev@google.com>",16/02/2013 12:05:06,,NOT-FOUND,https://github.com/ParanoidZTE/android_system_core/commit/3493f18985973e35f83b34b737c8fbcb179007c3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ParanoidZTE/android_system_core,,,,,
kozmikkick,Endeavor3.1.10,"HID: uhid: introduce user-space I/O driver support for HID This adds a dummy driver that will support user-space I/O drivers for the HID subsystem. This allows to write transport-level drivers like USB-HID and Bluetooth-HID in user-space. Low-Energy Bluetooth needs this to feed HID data that is parsed in user-space back into the kernel. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add internal message buffer When receiving messages from the HID subsystem, we need to process them and store them in an internal buffer so user-space can read() on the char device to retrieve the messages. This adds a static buffer for 32 messages to each uhid device. Each message is dynamically allocated so the uhid_device structure does not get too big. uhid_queue() adds a message to the buffer. If the buffer is full, the message is discarded. uhid_queue_event() is an helper for messages without payload. This also adds a public header: uhid.h. It contains the declarations for the user-space API. It is built around ""struct uhid_event"" which contains a type field which specifies the event type and each event can then add a variable-length payload. For now, there is only a dummy event but later patches will add new event types and payloads. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this case it doesn't matter if a cached result is returned or the exact new result as user-space does not know which thread returns first from poll() and the following read(). So it is safe to compare the values without locking. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add documentation This describes the protocol used by uhid for user-space applications. It describes the details like non-blocking I/O and readv/writev for multiple events per syscall. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add example program This adds an example user-space program that emulates a 3 button mouse with wheel. It detects keyboard presses and moves the mouse accordingly. It register a fake HID device to feed the raw HID reports into the kernel. In this example, you could use uinput to get the same result, but this shows how to get the same behavior with uhid so you don't need HID parsers in user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ‘uhid_hid_get_raw’: drivers/hid/uhid.c:157: warning: ‘len’ may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>",17/02/2013 06:23:53,,NOT-FOUND,https://github.com/kozmikkick/Endeavor3.1.10/commit/10b073fd6c25b01754fc8ceff5bf8c01665a4f61,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,kozmikkick/Endeavor3.1.10,,,,,
kozmikkick,Endeavor3.1.10,"HID: uhid: introduce user-space I/O driver support for HID This adds a dummy driver that will support user-space I/O drivers for the HID subsystem. This allows to write transport-level drivers like USB-HID and Bluetooth-HID in user-space. Low-Energy Bluetooth needs this to feed HID data that is parsed in user-space back into the kernel. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add internal message buffer When receiving messages from the HID subsystem, we need to process them and store them in an internal buffer so user-space can read() on the char device to retrieve the messages. This adds a static buffer for 32 messages to each uhid device. Each message is dynamically allocated so the uhid_device structure does not get too big. uhid_queue() adds a message to the buffer. If the buffer is full, the message is discarded. uhid_queue_event() is an helper for messages without payload. This also adds a public header: uhid.h. It contains the declarations for the user-space API. It is built around ""struct uhid_event"" which contains a type field which specifies the event type and each event can then add a variable-length payload. For now, there is only a dummy event but later patches will add new event types and payloads. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this case it doesn't matter if a cached result is returned or the exact new result as user-space does not know which thread returns first from poll() and the following read(). So it is safe to compare the values without locking. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add documentation This describes the protocol used by uhid for user-space applications. It describes the details like non-blocking I/O and readv/writev for multiple events per syscall. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add example program This adds an example user-space program that emulates a 3 button mouse with wheel. It detects keyboard presses and moves the mouse accordingly. It register a fake HID device to feed the raw HID reports into the kernel. In this example, you could use uinput to get the same result, but this shows how to get the same behavior with uhid so you don't need HID parsers in user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ‘uhid_hid_get_raw’: drivers/hid/uhid.c:157: warning: ‘len’ may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>",17/02/2013 08:22:37,,DUPLICATE,https://github.com/kozmikkick/Endeavor3.1.10/commit/5ee0419d72c0b1fec2a955df5280d5a2179b88dd,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/Endeavor3.1.10,dvdhrm,,,kozmikkick,
Andromadus,android_frameworks_av,"Squashed commit of updates from CodeAurora auido: Add amr-wb+ codec to ACodec. -Add an entry for amr-wb+ decoder in ACodec. -amr-wb+ non tunnel will be enabled by default. Change-Id: Ied8902eb83da29a3164eb99e88630570a43f681e libstagefright: Create MP3 decoder libraries without OMX layer - With the current MP3 OMX SW decoders, the decoding time is increased w.r.t the libraries without OMX layer that are present in GB. This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode Change-Id: I835ab6d013a326f111e513586f884bacd5f7106a audioflinger: EffectModules are updated with device change Issue: Effects modules are not updated with the device change information Fix: 1) Add setDevice information to mLPAEffectChain 2) Remove the return after sending the device route information to Direct track so that mixer thread is also aware of the device change for EffectsChain Change-Id: I82936cd47290946a5e4772e448669d81e0e4d6f5 libmedia : Add a NULL pointer check - Print frame count in AudioTrack::dump() only if the control block is valid Change-Id: Icf594eb721b48795c43d7bd165f6086031ce6efd CRs-Fixed: 435050 libstagefright: Query AudioSystem for suggested record mute duration - AudioSource mutes a pre-defined duration (defined by kAutoRampStartUs) at the beginning of a recording. - Instead, query the audio system for any ongoing playback streams and use its output latency to calculate the duration to mute the incoming PCM stream. - This assumes all current playback threads will be paused once recording is started. Change-Id: Ie9b1d62e7be803ef1d8a59127b95c73e03fa5ce6 CRs-Fixed: 438149 libstagefright: Convert mono to stereo for LPA clips - Sound effects are not supported for mono clips - Repetative calling of effects_configure and effect_process for mono clips is resulting in crash in the sound effects library. - So, Mono clips are now converted to stereo by copying the left sample to right. - This is same as what Resampler does in Non-LPA Playback. This commit is a port of fcc0647fab20ceaf1c07bc10bb243f14c48b114c CRs-Fixed: 421639 Change-Id: Ie579c8d11afe3db8d42a35956e8bf23eeb88cfe6 audioflinger: Fix to set volume from MediaPlayer in Tunnel mode Issue: MediaPlayer.setVolume does not have effect on Playback volume in TunnelPlayer mode Fix: the left and right volume parameters of setVolume are hardcoded and defaulted in DirectAudioTrack. Updating the parameters from the input arguments fixes the issue Change-Id: I8a107ce57284b225b17d95fed0f69e3adc5fb131 CRs-Fixed: 441849 libstagefright: Enable Tunnel Decode for select formats - Enable tunnel mode decode only if the audio mime type matches a supported list. Change-Id: I32afd83e5fda1e90cb671dd747f17cb83bb84fc1 CRs-Fixed:437651 framework/av:: Add support to decode mp3 data in mp4 container - Added support to decode mp3 data in mp4 container packed as mp4a atom and .mp3 atom as well. Port of 8fa3774adf9259b33ee721cfaeff26da42c29928 Change-Id: I1a04022f30a9f6516575440aba7652986ab7dc58 CRs-Fixed: 439897 audiomixer: Use High Quality resampler Use very high quality resampler to upsample to 48KHz sample rate. Change-Id: I1ba5b839f1e74ae71b405538d970e6a966bd1d47 CRs-fixed: 416730 audioflinger: Fix a deadlock - A deadlock will happen if the obit recipient registered by the DirectAudioTrack is called. - Fix this by moving the lock acquisition in DirectAudioTrack::clearPowerManager() to after DirectAudioTrack::releaseWakeLock() is called. - Also synchronize use of mPowerManager in the DirectAudioTrack destructor with DirectAudioTrack::clearPowerManager() Change-Id: Ib127db1406c4a61a4054ca0cf30f4c7347a5c92a CRs-Fixed: 444093 libstagefright: TunnelPlayer: update condition to send SEEK_COMPLETE - If the client tries to seek to 0 (e.g as a result of LOOPING) without ever calling getPosition(), we will always sent an immediate seek notification without seeking. Change-Id: Id2b9d00c611278d0521cb6fd402710f0ec37bbdd CRs-Fixed: 441411 libstagefright: Remove unnecessary code from TunnelPlayer - TunnelPlayer tries to mimick AudioPlayer when trying to delete the extractor source. - It is needed for AudioPlayer as the OMXCodec object is referenced by the CallbackDispatcher as well as AudioPlayer. - This condition is not true for TunnelPlayer, so why do it. Change-Id: I79c4e17d01910e73ad01c5640ef374626313a18e CRs-Fixed: 442365 Add MediaDebug header from CAF Change-Id: I68dbe72f86a49685b82b64927d1aa80231647a7a",17/02/2013 09:34:32,,DUPLICATE,https://github.com/Andromadus/android_frameworks_av/commit/f9a9401fd03d573e9270369ffa7328f0555f272c,,,,,,,EXISTS,,,,,,,,,,,,,Andromadus/android_frameworks_av,,,,Juansheng,
CyanogenMod,android_device_htc_endeavoru,"Editing ramdisk and Settings overlay with performance related settings. It enables max freq cap with official endeavoru CM kernel, and fixes low power core frequencies being not used without htc's pnp manager and kernel hotplug mod. Optimal for gaming and for low power consumption at the same time.",17/02/2013 13:45:05,,DUPLICATE,https://github.com/CyanogenMod/android_device_htc_endeavoru/commit/7acb66801ccdedfcab90c44ace2bf277f53214f5,,,,,,,EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_htc_endeavoru,tbalden,,,tbalden,
AOKPZMod,android_device_huawei_hws7300u,Add Power save mod (Device Settings),17/02/2013 17:09:24,,DUPLICATE,https://github.com/AOKP-MEDIAPAD/android_device_huawei_hws7300u/commit/379c3599d27b471d54176b164229d74c9dd6f060,https://github.com/AOKPZMod/android_device_huawei_hws7300u/commit/379c3599d27b471d54176b164229d74c9dd6f060,,,,,,EXISTS,,,,,,,,,,,,,AOKPZMod/android_device_huawei_hws7300u,,,,,
Andrew2448,MachineMusePowersuits,Made auto-feeder energy consumption configurable.,18/02/2013 06:10:22,,FALSE-POSITIVE,https://github.com/Andrew2448/MachineMusePowersuits/commit/29e1eacbd6435acb8ffa133ae67fdd3175c9dedb,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Game],[FALSE-POSIVITE],[Game],EXISTS,,,,,,,,,,,,,Andrew2448/MachineMusePowersuits,Andrew2448,,,Andrew2448,
MachineMuse,MachineMusePowersuits,Merge pull request #73 from Andrew2448/master Made auto-feeder energy consumption configurable.,18/02/2013 06:12:58,,DUPLICATE,https://github.com/MachineMuse/MachineMusePowersuits/commit/0d931f1e75dbe2d3ce58c39ece903a4871104a6e,,,[DUPLICATE],[DUPLICATE],[DUPLICATE],,EXISTS,,,,,,,,,,,,,MachineMuse/MachineMusePowersuits,MachineMuse,,,MachineMuse,
rpl,r2d2b2g,disable screen timeout we don't need this power saving settings to be enabled on the b2g instance running on the simulator.,18/02/2013 08:01:50,,FALSE-POSITIVE,https://github.com/rpl/r2d2b2g/commit/03a7d883e4cefaa961e06fa301aa6046e875fa4a,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,rpl/r2d2b2g,rpl,,,rpl,
SlimRoms,android_system_core,"Squash all 4.2.2 changes into one libsuspend: compile as a static library Compile libsuspend as a static library as well, currently needed by the charger code in some cases. Related-to-bug: 7429504 Change-Id: I113017c2c855f915b77c76d8934b6e57c0bb532c Signed-off-by: Iliyan Malchev <malchev@google.com> init.usb.rc: set sys.usb.config to none before changing it On encrypted devices, persistent properties are loaded after the device is decrypted. To properly change sys.usb.config to its persistent value, it must first be set to ""none"" and then to ${persist.sys.usb.config}. Bug: 7678835 Change-Id: I4f91245cedc04e3178ce9cee21390f5b657733c9 charger: suspend enable in charger mode To reduce power consumption after charging completion, enable suspend when LCD is turned off. Bug: 7429504 Change-Id: I34731dc392661c9051a20cea74f70d94a8aaeb42 Signed-off-by: Iliyan Malchev <malchev@google.com> charger: fix build Looks like libsuspend is not available on all platforms. Change-Id: Ic32dc93221f3c488e846da35235f247f4ddb4c69 Signed-off-by: Iliyan Malchev <malchev@google.com> charger: Do not suspend when disconnecting from charger The device should be power off when disconnecting from charger. If the device enter to suspend, the device couldn't handle the power off process. So the device shouldn't suspend to handle the power off at that time Bug: 7429504 Change-Id: I9a0a60e53f315cd83550dc730a33bc7bd464ef67 rootdir: init.rc: set perms for cpufreq governor boostpulse_duration Change-Id: I09b9a1ed548e4ffe1232f583e8ff5f026760f616",18/02/2013 10:32:17,,FALSE-POSITIVE,https://github.com/SlimRoms/android_system_core/commit/bf396ce5c76fca00fda767e7fe4c63df6cdf6019,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,SlimRoms/android_system_core,,,,mnm9994u,
rjwysocki,linux-pm,"intel_idle: export both C1 and C1E Here we disable HW promotion of C1 to C1E and export both C1 and C1E and distinct C-states. This allows a cpuidle governor to choose a lower latency C-state than C1E when necessary to satisfy performance and QOS constraints -- and still save power versus polling. This also corrects the erroneous latency previously reported for C1E -- it is 10usec, not 1usec. Note that if you use ""intel_idle.max_cstate=N"", then you must increment N by 1 to get the same behavior after this change. Signed-off-by: Len Brown <len.brown@intel.com>",18/02/2013 21:45:45,,RELATED,https://github.com/rjwysocki/linux-pm/commit/32e9518005c8dd9ed668f40f98632c8186df4909,,,[OK][?],[OK] [Disable power state promotion] [Expose power states] [Add c-state],[DO NOT ANALYZE],[Disable power state promotion] [Expose power states] [Add c-state] [?],EXISTS,[export C1 and C1E C-states],[allows a cpuidle governor to choose a lower latency C-state than C1E when necessary to satisfy performance and QOS constraints -- and still save power versus polling.],[Expose power states],[Expose power saving state],,,Certain,Linux pm,No,OS,C,This allows a cpuidle governor to choose a lower latency C-state than C1E when necessary to satisfy performance and QOS constraints -- and still save power versus polling.,rjwysocki/linux-pm,lenb,[Expose power saving state],,lenb,Driver
MachineMuse,MachineMusePowersuits,fix for server-side sprint assist energy consumption,19/02/2013 02:50:31,,FALSE-POSITIVE,https://github.com/MachineMuse/MachineMusePowersuits/commit/c4967889453856a860dfd729a164c8050153d816,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Game],[FALSE-POSIVITE],[Game],EXISTS,,,,,,,,,,,,,MachineMuse/MachineMusePowersuits,MachineMuse,,,MachineMuse,
dhiru1602,android_kernel_samsung_latona,mach:mcbsp: change dma mode for power saving,19/02/2013 08:57:54,,DUPLICATE,https://github.com/dhiru1602/android_kernel_samsung_latona/commit/ace52962b402e297a5c4609bb2123e52f99dba96,,,,,,,EXISTS,,,,,,,,,,,,,dhiru1602/android_kernel_samsung_latona,dhiru1602,,,dhiru1602,
dorimanx,Dorimanx-SG2-I9100-Kernel,FIX Power Saver Mode for JB SAMMY by GM!,19/02/2013 12:56:38,,UNABLE-TO-CATEGORIZE,https://github.com/dorimanx/Dorimanx-SG2-I9100-Kernel/commit/9616c6c22c76da24e5d0033f330bfd076fa44a33,,,[OK][DVFS],[OK] [Bug fix] [Android],[DO NOT ANALYZE],[Bug fix] [Android] [DVFS],EXISTS,[FIX Power Saver Mode],[power saving],[REVIEW] [Bug fix] [Fix power saving mode],[Energy bug] [DVFS] ?,,,Certain,Android,Yes,Kernel,C,FIX Power Saver Mode for JB SAMMY by GM!,dorimanx/Dorimanx-SG2-I9100-Kernel,dorimanx,?,,dorimanx,Kernel
kozmikkick,Endeavor3.1.10,"HID: uhid: introduce user-space I/O driver support for HID This adds a dummy driver that will support user-space I/O drivers for the HID subsystem. This allows to write transport-level drivers like USB-HID and Bluetooth-HID in user-space. Low-Energy Bluetooth needs this to feed HID data that is parsed in user-space back into the kernel. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add internal message buffer When receiving messages from the HID subsystem, we need to process them and store them in an internal buffer so user-space can read() on the char device to retrieve the messages. This adds a static buffer for 32 messages to each uhid device. Each message is dynamically allocated so the uhid_device structure does not get too big. uhid_queue() adds a message to the buffer. If the buffer is full, the message is discarded. uhid_queue_event() is an helper for messages without payload. This also adds a public header: uhid.h. It contains the declarations for the user-space API. It is built around ""struct uhid_event"" which contains a type field which specifies the event type and each event can then add a variable-length payload. For now, there is only a dummy event but later patches will add new event types and payloads. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this case it doesn't matter if a cached result is returned or the exact new result as user-space does not know which thread returns first from poll() and the following read(). So it is safe to compare the values without locking. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add documentation This describes the protocol used by uhid for user-space applications. It describes the details like non-blocking I/O and readv/writev for multiple events per syscall. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: add example program This adds an example user-space program that emulates a 3 button mouse with wheel. It detects keyboard presses and moves the mouse accordingly. It register a fake HID device to feed the raw HID reports into the kernel. In this example, you could use uinput to get the same result, but this shows how to get the same behavior with uhid so you don't need HID parsers in user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ‘uhid_hid_get_raw’: drivers/hid/uhid.c:157: warning: ‘len’ may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>",20/02/2013 06:27:37,,DUPLICATE,https://github.com/kozmikkick/Endeavor3.1.10/commit/c9fc07bd87ec6195c2095b8547c9f66dd8d6a6d6,,,,,,,EXISTS,,,,,,,,,,,,,kozmikkick/Endeavor3.1.10,dvdhrm,,,kozmikkick,
gngdb,EPDM,added individual resistor power consumptions,20/02/2013 23:31:59,,FALSE-POSITIVE,https://github.com/ggray1729/EPDM/commit/c1ead8736dd1af4c52b41a0575c7b721d83998b3,https://github.com/gngdb/EPDM/commit/c1ead8736dd1af4c52b41a0575c7b721d83998b3,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,gngdb/EPDM,,,,,
jimsth,tuna,"omap44xx: cpuidle: Update target residencies to saner values The current values are insane. There is no possible way power saving can be attained by heading into C4 for not much more than 1ms. The average values are in the 20ms range, so why do we need to even entertain entering at much lower values when we will use more power than we save in doing so. The actual recommended values are shown in 79e796f7b993bd82ad108fa488c35ddd1b9387eb but for some obscure reason, in 16385c726d55f9e84bbc60ff9e329a84d56a13a3 and 22e2193661b6bffcfdc1a4d17f6af0d1782ba860 they were updated to match the exit_latency. This seems horribly wrong to me as there comes a point when the target residency is so low that you use more power actually entering the state than you gain from the insignificant amount of time you spend there. With the values in this commit, C4 state is used for >95% of the time when the screen is off, with C3 picking up the remainder. During audio playback, C4 is used ~50% of the time, C3 is used ~25% of the time and C2 picks up whatever is left. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Conflicts: arch/arm/mach-omap2/cpuidle44xx.c",21/02/2013 09:00:08,,NOT-FOUND,https://github.com/jimsth/tuna/commit/6a1d29866b03f2b7ff2b1f1efeb6022d5b1395f1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jimsth/tuna,,,,,
kaihwang,MEGScripts,forgot to save power from ET trials.,22/02/2013 19:41:54,,FALSE-POSITIVE,https://github.com/kaihwang/MEGScripts/commit/3059d11582ec961e54ba4dfc38ea7b6257172944,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,kaihwang/MEGScripts,,,,,
MetaWatchOpenProjects,MetaWatch-Gen2,v1.35: Optimise power consumption; bug fixing.,22/02/2013 20:08:50,,UNABLE-TO-CATEGORIZE,https://github.com/MetaWatchOpenProjects/MetaWatch-Gen2/commit/85031be2cdf55388e8c0c85662d47874dcdad898,,,[FALSE-POSITIVE],[UNABLE-TO-CATEGORIZE] [Giga commit] [20k] [Unable to map message to changes],[DO NOT ANALYZE],[Giga commit] [20k] [Unable to map message to changes],EXISTS,,,,,,,,,,,,,MetaWatchOpenProjects/MetaWatch-Gen2,,,,,
kaihwang,MEGScripts,save power estimates for each trial.,22/02/2013 20:52:00,,FALSE-POSITIVE,https://github.com/kaihwang/MEGScripts/commit/8af5f18d862236f5055bdbca9eb934f4a623a39d,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute energy consumption],[DO NOT ANALYZE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,kaihwang/MEGScripts,,,,,
VanirAOSP,system_core,"charger: suspend enable in charger mode To reduce power consumption after charging completion, enable suspend when LCD is turned off. Bug: 7429504 Change-Id: I34731dc392661c9051a20cea74f70d94a8aaeb42 Signed-off-by: Iliyan Malchev <malchev@google.com>",23/02/2013 17:07:21,,DUPLICATE,https://github.com/VanirAOSP/platform_system_core/commit/4c4d16f542071667d6e12bb2f79a4e2ac8f221d4,https://github.com/VanirAOSP/system_core/commit/4c4d16f542071667d6e12bb2f79a4e2ac8f221d4,,,,,,EXISTS,,,,,,,,,,,,,VanirAOSP/system_core,,,,,
carvsdriver,msm8660-common_moretz,msm_fb: display: add mdp bandwidth runtime calculation Currently mdp bandwidth request logic is based on source image size and number of layers. This logic can not support complicated mdp usecases and it is not power efficient. The logic is improved by calculating mdp bandwidth request at runtime from all pipes and mixers. CRs-fixed: 425823 Change-Id: I63206f00f8d3017a2449f8ac617fce3ba2a4d36c Signed-off-by: Huaibin Yang <huaibiny@codeaurora.org>,23/02/2013 17:37:52,,NOT-FOUND,https://github.com/carvsdriver/msm8660-common_moretz/commit/08cd32cd1661eb3bd8394fdfd91e99669b00ba73,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,carvsdriver/msm8660-common_moretz,,,,,
luispedro,libertarian-welfare,TXT Thoughts on energy efficiency,24/02/2013 22:11:28,,FALSE-POSITIVE,https://github.com/luispedro/libertarian-welfare/commit/461d0dc8271790b96754f613157866c37eebcb3f,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Document],[FALSE-POSIVITE],[Document],EXISTS,,,,,,,,,,,,,luispedro/libertarian-welfare,luispedro,,,luispedro,
austinay,sweetnsour-kernel,"kernel: Prevent unnecessary rfkill event generation. Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Change-Id: I3ac4e141fbdf1315b74d3bad6aa96f34b00c3f92 CRs-fixed: 398283 Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Deepthi Gowri <deepthi@codeaurora.org>",25/02/2013 02:00:33,,NOT-FOUND,https://github.com/austinay/sweetnsour-kernel/commit/f8c934ce07ca735aed64e471467cd80ad1b04e3e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,austinay/sweetnsour-kernel,,,,austinay,
jdidzbalis,energy,"Changed state to projects, and added Energy Savings to projects",25/02/2013 15:49:38,,FALSE-POSITIVE,https://github.com/jdidzbalis/energy/commit/7ec0efead404b151d1cc9b73dd4384d2aa9a1bca,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Ui label],[FALSE-POSIVITE],[Ui label],EXISTS,,,,,,,,,,,,,jdidzbalis/energy,,,,,
intersectRaven,nexus4-kernel,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org>,26/02/2013 11:27:57,,NOT-FOUND,https://github.com/intersectRaven/nexus4-kernel/commit/cd92faa44a032782b6ecaa42ba40597bc3c92d38,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,intersectRaven/nexus4-kernel,,,,,
DEMENTED-Droid,kernel_lge_mako,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org>",26/02/2013 17:26:17,,NOT-FOUND,https://github.com/DEMENTED-Droid/kernel_lge_mako/commit/7d7bc64a8084a960f184b6cebc8d9d5312b8f57f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,DEMENTED-Droid/kernel_lge_mako,,,,,
sunaku,home,tmux: save power by dummy maximization placeholder,27/02/2013 00:18:38,,UNABLE-TO-CATEGORIZE,https://github.com/sunaku/home/commit/017758c0ccd1b6dcf4f44585789b1e655264c890,,,[OK][?],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[?],EXISTS,,,,,,,,,,,,,sunaku/home,sunaku,,,sunaku,
dastin1015,android_kernel_htc_msm8960,"msm8960: squshed CM commits (4/4) cpufreq: interactive: Add error checking on sysfs interfaces This adds better error checking on tunable parameters on sysfs interfaces. Also fixes return value from these functions, previously on success they would return 0 which would cause a infinite loop. Change-Id: Ic05038492166f8673d007202092471f98a2f0dfa Signed-off-by: Allen Martin <amartin@nvidia.com> cpufreq: interactive: add sysfs control for timer rate Add a new sysfs control that tunes the rate of the timer used to increase cpu frequency Change-Id: I1aa13ae54bb43aff5b3688984d2955f56aae1658 Signed-off-by: Allen Martin <amartin@nvidia.com> cpufreq: interactive: cleanup checkpatch warnings Cleanup some style warnings reported by checkpatch Change-Id: Ie2e6903d52867fb3347e009d7efa3bc4ca755cea Signed-off-by: Allen Martin <amartin@nvidia.com> cpufreq: interactive: fix checkpatch warnings on long lines Fix up checkpatch warning introduced by long lines in timer_rate patch. Change-Id: I22b105dafb1b49390799bb7577464da03f0f8afb Signed-off-by: Allen Martin <amartin@nvidia.com> cpufreq: interactive: Fix handling of SMP where CPUs must scale in tandem The interactive governor relies on quirks of the Tegra 2 cpufreq implementation for handling SMP systems where the CPUs do not have separate rate controls. It needs to determine the maximum rate for all CPUs covered by the policy and set that speed. Change-Id: I1ed9fa171e5a9c45a1fa5944e3fa823eb157e81f Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: fix possible Division by zero. The following dump was seen sometimes while resuming, the only division by zero on this function can happen after delta_time is reassigned, since at the start of the function, there is jump that protects against values less than 1000. After that, If delta_time and delta_idle == 0, we will hit a div 0 Division by zero in kernel. Backtrace: [<c0057184>] (dump_backtrace+0x0/0x110) from [<c05d5ecc>] (dump_stack+0x18/0x1c) r6:010f3000 r5:c113dfb0 r4:c004afb0 r3:c6ff0000 [<c05d5eb4>] (dump_stack+0x0/0x1c) from [<c00572cc>] (__div0+0x1c/0x20) [<c00572b0>] (__div0+0x0/0x20) from [<c02195d4>] (Ldiv0+0x8/0x10) [<c03dfd64>] (cpufreq_interactive_timer+0x0/0x2c0) from [<c00a7efc>] (run_timer_softirq+0x154/0x260) [<c00a7da8>] (run_timer_softirq+0x0/0x260) from [<c00a0c8c>] (__do_softirq+0xc8/0x194) [<c00a0bc4>] (__do_softirq+0x0/0x194) from [<c00a1008>] (irq_exit+0xb4/0xb8) [<c00a0f54>] (irq_exit+0x0/0xb8) from [<c00584b4>] (ipi_timer+0x44/0x48) r4:c004a040 r3:00000001 [<c0058470>] (ipi_timer+0x0/0x48) from [<c004c3e4>] (do_local_timer+0x68/0x84) r5:c004ae2c r4:c07991e8 [<c004c37c>] (do_local_timer+0x0/0x84) from [<c0052948>] (__irq_svc+0x48/0xe0) Change-Id: I639882db67b8d711c5710778ebc212f0f6a998e3 Acked-by: Nishanth Menon <nm@ti.com> Signed-off-by: Axel Haslam <axelhaslam@ti.com> cpufreq: interactive governor: default timer 10ms, maxspeed load 95% Modify default timer from 30ms to 10ms, sampling 2 jiffies after idle exit on ARM as in Honeycomb. Modify default go_maxspeed_load from 85% loaded to 95% loaded, for use in phones where power savings is more important (tablets may be best served overriding this). Change-Id: I3361a6279979bfae1df5262666a2e30ea7a44328 Signed-off-by: Todd Poynor <toddpoynor@google.com> power: cpufreq interactive governor: use default sample time 20ms Lower the default time at which a higher speed is allowed to run before lowering based on lower CPU load from 80ms to 20ms. Most Android devices should trade power for performance here, although tablets and non-battery-powered devices may want to override this default. Change-Id: I1a4f7faeca12793c51d5b92db30a63cca8d4f1be Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive governor: apply intermediate load on current speed Calculate intermediate speed by applyng CPU load to current speed, not max speed. Change-Id: Idecf598b9a203b07c989c5d9e9c6efc67a1afc2e Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive governor: scale to max only if at min speed Change-Id: Ieffb2aa56b5290036285c948718be7be0d3af9e8 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive governor: go to intermediate hi speed before max * Add attribute hispeed_freq, which defaults to max. * Rename go_maxspeed_load to go_hispeed_load. * If hit go_hispeed_load and at min speed, go to hispeed_freq; if hit go_hispeed_load and already above min speed go to max speed. Change-Id: I1050dec5f013fc1177387352ba787a7e1c68703e Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive governor: default 20ms timer Change-Id: Ie9952f07b38667f2932474090044195c57976faa Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq interactive governor: event tracing Change-Id: Ic13614a3da2faa2d4bd215ca3eb7191614f0cf66 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: apply intermediate load to max speed not current Evaluate spikes in load (below go_hispeed_load) against the maximum speed supported by the device, not the current speed (which tends to make it too difficult to raise speed to intermediate levels until very busy). Change-Id: Ib937006abf8bedb60891a739acd733e89b732ae0 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: set at least hispeed when above hispeed load If load is above go_hispeed_load, always go to at least hispeed_freq, even when reducing speed from a higher speed, not just when jumping up from minimum speed. Avoids running at a lower than intended speed after a burst of even higher load. Change-Id: I5b9d2a15ba25ce609b21bac7c724265cf6838dee Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: don't drop speed if recently at higher load Apply min_sample_time to the last time the current target speed was originally requested or re-validated as appropriate for the current load, not to the time since the current speed was originally set. Avoids periodic dips in speed during bursty loads. Change-Id: I250bda657985de60373f9897cc41f480664d51a1 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: configurable delay before raising above hispeed Change-Id: I4d6ac40b23a3790d48e30c37408284e9f955e8fa Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: adjust code and documentation to match Change-Id: If59c668d514a29febe5c35404fd9d01df8548eb1 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: based hispeed bump on target freq, not actual For systems that set a common speed for all CPUs, checking current speed here could bypass the intermediate hispeed bump decision for this CPU when another CPU was already at hispeed. This could result in an overly high setting (for all CPUs) in situations where all CPUs were about to drop to load levels that map to hispeed or below. Change-Id: I186f23dcfc5e2b6336cab8b0327f0c8a9a4482bc Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: Separate speed target revalidate time and initial set time Allow speed drop after min_sample_time elapses from last time the current speed was last re-validated as appropriate for current load / input boost. Allow speed bump after min_sample_time (or above_hispeed_delay) elapses from the time the current speed was originally set. Change-Id: Ic25687a7a53d25e6544c30c47d7ab6f27a47bee8 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: Boost frequency on touchscreen input Based on previous patches by Tero Kristo <tero.kristo@nokia.com>, Brian Steuer <bsteuer@codeaurora.org>, David Ng <dave@codeaurora.org>, Antti P Miettinen <amiettinen@nvidia.com>, and Thomas Renninger <trenn@suse.de> Change-Id: Ic55fedcf6f9310f43a7022fb88e23b0392122769 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: remove unused target_validate_time_in_idle Change-Id: I37c5085b91318242612440dfd775ad762996612f Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: Add sysfs boost interface for hints from userspace The explicit hint on/off version. Change-Id: Ibf62b6d45bf6fb8c9c055b9bdaf074ce9374c04f Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: set floor for boosted speed Allow speed to drop to flooor frequency but not below, don't pin to speed at last boost. Change-Id: I0147c2b7a2e61ba16820605af6baaf09570be787 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: add boost pulse interface Change-Id: Icf1e86d2065cc8f0816ba9c6b065eb056d4e8249 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: restart above_hispeed_delay at each hispeed load Change-Id: I2e5b91d45e8806b0ab94ca2301ed671c9af9ab13 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: take idle notifications only when active Register an idle notifier only when the governor is active. Also short-circuit work of idle end if the governor is not enabled. Signed-off-by: Sam Leffler <sleffler@chromium.org> Change-Id: I4cae36dd2e7389540d337d74745ffbaa0131870f cpufreq: interactive: keep freezer happy when not current governor Fix a problem where the hung task mechanism was deeming the interactive clock boost thread as hung. This was because the thread is created at module init but never run/woken up until needed. If the governor is not being used this can be forever. To workaround this explicitly wake up the thread once all the necessary data structures are initialized. The latter required some minor code shuffle. Signed-off-by: Sam Leffler <sleffler@chromium.org> Change-Id: Ie2c058dd75dcb6460ea10e7ac997e46baf66b1fe cpufreq: interactive: handle speed up and down in the realtime task Not useful to have a separate, non-realtime workqueue for speed down events, avoid priority inversion for speed up events. Change-Id: Iddcd05545245c847aa1bbe0b8790092914c813d2 Signed-off-by: Todd Poynor <toddpoynor@google.com> cpufreq: interactive: remove input_boost handling Now handled in userspace Power HAL instead. Change-Id: I78a4a2fd471308bfcd785bbefcc65fed ...",27/02/2013 21:50:13,,NOT-FOUND,https://github.com/dastin1015/android_kernel_htc_msm8960/commit/e04223d1dad9adf11888d93bdde26f813e3494d2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dastin1015/android_kernel_htc_msm8960,,,,,
jjingob,grunt-contrib-coffee,Create data Consumer Apps Page | Data.gov This page highlights apps and websites that use Smart Disclosure-style data to empower consumers to make better informed choices. The purpose is to illustrate the kinds of innovative apps—web- and mob... http://www.data.gov/consumer/page/consumer-apps-page,28/02/2013 07:10:27,,NOT-FOUND,https://github.com/jjingob/grunt-contrib-coffee/commit/2c4699cbdb849c2a589421fa36de46557c5cdc93,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jjingob/grunt-contrib-coffee,jjingob,,,jjingob,
jamescoxon,PicoAtlas,"found a bug, was if lost lock was dropping out of power saving but as lock count was still high was quickly going back to powersaving, now when gps_PSM is called it resets the lock count as well",28/02/2013 23:26:23,,FALSE-POSITIVE,https://github.com/jamescoxon/PicoAtlas/commit/cda4526a9af6ffe473a8e6b8782afd85918bc089,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,jamescoxon/PicoAtlas,jamescoxon,,,jamescoxon,
ram1,autolock,speaker updates to lower power consumption; sleep code,02/03/2013 00:33:55,,UNABLE-TO-CATEGORIZE,https://github.com/ram1/autolock/commit/55b263a27153d0a6a5817f98967ea31fb8a83af4,,,[OK][Go to idle],[OK] [Disable component] [Go to idle],[DO NOT ANALYZE],[Disable component] [Go to idle],EXISTS,,,[REVIEW] [Disable component] [Go to idle],?,,,Certain,MCU,No,Embedded application,C,speaker updates to lower power consumption; sleep code,ram1/autolock,ram1,?,,ram1,Embedded application
xcstacy,kernel-Nexus4,"Clk: notifier handler for dynamic voltage scaling Dynamic voltage and frequency scaling (dvfs) is a common power saving technique in many of today's modern processors. This patch introduces a common clk rate-change notifier handler which scales voltage appropriately whenever clk_set_rate is called on an affected clock. There are three prerequisites to using this feature: 1) the affected clocks must be using the common clk framework 2) voltage must be scaled using the regulator framework 3) clock frequency and regulator voltage values must be paired via the OPP library If a platform or device meets these requirements then using the notifier handler is straightforward. A struct device is used as the basis for performing initial look-ups for clocks via clk_get and regulators via regulator_get. This means that notifiers are subscribed on a per-device basis and multiple devices can have notifiers subscribed to the same clock. Put another way, the voltage chosen for a rail during a call to clk_set_rate is a function of the device, not the clock. Signed-off-by: Mike Turquette <mturquette@linaro.org>",03/03/2013 00:11:39,,OK,https://github.com/xcstacy/kernel-Nexus4/commit/0f727ebde0638a23771b0fe3ecfa35d0785dd6eb,,,[OK][DVFS],[OK] [Add scaling handler],[DO NOT ANALYZE],[Add scaling handler] [DVFS],EXISTS,[add clk rate-change notifier handler to scale voltage with frequency],[dvfs is a common power saving technique],[Add voltage scaling handler] [Scale voltage on frequency scaling],[DVFS],,,Certain,Android,No,OS,"C,Rej",Dynamic voltage and frequency scaling (dvfs) is a common power saving technique in many of today's modern processors.  This patch introduces a common clk rate-change notifier handler which scales voltage appropriately whenever clk_set_rate is called on an affected clock.,xcstacy/kernel-Nexus4,xcstacy,[Frequency and voltage scaling],,xcstacy,Driver
AOSP-Xperience,android_frameworks_base,"Custom LED notification (1/2) Custom LED notification (1/2 framework) Change-Id: If0b0a70d495dae63bea7fe61940f7803b97514c1 Conflicts: core/java/android/provider/Settings.java services/java/com/android/server/NotificationManagerService.java Fix notification led regex typo Change-Id: I7bfeacf6d51a554063492adee58e9162086f36a1 Notification light(LED) settings: package mapping Credit for this code goes to Marko Mihovilic This commit allows for framework side override of the application package name set for Notification light led overrides. This is used in cases where the user selectable application sends its notifications via another package. Specifically: GTalk (com.google.android.talk) sends notifications via the Google services framework (com.google.android.gsf). Patch set 2 - fix derp and whitespace cleanup Patch set 4 - fixed another derp Patch set 5 - fixes typo in comment Patch set 6 - remove Log.d line Patch set 7 - allow specifying default values in application notification overrides Change-Id: I0c13ae3acefa0bcb4ffb46ea7eae301081d9f8f6 Conflicts: core/res/res/values/arrays.xml services/java/com/android/server/NotificationManagerService.java Fix custom LED values string Change-Id: I8c44ec327f752932d9200142a620d577b6850804 Add ""Pulse low battery light"" switch. Implements the framework portion of an optional ""Pulse low battery light"" switch, which allows the pulsing low battery LED to be disabled. The function and implementation of this switch is analogous to (and borrowed from) the ""Pulse notification light"" switch. This is motivated by devices (e.g., epicmtd) featuring a battery charging LED, where the LED does not support pulsing in hardware and relies on a kernel (CPU) timer to implement the pulse capability. On these devices, pulsing the LED requires waking the CPU from suspend on every LED on/off event, substantially reducing the proportion of time the CPU can suspend, and thus, substantially increasing power consumption. Therefore, when the these devices reach the low battery threshold, their power consumption, ironically, increases measurably in order to pulse the battery charging LED, which lowers battery life and increases the likelihood of a low-battery shutdown if the user cannot charge the device in a timely fashion. This switch allows the user to disable the pulsing low battery LED in order to maximize their low battery charge. Change-Id: I3a5c8938fd7c444c90b2af123e683982c614cd6e Conflicts: core/java/android/provider/Settings.java services/java/com/android/server/BatteryService.java Battery Light: Add ability to configure (Part 1 of 2) Adds Quiet hours support and ability to configure the led if the device supports multiple colors for the Light - enabled via overlay with default as 'false' Change-Id: I905dde400ba0780066f2b2a20142eaa27e158655 Conflicts: core/java/android/provider/Settings.java services/java/com/android/server/BatteryService.java Framework: Add Missed call and Voicemail to notification light settings (2/3) This commit adds the ability to store the configured missed call and voicemail light settings Requires Part 1 (Settings) and Part 3 (Phone) commits Change-Id: I726cbad5c0f9f7d4f84091eeb747c21567ce443e NotificationManagerService: Fix notification led bug We can assume that if the user turned the screen off while there was still an active notification then they wanted to keep the notification for later. In this case we shouldn't flash the notification light. The problem for some special notifications (such as missed calls) is that the screen is automatically turned on, and then when it is turned back off the led does not get enabled. For these notifications we use a flag to force the notification light even if the screen was turned off.",03/03/2013 01:32:19,,RELATED,https://github.com/AOSP-Xperience/android_frameworks_base/commit/9f420c23aca11058b5eca7f9f386f524c636f5f6,,,[RELATED][ANDROID][Power Saving Feature],[RELATED] [Add power saving option] [Allow disabling component] [Cool] [Android],[DO NOT ANALYZE],[Add power saving option] [Allow disabling component] [Cool] [Android] [Power Saving Feature],EXISTS,,,,,,,,,,,,,AOSP-Xperience/android_frameworks_base,nebkat,,,Dshoe,
AOSP-Xperience,android_frameworks_base,"Custom LED notification (1/2) Custom LED notification (1/2 framework) Change-Id: If0b0a70d495dae63bea7fe61940f7803b97514c1 Conflicts: core/java/android/provider/Settings.java services/java/com/android/server/NotificationManagerService.java Fix notification led regex typo Change-Id: I7bfeacf6d51a554063492adee58e9162086f36a1 Notification light(LED) settings: package mapping Credit for this code goes to Marko Mihovilic This commit allows for framework side override of the application package name set for Notification light led overrides. This is used in cases where the user selectable application sends its notifications via another package. Specifically: GTalk (com.google.android.talk) sends notifications via the Google services framework (com.google.android.gsf). Patch set 2 - fix derp and whitespace cleanup Patch set 4 - fixed another derp Patch set 5 - fixes typo in comment Patch set 6 - remove Log.d line Patch set 7 - allow specifying default values in application notification overrides Change-Id: I0c13ae3acefa0bcb4ffb46ea7eae301081d9f8f6 Conflicts: core/res/res/values/arrays.xml services/java/com/android/server/NotificationManagerService.java Fix custom LED values string Change-Id: I8c44ec327f752932d9200142a620d577b6850804 Add ""Pulse low battery light"" switch. Implements the framework portion of an optional ""Pulse low battery light"" switch, which allows the pulsing low battery LED to be disabled. The function and implementation of this switch is analogous to (and borrowed from) the ""Pulse notification light"" switch. This is motivated by devices (e.g., epicmtd) featuring a battery charging LED, where the LED does not support pulsing in hardware and relies on a kernel (CPU) timer to implement the pulse capability. On these devices, pulsing the LED requires waking the CPU from suspend on every LED on/off event, substantially reducing the proportion of time the CPU can suspend, and thus, substantially increasing power consumption. Therefore, when the these devices reach the low battery threshold, their power consumption, ironically, increases measurably in order to pulse the battery charging LED, which lowers battery life and increases the likelihood of a low-battery shutdown if the user cannot charge the device in a timely fashion. This switch allows the user to disable the pulsing low battery LED in order to maximize their low battery charge. Change-Id: I3a5c8938fd7c444c90b2af123e683982c614cd6e Conflicts: core/java/android/provider/Settings.java services/java/com/android/server/BatteryService.java Battery Light: Add ability to configure (Part 1 of 2) Adds Quiet hours support and ability to configure the led if the device supports multiple colors for the Light - enabled via overlay with default as 'false' Change-Id: I905dde400ba0780066f2b2a20142eaa27e158655 Conflicts: core/java/android/provider/Settings.java services/java/com/android/server/BatteryService.java Framework: Add Missed call and Voicemail to notification light settings (2/3) This commit adds the ability to store the configured missed call and voicemail light settings Requires Part 1 (Settings) and Part 3 (Phone) commits Change-Id: I726cbad5c0f9f7d4f84091eeb747c21567ce443e NotificationManagerService: Fix notification led bug We can assume that if the user turned the screen off while there was still an active notification then they wanted to keep the notification for later. In this case we shouldn't flash the notification light. The problem for some special notifications (such as missed calls) is that the screen is automatically turned on, and then when it is turned back off the led does not get enabled. For these notifications we use a flag to force the notification light even if the screen was turned off. Framework: Enable multi-user support for Notification light Change-Id: I4fb84fdb0c9e1592c2a421011c303a789cde8c8c",03/03/2013 03:56:06,,DUPLICATE,https://github.com/AOSP-Xperience/android_frameworks_base/commit/376f450c2add3dd0351bc747cdbcf0ad7dee3adf,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/AOSP-Xperience/android_frameworks_base/commit/9f420c23aca11058b5eca7f9f386f524c636f5f6],,[VERIFY] [https://github.com/AOSP-Xperience/android_frameworks_base/commit/9f420c23aca11058b5eca7f9f386f524c636f5f6],EXISTS,,,,,,,,,,,,,AOSP-Xperience/android_frameworks_base,nebkat,,,Dshoe,
arco,samsung-kernel-msm7x30,net: wireless: bcmdhd: Disable MAX power saving mode as disabled by Samsung,03/03/2013 06:26:45,,NOT-FOUND,https://github.com/arco/samsung-kernel-msm7x30/commit/7f6ce0087334901fdef452746bb523ddafac3d88,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,arco/samsung-kernel-msm7x30,,,,,
arco,samsung-kernel-msm7x30,net: wireless: bcmdhd: Disable MAX power saving mode as disabled by Samsung,03/03/2013 06:31:31,,DUPLICATE,https://github.com/arco/samsung-kernel-msm7x30/commit/42378ee2f14c1a3f23451580d5d1d6279a545903,,,,,,,EXISTS,,,,,,,,,,,,,arco/samsung-kernel-msm7x30,arco,,,arco,
Keff,samsung-kernel-msm7x30,net: wireless: bcmdhd: Disable MAX power saving mode as disabled by Samsung,03/03/2013 07:11:28,,DUPLICATE,https://github.com/Keff/samsung-kernel-msm7x30/commit/42378ee2f14c1a3f23451580d5d1d6279a545903,,,,,,,EXISTS,,,,,,,,,,,,,Keff/samsung-kernel-msm7x30,arco,,,arco,
snandlal,Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call,ontargets that support proximity sensors,there is an approximate spike in the current waveform in the order of1 Hz. Krait is woken up frequently by the sensors even when the Screen UIis off while in-call. This fix ensures that by disabling the listenerin such a scenario (In-Call + Screen UI turned off) there is no spikein power consumption",03/03/2013 07:26:41,,DUPLICATE,https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f,,,,[?] [different file from original] [VERIFY] [https://github.com/burstlam/android_packages_apps_Phone/commit/1e509fe6d08f66d7fab47e01c632a6bd181afb34],,[different file from original] [VERIFY] [https://github.com/burstlam/android_packages_apps_Phone/commit/1e509fe6d08f66d7fab47e01c632a6bd181afb34],EXISTS,,,,,,,,,,,,,snandlal/Phone,,,,snandlal,
CyanogenMod,android_device_samsung_n7100,Update notes for submitted changes * DeviceParts: S-Pen Power Saving Mode,03/03/2013 09:37:08,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_device_samsung_n7100/commit/feeab100b6f66475f3fff961caaa175e53af175b,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_samsung_n7100,nebkat,,,,
CyanogenMod,android_device_samsung_n7100,DeviceParts: S-Pen Power Saving Mode Change-Id: Iff65e5517f3f0e74c177ca88d4c0332a37f352b5,03/03/2013 09:37:09,,RELATED,https://github.com/CyanogenMod/android_device_samsung_n7100/commit/c1935baa9297523af64c2c0c57656ab543e5b182,,,[RELATED],[RELATED] [Add power saving menu] [Add power saving option] [Android],[DO NOT ANALYZE],[Add power saving menu] [Add power saving option] [Android],EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_samsung_n7100,nebkat,,,nebkat,
lolhi,at1-Kernel,msm: acpuclock-8x60: Optimize CPU voltages on 1.7GHz parts Hardware characterization shows that these parts can operate reliably at lower voltages than were previously used. Update the tables to take advantage of the power savings. Change-Id: I6aca2da89e343c1588579e7183a0ce375cb9a821 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>,03/03/2013 12:07:23,,DUPLICATE,https://github.com/lolhi/at1-Kernel/commit/28ab318e390608232eadd92bec6e66e1efc2f269,,,,[OK] [VERIFY],,[VERIFY],EXISTS,,,,,,,,,,,,,lolhi/at1-Kernel,,,,lolhi,
jihyun-kim,funeral,update power save mode V2.3,04/03/2013 01:33:30,,NOT-FOUND,https://github.com/jihyun-kim/funeral/commit/2fd53d99e91b49fc7f9283f628825ea424a17e65,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jihyun-kim/funeral,,,,,
JinTu,aerotools-ng,Added support for power consumption sensor configuration,04/03/2013 06:42:11,,FALSE-POSITIVE,https://github.com/JinTu/aerotools-ng/commit/15fb52949d8494df7f60d75c06916adaf655cceb,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Sensor],[DO NOT ANALYZE],[Sensor],EXISTS,,,,,,,,,,,,,JinTu/aerotools-ng,JinTu,,,JinTu,
wise-daniele,wiselib-6LoWPAN,A different data structure for ND: Network topology should not follow the physical connectivity for energy saving reasons (RFC 6550 sect 3.2.7),04/03/2013 15:01:28,,NOT-FOUND,https://github.com/wise-daniele/wiselib-6LoWPAN/commit/34ddc7da4a0696c3dd07ee1c26a19c334bfb8668,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,wise-daniele/wiselib-6LoWPAN,,,,,
HackRVA,rvasec-badge-2013,"I2C Accelerometer interface working Setup() now puts the accelerometer into active mode before finishing. The main loop, which is now a switch statement, will fall into a check_accel functions where I2C is used to interface with accelerometer to get the x,y, and z acceleration values. Note that these bytes are being interpretted correctly; the bit 6 is an alert bit and shouldn't be used in the value. Some of the other features in the accelerometer need to be explored, like tap detection, shake detection, and power saving features.",05/03/2013 03:40:01,,FALSE-POSITIVE,https://github.com/HackRVA/rvasec-badge-2013/commit/de34e5f3b235c16f4e4309eba0d39055d257bb93,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,HackRVA/rvasec-badge-2013,Morgan243,,,Morgan243,
SlimRoms,device_samsung_n7100,DeviceParts: S-Pen Power Saving Mode Change-Id: Iff65e5517f3f0e74c177ca88d4c0332a37f352b5,05/03/2013 12:43:01,,DUPLICATE,https://github.com/SlimRoms/device_samsung_n7100/commit/484a910b344cbfb22d882684b9f4a30e2a2b008f,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/device_samsung_n7100,nebkat,,,mnm9994u,
EmmanuelU,wild_kernel_htc_msm8660,doubleshot_defconfig: slightly adjust to be more power saving and rename to wildkernel,05/03/2013 23:20:09,,NOT-FOUND,https://github.com/EmmanuelU/wild_kernel_htc_msm8660/commit/e5c8bf32c017e8fe7cee5ff49b0f22db6dbd1959,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EmmanuelU/wild_kernel_htc_msm8660,,,,,
LiquidSmooth,android_device_samsung_n7100,DeviceParts: S-Pen Power Saving Mode Change-Id: Iff65e5517f3f0e74c177ca88d4c0332a37f352b5,05/03/2013 23:34:04,,NOT-FOUND,https://github.com/LiquidSmooth/android_device_samsung_n7100/commit/0a154059c25190a1f4dcb544a2a9114c9ee7e41b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LiquidSmooth/android_device_samsung_n7100,,,,,
Nebuleon,GameYob,Shut down the 3D hardware upon startup to save power.,07/03/2013 05:53:39,,OK,https://github.com/Nebuleon/GameYob/commit/8a8ca6abb7b39b6a69cd43c8000cb08db701d2ee,,,[OK][Disabling devices],[OK] [Disable component],[DO NOT ANALYZE],[Disable component] [Disabling devices],EXISTS,[Shut down the 3D hardware upon startup],[power saving],[Disabling device],[Disable device],,,Certain,3DS,No,Application,C++,Shut down the 3D hardware upon startup to save power.,Nebuleon/GameYob,Nebuleon,[Disabling feature/devices],,Nebuleon,Application
temasek,android_kernel_samsung_smdk4412,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",07/03/2013 09:28:01,,DUPLICATE,https://github.com/temasek/android_kernel_samsung_smdk4412/commit/96632263b5997352656893d48739719292b69189,,,,,,,EXISTS,,,,,,,,,,,,,temasek/android_kernel_samsung_smdk4412,AndreiLux,,,temasek,
EmmanuelU,wild_kernel_htc_msm8660,wireless: use PM_FAST over PM_MAX to save power when not needed,07/03/2013 12:34:37,,NOT-FOUND,https://github.com/EmmanuelU/wild_kernel_htc_msm8660/commit/9e03e212697e30afd4986b768b2f78126e566ae1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EmmanuelU/wild_kernel_htc_msm8660,,,,,
Team-Blackout,Blackout-Monarudo,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> modified for Mako from LKML reference Signed-off-by: faux123 <reioux@gmail.com>",07/03/2013 16:44:32,,DUPLICATE,https://github.com/Team-Blackout/Blackout-Monarudo/commit/73b2662548cfd5deaa26b20788923a41abad3972,,,[RELATED][NEW CPU STATE],[RELATED] [Add suspension state] [Add power state],[DO NOT ANALYZE],[Add suspension state] [Add power state] [NEW CPU STATE],EXISTS,,,,,,,,,,,,,Team-Blackout/Blackout-Monarudo,faux123,,,zarboz,
EmmanuelU,wild_kernel_htc_msm8660,wireless: use PM_FAST over PM_MAX to save power when not needed,08/03/2013 12:40:51,,NOT-FOUND,https://github.com/EmmanuelU/wild_kernel_htc_msm8660/commit/665d052b7c8f8c149a96229ef7ac6a48283b1789,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EmmanuelU/wild_kernel_htc_msm8660,,,,,
LaylConway,HeavyIndustry,Added power saving for metal roller.,08/03/2013 17:23:13,,NOT-FOUND,https://github.com/LaylConway/HeavyIndustry/commit/098c49c62a61d06d2cef1cf1d7facab1a0ba748c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LaylConway/HeavyIndustry,,,,,
dannomac,freebsd,"Bring over my initial work from the net80211 TX locking branch. This patchset implements a new TX lock, covering both the per-VAP (and thus per-node) TX locking and the serialisation through to the underlying physical device. This implements the hard requirement that frames to the underlying physical device are scheduled to the underlying device in the same order that they are processed at the VAP layer. This includes adding extra encapsulation state (such as sequence numbers and CCMP IV numbers.) Any order mismatch here will result in dropped packets at the receiver. There are multiple transmit contexts from the upper protocol layers as well as the ""raw"" interface via the management and BPF transmit paths. All of these need to be correctly serialised or bad behaviour will result under load. The specifics: * add a new TX IC lock - it will eventually just be used for serialisation to the underlying physical device but for now it's used for both the VAP encapsulation/serialisation and the physical device dispatch. This lock is specifically non-recursive. * Methodize the parent transmit, vap transmit and ic_raw_xmit function pointers; use lock assertions in the parent/vap transmit routines. * Add a lock assertion in ieee80211_encap() - the TX lock must be held here to guarantee sensible behaviour. * Refactor out the packet sending code from ieee80211_start() - now ieee80211_start() is just a loop over the ifnet queue and it dispatches each VAP packet send through ieee80211_start_pkt(). Yes, I will likely rename ieee80211_start_pkt() to something that better reflects its status as a VAP packet transmit path. More on that later. * Add locking around the management and BAR TX sending - to ensure that encapsulation and TX are done hand-in-hand. * Add locking in the mesh code - again, to ensure that encapsulation and mesh transmit are done hand-in-hand. * Add locking around the power save queue and ageq handling, when dispatching to the parent interface. * Add locking around the WDS handoff. * Add a note in the mesh dispatch code that the TX path needs to be re-thought-out - right now it's doing a direct parent device transmit rather than going via the vap layer. It may ""work"", but it's likely incorrect (as it bypasses any possible per-node power save and aggregation handling.) Why not a per-VAP or per-node lock? Because in order to ensure per-VAP ordering, we'd have to hold the VAP lock across parent->if_transmit(). There are a few problems with this: * There's some state being setup during each driver transmit - specifically, the encryption encap / CCMP IV setup. That should eventually be dragged back into the encapsulation phase but for now it lives in the driver TX path. This should be locked. * Two drivers (ath, iwn) re-use the node->ni_txseqs array in order to allocate sequence numbers when doing transmit aggregation. This should also be locked. * Drivers may have multiple frames queued already - so when one calls if_transmit(), it may end up dispatching multiple frames for different VAPs/nodes, each needing a different lock when handling that particular end destination. So to be ""correct"" locking-wise, we'd end up needing to grab a VAP or node lock inside the driver TX path when setting up crypto / AMPDU sequence numbers, and we may already _have_ a TX lock held - mostly for the same destination vap/node, but sometimes it'll be for others. That could lead to LORs and thus deadlocks. So for now, I'm sticking with an IC TX lock. It has the advantage of papering over the above and it also has the added advantage that I can assert that it's being held when doing a parent device transmit. I'll look at splitting the locks out a bit more later on. General outstanding net80211 TX path issues / TODO: * Look into separating out the VAP serialisation and the IC handoff. It's going to be tricky as parent->if_transmit() doesn't give me the opportunity to split queuing from driver dispatch. See above. * Work with monthadar to fix up the mesh transmit path so it doesn't go via the parent interface when retransmitting frames. * Push the encryption handling back into the driver, if it's at all architectually sane to do so. I know it's possible - it's what mac80211 in Linux does. * Make ieee80211_raw_xmit() queue a frame into VAP or parent queue rather than doing a short-cut direct into the driver. There are QoS issues here - you do want your management frames to be encapsulated and pushed onto the stack sooner than the (large, bursty) amount of data frames that are queued. But there has to be a saner way to do this. * Fragments are still broken - drivers need to be upgraded to an if_transmit() implementation and then fragmentation handling needs to be properly fixed. Tested: * STA - AR5416, AR9280, Intel 5300 abgn wifi * Hostap - AR5416, AR9160, AR9280 * Mesh - some testing by monthadar@, more to come.",08/03/2013 20:30:34,,FALSE-POSITIVE,https://github.com/dannomac/freebsd/commit/291b1e246959b07286d746968d490efe50a46b8b,https://github.com/dankm/freebsd/commit/291b1e246959b07286d746968d490efe50a46b8b,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,dannomac/freebsd,,,,,
semaphor,w61-webdisplay,"added a script for turning on and off the hdmi output, so screen can go into power saving mode.",10/03/2013 07:40:27,,RELATED,https://github.com/semaphor/w61-webdisplay/commit/c142fc528309003ab0f9f52d9ac1900f3572c99c,,,[OK][Disabling devices],[OK] [Disable component] [Disable device],[DO NOT ANALYZE],[Disable component] [Disable device] [Disabling devices],EXISTS,,,[REVIEW] [Disable device to allow power saving] [Disable component] [Disable device] [Script],,,,,?,No,Script,,"added a script for turning on and off the hdmi output, so screen can go into power saving mode.",semaphor/w61-webdisplay,semaphor,,,semaphor,Script
niker,EliteKernel-Blade-Rebase,"Clean merge with EliteKernel, Extreme Power Saving 50% done",11/03/2013 21:47:00,,UNABLE-TO-CATEGORIZE,https://github.com/niker/EliteKernel-Blade-Rebase/commit/42588ff8b783d90c4c8f9bcdcb067be58e715bc6,,,[Unable to categorize],[UNABLE-TO-CATEGORIZE] [Giga commit],[DO NOT ANALYZE],[Giga commit],EXISTS,,,,,,,,,,,,,niker/EliteKernel-Blade-Rebase,,,,,
niker,EliteKernel-Blade-Rebase,"Extreme Power Saving - Min/max freq done, 75% completed",11/03/2013 22:46:00,,OK,https://github.com/niker/EliteKernel-Blade-Rebase/commit/3fb9a6f33b37c77c2f7259f1524a1d0dfd45ab9e,,,[OK][Scale CPU Freq],[OK] [Scale CPU frequency] [Limit frequency] [Android-Kernel?],[DO NOT ANALYZE],[Scale CPU frequency] [Limit frequency] [Android-Kernel?] [Scale CPU Freq],EXISTS,,[Extreme Power Saving],[Scale CPU frequency] [Reduce max/min frequency],[DVFS],,,Certain,Android,No,OS,C,"Extreme Power Saving - Min/max freq done, 75% completed",niker/EliteKernel-Blade-Rebase,,[Frequency and voltage scaling],,,Kernel arch
niker,EliteKernel-Blade-Rebase,"Extreme Power Saving completed, tests will follow",11/03/2013 23:03:47,,UNABLE-TO-CATEGORIZE,https://github.com/niker/EliteKernel-Blade-Rebase/commit/87a719ac29b1797e4856f8134e11722fe04c4f74,,,[OK][?][DVFS],[?] [OK] [Partial: 3fb9a6f33b37c77c2f7259f1524a1d0dfd45ab9e] [Android-Kernel?],[DO NOT ANALYZE],[OK] [Partial: 3fb9a6f33b37c77c2f7259f1524a1d0dfd45ab9e] [Android-Kernel?] [?] [DVFS],EXISTS,,,,,,,,,,,,,niker/EliteKernel-Blade-Rebase,,,,,
nfi,contiki,* Changed TXPOWER configuration to only accept values between CC2520_TXPOWER_MIN and CC2520_TXPOWER_MAX (0-8) to ensure only recommended tx power values are used in the radio. Any other value might cause high energy consumption and poor performance. * Corrected the initial configuration to work better with normal usage.,12/03/2013 12:27:07,,OK,https://github.com/nfi/contiki/commit/8474151f1965c626c84c17d298a90cb4887ec35e,,,[OK][LIMITING BANDWIDTH CONF],[OK] [Limit configuration options],[OK] [CONFIG],[Limit configuration options] [LIMITING BANDWIDTH CONF] [CONFIG],EXISTS,[Only accepted recommended tx power values],[other value might cause high energy consumption and poor performance.],[Limit configuration options] [Limit options to work within operational bounds],[Limit options to operational bounds],,,Certain,ContikOs,No,OS,C,Changed TXPOWER configuration to only accept values between   CC2520_TXPOWER_MIN and CC2520_TXPOWER_MAX (0-8) to ensure only recommended tx power values are used in the radio. Any other value might cause high energy consumption and poor performance.,nfi/contiki,nfi,[Miscellaneous],,nfi,Embedded OS/Kernel
des-testbed,Ara-Sim,removed battery attribute from class ARA and added NIC energy consumption parameters in NED file,12/03/2013 15:32:54,,NOT-FOUND,https://github.com/des-testbed/Ara-Sim/commit/2032826563caab02e4e4d9866b862cf6c19d0200,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,des-testbed/Ara-Sim,,,,,
TheWhisp,android_kernel_samsung_msm7x27a,"msm_fb: display: no early suspend for writeback panel Writeback panel is not real physical panel and no power consumption concern, so it is removed from early suspend registration to avoid open fb2 error during suspend/resume. CRs-fixed: 371137 Signed-off-by: Huaibin Yang <huaibiny@codeaurora.org> (cherry picked from commit efb6c143ea951dab6dc72586100999d5b94c1c8d) Conflicts: drivers/video/msm/msm_fb.c Change-Id: I004cd5f80bf200bb29b992b0fd445e3b7d2f1e35 Signed-off-by: Ramakrishna Prasad N <crpn@codeaurora.org>",12/03/2013 15:59:47,,FALSE-POSITIVE,https://github.com/TheWhisp/android_kernel_samsung_msm7x27a/commit/b84def4f6d745d4cb13568713f2d436981032ce8,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,TheWhisp/android_kernel_samsung_msm7x27a,,,,TheWhisp,
CarbonDev,android_device_samsung_t0ltecdma,DeviceParts: S-Pen Power Saving Mode Change-Id: Iff65e5517f3f0e74c177ca88d4c0332a37f352b5,12/03/2013 17:03:08,,DUPLICATE,https://github.com/CarbonDev/android_device_samsung_t0ltecdma/commit/f3cc4a64335bacb835ee22bd7b7ea18c96048655,,,,,,,EXISTS,,,,,,,,,,,,,CarbonDev/android_device_samsung_t0ltecdma,nebkat,,,slickrick,
CarbonDev,android_device_samsung_t0lte,DeviceParts: S-Pen Power Saving Mode Change-Id: Iff65e5517f3f0e74c177ca88d4c0332a37f352b5,12/03/2013 17:04:52,,DUPLICATE,https://github.com/CarbonDev/android_device_samsung_t0lte/commit/20d4535abe70e10e66a59e424e7ee83cde968f69,,,,,,,EXISTS,,,,,,,,,,,,,CarbonDev/android_device_samsung_t0lte,nebkat,,,slickrick,
niker,EliteKernel-Blade-Rebase,"smartmax tuning, power saving bugfix, LED duration multiplier port",12/03/2013 18:44:49,,OK,https://github.com/niker/EliteKernel-Blade-Rebase/commit/1f0b1b21a6a9fa0dceca915d89b7e2bb2d1d52c8,,,[OK][DVFS],[OK] [Bug fix],[DO NOT ANALYZE],[Bug fix] [DVFS],EXISTS,[power saving bugfix],,[REVIEW] [scale cpu frequency] [configure governor],[DVFS] [Energy bug],,,Certain,Android,Yes,OS,C,"smartmax tuning, power saving bugfix, LED duration multiplier port",niker/EliteKernel-Blade-Rebase,,[Energy bug],,,Driver cpufreq
niker,EliteKernel-Blade-Rebase,Power Saving QOS cleaner code,13/03/2013 01:09:26,,OK,https://github.com/niker/EliteKernel-Blade-Rebase/commit/2b83ad5fd21641e78899e9d10e97dad778531ff0,,,[OK][Scaling CPU FREQ],[OK] [Scale CPU frequency] [Limit frequency] [Enable power saving mode],[DO NOT ANALYZE],[Scale CPU frequency] [Limit frequency] [Enable power saving mode] [Scaling CPU FREQ],EXISTS,[Power Saving QOS cleaner code],[power saving],[REVIEW] [Increase frequency slower/decrease faster] [Scale CPU frequency],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,OS,C,Power Saving QOS cleaner code,niker/EliteKernel-Blade-Rebase,,[Frequency and voltage scaling],,,Driver cpufreq
parheliamm,i939u2,mmc: core: put eMMC in sleep (cmd5) mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend to minimize power consumption. thx to cattleprod,13/03/2013 07:12:07,,DUPLICATE,https://github.com/parheliamm/i939u2/commit/b52244c03da51757c7545e0ad1183cba55eb127d,,,,,,,EXISTS,,,,,,,,,,,,,parheliamm/i939u2,simone201,,,,
temasek,android_kernel_samsung_smdk4412,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",13/03/2013 08:22:05,,NOT-FOUND,https://github.com/temasek/android_kernel_samsung_smdk4412/commit/013b327ef0087d00308037ecf8977cdc846643de,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,temasek/android_kernel_samsung_smdk4412,,,,,
Blechd0se,jordan-kernel,cpufreq: interactive: Add a knob to treat IO wait as busy The new sysfs node io_is_busy enables the interactive governor to account any time spent by the CPU waiting for IO as non-idle time. This helps us improve run-time of IO bound tasks by making up for lost IO time in speeding up the CPU bound parts of the task. This also introduces get_cpu_iowait_time_us() and all relevant code parts of it. Furthermore improved interactive to be smooth and power efficient.,13/03/2013 22:14:43,,UNABLE-TO-CATEGORIZE,https://github.com/Blechd0se/jordan-kernel/commit/20c0d27e409173ecf8dd6635c684043f687b8be8,,,[RELATED][New GOVERNOR FEATURE],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[New GOVERNOR FEATURE],EXISTS,,,,,,,,,,,,,Blechd0se/jordan-kernel,Blechd0se,,,Blechd0se,
milaq,android_device_lge_p940,wifi: lower idle rescan interval we're consuming power via a held wakelock either way and bcmdhd is rather power efficient,14/03/2013 16:05:57,,FALSE-POSITIVE,https://github.com/milaq/android_device_lge_p940/commit/fb3fde291c16913177eaedc7bf3c1fa606b34950,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,milaq/android_device_lge_p940,milaq,,,milaq,
whirleyes,pt3,experimental stuff - add power management support. - auto suspend request. - approx. 0.5Watt power saving???,15/03/2013 06:10:26,,NOT-FOUND,https://github.com/whirleyes/pt3/commit/36e96de674d22292bd8c901f02cb811b7cfd547c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,whirleyes/pt3,,,,,
whirleyes,pt3,experimental stuff - add power management support. - auto suspend request. - approx. 0.5Watt power saving???,15/03/2013 06:19:23,,NOT-FOUND,https://github.com/whirleyes/pt3/commit/36b7c370eb9f75f4ce5f5f3426e9849dd4e16ab1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,whirleyes/pt3,,,,,
fentensoft,kernel_xt701,cpufreq: interactive: Add a knob to treat IO wait as busy The new sysfs node io_is_busy enables the interactive governor to account any time spent by the CPU waiting for IO as non-idle time. This helps us improve run-time of IO bound tasks by making up for lost IO time in speeding up the CPU bound parts of the task. This also introduces get_cpu_iowait_time_us() and all relevant code parts of it. Furthermore improved interactive to be smooth and power efficient.,15/03/2013 14:05:51,,DUPLICATE,https://github.com/fentensoft/kernel_xt701/commit/7f2a232e017889f83cae3832ee988597219ede8b,,,,,,,EXISTS,,,,,,,,,,,,,fentensoft/kernel_xt701,fentensoft,,,fentensoft,
niker,EliteKernel-Blade-Rebase,Mpdec finally working for sleep+audio+power saving,15/03/2013 16:35:22,,FALSE-POSITIVE,https://github.com/niker/EliteKernel-Blade-Rebase/commit/4b9909e9ce032fb813ffa7336230f6c087dd69c7,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,niker/EliteKernel-Blade-Rebase,,,,,
thomastsai,rt-thread,"[WKUP1]PA0 is a WKUP1 key, 10K pull down and 10K pull high. active high. CPU enter standby mode by pressing 500 ticks. CPU leaves standby mode by WKUP1 rising edge. [idle]rt_thread_idle_sethook(cpu_sleep) to setup cpu sleep hook in idle thread to save power when no threads are running. idle thread is a lowest thread.",16/03/2013 18:21:20,,OK,https://github.com/thomastsai/rt-thread/commit/22c51967784298e2cbeee3798e27def1fd0f8f3a,,,[?][Go to idle],[OK] [Giga commit] [Go to idle],[DO NOT ANALYZE],[Giga commit] [Go to idle],EXISTS,[setup cpu sleep hook in idle thread],[save power when no threads are running. idle thread is a lowest thread],[Go to sleep] [Sleep on idle],[Go to low power],,,Certain,Embedded OS rt-thread,No,Application,C,[idle]rt_thread_idle_sethook(cpu_sleep) to setup cpu sleep hook in idle thread to save power when no threads are running. idle thread is a lowest thread.,thomastsai/rt-thread,thomastsai,[Low power idling],,thomastsai,Application system !
psydev,OpenRA,Tower adjustments ATWR HP reduced from 800 to 600 ATWR power consumptions inreased from 20 to 30 Increased sight range of towers to match their range.  Silo moved over in build queue,17/03/2013 03:47:26,,FALSE-POSITIVE,https://github.com/psydev/OpenRA/commit/bb3165428948853e5ce208ea875e668b6bafe7ba,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[DO NOT ANALYZE],[Game],EXISTS,,,,,,,,,,,,,psydev/OpenRA,,,,,
EmmanuelU,wild_kernel_htc_msm8660,wireless: use PM_FAST over PM_MAX to save power when not needed,17/03/2013 03:57:43,,NOT-FOUND,https://github.com/EmmanuelU/wild_kernel_htc_msm8660/commit/9605f2a5b6cf872faa5cb1c9d22e64a9650ee4bc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EmmanuelU/wild_kernel_htc_msm8660,,,,,
Team-Blackout,Blackout-Monarudo,msm: kgsl: Remove lowest power level The lowest power level does not correspond to significant power savings as the whole system doesn't drop to SVS voltage. Performace is improved without this level for serialized test cases. Signed-off-by: Lucille Sylvester <lsylvest@codeaurora.org> (cherry picked from commit c8404a799a26f0744d3965822160c7b05b8d33d7) Change-Id: Ie349451ffcd82f159eb4d25ad0b986b38f817ede Signed-off-by: Sivasri Kumar Vanka <sivasri@codeaurora.org>,17/03/2013 07:30:44,,TRADEOFF,https://github.com/Team-Blackout/Blackout-Monarudo/commit/ed0c17410b24d265d2d1180351fc5adac4a49932,,,[OK][Removing feature],[TRADEOFF] [Remove lowest power level] [Android],[DO NOT ANALYZE],[Remove lowest power level] [Android] [Removing feature],EXISTS,[Remove lower power state],[Increase performance],,,,Not significant,Certain,Android,No,Kernel,C,,Team-Blackout/Blackout-Monarudo,,Performance,,zarboz,Kernel arch
Team-Blackout,Blackout-Monarudo,msm: kgsl: Remove lowest power level The lowest power level does not correspond to significant power savings as the whole system doesn't drop to SVS voltage. Performace is improved without this level for serialized test cases. Signed-off-by: Lucille Sylvester <lsylvest@codeaurora.org> (cherry picked from commit c8404a799a26f0744d3965822160c7b05b8d33d7) Change-Id: Ie349451ffcd82f159eb4d25ad0b986b38f817ede Signed-off-by: Sivasri Kumar Vanka <sivasri@codeaurora.org>,17/03/2013 08:09:12,,DUPLICATE,https://github.com/Team-Blackout/Blackout-Monarudo/commit/2c05e4611fb795c227ae5fa4b40d38e679ae7bb2,,,,,,,EXISTS,,,,,,,,,,,,,Team-Blackout/Blackout-Monarudo,,,,zarboz,
TeamFahQ,vendor_lz-kernel,Updated tweaks prop to build.prop2 (Must rename it to build.prop(2) manually after compiling). Changed ro.ril.disable.power.collapse to 0 for power saving options,17/03/2013 15:45:58,,NOT-FOUND,https://github.com/TeamFahQ/vendor_lz-kernel/commit/e50c349567c6554951b69662a81744ee17238b53,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamFahQ/vendor_lz-kernel,,,,,
djintrigue808,android_kernel_samsung_smdk4412,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,19/03/2013 06:06:24,,NOT-FOUND,https://github.com/djintrigue808/android_kernel_samsung_smdk4412/commit/80b0d5c1d7117e4bf3a0994689d111ae0277f57e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,djintrigue808/android_kernel_samsung_smdk4412,,,,,
dvhexer,mako,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org>,19/03/2013 15:03:21,,DUPLICATE,https://github.com/dvhexer/mako/commit/cd92faa44a032782b6ecaa42ba40597bc3c92d38,,,,,,,EXISTS,,,,,,,,,,,,,dvhexer/mako,,,,zyonee,
simphax,Touchmote,Added power saver mode.,19/03/2013 21:17:44,,RELATED,https://github.com/simphax/Touchmote/commit/1537c8e78805a13cb4bc7998115a0c1f183381a0,,,[RELATED],[RELATED] [Add power save mode],[DO NOT ANALYZE],[Add power save mode],EXISTS,,,,,,,,,,,,,simphax/Touchmote,simphax,,,simphax,
paxelito,SENSOR,Energy efficiency drop has been almost implemented,19/03/2013 22:37:15,,FALSE-POSITIVE,https://github.com/paxelito/SENSOR/commit/578f0b6df9ca326cf3444f34808b83abdd59680c,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Technologies energy efficiency],[FALSE-POSITIVE],[Technologies energy efficiency],EXISTS,,,,,,,,,,,,,paxelito/SENSOR,,,,,
desalesouche,kernel_huawei_u8220,mmc:core:put eMMC in sleep (cmd5) mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend to minimize power consumption. Signed-off-by: Balaji T K <balajitk@ti.com> Acked-by: Venkatraman S <svenkatr@ti.com> Signed-off-by: Chris Ball <cjb@laptop.org> Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org> (cherry picked from commit 3765839) Change-Id: I0c0d5d06c4204b15471d1ca95aec0c7fcaaae816 Signed-off-by: Shruthi Krishna <skrish@codeaurora.org>,20/03/2013 01:38:05,,DUPLICATE,https://github.com/desalesouche/kernel_huawei_u8220/commit/432a8eb8c9b2ec28f6cde06aa701b5a8a9e54b4c,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad] [original:OK],,[VERIFY] [https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad] [original:OK],EXISTS,,,,,,,,,,,,,desalesouche/kernel_huawei_u8220,,,,,
Team-Blackout,Blackout-Monarudo,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org>",21/03/2013 05:43:48,,DUPLICATE,https://github.com/Team-Blackout/Blackout-Monarudo/commit/6f7f0605156f339765317c84798b4fc006b2ee25,,,,,,,EXISTS,,,,,,,,,,,,,Team-Blackout/Blackout-Monarudo,,,,zarboz,
desalesouche,kernel_huawei_u8220,cpuidle:menu:fixed wrapping timers at 4.294 seconds Cpuidle menu governor is using u32 as a temporary datatype for storing nanosecond values which wrap around at 4.294 seconds. This causes errors in predicted sleep times resulting in higher than should be C state selection and increased power consumption. This also breaks cpuidle state residency statistics. cc: stable@kernel.org # .32.x through .39.x Signed-off-by: Tero Kristo <tero.kristo@nokia.com> Signed-off-by: Len Brown <len.brown@intel.com>,22/03/2013 17:48:48,,OK,https://github.com/desalesouche/kernel_huawei_u8220/commit/13549799684cbf29200fc183529bcf9de9a33622,,,[OK][Fix CPU intensive code],[OK] [Bug fix] [Fix numerical overflow] [Cool],[DO NOT ANALYZE],[Bug fix] [Fix numerical overflow] [Cool] [Fix CPU intensive code],EXISTS,[Fix timer overflow],[errors in predicted sleep times],[Fix numerical overflow],[Energy bug],,Cool,Certain,Android,Yes,OS,C,Cpuidle menu governor is using u32 as a temporary datatype for storing nanosecond values which wrap around at 4.294 seconds. This causes errors in predicted sleep times resulting in higher than should be C state selection and increased power consumption.,desalesouche/kernel_huawei_u8220,,[Energy bug],,,Driver
k2sports,power_reviews,* save power reviews feed to file,22/03/2013 18:14:48,,FALSE-POSITIVE,https://github.com/k2sports/power_reviews/commit/96e128f96692814bf67f0d1859607313af21dd20,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,k2sports/power_reviews,Phiction,,,Phiction,
visit1985,dot-files,new alias 'calc' changed power saving setting for monitor,23/03/2013 11:29:01,,OK,https://github.com/visit1985/dot-files/commit/2131ca5d6e6022bd2dffa4c365490d1adb3db783,,,[OK][Monitor power saving],[OK] [Configure display power saving],[DO NOT ANALYZE],[Configure display power saving] [Monitor power saving],EXISTS,[Set dpms inactivity timeout],[power saving],[Enable monitor inacitivity timeout] [Script] [Config],[Add timeout] [Sub1: Disable device],,,Certain,Personal config files?,No,Libraries and Utilities,init.rc,changed power saving setting for monitor,visit1985/dot-files,visit1985,[Timing out],,visit1985,Script init.rc
dorimanx,initramfs3,"OOM fixe to allow smooth RAM MNG + horrable mistake fix! *we have auto adj code, so we must not allow any access to adj file. *fixed init service was marked as KILL NOW! oom_score_adj = 1000 is oom_adj = 15 highes OOM selected to be killed! this was my mistake :( *tuned oom_kill_allocating_task to be ON with screen on and off when screen off to save power. now after long test OOM working GREAT! no more lags and no SODS.",23/03/2013 18:29:38,,OK,https://github.com/dorimanx/initramfs3/commit/6a8172c80617c240afdeb1d07c9b0c396473e706,,,[OK][Disabling devices],[OK] [Disable component] [Disable component on screen off] [Power saving action on screen off],[DO NOT ANALYZE],[Disable component] [Disable component on screen off] [Power saving action on screen off] [Disabling devices],EXISTS,[tuned oom_kill_allocating_task to be ON with screen on and off when screen off],[save power],[Power saving action on screen off] [Disable component] [Script] [Config],[Disable feature] [Condition: screen off],,,Certain,Android,No,Libraries and Utilities,init.rc,tuned oom_kill_allocating_task to be ON with screen on and off when screen off to save power.,dorimanx/initramfs3,dorimanx,[Disabling feature/devices],[screen off],dorimanx,Script init.rc
PRJosh,Mako,"msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> (cherry picked from commit d27ca4a7526a890f9d2979acefda3561e49d2e66) Signed-off-by: Sudhir Sharma <sudsha@codeaurora.org> (cherry picked from commit 3af7249c36ab53923fdf216df3b3ba2c7f847851) Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",24/03/2013 02:02:37,,NOT-FOUND,https://github.com/PRJosh/Mako/commit/014714261b1dbb130969b3b789f220e9b57b9109,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,PRJosh/Mako,,,,,
mrg666,android_kernel_shooter,"backport mach-msm/hotplug updates from codeaurora msm-3.4 kernel ARM: msm: convert logical CPU numbers to physical numbers This patch uses the new cpu_logical_map() macro for converting logical CPU numbers into physical numbers when dealing with the pen_release variable in the SMP boot and CPU hotplug paths. Tested-and-acked-by: David Brown <davidb@codeaurora.org> Signed-off-by: Will Deacon <will.deacon@arm.com> _____________ msm: hotplug: Support cpu hotplug in no PM cases Add support for hotplug operations to take secondary CPUs online/offline when CONFIG_PM is turned off. Change-Id: Iae591f7307a3ea574e3f512714a08da23bcf069b Signed-off-by: Sathish Ambley <sambley@codeaurora.org> _____________ msm: pm-8x60: Move hotplug related code out of pm code. Move hotplug related code into hotplug.c and compile hotplug.c only when CONFIG_HOTPLUG_CPU is defined. Signed-off-by: Mahesh Sivasubramanian <msivasub@codeaurora.org> Change-Id: Ia9aa7a64e9831f52431c77c22f30fb64892efaea ______________ msm: qdss: CP14 based save and restore of debug and trace registers Accessing Krait debug registers from memory mapped interface requires qdss_pclkdbg_clk and qdss_h_clk clocks apart from the ETM clock. This means either: 1. requesting or releasing qdss clocks for every save and restore or 2. leaving the qdss clocks on all the time or 3. using the CP14 interface which is based on just the ETM clock and doesn't require the qdss clocks We choose to use CP14 interface to avoid the pitfalls for 1. and 2. above. Moreover, we make the save-restore autodetect the debug and trace architecture and do the needful based on it and hence consolidate the code for 8660 and 8960. Change-Id: If2a383e6f755c9ed893031966fa7ef6de41a5699 Signed-off-by: Pratik Patel <pratikp@codeaurora.org> ___________________ msm: move pm and cpuidle to machine include directory Some drivers need to know if a cpu exited out from a idle sleep. Move the cpuidle.h which contains prototypes for the notifier registration and pm.h which contains the sleep state definitions to include/mach. The drivers interested in knowing exit and entry in to idle states need to register with the notifier using msm_cpuidle_register_notifier. Change-Id: I204860313a57840c32f2256bd8682eafe678dad8 Signed-off-by: Abhijeet Dharmapurikar <adharmap@codeaurora.org> _________________ ARM: 7293/1: logical_cpu_map: decouple CPU mapping from SMP It turns out that the logical CPU mapping is useful even when !CONFIG_SMP for manipulation of devices like interrupt and power controllers when running a UP kernel on a CPU other than 0. This can happen when kexecing a UP image from an SMP kernel. In the future, multi-cluster systems running AMP configurations will require something similar for mapping cluster IDs, so it makes sense to decouple this logic in preparation for this support. Acked-by: Yang Bai <hamo.by@gmail.com> Acked-by: Marc Zyngier <marc.zyngier@arm.com> Reported-by: Joerg Roedel <joerg.roedel@amd.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ________________________ msm: pm: Move pm.h back into ""mach-msm"" from ""mach-msm/include/mach"" APIs in this header are no longer needed outside of mach-msm. Move the header out of include/mach to discourage use of it in device drivers. Change-Id: Id87eab2c909d01e4146d79d62f9c61a80e66fd64 Signed-off-by: Matt Wagantall <mattw@codeaurora.org> __________________ msm: pm-8x60: Expose additional APIs through pm.h The following two non-static APIs should be exposed in a header file but are not. Fix this. When the pm-8x60 driver is not used, use stubs in their place that always return success. int msm_pm_wait_cpu_shutdown(unsigned int cpu) bool msm_pm_verify_cpu_pc(unsigned int cpu) msm_pm_set_rpm_wakeup_irq(unsigned int irq) is also specific to the pm-8x60 driver, so stub it out for targets without pm-8x60, too. Change-Id: I257a458a7e435b5cbc3b058a9fb245ea8704ca1a Signed-off-by: Matt Wagantall <mattw@codeaurora.org> ________________ msm: hotplug: Wait for power collapse completion in platform_cpu_kill() Call msm_pm_wait_cpu_shutdown() to wait for the CPU to be fully power-collapsed before returning from platform_cpu_kill(). This is necessary to prevent CPU_DEAD and CPU_DEAD_FROZEN notifiers from executing until the CPU is fully collapsed. Otherwise, some drivers may turn off hardware resources before it is safe to do so. For example, acpuclock-8960's hotplug handler turns off CPU clocks as part of CPU_DEAD. If this happens before the collapse is complete, it may result in a hang. The call to msm_pm_wait_cpu_shutdown() will return immediately for hotplugs that do not involve power-collapse and therefore has no impact for those scenarios. Change-Id: I88bf28f01fb02ad7dfcb8234c745570e5085585a Signed-off-by: Matt Wagantall <mattw@codeaurora.org> _________________ msm: hotplug: support hotplug with wfi only power collapse Currently the pen_release is not set to -1 after we return from msm_pm_cpu_enter_lowpower. This doesn't happen when we actually power collapse, but it does when we only wfi. This will cause the next hotplug attempt to fail and crash the system, as the cpu comes up when the system is not expecting it. Fix this by explicitly setting the pen_release when we wake up in this manner. Change-Id: Ib39c406091412b04510df5de660fd6346763f2b8 Signed-off-by: Jeff Ohlstein <johlstei@codeaurora.org> _____________ msm: hotplug/platsmp: Fix cpu invaldation pointer arithmetic These functions take two void pointers indicating where to start and end the invalidation and cache flush. The pointer arithmetic is considering the pen_release pointer as an int pointer so adding sizeof(pen_release) is adding 16 bytes to the pointer and specifying that as the end. This inadvertently invalidates data next to the pen_release variable which could be bad. Fix the pointer math to only invalidate or clean the region for the pen_release variable. Change-Id: If0cf0e5de7c9f4b8c70662b29957a1f347809124 Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> ________________ msm: smp: Remove WFE/SEV from secondary core bootup During the cold boot path once the secondary core is released out of reset we keep looping for the pen release variable. The wfe+sev in this path are just unnecessary as they provide negligible power savings, and the latency cost is not worth it. During the hotplug path the secondary core will be in wfi and only an interrupt will be able to bring the core out. Removing the wfe effectively lowers the hotplug latency. Change-Id: Ic54636ceafb8abf3b6733e5699733543d64776d5 Signed-off-by: Taniya Das <tdas@codeaurora.org> ___________________ msm: hotplug: Change the pen variable in one place Other WFI based hotplug implementations set the pen variable to -1 in C code and do the appropriate flushing operations in one location. They also don't try to invalidate the cache on a spurious wakeup and report how many spurious wakeups there were. Let's do the same in our code so that we can remove our dependence on the dmac_{inv,flush}_range() functions (which are no longer upstream) and easily report spurious wakeups to the kernel logs. This does delay the time we set the pen back to its default value, but that doesn't actually matter because generic ARM hotplug code already waits for a completion before continuing. Change-Id: Ic36fbf744fe8abeda20ad9859a207b5e37c5e63c Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>",24/03/2013 02:33:30,,FALSE-POSITIVE,https://github.com/mrg666/android_kernel_shooter/commit/87a6e08f0e801819e34665a502a49a5c988a3bef,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,mrg666/android_kernel_shooter,mrg666,,,mrg666,
CyanogenMod,android_device_samsung_i9305,"Revert ""Update power profile to match stock values"" This should not have been merged. Samsung is NOTORIOUS for screwing up power_profile - we've seen tuna power_profile values on Exynos devices as an example. Among the obvious problems with the commit that is being reverted: Missing 1.4 and 1.6 GHz entries on a device that supports operation at those frequencies. Missing cpu.awake value to handle wakelock power calculation (this was added a long time ago by one of the CM maintainers, prior to the file being forked and copied to multiple repos). Power consumption values for frequencies between 200 and 1200 MHz that match the profile entries for Exynos 4210 EXACTLY, despite the fact that the Exynos 4210 is built on a 45nm process and the 4412 was built using a 32nm process (consumes less power). This reverts commit d76e08813ff4cefbc7b00b7c077d3b29804f1cd2 Change-Id: I4b42df70593ff4a7175c0e5acb022da2934c7b7e",24/03/2013 10:02:44,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_device_samsung_i9305/commit/850c4689e0ec222f2739ec75425e4f6a2e1f490e,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Android],[DO NOT ANALYZE],[Android],EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_samsung_i9305,Entropy512,,,,
kmark,Captain,Drastically improved power efficiency by not repeating CDT messages,25/03/2013 02:45:54,,OK,https://github.com/kmark/Captain/commit/f82d0d327119b2c50a312261cf2b56649feaff0f,,,[OK][not repeating CDT messages],[OK] [Avoid sending unnecessary message] [Preempt action if no change],[DO NOT ANALYZE],[Avoid sending unnecessary message] [Preempt action if no change] [not repeating CDT messages],EXISTS,[do not repeat CDT message],[improved power efficiency],[Avoid sending unnecessary message] [Avoid unnecessary work],[Do not send repeated data],,,Certain,Arduino,No,Application,C++,Drastically improved power efficiency by not repeating CDT messages,kmark/Captain,kmark,[Avoid unnecessary work],,kmark,Arduino application
task650,underwear_kernel_d2_4.2,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",25/03/2013 22:55:00,,NOT-FOUND,https://github.com/task650/underwear_kernel_d2_4.2/commit/6ed51ff2e96d452a07bf03637a679cccb28d6a94,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,task650/underwear_kernel_d2_4.2,,,,,
faux123,mako,"sched: Create sched_select_non_idle_cpu() to give preferred CPU for power saving In order to save power, it would be useful to schedule light weight work on cpus that aren't IDLE instead of waking up an IDLE one. By idle cpu (from scheduler's perspective) we mean: - Current task is idle task - nr_running == 0 - wake_list is empty This is already implemented for timers as get_nohz_timer_target(). We can figure out few more users of this feature, like workqueues. This patch converts get_nohz_timer_target() into a generic API sched_select_non_idle_cpu() so that other frameworks (like workqueue) can also use it. This routine returns the cpu which is non-idle. If the local CPU isn't idle OR all cpus are idle, local cpu is returned back. If local cpu is idle, then we must look for another CPU which isn't idle. This patch reuses the code from get_nohz_timer_target() routine, which had similar implementation. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>",26/03/2013 06:52:30,,OK,https://github.com/faux123/mako/commit/afb029d6fef136b9fbf2fbb8404a1598dc1604e9,,,[RELATED][ schedule light weight work ],[RELATED] [Use non-idle core] [Android],[DO NOT ANALYZE],[Use non-idle core] [Android] [ schedule light weight work ],EXISTS,[schedule light weight work on cpus that aren't IDLE instead of waking up an IDLE one.],[In order to save power],,[Core assignment],,,Certain,Android,No,OS,Ino,,faux123/mako,Viresh Kumar,[Miscellaneous],,faux123,Kernel
x0xhellx0x,android_kernel_samsung_d2,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",26/03/2013 12:11:21,,DUPLICATE,https://github.com/x0xhellx0x/android_kernel_samsung_d2/commit/2f661a226ce10bf0d71b08f39beadc9478a1937a,,,,,,,EXISTS,,,,,,,,,,,,,x0xhellx0x/android_kernel_samsung_d2,,,,x0xhellx0x,
AOKP,kernel_samsung_d2,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Signed-off-by: Matt Wagantall <mattw@codeaurora.org> Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793",26/03/2013 13:20:31,,UNABLE-TO-CATEGORIZE,https://github.com/AOKP/kernel_samsung_d2/commit/7acf591209f9d06fe60dafa026fa9fbc80912245,,,[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,AOKP/kernel_samsung_d2,,,,,
CarbonDev,android_device_samsung_i9305,"Revert ""Update power profile to match stock values"" This should not have been merged. Samsung is NOTORIOUS for screwing up power_profile - we've seen tuna power_profile values on Exynos devices as an example. Among the obvious problems with the commit that is being reverted: Missing 1.4 and 1.6 GHz entries on a device that supports operation at those frequencies. Missing cpu.awake value to handle wakelock power calculation (this was added a long time ago by one of the CM maintainers, prior to the file being forked and copied to multiple repos). Power consumption values for frequencies between 200 and 1200 MHz that match the profile entries for Exynos 4210 EXACTLY, despite the fact that the Exynos 4210 is built on a 45nm process and the 4412 was built using a 32nm process (consumes less power). This reverts commit d76e08813ff4cefbc7b00b7c077d3b29804f1cd2 Change-Id: I4b42df70593ff4a7175c0e5acb022da2934c7b7e",26/03/2013 13:42:00,,DUPLICATE,https://github.com/CarbonDev/android_device_samsung_i9305/commit/9c5317f1980870eb76fddcf2ad3badc80cb729e8,,,,,,,EXISTS,,,,,,,,,,,,,CarbonDev/android_device_samsung_i9305,Entropy512,,,,
ziddey,mako,"usb: ehci-msm: Prevent USB resume during system suspend MSM USB host controller drivers release wakelocks only after USB bus gets suspended. This means that at the time of system suspend, USB devices and controller are already in suspend state. As there are no additional power savings by disabling wakeup capability during LPM, hence, mark HCD bus's skip_resume flag so that USB core doesn't try to resume devices during suspend to change remote-wakeup flags. This also avoids unnecessarily resuming USB BUS when coming out of suspend even if there is no wakeup USB event. Change-Id: Icf0aa8001cde6bfc5cc5b148a34e344a3015ac58 Signed-off-by: Manu Gautam <mgautam@codeaurora.org> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",26/03/2013 18:38:52,,FALSE-POSITIVE,https://github.com/ziddey/mako/commit/6d071e03437505d356b70a4cab828296caffad5a,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,ziddey/mako,,,,franciscofranco,
ChenChuang,CSNetSim,energy consumed. dead node will be deleted form adjv,27/03/2013 06:48:41,,FALSE-POSITIVE,https://github.com/ChenChuang/CSNetSim/commit/9bc59c8ae8245da29f1250b9bdd720411e01bee3,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,ChenChuang/CSNetSim,ChenChuang,,,ChenChuang,
lyfkevin,lge-kernel-iproj,"backport mach-msm/hotplug updates from codeaurora msm-3.4 kernel ARM: msm: convert logical CPU numbers to physical numbers This patch uses the new cpu_logical_map() macro for converting logical CPU numbers into physical numbers when dealing with the pen_release variable in the SMP boot and CPU hotplug paths. Tested-and-acked-by: David Brown <davidb@codeaurora.org> Signed-off-by: Will Deacon <will.deacon@arm.com> _____________ msm: hotplug: Support cpu hotplug in no PM cases Add support for hotplug operations to take secondary CPUs online/offline when CONFIG_PM is turned off. Change-Id: Iae591f7307a3ea574e3f512714a08da23bcf069b Signed-off-by: Sathish Ambley <sambley@codeaurora.org> _____________ msm: pm-8x60: Move hotplug related code out of pm code. Move hotplug related code into hotplug.c and compile hotplug.c only when CONFIG_HOTPLUG_CPU is defined. Signed-off-by: Mahesh Sivasubramanian <msivasub@codeaurora.org> Change-Id: Ia9aa7a64e9831f52431c77c22f30fb64892efaea ______________ msm: qdss: CP14 based save and restore of debug and trace registers Accessing Krait debug registers from memory mapped interface requires qdss_pclkdbg_clk and qdss_h_clk clocks apart from the ETM clock. This means either: 1. requesting or releasing qdss clocks for every save and restore or 2. leaving the qdss clocks on all the time or 3. using the CP14 interface which is based on just the ETM clock and doesn't require the qdss clocks We choose to use CP14 interface to avoid the pitfalls for 1. and 2. above. Moreover, we make the save-restore autodetect the debug and trace architecture and do the needful based on it and hence consolidate the code for 8660 and 8960. Change-Id: If2a383e6f755c9ed893031966fa7ef6de41a5699 Signed-off-by: Pratik Patel <pratikp@codeaurora.org> ___________________ msm: move pm and cpuidle to machine include directory Some drivers need to know if a cpu exited out from a idle sleep. Move the cpuidle.h which contains prototypes for the notifier registration and pm.h which contains the sleep state definitions to include/mach. The drivers interested in knowing exit and entry in to idle states need to register with the notifier using msm_cpuidle_register_notifier. Change-Id: I204860313a57840c32f2256bd8682eafe678dad8 Signed-off-by: Abhijeet Dharmapurikar <adharmap@codeaurora.org> _________________ ARM: 7293/1: logical_cpu_map: decouple CPU mapping from SMP It turns out that the logical CPU mapping is useful even when !CONFIG_SMP for manipulation of devices like interrupt and power controllers when running a UP kernel on a CPU other than 0. This can happen when kexecing a UP image from an SMP kernel. In the future, multi-cluster systems running AMP configurations will require something similar for mapping cluster IDs, so it makes sense to decouple this logic in preparation for this support. Acked-by: Yang Bai <hamo.by@gmail.com> Acked-by: Marc Zyngier <marc.zyngier@arm.com> Reported-by: Joerg Roedel <joerg.roedel@amd.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> ________________________ msm: pm: Move pm.h back into ""mach-msm"" from ""mach-msm/include/mach"" APIs in this header are no longer needed outside of mach-msm. Move the header out of include/mach to discourage use of it in device drivers. Change-Id: Id87eab2c909d01e4146d79d62f9c61a80e66fd64 Signed-off-by: Matt Wagantall <mattw@codeaurora.org> __________________ msm: pm-8x60: Expose additional APIs through pm.h The following two non-static APIs should be exposed in a header file but are not. Fix this. When the pm-8x60 driver is not used, use stubs in their place that always return success. int msm_pm_wait_cpu_shutdown(unsigned int cpu) bool msm_pm_verify_cpu_pc(unsigned int cpu) msm_pm_set_rpm_wakeup_irq(unsigned int irq) is also specific to the pm-8x60 driver, so stub it out for targets without pm-8x60, too. Change-Id: I257a458a7e435b5cbc3b058a9fb245ea8704ca1a Signed-off-by: Matt Wagantall <mattw@codeaurora.org> ________________ msm: hotplug: Wait for power collapse completion in platform_cpu_kill() Call msm_pm_wait_cpu_shutdown() to wait for the CPU to be fully power-collapsed before returning from platform_cpu_kill(). This is necessary to prevent CPU_DEAD and CPU_DEAD_FROZEN notifiers from executing until the CPU is fully collapsed. Otherwise, some drivers may turn off hardware resources before it is safe to do so. For example, acpuclock-8960's hotplug handler turns off CPU clocks as part of CPU_DEAD. If this happens before the collapse is complete, it may result in a hang. The call to msm_pm_wait_cpu_shutdown() will return immediately for hotplugs that do not involve power-collapse and therefore has no impact for those scenarios. Change-Id: I88bf28f01fb02ad7dfcb8234c745570e5085585a Signed-off-by: Matt Wagantall <mattw@codeaurora.org> _________________ msm: hotplug: support hotplug with wfi only power collapse Currently the pen_release is not set to -1 after we return from msm_pm_cpu_enter_lowpower. This doesn't happen when we actually power collapse, but it does when we only wfi. This will cause the next hotplug attempt to fail and crash the system, as the cpu comes up when the system is not expecting it. Fix this by explicitly setting the pen_release when we wake up in this manner. Change-Id: Ib39c406091412b04510df5de660fd6346763f2b8 Signed-off-by: Jeff Ohlstein <johlstei@codeaurora.org> _____________ msm: hotplug/platsmp: Fix cpu invaldation pointer arithmetic These functions take two void pointers indicating where to start and end the invalidation and cache flush. The pointer arithmetic is considering the pen_release pointer as an int pointer so adding sizeof(pen_release) is adding 16 bytes to the pointer and specifying that as the end. This inadvertently invalidates data next to the pen_release variable which could be bad. Fix the pointer math to only invalidate or clean the region for the pen_release variable. Change-Id: If0cf0e5de7c9f4b8c70662b29957a1f347809124 Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> ________________ msm: smp: Remove WFE/SEV from secondary core bootup During the cold boot path once the secondary core is released out of reset we keep looping for the pen release variable. The wfe+sev in this path are just unnecessary as they provide negligible power savings, and the latency cost is not worth it. During the hotplug path the secondary core will be in wfi and only an interrupt will be able to bring the core out. Removing the wfe effectively lowers the hotplug latency. Change-Id: Ic54636ceafb8abf3b6733e5699733543d64776d5 Signed-off-by: Taniya Das <tdas@codeaurora.org> ___________________ msm: hotplug: Change the pen variable in one place Other WFI based hotplug implementations set the pen variable to -1 in C code and do the appropriate flushing operations in one location. They also don't try to invalidate the cache on a spurious wakeup and report how many spurious wakeups there were. Let's do the same in our code so that we can remove our dependence on the dmac_{inv,flush}_range() functions (which are no longer upstream) and easily report spurious wakeups to the kernel logs. This does delay the time we set the pen back to its default value, but that doesn't actually matter because generic ARM hotplug code already waits for a completion before continuing. Change-Id: Ic36fbf744fe8abeda20ad9859a207b5e37c5e63c Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Conflicts: arch/arm/common/gic.c arch/arm/configs/i_atnt_org_defconfig arch/arm/mach-msm/Kconfig arch/arm/mach-msm/Makefile arch/arm/mach-msm/devices.h arch/arm/mach-msm/hotplug.c arch/arm/mach-msm/jtag.c arch/arm/mach-msm/pm-8x60.c arch/arm/mach-msm/pm.h arch/arm/mach-msm/qdss.h lge/lge_board/i_vzw/board_i_vzw.c",27/03/2013 17:07:16,,NOT-FOUND,https://github.com/lyfkevin/lge-kernel-iproj/commit/94610d5961029e5838e79280a85fd225ee88ec7f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,lyfkevin/lge-kernel-iproj,,,,,
chadouming,lge-kernel-mako,"sched: Create sched_select_cpu() to give preferred CPU for power saving In order to save power, it would be useful to schedule light weight work on cpus that aren't IDLE instead of waking up an IDLE one. By idle cpu (from scheduler's perspective) we mean: - Current task is idle task - nr_running == 0 - wake_list is empty This is already implemented for timers as get_nohz_timer_target(). We can figure out few more users of this feature, like workqueues. This patch converts get_nohz_timer_target() into a generic API sched_select_cpu() so that other frameworks (like workqueue) can also use it. This routine returns the cpu which is non-idle. It accepts a bitwise OR of SD_* flags present in linux/sched.h. If the local CPU isn't idle OR all cpus are idle, local cpu is returned back. If local cpu is idle, then we must look for another CPU which have all the flags passed as argument as set and isn't idle. This patch reuses the code from get_nohz_timer_target() routine, which had similar implementation. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> modified for Mako hybrid from Linaro reference Signed-off-by: faux123 <reioux@gmail.com>",27/03/2013 19:56:28,,NOT-FOUND,https://github.com/chadouming/lge-kernel-mako/commit/5304c996b3faf537f91eaf41d030ceeb3844a7e3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,chadouming/lge-kernel-mako,,,,,
mattbrejza,kraken,only goes into power save if has lock,27/03/2013 21:44:25,,TRADEOFF,https://github.com/mattbrejza/kraken/commit/4118a9a5570d3d144e9f9b06f22a1776760859d2,,,[OK][Got to sleep only when locked][Concurrent programming],[RELATED] [Only enter power saving with GPS lock],[DO NOT ANALYZE],[Only enter power saving with GPS lock] [Got to sleep only when locked] [Concurrent programming],EXISTS,[Only go to power saving when holding GPS lock],[Accuracy?],,,,,Certain,Arduino,No,Embedded application,Ino,,mattbrejza/kraken,mattbrejza,Miscellaneous,,mattbrejza,Arduino application firmware
mattbrejza,kraken,only goes into power save if has lock - fixed for seamode,27/03/2013 21:57:20,,DUPLICATE,https://github.com/mattbrejza/kraken/commit/82798ab91fbec777284e6c5e6e14b835235f00ae,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/mattbrejza/kraken/commit/4118a9a5570d3d144e9f9b06f22a1776760859d2] [original:TRADEOFF],,[VERIFY] [https://github.com/mattbrejza/kraken/commit/4118a9a5570d3d144e9f9b06f22a1776760859d2] [original:TRADEOFF],EXISTS,,,,,,,,,,,,,mattbrejza/kraken,mattbrejza,,,mattbrejza,
aatjitra,Note2,"Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode (credit to yank555-lu, simone201)",29/03/2013 04:23:34,,DUPLICATE,https://github.com/aatjitra/Note2/commit/62ceec9e9f072e95bc85e55ced08c9c07cad3acf,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/halaszk/SGS3/commit/c20fafdff666a1bd3aa2860c385ae0c42c06dfb0] [original:FALSE-POSITIVE],,[VERIFY] [https://github.com/halaszk/SGS3/commit/c20fafdff666a1bd3aa2860c385ae0c42c06dfb0] [original:FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,aatjitra/Note2,,,,,
mike-dunn,linux-treo680,"[PATCH] pmac: Improve sleep code of tumbler driver This patch improves the behaviour of the ""tumbler/snapper"" driver used on newer PowerMacs during sleep. It properly set the HW mutes to shut down amplifiers and does an analog shutdown of the codec. That might improve power consumption during sleep on a number of machines. Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>",29/03/2013 16:11:35,,OK,https://github.com/mike-dunn/linux-treo680/commit/b20af5f59797796d28b701f5d337e47c8a142eb2,,,[OK][Improve sleep code],[OK] [Improve sleep mode] [Set HW mute] [Disable components on sleep],[DO NOT ANALYZE],[Improve sleep mode] [Set HW mute] [Disable components on sleep] [Improve sleep code],EXISTS,[properly set the HW mutes to shut down amplifiers and does an analog shutdown of the codec],[might improve power consumption during sleep],[Improve sleep code] [Disable components on sleep],[Disable device],,,Uncertain might,Linux Palm,No,OS,C,"This patch improves the behaviour of the ""tumbler/snapper"" driver used on newer PowerMacs during sleep.  It properly set the HW mutes to shut down amplifiers and does an analog shutdown of the codec.  That might improve power consumption during sleep on a number of machines.",mike-dunn/linux-treo680,ozbenh,[Disabling feature/devices],,,Kernel sound
milaq,android_kernel_lge_p940,bcmdhd: enable power saving and pktfilter backported from iproj: https://github.com/CyanogenMod/lge-kernel-iproj/commit/74ee8bbf3bf86983be123305ac4af3e51a5a6adb,29/03/2013 20:17:20,,OK,https://github.com/milaq/android_kernel_lge_p940/commit/c4ce926cb4d6fb9c70906be5182a15745a1f8007,,,[OK][Enable power saving mode],[OK] [Enable power saving mode],[DO NOT ANALYZE],[Enable power saving mode],EXISTS,[enable dhd power saving],[power saving],[Enable device power saving mode],[Enable device low power mode],,,Certain,Android,No,OS,C,bcmdhd: enable power saving and pktfilter,milaq/android_kernel_lge_p940,milaq,[Disabling feature/devices],,milaq,Driver
milaq,android_kernel_lge_p940,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>",29/03/2013 23:32:38,,DUPLICATE,https://github.com/milaq/android_kernel_lge_p940/commit/6ca4c90ee82b93a3d79dc9fe068e03affb3f4dd7,,,,,,,EXISTS,,,,,,,,,,,,,milaq/android_kernel_lge_p940,grygoriyS,,,milaq,
danielsaul,kraken,power saving and fixing rockblock bugs,31/03/2013 15:07:47,,OK,https://github.com/danielsaul/kraken/commit/310716bdb6a72ab92d063a65790e7d1e5ddd549c,,,[OK][Go to idle],[OK] [Go to idle],[DO NOT ANALYZE],[Go to idle],EXISTS,[increase sleep time],[power saving],[Sleep longer],[Increase sleep],,Clueless programmer,Certain,Embedded !,No,Application,"Ino,C++",power saving and fixing rockblock bugs,danielsaul/kraken,priyeshpatel,[Low power idling],,priyeshpatel,Embedded application
Altaf-Mahdi,mako,"usb: Decrease autosuspend delay to 200ms upon usb disconnect Reduce overall HSIC wakelock active time by decreasing autosuspend delay for HSIC mdm device from 1 sec to 200ms. However when diag is active it would send poll events for every 500ms causing frequent supsend/resume. Avoid this by increasing autosuspend delay to 1 sec when diag is active. Also, set autosuspend delay for root hub to 0 by default. These changes reduce time HSIC controller is active when the bus is idle for better power savings. CRs-Fixed: 404378 Change-Id: I0500f6b125dff158e6e0c10f3f2023b18ce9dd30 Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>",31/03/2013 15:50:44,,NOT-FOUND,https://github.com/Altaf-Mahdi/mako/commit/63bf86fa4cf4a05850a2e657799b229e6c04f30a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Altaf-Mahdi/mako,,,,,
Altaf-Mahdi,mako,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org>,31/03/2013 15:53:42,,NOT-FOUND,https://github.com/Altaf-Mahdi/mako/commit/2c58215dbc2e3ac1da5f354194e2e9b48aa58f09,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Altaf-Mahdi/mako,,,,,
Altaf-Mahdi,mako,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org>",31/03/2013 16:12:30,,NOT-FOUND,https://github.com/Altaf-Mahdi/mako/commit/caa70e08b69b71311b92e10f74ad3f06a2af8ef7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Altaf-Mahdi/mako,,,,,
stcarlso,lge-kernel-iproj,"Quash some log spam, fix WiFi power consumption bug, add ZRAM to kernel config, disable kernel debugging",31/03/2013 20:48:01,,UNABLE-TO-CATEGORIZE,https://github.com/stcarlso/lge-kernel-iproj/commit/9b3e18359ea7ef763aba6f396d0a84e79b7fd7f4,,,[OK][Don't setup power saving mode],[OK] [Set up wifi power saving mode] [Set up power saving mode] [Bug fix] [Android],[DO NOT ANALYZE],[Set up wifi power saving mode] [Set up power saving mode] [Bug fix] [Android] [Don't setup power saving mode],EXISTS,,,,,,,,,,,,,stcarlso/lge-kernel-iproj,stcarlso,,,stcarlso,
falsecrypt,uni-project,EnergyClock-View extended.. SegmentedControl and 2 Pie Charts (Details-Pie Chart for selected EnergyClock-Slice and a second Pie Chart showing the day energy consumption for the selected user),01/04/2013 03:32:58,,FALSE-POSITIVE,https://github.com/falsecrypt/uni-project/commit/069b1d7479b3ad37f36cd50fedc2ca9068f55d68,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Energy consumption plot],[FALSE-POSITIVE],[Energy consumption plot],EXISTS,,,,,,,,,,,,,falsecrypt/uni-project,falsecrypt,,,falsecrypt,
CyanogenMod,android_kernel_htc_msm8660,Update notes for submitted changes * cm3628: resolving -1 reported ABS_MISC on leaving power save mode,01/04/2013 13:11:30,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_kernel_htc_msm8660/commit/9cd68d09ac5d19b5132d3d82812de340b762a747,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_htc_msm8660,tbalden,,,,
CyanogenMod,android_kernel_htc_msm8660,cm3628: resolving -1 reported ABS_MISC on leaving power save mode Removing the !resume || value==0 part so it's going to overwrite the -1 value reported in Sensor_Enable part. Change-Id: I7c4eb512d4abd0186d851bcf547e47fff2f1d5bf,01/04/2013 13:11:32,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_kernel_htc_msm8660/commit/0314271ece95ad0faab054ebce2d6854b7405061,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_htc_msm8660,tbalden,,,tbalden,
dorimanx,Dorimanx-SG2-I9100-Kernel,"sched: Create sched_select_non_idle_cpu() to give preferred CPU for p. .ower saving In order to save power, it would be useful to schedule light weight work on cpus that aren't IDLE instead of waking up an IDLE one. By idle cpu (from scheduler's perspective) we mean: - Current task is idle task - nr_running == 0 - wake_list is empty This is already implemented for timers as get_nohz_timer_target(). We can figure out few more users of this feature, like workqueues. This patch converts get_nohz_timer_target() into a generic API sched_select_non_idle_cpu() so that other frameworks (like workqueue) can also use it. This routine returns the cpu which is non-idle. If the local CPU isn't idle OR all cpus are idle, local cpu is returned back. If local cpu is idle, then we must look for another CPU which isn't idle. This patch reuses the code from get_nohz_timer_target() routine, which had similar implementation. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Seongmin Park <r_data@naver.com>",01/04/2013 13:28:31,,DUPLICATE,https://github.com/dorimanx/Dorimanx-SG2-I9100-Kernel/commit/0a9620e78f76526be574c00da770e593f475d2f8,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/faux123/mako/commit/afb029d6fef136b9fbf2fbb8404a1598dc1604e9] [original:RELATED],,[VERIFY] [https://github.com/faux123/mako/commit/afb029d6fef136b9fbf2fbb8404a1598dc1604e9] [original:RELATED],EXISTS,,,,,,,,,,,,,dorimanx/Dorimanx-SG2-I9100-Kernel,dorimanx,,,dorimanx,
milaq,android_kernel_lge_p940,"Revert ""bcmdhd: enable power saving and pktfilter"" This reverts commit c4ce926cb4d6fb9c70906be5182a15745a1f8007.",01/04/2013 19:21:00,,REVERT,https://github.com/milaq/android_kernel_lge_p940/commit/60ff654eb3874f0d4bf41490f4372ad191fde1f5,,,[Revert],[REVERT] [c4ce926cb4d6fb9c70906be5182a15745a1f8007],[DO NOT ANALYZE],[c4ce926cb4d6fb9c70906be5182a15745a1f8007],EXISTS,"Revert ""bcmdhd: enable power saving and pktfilter""",,,,,,,,,,,,milaq/android_kernel_lge_p940,milaq,,,milaq,
EmmanuelU,wild_kernel_htc_msm8660,cm3628: resolving -1 reported ABS_MISC on leaving power save mode Removing the !resume || value==0 part so it's going to overwrite the -1 value reported in Sensor_Enable part. Change-Id: I7c4eb512d4abd0186d851bcf547e47fff2f1d5bf,01/04/2013 22:10:41,,NOT-FOUND,https://github.com/EmmanuelU/wild_kernel_htc_msm8660/commit/28f4d6ba00c0f3477bca2f19381f83ab26510981,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EmmanuelU/wild_kernel_htc_msm8660,,,,,
EmmanuelU,wild_kernel_htc_msm8660,cm3628: resolving -1 reported ABS_MISC on leaving power save mode Removing the !resume || value==0 part so it's going to overwrite the -1 value reported in Sensor_Enable part. Change-Id: I7c4eb512d4abd0186d851bcf547e47fff2f1d5bf,01/04/2013 22:10:43,,NOT-FOUND,https://github.com/EmmanuelU/wild_kernel_htc_msm8660/commit/0314271ece95ad0faab054ebce2d6854b7405061,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EmmanuelU/wild_kernel_htc_msm8660,,,,,
mcupak,energyt,Version with energy efficient algorithm enabled... Enjoy!,02/04/2013 00:15:52,,OK,https://github.com/mcupak/yt/commit/da4c592c48aa31e8c4f18be5a123e25dd6e6fa35,https://github.com/mcupak/energyt/commit/da4c592c48aa31e8c4f18be5a123e25dd6e6fa35,,[OK][MANAGE CONNECTIONS][ANDROID],[OK] [Leverage signal strength] [UNABLE-TO-CATEGORIZE],[OK] [APP SPECIFIC] [?],[Leverage signal strength] [MANAGE CONNECTIONS] [ANDROID] [APP SPECIFIC] [?],EXISTS,[leverage potential disconnections],[wil save energy],[Disconnect on low signal] [Leverage signal strength],[Leverage disconnections],,Signal strength-based power saving,Certain,Android,No,Application,Java,Version with energy efficient algorithm enabled... Enjoy!,mcupak/energyt,,[Miscellaneous],,,Application
pmaia,mestrado,scenarios vs power consumption,03/04/2013 02:21:00,,FALSE-POSITIVE,https://github.com/pmaia/mestrado/commit/87a6a49b837e0328625713b991cc0bb2624f9fce,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,pmaia/mestrado,,,,,
alexshi,power-scheduling,"sched: make sure select_tas_rq_fair get a cpu Problem: select_task_rq_fair() returns a target CPU/ waking CPU if no balancing is required. However with the current power aware scheduling in this path, an invalid CPU might be returned. If get_cpu_for_power_policy() fails to find a new_cpu for the forked task, then there is a possibility that the new_cpu could continue to be -1, till the end of the select_task_rq_fair() if the search for a new cpu ahead in this function also fails. Since this scenario is unexpected by the callers of select_task_rq_fair(),this needs to be fixed. Fix: Do not intermix the variables meant to reflect the target CPU of power save and performance policies. If the target CPU of powersave is successful in being found, return it. Else allow the performance policy to take a call on the target CPU. The above scenario was caught when a kernel crash resulted with a bad data access interrupt, during a kernbench run on a 2 socket,16 core machine,with each core having SMT-4 Signed-off-by: Preeti U Murthy <preeti@linux.vnet.ibm.com> Signed-off-by: Alex Shi <alex.shi@intel.com>",03/04/2013 06:25:21,,FALSE-POSITIVE,https://github.com/alexshi/power-scheduling/commit/61a3727425bef8453263705c65856eb57997b193,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,alexshi/power-scheduling,,,,,
hupili,blog,hot corner; energy saver config,03/04/2013 07:46:07,,FALSE-POSITIVE,https://github.com/hupili/hupili.github.com/commit/8736cc57daff080198a8a0d093db207c654a36cd,https://github.com/hupili/blog/commit/8736cc57daff080198a8a0d093db207c654a36cd,,[FALSE-POSIVITE],[FALSE-POSITIVE] [Document],[FALSE-POSIVITE],[Document],EXISTS,,,,,,,,,,,,,hupili/blog,,,,,
alexshi,power-scheduling,"sched: make sure select_tas_rq_fair get a cpu Problem: select_task_rq_fair() returns a target CPU/ waking CPU if no balancing is required. However with the current power aware scheduling in this path, an invalid CPU might be returned. If get_cpu_for_power_policy() fails to find a new_cpu for the forked task, then there is a possibility that the new_cpu could continue to be -1, till the end of the select_task_rq_fair() if the search for a new cpu ahead in this function also fails. Since this scenario is unexpected by the callers of select_task_rq_fair(),this needs to be fixed. Fix: Do not intermix the variables meant to reflect the target CPU of power save and performance policies. If the target CPU of powersave is successful in being found, return it. Else allow the performance policy to take a call on the target CPU. The above scenario was caught when a kernel crash resulted with a bad data access interrupt, during a kernbench run on a 2 socket,16 core machine,with each core having SMT-4 Signed-off-by: Preeti U Murthy <preeti@linux.vnet.ibm.com> Signed-off-by: Alex Shi <alex.shi@intel.com>",03/04/2013 07:59:14,,DUPLICATE,https://github.com/alexshi/power-scheduling/commit/363f558f8b91a2ebc4cb20329de2cb53a99c516a,,,,,,,EXISTS,,,,,,,,,,,,,alexshi/power-scheduling,,,,,
dtrail,JBX_Kernel,Changed OPP Table for lower power consumption,03/04/2013 09:42:17,,OK,https://github.com/dtrail/JBX_Kernel/commit/b361a6bcd198a840b1453032b78cc816a2c006cb,,,[OK][Scaling CPU freq],[OK] [Scale frequency] [Scale voltage] [Kernel],[DO NOT ANALYZE],[Scale frequency] [Scale voltage] [Kernel] [Scaling CPU freq],EXISTS,[Reduce OPP Table frequency/voltage],[lower power consumption],[Scale CPU frequency/voltage],[DVFS],,,Certain,Android,No,OS,C,Changed OPP Table for lower power consumption,dtrail/JBX_Kernel,dtrail,[Frequency and voltage scaling],,dtrail,Kernel arch
tlatsas,dotfiles,usb power saving,03/04/2013 19:59:58,,OK,https://github.com/tlatsas/dotfiles/commit/52c5b063f875ad0ae3fd038d7aaf6b7e38be0464,,,[FALSE-POSITIVE],[OK] [Udev rules] [System config],[DO NOT ANALYZE],[Udev rules] [System config],EXISTS,[Enable usb power saving],[power saving],[Enable power saving] [Enable USB power saving] [Script] [Config],[Enable device power saving],,,Certain,dot-files,No,Libraries and Utilities,Script udev,usb power saving,tlatsas/dotfiles,tlatsas,[Disabling feature/devices],,tlatsas,Script
Hundsbuah,tf700t_kernel,"New testkernel v2.2 20130405: - removed gpu_oc interface - removed gpu_og_volt interface - setting the frequency limit is now done via cpuX.sh or a terminal emulator - pwr_cap_limit_1: CPU1, pwr_cap_limit_2: CPU2, pwr_cap_limit_3: CPU3, pwr_cap_limit_4:CPU4 - module parameters can be used in cpuX.sh files or in a terminal emulator with superuser rights (see below for a howto, i recommend to edit the cpuX.sh files ( /system/etc/cpuX.sh) with root explorer i.e) - voltage table has changed due dvfs table cleanup!!!! dont use your init.d scripts to set the voltages at startup (delete or disable the scripts first, then install this new testkernel!!) - added a new module parameter to notify the cpu that the cpu2.sh file was executed and cpu freq limits are (correct) set (look at system/etc/init.d/99bootcompleted) you dont have to do anything, just dont delete it or you will stuck at 1700MHz (system/etc/init.d/99bootcompleted) - lpcore oc now works (760MHz lp oc) [B]HOWTO[/B]: [U]Limiting the CPU:[/U] possible cpu frequencys that can be used to set the maximum allowed frequency (applied via module parameter: echo ""1800000"" /sys/module/cpu_tegra/parameters/pwr_cap_limit_1): Here you set frequency values to the module parameters (gpu is different - see below) [CODE] 51000 102000 204000 295000 370000 428000 475000 513000 579000 620000 760000 910000 1000000 1150000 1300000 1400000 1500000 1600000 1700000 1750000 1800000 1850000 1900000 [/CODE] Example: [CODE] echo 760000 > /sys/module/cpu_tegra/parameters/pwr_cap_limit_1 echo 760000 > /sys/module/cpu_tegra/parameters/pwr_cap_limit_2 echo 760000 > /sys/module/cpu_tegra/parameters/pwr_cap_limit_3 echo 760000 > /sys/module/cpu_tegra/parameters/pwr_cap_limit_4 [/CODE] This will limit core1, core2, core3 and core4 to a maximum frequency of 760MHz [U]Limiting the GPU:[/U] Here you set !!VOLTAGE!! values to the module parameters (not frequencys as by the cpu module parameters!) You need four calls: 1. echo 1350 > /sys/kernel/tegra_cap/cbus_cap_level 2. echo 1350 > /sys/kernel/tegra_cap/core_cap_level 3. echo 1 > /sys/kernel/tegra_cap/cbus_cap_state 4. echo 1 > /sys/kernel/tegra_cap/core_cap_state possible (best) gpu voltage values that can be used to limit the gpu frequency to a specific frequency (applied via four parameter settings as described above): [CODE] 1350mV for 600MHz 1375mV for 650MHz 1410mV for 700MHz 1430mV for 750MHz 1460mV for 775MHz [/CODE] Example: (REMEMBER TO SET THE VOLTAGE AND NOT THE FREQUENCY!!) [CODE] echo 1350 > /sys/kernel/tegra_cap/cbus_cap_level echo 1350 > /sys/kernel/tegra_cap/core_cap_level echo 1 > /sys/kernel/tegra_cap/cbus_cap_state echo 1 > /sys/kernel/tegra_cap/core_cap_state [/CODE] This will limit the maximum gpu frequency to 600MHz (good for asus power saver mode i.e) and takes care of clocks depending on gpu clocks You can also go lower than 1350mV but the gui transisions feels a bit slower then. Here is the complete VOLT/FREQ Table (in mV and kHz): [CODE] Voltage (mV): 950, 1000, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1375, 1410, 1430, 1460 Frequency (kHz): 200000, 247000, 304000, 361000, 408000, 446000, 484000, 520000, 600000, 650000, 700000, 750000, 775000 [/CODE] You can change the cpu1.sh (asus powersaver mode), cpu2.sh(asus balanced mode) and cpu3.sh(asus normal/performance mode) cpu frequency and gpu voltage (located int: /system/etc/) to your needs. Tip: Get rid of the naming of the asus power modes. You can let the cpu1.sh as a powersaver but you can use balanced mode as a max. power mode (1800MHz for cpu revision 9 and 1900MHz for tablet who can handle this frequency and 750MHz GPU) for working/surfing (not gaming!) etc. to make the tablet as fast as possible to respond to your inputs. cpu3.sh can now be used as a gaming profile (you set cpu to 1600MHz max. and gpu to 650 or 700MHz i.e, so the tablet wont get too hot when playing games/high load) I have resetted the voltage table to stock voltages because i rebuilded the dvfs table for the cpu0 and cpug. Therefore as always: Please try to undervolt as much as you can! Download: [url]http://www.androidfilehost.com/?w=files&flid=3972[/url] Enjoy the new kernel! And have a nice weekend ;)",05/04/2013 19:44:25,,OK,https://github.com/Hundsbuah/tf700t_kernel/commit/b80639c83eb7adc5cd879807b8e904d0a5ea42c0,,,[OK][limit the maximum gpu],[OK] [Limit GPU frequency] [Limit CPU frequency],[DO NOT ANALYZE],[Limit GPU frequency] [Limit CPU frequency] [limit the maximum gpu],EXISTS,,,[REVIEW] [Limit max CPU frequency] [Limit max GPU voltage] [Script],[DVFS] ?,,,Certain,Android,No,Libraries and Utilities,Shell,This will limit the maximum gpu frequency to 600MHz (good for asus power saver mode i.e) and takes care of clocks depending on gpu clocks,Hundsbuah/tf700t_kernel,Hundsbuah,[Frequency and voltage scaling],,Hundsbuah,Script
M66B,cm10-fxp-extended,Remove Wifi power save off patch,05/04/2013 19:57:00,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/M66B/cm10-fxp-extended/commit/756592b0c655a06f48a75ec10ae3f18f532281c0,,,[OK][System config],[RELATED] [Remove power saving],[DO NOT ANALYZE],[Remove power saving] [System config],EXISTS,,,,,,,,,,,,,M66B/cm10-fxp-extended,M66B,,,M66B,
stephenjust,arduino-gps-glasses,Turn off GPS power saving mode explicitly,06/04/2013 07:30:31,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/stephenjust/arduino-gps-glasses/commit/77399323117c8ed5ab8bf9dd20a95568f3f592c8,,,[RELATED][Removing GPS power saving mode],[RELATED] [Remove power saving],[DO NOT ANALYZE],[Remove power saving] [Removing GPS power saving mode],EXISTS,,,,,,,,,,,,,stephenjust/arduino-gps-glasses,stephenjust,,,stephenjust,
stephenjust,arduino-gps-glasses,Query GPS for power saving mode and print it out,06/04/2013 07:44:44,,FALSE-POSITIVE,https://github.com/stephenjust/arduino-gps-glasses/commit/1874cbeb3f18f98428ee217d2cfb458c3b6bf567,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,stephenjust/arduino-gps-glasses,stephenjust,,,stephenjust,
thinkofdeath,RPG-Items,Changed power save format and added upgrader to change to the new format. This removes the old UTF-8 binary code and allows multiple commands of the same type,06/04/2013 19:13:09,,FALSE-POSITIVE,https://github.com/thinkofdeath/RPG-Items/commit/2d516fd70aebe25c6fa29b74feac6cae3baa01d9,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[DO NOT ANALYZE],[Game],EXISTS,,,,,,,,,,,,,thinkofdeath/RPG-Items,thinkofdeath,,,thinkofdeath,
Team-Blackout,Blackout-Monarudo,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> modified for Mako from LKML reference Signed-off-by: faux123 <reioux@gmail.com>",06/04/2013 19:54:35,,DUPLICATE,https://github.com/Team-Blackout/Blackout-Monarudo/commit/0825852a0cfccc8d8b029b2830d3b3d5f3fc6e2c,,,,,,,EXISTS,,,,,,,,,,,,,Team-Blackout/Blackout-Monarudo,faux123,,,zarboz,
eadmaster,libLGTV_serial,Update libLGTV_serial.py added common energy saving options (not sure if really available in all models),07/04/2013 09:12:38,,RELATED,https://github.com/eadmaster/libLGTV_serial/commit/19fa7669d0b55d01b1c1bdf58d3dd394f9c7fd27,,,[OK][ADDING ENERGY SAVING OPTION],[OK] [Config] [Configure power saving],[OK] [CONFIG],[Config] [Configure power saving] [ADDING ENERGY SAVING OPTION],EXISTS,,,,,,,,LGTV,No,Application library/framework,,added common energy saving options (not sure if really available in all models),eadmaster/libLGTV_serial,eadmaster,,,eadmaster,Library
judnich,Kosmos,Fixed blocky star quad borders. Added auto-sleep feature to automatically save power when not in motion.,07/04/2013 23:24:21,,OK,https://github.com/judnich/Kosmos/commit/48cebf5e56dbb252b757783d7ad93f7a874a648c,,,[Go to idle],[OK] [Go to idle],[DO NOT ANALYZE],[Go to idle],EXISTS,[Added auto-sleep feature],[save power when not in motion],[Go to sleep] [Sleep when not in motion] [Stop animation when not in motion],[Go to low power] [Condition: inactivity],,,Certain,Browser ?,No,Application,Javascript,Added auto-sleep feature to automatically save power when not in motion.,judnich/Kosmos,judnich,[Low power idling],[on inactivity],judnich,Application
SchedMD,slurm,Add new variables to sview FrontEndNode: allow/deny groups/users Node: Power consumption,08/04/2013 17:47:59,,FALSE-POSITIVE,https://github.com/SchedMD/slurm/commit/9761721d8a297aa69687da23ea0965dde531ddb8,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,SchedMD/slurm,nyee32,,,jette,
thylux,WiiMoteExtension,Inserted Power Saving measures,08/04/2013 19:24:34,,OK,https://github.com/thylux/WiiMoteExtension/commit/27032a83a6f9b3ead90977dabb4ae46a48f484e3,,,[OK][Disabling device],[OK] [Disable component] [Set pin] [Set pin to input],[DO NOT ANALYZE],[Disable component] [Set pin] [Set pin to input] [Disabling device],EXISTS,[Set direction to input on all pins] [Enable pull-ups on pins],[power saving],[Set pins] [Set pins to input] [Enable pull-up on pins] [Hardware],[Pin configuration],,,Certain,Arduino,No,Application,Ino,Inserted Power Saving measures,thylux/WiiMoteExtension,thylux,[Pin management],,thylux,Arduino application
SlimRoms,kernel_lge_mako,"msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> (cherry picked from commit d27ca4a7526a890f9d2979acefda3561e49d2e66) Signed-off-by: Sudhir Sharma <sudsha@codeaurora.org> (cherry picked from commit 3af7249c36ab53923fdf216df3b3ba2c7f847851) Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",08/04/2013 19:50:32,,DUPLICATE,https://github.com/SlimRoms/kernel_lge_mako/commit/49684b87a3c3b8c8e5d3cdcff8e3a1ddcb638520,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/kernel_lge_mako,,,,PRJosh,
projectDARK,device_lge_mako,"mako: allow device to sleep in off-mode charging In off-mode charging, the device need to go suspend mode to reduce power consumption after charging completion. This patch enable suspend mode in off-mode charging. Bug: 7429504 Change-Id: I915f0d076c34680d2fbfd8e8b92adb65464b1600",08/04/2013 22:34:10,,NOT-FOUND,https://github.com/projectDARK/device_lge_mako/commit/e472b81f1046d08813da57bdc4c8a850ff73f94a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,projectDARK/device_lge_mako,,,,,
didhiy,android_kernel_samsung_aries,mmc: core: put eMMC in sleep (cmd5) mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend to minimize power consumption. Signed-off-by: Balaji T K <balajitk@ti.com> Acked-by: Venkatraman S <svenkatr@ti.com> Signed-off-by: Chris Ball <cjb@laptop.org> Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org> (cherry picked from commit 3765839119eb540b87bdbf8d6869c60658cb99e7) Change-Id: I0c0d5d06c4204b15471d1ca95aec0c7fcaaae816 Signed-off-by: Shruthi Krishna <skrish@codeaurora.org>,08/04/2013 22:57:47,,DUPLICATE,https://github.com/didhiy/android_kernel_samsung_aries/commit/c7ee18b55f062f8438bc4d10aba41039f4c1a94b,,,,,,,EXISTS,,,,,,,,,,,,,didhiy/android_kernel_samsung_aries,balajitk,,,didhiy,
ChangYeoun,LGOG_Kernel,"mako: charger: disable hsic host and mdm driver in charger mode In off-mode charging, hsic host driver never release wake_lock. Due to this, system cannot enter the suspend during off-mode charging. This patch disable the hsic host driver and mdm driver in off-mode charging to reduce power consumption. Change-Id: I8580af1d5a9d754982b198c9bd47a98e4b69c725",09/04/2013 11:26:48,,NOT-FOUND,https://github.com/ChangYeoun/LGOG_Kernel/commit/bde14d1cbf9f57e707e08f86063b703b9dd48be0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/LGOG_Kernel,,,,,
ChangYeoun,LGOG_Kernel,"power: charger: need sometime to handle the usb disconnecting events When being completely charged in the offmode charging and pulling out TA from sleep condition, I gave 1 sec. delay until entering sleep condition again, in order to prevent the phenomenon that a device doesn't turn off. We need sometime for an userspace application to handle the usb disconnection events. There is no effect of power consumption. Change-Id: I0851cc2b47c3780fd68d3e8965fd0d6f5b7e8312",09/04/2013 11:30:23,,NOT-FOUND,https://github.com/ChangYeoun/LGOG_Kernel/commit/2a3807aaa8fa40c2e0dd0dd1c99a195e2c172432,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/LGOG_Kernel,,,,,
AndyRobo,andysdk,"Merge pull request #1 from ankitdaf/master Added fixes for power consumption,networking,gestures",09/04/2013 13:21:18,,NOT-FOUND,https://github.com/AndyRobo/andysdk/commit/500aaf472498380ba7f68b5a97c9a4cd1be7c57c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AndyRobo/andysdk,,,,,
camcory,android_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. (cherry picked from commit fb48938f73e335ac66c83e6adba96431e050ec94) Change-Id: Ib8d05a38f28d7e2f0bdf9e420e5db526cf874bc6 CRs-Fixed: 430786",09/04/2013 22:45:24,,NOT-FOUND,https://github.com/camcory/android_frameworks_av/commit/578aa5e86f62d7747cb9206b83f46ba06d10011a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,camcory/android_frameworks_av,,,,,
yongseokoh,flashcachelayer,Power consumption feature has been added.,10/04/2013 01:08:23,,FALSE-POSITIVE,https://github.com/yongseokoh/flashcachelayer/commit/fd54b4afdb6dc1e1b623fb5e1d6cc198276397ca,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,yongseokoh/flashcachelayer,yongseokoh,,,yongseokoh,
hypn0toad,ESPn,Layout Work More work on the layout. I pretty carefully managed power to from the DC header to the VREG to the Imp (by FAR the biggest power consumer on the board). I also rearranged some parts to try to optimize placement. Next up- auto route.,10/04/2013 06:44:33,,BINARIES,https://github.com/hypn0toad/MAIDO/commit/805e8f3dd9a74c08d81ab82c666088d19bb5484d,https://github.com/hypn0toad/ESPn/commit/805e8f3dd9a74c08d81ab82c666088d19bb5484d,,[BINARIES],[BINARIES],[BINARIES],,EXISTS,,,,,,,,,,,,,hypn0toad/ESPn,,,,,
aatjitra,7105u1,"Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode (credit to yank555-lu, simone201)",10/04/2013 13:02:27,,DUPLICATE,https://github.com/aatjitra/7105u1/commit/e4d982e6c71f93b1cee2f38ba00310fdbb96361f,,,,,,,EXISTS,,,,,,,,,,,,,aatjitra/7105u1,aatjitra,,,aatjitra,
aatjitra,7105u1,"Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode (part 2) (credit to yanklu555, simone201)",10/04/2013 13:43:05,,DUPLICATE,https://github.com/aatjitra/7105u1/commit/8d8f0a71c20487e8a4485311d80f5a36dd26dac1,,,,[FALSE-POSITIVE] [VERIFY] [https://github.com/halaszk/SGS3/commit/c20fafdff666a1bd3aa2860c385ae0c42c06dfb0],,[VERIFY] [https://github.com/halaszk/SGS3/commit/c20fafdff666a1bd3aa2860c385ae0c42c06dfb0],EXISTS,,,,,,,,,,,,,aatjitra/7105u1,aatjitra,,,aatjitra,
hookkshot,Instincts,Player Update and Structure Update folder structure and added energy consumption to players.,11/04/2013 13:56:00,,NOT-FOUND,https://github.com/hookkshot/Instincts/commit/b4df4e4456d0c83194646bc71a30e830a9b853be,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,hookkshot/Instincts,,,,,
Altaf-Mahdi,mako,"msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org>",12/04/2013 17:32:24,,NOT-FOUND,https://github.com/Altaf-Mahdi/mako/commit/495ba2a67e393acecc2aeda96b4d7c0d8bef5598,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Altaf-Mahdi/mako,,,,,
dtrail,JBX_Kernel,Fix hotplugging for some governors and changed some values for power savings,12/04/2013 18:16:48,,OK,https://github.com/dtrail/JBX_Kernel/commit/1161effea45cee4ed8a6fd926fca31327f54d115,,,[OK][Scale CPU Freq],[OK] [Scale CPU frequency],[DO NOT ANALYZE],[Scale CPU frequency] [Scale CPU Freq],EXISTS,[Config governor],[power saving],[Increase frequency slower/decrease faster] [Scale CPU frequency] [Configure governor],[DVFS] [Sub1: Governor tuning],,"Governor, Many chanegs",Certain,Android,No,OS,C,Fix hotplugging for some governors and changed some values for power savings,dtrail/JBX_Kernel,dtrail,[Frequency and voltage scaling],,dtrail,Driver cpufreq
camerondunn,CPE329-Project-1,Added sleeping for power saving.,12/04/2013 23:54:59,,NOT-FOUND,https://github.com/camerondunn/CPE329-Project-1/commit/66472ecc7935a815a39e00353be00107f9a91dc9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,camerondunn/CPE329-Project-1,,,,,
ronanguilloux,Bin,ati power save & ati fan regulator,13/04/2013 10:02:40,,OK,https://github.com/ronanguilloux/Bin/commit/52a0182aef0fb8fb99bdaf3a7e69d9ce90f820c6,,,[OK] [Software Conf],[OK] [Configure power saving] [ATI power save],[DO NOT ANALYZE],[Configure power saving] [ATI power save] [Software Conf],EXISTS,[set api power saving to low],[power saving],[Configure device power saving] [Script] [Config],[Improve low power mode component configuration],,,Certain,Personal config files?,No,Libraries and Utilities,Shell,ati power save & ati fan regulator,ronanguilloux/Bin,ronanguilloux,[Use power efficient library/device],,ronanguilloux,Script shell
fupingpenn,Airplane1.0,add power saver player,14/04/2013 03:25:51,,FALSE-POSITIVE,https://github.com/fupingpenn/Airplane1.0/commit/ec3706ee9f6cd409b9c576b650254a8003ce14b3,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[DO NOT ANALYZE],[Game],EXISTS,,,,,,,,,,,,,fupingpenn/Airplane1.0,fupingpenn,,,fupingpenn,
Mini-Geek,mfaktx-controller,fix power saving monitor off bug,14/04/2013 04:00:57,,FALSE-POSITIVE,https://github.com/Mini-Geek/mfaktx-controller/commit/2a3b34644998f2a21f1fcd81c540342f1fb81a09,,,[RELATEd][disable power saving feature][Workaround],[RELATED] [Bug fix] [?],[DO NOT ANALYZE],[Bug fix] [?] [disable power saving feature] [Workaround],EXISTS,,,,,,,,,,,,,Mini-Geek/mfaktx-controller,Mini-Geek,,,Mini-Geek,
oxavelar,XT890-Kernel-Gamma,"Commenting the SMT scheduliner power savings, they seem useless for our Medfield device.",14/04/2013 06:59:40,,FALSE-POSITIVE,https://github.com/oxavelar/XT890-Kernel-Gamma/commit/a31e9efeaf068b28c46b78c7fd853017d95f2b11,,,[OK][Disabling power saving mode],[RELATED] [Disable power saving],[DO NOT ANALYZE],[Disable power saving] [Disabling power saving mode],EXISTS,,,,,,,,,,,,,oxavelar/XT890-Kernel-Gamma,oxavelar,,,oxavelar,
faux123,tuna,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",15/04/2013 04:03:38,,OK,https://github.com/faux123/tuna/commit/3746af06c20762fc9eb21be42b48707c826a734a,,,[RELATED][AVOID SPINNING],[RELATED] [Bug fix] [Avoid spinning],[RELATED] [APP SPECIFIC],[Bug fix] [Avoid spinning] [APP SPECIFIC],EXISTS,,,[Reduce spinning],[Reduce sleep busy wait],,,Certain,Android,No,OS,C,,faux123/tuna,faux123,[Polling avoidance],,faux123,Kernel sched
faux123,Nexus-grouper,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for grouper kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",15/04/2013 05:11:23,,DUPLICATE,https://github.com/faux123/Nexus-grouper/commit/45ce2dfc19bd0a5ad6133704f484364589f9a013,,,[DUPLICATE],[DUPLICATE],[DUPLICATE],,EXISTS,,,,,,,,,,,,,faux123/Nexus-grouper,faux123,,,faux123,
Team-Blackout,Blackout-Monarudo,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> modified for Mako from LKML reference Signed-off-by: faux123 <reioux@gmail.com> Conflicts: kernel/power/suspend.c",15/04/2013 07:05:14,,DUPLICATE,https://github.com/Team-Blackout/Blackout-Monarudo/commit/32b58f0fcc29506ee55ab8e3bb3c2b80d2d9c7b0,,,,[VERIFIED] [FALSE-POSITIVE],,[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,Team-Blackout/Blackout-Monarudo,faux123,,,zarboz,
kszaq,kernel_lge_mako,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",15/04/2013 07:25:56,,NOT-FOUND,https://github.com/kszaq/kernel_lge_mako/commit/5dcd12d248e11e5b8300979462e5bd6d8b91ff8a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,kszaq/kernel_lge_mako,,,,,
KarthikNayak,nayak-kernel3,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for grouper kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: kernel/sched.c",15/04/2013 17:47:20,,DUPLICATE,https://github.com/nayak94/nayak-kernel3/commit/98962a32bc1762106b74ae41385cace037928d58,https://github.com/KarthikNayak/nayak-kernel3/commit/98962a32bc1762106b74ae41385cace037928d58,,[DUPLICATE],[DUPLICATE],[DUPLICATE],,EXISTS,,,,,,,,,,,,,KarthikNayak/nayak-kernel3,,,,,
geads,parsec_energy_data,[refs] Added a couple of relevant related works * bhadauria-2009-iiswc-parseccmp -- analyzes PARSEC apps performance on CMPs * hankendi-2012-date-cosched -- searches for co-scheduling configurations to improve energy efficiency,15/04/2013 20:10:45,,NOT-FOUND,https://github.com/geads/parsec_energy_data/commit/f1e102dc5f16ebd202b08afefde173a1ae04d6c7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,geads/parsec_energy_data,,,,,
voku,siyahkernel3,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",16/04/2013 00:05:35,,DUPLICATE,https://github.com/voku/siyahkernel3/commit/d4a544dcbf818b6110611965e45f01dbbbd39863,,,[DUPLICATE],[DUPLICATE],[DUPLICATE],,EXISTS,,,,,,,,,,,,,voku/siyahkernel3,longman88,,,voku,
dorimanx,Dorimanx-SG2-I9100-Kernel,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",16/04/2013 07:04:09,,DUPLICATE,https://github.com/dorimanx/Dorimanx-SG2-I9100-Kernel/commit/0026c5de9aec40f3e236e51d0cd322a475966d00,,,,,,,EXISTS,,,,,,,,,,,,,dorimanx/Dorimanx-SG2-I9100-Kernel,longman88,,,dorimanx,
squllcx,Squllcx_SGS3,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",16/04/2013 11:58:46,,NOT-FOUND,https://github.com/squllcx/Squllcx_SGS3/commit/d0000f69e426f7755832cc853354d910ee23f7f6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,squllcx/Squllcx_SGS3,,,,,
CraigComberbach,FanController,Added Altium schematic I also started redoing the code. It is too old to figure out what I was doing with it. Instead I will start again with the knowledge and experience I have aquired since then. I am also changing the chip from the PIC12F675 to the PIC24F08KL200. Mostly because I want more pins to switch the grounds and toggle a latching relay. Also partly because it is a 24F chip with power saving features and an architecture that I am more familiar with.,16/04/2013 18:16:24,,FALSE-POSITIVE,https://github.com/CraigComberbach/FanController/commit/08be65b2012175cf90b21c15960eeea3b4a020ba,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,CraigComberbach/FanController,CraigComberbach,,,CraigComberbach,
npp,npp-api,"update energy consumption model, rewrite import to bulk delete data instead of doing row by row comparisons",16/04/2013 20:18:24,,FALSE-POSITIVE,https://github.com/npp/npp-api/commit/49e57866c19e1edde1192649eae698f213feebb7,,,[FALSE-POSIVITE],[FALSE-POSITIVE] [FALSE-POSITIVE],[FALSE-POSIVITE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,npp/npp-api,bsweger,,,bsweger,
thederekjay,lge_kernel_mako,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Derek Cannata <thederekjay@gmail.com>",16/04/2013 21:32:54,,NOT-FOUND,https://github.com/thederekjay/lge_kernel_mako/commit/81be27857d236a4b4d9e7512af8b46a3ad23d3d3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,thederekjay/lge_kernel_mako,,,,,
Mustaavalkosta,htc7x30-3.0,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",17/04/2013 17:40:19,,DUPLICATE,https://github.com/Mustaavalkosta/htc7x30-3.0/commit/e978c48161bf39d102d0ad88464fb2aef224c32e,,,,,,,EXISTS,,,,,,,,,,,,,Mustaavalkosta/htc7x30-3.0,faux123,,,Mustaavalkosta,
SlimRoms,kernel_samsung_t1,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",17/04/2013 18:14:58,,OK,https://github.com/SlimRoms/kernel_samsung_t1/commit/b6538d78ba84ff7a246acbbda3dc010db883e8b4,,,[OK] [Reduce spinning],[OK] [Reduce spinning],[OK] [Reduce spinning],[Reduce spinning],EXISTS,[restrict spinning to only one task per mutex],[multiple task spinning not energy efficient],[Reduce spinning] [Reduce task spinning on mutex],[Reduce spinning],,Cool,Certain,Android,No,OS,C,restrict mutex spinning to only one task per mutex. The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. This is not very energy efficient as the spinning tasks are not doing useful work,SlimRoms/kernel_samsung_t1,longman88,[Polling avoidance],,mnm9994u,Kernel
SlimRoms,kernel_samsung_smdk4412,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",17/04/2013 18:16:30,,DUPLICATE,https://github.com/SlimRoms/kernel_samsung_smdk4412/commit/e37259725869d3a8a093ea2cbc3231207f29fe53,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/kernel_samsung_smdk4412,longman88,,,mnm9994u,
task650,kernel,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",17/04/2013 21:36:06,,NOT-FOUND,https://github.com/task650/kernel/commit/7a776163c1193607ea98812cf3fa01794949addf,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,task650/kernel,,,,,
teamgruntled,android_kernel_oppo_find5,defconfig: enable RCU_FAST_NO_HZ for SMP msm targets RCU_FAST_NO_HZ has been shown to improve power consumption thanks to CPUs entering nohz idle mode more quickly. The 7627a and 8660 configurations are omitted until they can be properly tested with RCU_FAST_NO_HZ. From https://www.codeaurora.org/gitweb/quic/la/?p=kernel/msm.git;a=commit;h=df997664f786b514cce239fa51b370a01925ce1e Change-Id: Idf9613ed0deb808d0d45c5bd76385c686574365f,17/04/2013 22:26:18,,OK,https://github.com/teamgruntled/android_kernel_oppo_find5/commit/ccaf8a0c53ef996d6aa14a2673a42c2fe0b7572b,,,[OK][enable RCU_FAST_NO_HZ],[OK] [Enable RCU_FAST_NO_HZ],[DO NOT ANALYZE],[Enable RCU_FAST_NO_HZ],EXISTS,[enable RCU_FAST_NO_HZ for SMP msm targets],[improve power consumption because CPUs enter nohz idle mode more quickly],[Enable power saving feature] [Enable RCU_FAST_NO_HZ] [Script] [Config],[Enable power saving feature],,,Certain,Android,No,OS,Defconfig,RCU_FAST_NO_HZ has been shown to improve power consumption thanks to CPUs entering nohz idle mode more quickly.,teamgruntled/android_kernel_oppo_find5,xplodwild,[Use power efficient library/device],,xplodwild,Kernel arch
MikeC84,android_kernel_htc_msm8660,"cpufreq: interactive governor: default timer 10ms, maxspeed load 95% Modify default timer from 30ms to 10ms, sampling 2 jiffies after idle exit on ARM as in Honeycomb. Modify default go_maxspeed_load from 85% loaded to 95% loaded, for use in phones where power savings is more important (tablets may be best served overriding this). Change-Id: I3361a6279979bfae1df5262666a2e30ea7a44328 Signed-off-by: Todd Poynor <toddpoynor@google.com>",17/04/2013 22:31:08,,NOT-FOUND,https://github.com/MikeC84/android_kernel_htc_msm8660/commit/c1525f4f8aeb6c9a2a8e6b261eb4509045786f92,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,MikeC84/android_kernel_htc_msm8660,,,,,
loosethisskin,android_kernel_samsung_p4,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for grouper kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",17/04/2013 22:55:31,,DUPLICATE,https://github.com/loosethisskin/android_kernel_samsung_p4/commit/de7ac21b26f0d99fc4aac18c114f827952f77c6f,,,,,,,EXISTS,,,,,,,,,,,,,loosethisskin/android_kernel_samsung_p4,faux123,,,loosethisskin,
TheDarklingWolf,Cataclysm-DDA,"Raise power consumption of power armor interface to be more in line with powering it from UPS, still twice as efficient.",17/04/2013 22:57:59,,FALSE-POSITIVE,https://github.com/TheDarklingWolf/Cataclysm-DDA/commit/4ad647ae0da88f9e1fce01a988628c1a6546ea37,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[DO NOT ANALYZE],[Game],EXISTS,,,,,,,,,,,,,TheDarklingWolf/Cataclysm-DDA,kevingranade,,,kevingranade,
Altaf-Mahdi,grouper,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for grouper kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",18/04/2013 01:56:54,,NOT-FOUND,https://github.com/Altaf-Mahdi/grouper/commit/93401be196452af4688d6427fd1eadb9b109a3c7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Altaf-Mahdi/grouper,,,,,
EgoVanautgaerden,ArduinoQuadrocopter,"updated some code, proccesing power optimalisations, power saving time kicks in faster after calibration",18/04/2013 09:07:46,,FALSE-POSITIVE,https://github.com/EgoVanautgaerden/ArduinoQuadrocopter/commit/d9d928bf02b89fbd795b1b33a9d72199639da63c,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,EgoVanautgaerden/ArduinoQuadrocopter,EgoVanautgaerden,,,EgoVanautgaerden,
teamgruntled,android_kernel_oppo_find5,defconfig: enable RCU_FAST_NO_HZ for SMP msm targets RCU_FAST_NO_HZ has been shown to improve power consumption thanks to CPUs entering nohz idle mode more quickly. The 7627a and 8660 configurations are omitted until they can be properly tested with RCU_FAST_NO_HZ. From https://www.codeaurora.org/gitweb/quic/la/?p=kernel/msm.git;a=commit;h=df997664f786b514cce239fa51b370a01925ce1e Change-Id: Idf9613ed0deb808d0d45c5bd76385c686574365f,18/04/2013 10:38:25,,DUPLICATE,https://github.com/teamgruntled/android_kernel_oppo_find5/commit/ccaf8a0c53ef996d6aa14a2673a42c2fe0b7572b,,,,,,,EXISTS,,,,,,,,,,,,,teamgruntled/android_kernel_oppo_find5,xplodwild,,,xplodwild,
ggezer,linux,"Added DVFS CPU hot-plug driver for EXYNOS4x12 Driver launches a repeatitive timer event, and watches policy and fequency changes in order to deploy cpu hot-plugging for power saving. Have tunables to tune the hotplug policy in minimal level. TODO: tunables will be exported to sysfs for easy userland reconfiguration. TODO: anticipation step can be improved. ISSUES: Current cpuidle driver on EXYNOS have extra ""POWER DOWN"" state for cpu0 when all other cores are down! So if hotplug driver shuts down all cores except core0, then system tries to put cpu0 into power down mode which results in oops. There are two ways to overcome that: 1- setting cpu_min_count of this hotplug driver's tunable to 2, 2- removing this extra state from exynos cpuidle driver. I choosed the first option to be not intrusive at the moment. However tried second approach and it works fine too.",18/04/2013 11:27:22,,RELATED,https://github.com/ggezer/linux/commit/e2160994bb97eaa2bdd89111fe4c969bd6454956,,,[?][Related],[RELATED] [Add power efficient driver] [Governor],[DO NOT ANALYZE],[Add power efficient driver] [Governor] [Related],EXISTS,,,,,,,,,,,,,ggezer/linux,ggezer,,,ggezer,
Ryuinferno,GT-I9100G-Blazing_Kernel,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",18/04/2013 12:21:42,,DUPLICATE,https://github.com/Ryuinferno/GT-I9100G-Blazing_Kernel/commit/cf66c8c97c02f7dc06eb5449b490e03ff54b3108,,,,,,,EXISTS,,,,,,,,,,,,,Ryuinferno/GT-I9100G-Blazing_Kernel,longman88,,,Ryuinferno,
Mustaavalkosta,htc7x30-3.0,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",18/04/2013 21:15:09,,DUPLICATE,https://github.com/Mustaavalkosta/htc7x30-3.0/commit/a5772e795713a2bf46c744d42c11a81284933784,,,,,,,EXISTS,,,,,,,,,,,,,Mustaavalkosta/htc7x30-3.0,longman88,,,Mustaavalkosta,
Mustaavalkosta,htc7x30-3.0,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",18/04/2013 21:18:15,,DUPLICATE,https://github.com/Mustaavalkosta/htc7x30-3.0/commit/a5772e795713a2bf46c744d42c11a81284933784,,,,,,,EXISTS,,,,,,,,,,,,,Mustaavalkosta/htc7x30-3.0,longman88,,,Mustaavalkosta,
ktoonsez,KTManta,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",18/04/2013 21:48:59,,DUPLICATE,https://github.com/ktoonsez/KTManta/commit/e5e7525fe0bcc4eab6690b4b34fd14eba2331134,,,,,,,EXISTS,,,,,,,,,,,,,ktoonsez/KTManta,longman88,,,ktoonsez,
ktoonsez,KT747-JB,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",18/04/2013 22:06:18,,DUPLICATE,https://github.com/ktoonsez/KT747-JB/commit/9e0e7f657f16eb6a6ca6c806bdbed79aff0cc032,,,,,,,EXISTS,,,,,,,,,,,,,ktoonsez/KT747-JB,longman88,,,ktoonsez,
almamouz,gsd-solar,total energy consumption,19/04/2013 08:35:13,,FALSE-POSITIVE,https://github.com/almamouz/gsd-solar/commit/d99b67fbc661c821ad2bf1e56ce78c6eb4cbea5f,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Ui],[FALSE-POSITIVE],[Ui],EXISTS,,,,,,,,,,,,,almamouz/gsd-solar,jivan-klean,,,jivan-klean,
Grarak,ButterKernel-tuna,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",19/04/2013 19:43:26,,NOT-FOUND,https://github.com/Grarak/ButterKernel-tuna/commit/c15157927ffab1da2e3f0c1396a6f269a5ccd3b9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Grarak/ButterKernel-tuna,,,,,
BytecodeMe,android_kernel_motorola_omap4-common,Changed OPP Table for lower power consumption Conflicts: arch/arm/mach-omap2/opp4xxx_data.c arch/arm/mach-omap2/opp4xxx_data.c~,20/04/2013 05:00:54,,NOT-FOUND,https://github.com/BytecodeMe/android_kernel_motorola_omap4-common/commit/797b77747c1bf8430f24580cb0d0b250b36c809a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BytecodeMe/android_kernel_motorola_omap4-common,,,,,
OSLL,ns3psm,Create dpsm.cpp distance based power save mode file,20/04/2013 07:16:14,,FALSE-POSITIVE,https://github.com/OSLL/ns3psm/commit/6d19fbdb33c31d77a8cbfc472717c1a56f7d7de2,,,[OK][Go to idle],[OK] [Go to idle],[DO NOT ANALYZE],[Go to idle],EXISTS,[distance based power save mode] [set sleep mode],[power saving],[REVIEW] [Go to idle] [Sleep based on node distance],[Enable component power saving] [Go to low power],,,Certain,?,No,Application,C++,distance based power save mode file,OSLL/ns3psm,shivasp,?,,shivasp,Application ?
OSLL,ns3psm,Create makefile1 makefile for distance based power save mode,20/04/2013 07:18:08,,FALSE-POSITIVE,https://github.com/OSLL/ns3psm/commit/295054e2a1f83a149ed18db6c33d9a7f66a75a7c,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,OSLL/ns3psm,shivasp,,,shivasp,
squllcx,Squllcx_SGS3,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com>",20/04/2013 13:02:08,,NOT-FOUND,https://github.com/squllcx/Squllcx_SGS3/commit/1a7ca09a3cdc62c4d6e27cb4c70e44e984a2b7a6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,squllcx/Squllcx_SGS3,,,,,
milaq,android_kernel_htc_kovsky,"battery: hold a wakelock while usb is powered this ensures usb connectivity even when device wants to enter suspend (read: display off) we are powered either way, so power consumption should not be an issue here",20/04/2013 15:16:20,,FALSE-POSITIVE,https://github.com/milaq/android_kernel_htc_kovsky/commit/3f69e7676efae8dbc1fdd699103357e0acec38ea,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,milaq/android_kernel_htc_kovsky,milaq,,,milaq,
TeamPA,CowboyKernel-7x30,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",20/04/2013 15:35:52,,NOT-FOUND,https://github.com/TeamPA/CowboyKernel-7x30/commit/87f31517858a8ec32d203aa41091faf0fee19f41,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamPA/CowboyKernel-7x30,,,,,
TeamPA,CowboyKernel-7x30,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",20/04/2013 15:36:13,,NOT-FOUND,https://github.com/TeamPA/CowboyKernel-7x30/commit/f4b4d27916153b6d65c9179e2fb28b4bb9adf282,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamPA/CowboyKernel-7x30,,,,,
justinberry,spaceapps2013,power consumption,21/04/2013 00:08:51,,FALSE-POSITIVE,https://github.com/justinberry/spaceapps2013/commit/0486a276a380d89c0315473f929f96253c0c4c2f,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,justinberry/spaceapps2013,zhiqiao,,,zhiqiao,
yuankoulin,wsn-simulator,Implement DirectAlgorithm and add energy consume model,21/04/2013 02:35:34,,FALSE-POSITIVE,https://github.com/yuankoulin/wsn-simulator/commit/91528804e05772febb3b6378d6f0fa639b9370f4,,,[RELATED][COUNTING ENERGY CONSUMPTION],[FALSE-POSITIVE] [Sensors],[RELATED][COUNTING ENERGY CONSUMPTION],[Sensors] [COUNTING ENERGY CONSUMPTION],EXISTS,,,,,,,,,,,,,yuankoulin/wsn-simulator,,,,,
OSLL,meshan,Power save mode triggering,22/04/2013 15:13:10,,DUPLICATE,https://github.com/OSLL/meshan/commit/e7db4d05a67b1d56d71157da246fbf7bd2cfe56f,,,,[OK] [VERIFY],,[VERIFY],EXISTS,,,,,,,,,,,,,OSLL/meshan,shivasp,,,shivasp,
OSLL,meshan,different modes of power save mode,22/04/2013 15:13:37,,RELATED,https://github.com/OSLL/meshan/commit/43d085ce2a81992425038546eff1c776893bc2a9,,,[RELATED],[RELATED] [Add power saving modes],[DO NOT ANALYZE],[Add power saving modes],EXISTS,,,,,,,,,,,,,OSLL/meshan,shivasp,,,shivasp,
ggezer,linux,"Improvement on Exynos4x12 DVFS Hotplug driver * anticipation behavior is improved. Instead of increasing target limit for closing cpu, check interval is increased and target limit for booting cpu is decreased. Thus less timer tick -> better overall system performance * hotplug ticks used in ondemand and conservative governors are now disabled when not needed(system is idle, system is under heavy load). Thus significantly improved overall system power consumption. * tunables are exported to sysfs under /sys/devices/system/cpu/dvfs-hotplug -> min_cpu_count -> max_cpu_count -> freq_load_tolerance (percentage of maximum supported frequency) -> tick_interval (in milisecond) -> tick_anticipation( to favor rising system load, 0 or 1)",22/04/2013 16:37:59,,OK,https://github.com/ggezer/linux/commit/9b0ff2c4600039403614b026c9cf52b8e6f68584,,,[OK][ondemand and conservative governors are disabled when not needed],[OK] [Disable dynamic ticks] [Disable hotplug ticks],[DO NOT ANALYZE],[Disable dynamic ticks] [Disable hotplug ticks] [ondemand and conservative governors are disabled when not needed],EXISTS,[disable ondemand and conservative governors hotplug ticks when not needed],[power saving],[Disable component when not needed] [Disable dynamic ticks] [Disable hotplug ticks when not needed],[Disable feature],,,Certain,Linux hardkernel,No,OS,C,"hotplug ticks used in ondemand and conservative governors are now disabled when not needed(system is idle, system is under heavy load). Thus significantly improved overall system power consumption.",ggezer/linux,ggezer,[Disabling feature/devices],,ggezer,Driver cpufreq
dpalacio,awesome,Power saving actions,23/04/2013 01:36:04,,NOT-FOUND,https://github.com/dpalacio/awesome/commit/f89ac1ad4f3353e171459e7e2941e92364afe06c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dpalacio/awesome,,,,,
alexshi,power-scheduling,"sched: don't do power balance on share cpu power domain Packing tasks among such domain can't save power, just performance losing. So no power balance on them. Signed-off-by: Alex Shi <alex.shi@intel.com>",23/04/2013 02:52:35,,TRADEOFF,https://github.com/alexshi/power-scheduling/commit/87fee461155409b80ec609ec5a76b160779e18ba,,,[OK][Don't power balance],[TRADEOFF] [Remove power balance],[DO NOT ANALYZE],[Remove power balance] [Don't power balance],EXISTS,[Don't power balance on share domain],[REVIEW] [No power saving] [Improve performance],,,,,Certain,Linux ?,No,Kernel,C,"sched: don't do power balance on share cpu power domain Packing tasks among such domain can't save power, just performance losing. So no power balance on them.",alexshi/power-scheduling,,Performance,,,Kernel
SlimRoms,frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. (cherry picked from commit fb48938f73e335ac66c83e6adba96431e050ec94) Change-Id: Ib8d05a38f28d7e2f0bdf9e420e5db526cf874bc6 CRs-Fixed: 430786 Conflicts: services/audioflinger/AudioFlinger.cpp",23/04/2013 11:48:46,,DUPLICATE,https://github.com/SlimRoms/frameworks_av/commit/7eb74dff05e881f6b0add4ba39464bbd3f6d2d57,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/frameworks_av,,,,,
projectDARK,kernel_lge_mako,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Derek Cannata <thederekjay@gmail.com>",23/04/2013 22:07:44,,NOT-FOUND,https://github.com/projectDARK/kernel_lge_mako/commit/6ea9d73a8f07489fed3b81017b6d2447eafd80bb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,projectDARK/kernel_lge_mako,,,,,
scotthartbti,android_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. (cherry picked from commit fb48938f73e335ac66c83e6adba96431e050ec94) Change-Id: Ib8d05a38f28d7e2f0bdf9e420e5db526cf874bc6 CRs-Fixed: 430786 Conflicts: services/audioflinger/AudioFlinger.cpp",24/04/2013 04:33:39,,DUPLICATE,https://github.com/scotthartbti/android_frameworks_av/commit/ebe9f19d7ee4e29f16927dd91d271f037b24d5af,,,,,,,EXISTS,,,,,,,,,,,,,scotthartbti/android_frameworks_av,,,,scotthartbti,
task650,kernel_underwear_manta,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",24/04/2013 14:58:24,,NOT-FOUND,https://github.com/task650/kernel_underwear_manta/commit/54ee0bea2e8d281efc90f959a3d6cd292308b833,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,task650/kernel_underwear_manta,,,,,
ptmr3,L900_Kernel,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,24/04/2013 16:44:48,,DUPLICATE,https://github.com/ptmr3/L900_Kernel/commit/2a88c6fcfaf8b8e47b59a2a5469fd94e86179211,,,,,,,EXISTS,,,,,,,,,,,,,ptmr3/L900_Kernel,AndreiLux,,,ptmr3,
aways,android_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. (cherry picked from commit fb48938f73e335ac66c83e6adba96431e050ec94) Change-Id: Ib8d05a38f28d7e2f0bdf9e420e5db526cf874bc6 CRs-Fixed: 430786 Conflicts: services/audioflinger/AudioFlinger.cpp",25/04/2013 02:18:27,,NOT-FOUND,https://github.com/aways/android_frameworks_av/commit/4b869bea2b324859601a4ba3ae89f0050dd85c03,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,aways/android_frameworks_av,,,,,
yanniks,RowShow-7x30,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",25/04/2013 18:53:07,,DUPLICATE,https://github.com/yanniks/RowShow-7x30/commit/a5772e795713a2bf46c744d42c11a81284933784,,,,,,,EXISTS,,,,,,,,,,,,,yanniks/RowShow-7x30,longman88,,,Mustaavalkosta,
projectDARK,kernel_lge_mako,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Derek Cannata <thederekjay@gmail.com>",25/04/2013 23:48:29,,NOT-FOUND,https://github.com/projectDARK/kernel_lge_mako/commit/982a407f659fa44bc118bab5e27be89792156077,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,projectDARK/kernel_lge_mako,,,,,
ts1506,samsung-kernel-aries,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",27/04/2013 18:39:34,,DUPLICATE,https://github.com/ts1506/samsung-kernel-aries/commit/e12c47a782f3e0c420cccdf0989d1fb351af4f30,,,,,,,EXISTS,,,,,,,,,,,,,ts1506/samsung-kernel-aries,longman88,,,ts1506,
SlimRoms,kernel_samsung_smdk4412,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",27/04/2013 20:00:09,,DUPLICATE,https://github.com/SlimRoms/kernel_samsung_smdk4412/commit/5366814a41721e99ae489dc20918edcf2d4c4017,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/kernel_samsung_smdk4412,faux123,,,mnm9994u,
faux123,SGH-Krait,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",28/04/2013 04:39:23,,DUPLICATE,https://github.com/faux123/SGH-Krait/commit/46e7e3500b0aa494c9176a73867f7813f1016ec6,,,,,,,EXISTS,,,,,,,,,,,,,faux123/SGH-Krait,faux123,,,faux123,
loosethisskin,kernel_omap_otter-common,"rfkill: prevent unnecessary event generation Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>",28/04/2013 18:26:20,,DUPLICATE,https://github.com/loosethisskin/kernel_omap_otter-common/commit/edf94d86a4b7ccfb6c73787df3de961e6ce33f58,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/androidarmv6/android_kernel_lge_msm7x27/commit/a6ef72fddaf6a[04daf6b0adc0da8d9c77aaadedd] [original:OK],,[VERIFY] [https://github.com/androidarmv6/android_kernel_lge_msm7x27/commit/a6ef72fddaf6a[04daf6b0adc0da8d9c77aaadedd] [original:OK],EXISTS,,,,,,,,,,,,,loosethisskin/kernel_omap_otter-common,,,,loosethisskin,
Ntemis,NOF-Nemesis,"sched: Create sched_select_non_idle_cpu() to give preferred CPU for power saving In order to save power, it would be useful to schedule light weight work on cpus that aren't IDLE instead of waking up an IDLE one. By idle cpu (from scheduler's perspective) we mean: - Current task is idle task - nr_running == 0 - wake_list is empty This is already implemented for timers as get_nohz_timer_target(). We can figure out few more users of this feature, like workqueues. This patch converts get_nohz_timer_target() into a generic API sched_select_non_idle_cpu() so that other frameworks (like workqueue) can also use it. This routine returns the cpu which is non-idle. If the local CPU isn't idle OR all cpus are idle, local cpu is returned back. If local cpu is idle, then we must look for another CPU which isn't idle. This patch reuses the code from get_nohz_timer_target() routine, which had similar implementation. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Seongmin Park <r_data@naver.com>",28/04/2013 18:38:55,,DUPLICATE,https://github.com/Ntemis/NOF-Nemesis/commit/2b2dc49ea9c4bad9f99b13a0fc03f2f5b19ef16e,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/faux123/mako/commit/afb029d6fef136b9fbf2fbb8404a1598dc1604e9] [original:RELATED],[DUPLICATE] [afb029d6fef136b9fbf2fbb8404a1598dc1604e9],[VERIFY] [https://github.com/faux123/mako/commit/afb029d6fef136b9fbf2fbb8404a1598dc1604e9] [original:RELATED] [afb029d6fef136b9fbf2fbb8404a1598dc1604e9],EXISTS,,,,,,,,,,,,,Ntemis/NOF-Nemesis,simone201,,,Ntemis,
Ntemis,NOF-Nemesis,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",28/04/2013 19:23:14,,DUPLICATE,https://github.com/Ntemis/NOF-Nemesis/commit/5295911c69e6083802822748a99dff056f21c014,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/NOF-Nemesis,longman88,,,Ntemis,
Ntemis,NOF-Nemesis,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",28/04/2013 19:24:28,,DUPLICATE,https://github.com/Ntemis/NOF-Nemesis/commit/c97d5f0c1d52678b972a08af6fdf0f9c5cfe60a8,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/NOF-Nemesis,faux123,,,Ntemis,
ericvrp,PowerToThePeople,Ignore extremely high power consumptions because it's probably a measurement error,28/04/2013 20:40:11,,FALSE-POSITIVE,https://github.com/ericvrp/PowerToThePeople/commit/ee551968cc1f888467b2f1c881bcf12b5f4a7996,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,ericvrp/PowerToThePeople,ericvrp,,,ericvrp,
xioTechnologies,DressCode-Firmware,reduced to 4 MIPS for 6mA power consumption,29/04/2013 00:47:18,,OK,https://github.com/xioTechnologies/DressCode-Firmware/commit/3ea680a651b98eb311638a0d4a526d82d60ccd8f,,,[OK][Used a fixed power consumption value],[OK] [Limit number of instructions per second],[DO NOT ANALYZE],[Limit number of instructions per second] [Used a fixed power consumption value],EXISTS,[reduce numto 4 MIPS],[power saving],[Limit number of instructions per second],[Limit computation],,,Certain,Embedded !,No,Application,C,reduced to 4 MIPS for 6mA power consumption,xioTechnologies/DressCode-Firmware,xioTechnologies,[Miscellaneous],,xioTechnologies,Embedded application
prcweb,prcweb.github.com,Correct data - GDP and energy consumption were swapped,29/04/2013 13:03:55,,FALSE-POSITIVE,https://github.com/prcweb/prcweb.github.com/commit/8f04db5bbd8cdb03e56a4e1052a0ca96b6b5efc6,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Data],[FALSE-POSITIVE],[Data],EXISTS,,,,,,,,,,,,,prcweb/prcweb.github.com,prcweb,,,prcweb,
KDGDev,translation-tool,"Fixed firmware power consumption (please, delete batterystats.bin)",29/04/2013 18:05:57,,BINARIES,https://github.com/KDGDev/translation-tool/commit/4ac916a68a1b312c5ac98c28334ed6397b99c84f,,,,,,,EXISTS,,,,,,,,,,,,,KDGDev/translation-tool,miuirussia,,,miuirussia,
eobropta,16.83-power-subsystem,Added power consumption plotter,30/04/2013 02:02:51,,FALSE-POSITIVE,https://github.com/eobropta/16.83-power-subsystem/commit/5b613eda8aa420e8da4735ae35d50e5aee82f949,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,eobropta/16.83-power-subsystem,eobropta,,,eobropta,
MikkoSaarisalo,mavlink,"Update common.xml Proposal to add direct battery charge and energy consumption reporting in addition or instead of the current percentage of battery. The problem with the battery percentage is that the on-board system in most cases does not natively know the size of the energy storage and relies on the (possibly) configured battery capacity value. In case of changing the battery on the field there may be different battery size or there may be a different type of power source on board. In any case, the percentage value is secondary information and dependent on a pre-configured capacity value, which may or may not be correct or relevant. If the on-board system has capability to report any consumption numbers, it almost certainly is measuring current and voltage samples. These are primary information available to be reported and should be reported. Possibly it could make sense to split message 147 to two separate messages: 1) multi-cell battery individual cell voltage reporting 2) total voltage & current readings and derivatives.",30/04/2013 08:25:34,,FALSE-POSITIVE,https://github.com/MikkoSaarisalo/mavlink/commit/da62582b0876e73acce5c1d02754275797781134,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Resouce],[FALSE-POSITIVE],[Resouce],EXISTS,,,,,,,,,,,,,MikkoSaarisalo/mavlink,MikkoSaarisalo,,,MikkoSaarisalo,
opensystemsassociation,southendtransportresearch,Added notes on power consumption,30/04/2013 15:19:57,,FALSE-POSITIVE,https://github.com/opensystemsassociation/southendtransportresearch/commit/b5f0a5aec999c4b229bb3df4fe2acd700598aae1,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,opensystemsassociation/southendtransportresearch,anthillsocial,,,anthillsocial,
MikkoSaarisalo,mavlink,"1. Fixed field closing tag. 2. Increased current and energy consumption field sizes. Field size increase to accommodate kilowatt-size power trains and long missions. A more airlink economical option would be to use one scalar byte for both of the consumption fields. However, not sure if the savings would carry their weight in added complexity.",01/05/2013 10:40:36,,FALSE-POSITIVE,https://github.com/MikkoSaarisalo/mavlink/commit/ff1e0f07f4fbc5c74da80959147a1120a119e495,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Bug fix] [Resource],[FALSE-POSITIVE],[Bug fix] [Resource],EXISTS,,,,,,,,,,,,,MikkoSaarisalo/mavlink,MikkoSaarisalo,,,MikkoSaarisalo,
adein,Tasker,"Import of Power saving/management project. This project turns mobile data and autosync on and off automatically to reduce power consumption while the phone is inactive, turns Wifi and Bluetooth off when disconnected for a period of time, and reduces screen brightness and timeout when battery levels get low.",01/05/2013 11:24:18,,OK,https://github.com/adein/Tasker/commit/ef6669ee93562d4f14b44fca1b38f7871029caf1,,,[Disabling devices],[OK] [Add power saving profile] [Disable components],[DO NOT ANALYZE],[Add power saving profile] [Disable components],EXISTS,[turns mobile data and autosync on and off automatically] [turns Wifi and Bluetooth off when disconnected for a period of time] [reduces screen brightness and timeout when battery levels get low],[reduce power consumption],[Disable components] [Disable components on inactivity] [Disable components when battery is low] [Script] [Tasker],[Disable device] [Condition: on inactivity],[Reduce brightness] [2:Decrease timeout] [Condition: batery low],Multiple changes,Certain,Android,No,Application,Tasker,"Import of Power saving/management project. This project turns mobile data and autosync on and off automatically to reduce power consumption while the phone is inactive, turns Wifi and Bluetooth off when disconnected for a period of time, and reduces screen brightness and timeout when battery levels get low.",adein/Tasker,adein,[Disabling feature/devices],[on inactivity],adein,Application
BlizzardFenrir,Imbrium,Added some more stuff. Added layers to maps. Added energy consumption.,01/05/2013 16:16:19,,NOT-FOUND,https://github.com/BlizzardFenrir/Imbrium/commit/57ef9adcaaa3a1e0a464345fa0dc8b787f3ebb34,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BlizzardFenrir/Imbrium,,,,,
lanoxx,ldsc,powerconsumption (todo save powerconsumption in the scheduler),02/05/2013 16:28:03,,FALSE-POSITIVE,https://github.com/lanoxx/ldsc/commit/7498f26bf401f45a51e331235fd86a413bf9d2aa,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,lanoxx/ldsc,patpeti,,,patpeti,
gustavoss,siyahkernel3,"New gpu control interface, mali boost on touch, gpu utilization timeout, wifi power saving mode, credits @ kijodoari",03/05/2013 04:29:26,,NOT-FOUND,https://github.com/gustavoss/siyahkernel3/commit/159e26b103ed87f796858a4624bddfaf216beefe,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,gustavoss/siyahkernel3,,,,,
Keff,samsung-kernel-msm7x30,Bluetooth: hci_ath: Support BT Power Save mode on AR3002 Configure AR3002 wake up pins properly to enable BT Power save mode. Change-Id: Idefe3276d60ca4993700de5337dd75b181986eb2 Signed-off-by: Ram Mohan Korukonda <rkorukon@codeaurora.org>,03/05/2013 08:41:25,,NOT-FOUND,https://github.com/Keff/samsung-kernel-msm7x30/commit/b19b452cddad1abbddc400f13d518c44411f3b1b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Keff/samsung-kernel-msm7x30,,,,,
huchengtw-moz,gaia,Bug 827109 - [System] add a notification while entering power saving mode automatically.,03/05/2013 10:48:24,,NOT-FOUND,https://github.com/huchengtw-moz/gaia/commit/3158adb51f719a25f6250cdd20dd6efc413190e9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,huchengtw-moz/gaia,,,,,
KiWiX-s2,KiWiX-s2,"cambios en WiFi power saving mode, ahora si funciona correctamente, gracias gustavo_s",03/05/2013 15:00:32,,UNABLE-TO-CATEGORIZE,https://github.com/KiWiX-s2/KiWiX-s2/commit/1fdd5ade6b6ad0b43fb41f9fc4ad4fddb722e867,,,[FALSE-POSITIVE],[UNABLE-TO-CATEGORIZE] [Bug fix] [Fix power saving mode] [Fix wifi power saving mode],[DO NOT ANALYZE],[Bug fix] [Fix power saving mode] [Fix wifi power saving mode],EXISTS,,,,,,,,,,,,,KiWiX-s2/KiWiX-s2,kijodoari,,,kijodoari,
yaolet,mztx06a,"Ok, simplified the usleep logic, its ok, not super power saving, but the performance is really amazing.",03/05/2013 22:00:20,,UNABLE-TO-CATEGORIZE,https://github.com/yaolet/mztx06a/commit/aee8edab556ad1192de60afea08ba478ec3c863d,,,[OK][Go to idle],[OK] [Use fixed sleep time],[DO NOT ANALYZE],[Use fixed sleep time] [Go to idle],EXISTS,[simplified the usleep logic],[not super power saving],[Use fixed sleep time] [Increase sleep time] [Go to sleep],?,,,Certain,Raspberry Pi,No,Embedded library/platform,C,"Ok, simplified the usleep logic, its ok, not super power saving, but the performance is really amazing",yaolet/mztx06a,yaolet,?,,yaolet,Library
Ntemis,NOF-Nemesis,"OMAP4: PM: IVA AUTO RET relaxed workaround in idle path AUTO RET for IVA VDD Cannot be permanently enabled during OFF mode due to potential race between IVA VDD entering RET and start of Device OFF mode. It is mandatory to have AUTO RET for IVA VDD exlusive with Devide OFF mode. In order to avoid lockup in OFF mode sequence, system must ensure IVA voltage domain transitions straight from stable ON to OFF. In addition, management of IVA VDD SmartReflex sensor at exit of idle path may introduce a misalignment between IVA Voltage Controller state and IVA PRCM voltage FSM based on following identified scenario: IVA Voltage Controller is woken-up due to SmartReflex management while IVA PRCM voltage FSM stays in RET in absence of any IVA module wake-up event (which is not systematic in idle path as opposed to MPU and CORE VDDs being necessarily woken up with MPU and CORE PDs). WA involves: Ensure stable ON-OFF transition for IVA voltage domain during OFF mode sequence. Ensure VCON and PRCM FSM are kept aligned due to IVA SR handling in idle path. 1) AUTO RET for IVA VDD is enabled entering in idle path, disabled exiting idle path and IVA VDD is always woken-up with a SW dummy wakeup. 2) OFF mode is enabled only in Suspend path. 3) AUTO RET for IVA VDD remains disabled in Suspend path (before OFF mode). REVISIT: Update the patch once proper Errata is out for 44xx. Benefits: 1) This patch ensures it is possible to gate SYS_CLK during OS-Idle LCD OFF when all domains are idled, saving up to 2mA at VBAT from external clock buffer. 2) IVA voltage domain is now allowed to scale to Retention during idle which reduces power consumption on all types of use case allowing extensive use of idle path (e.g.: Home screen, Page reading). Effects are especially visible if system uses Smart-Reflex Class 1.5 compared to Class 3 considering the increased difference of voltage from converged Voltage SR vs Retention voltage. TODO: quantify the actual savings from IVA-RET with further measurements. Change-Id: I01f0431f7556f0baf0b5b6b42092cd11c2442f00 Signed-off-by: Cedric Vamour <c-vamour@ti.com> Conflicts: arch/arm/mach-omap2/pm44xx.c Conflicts: arch/arm/mach-omap2/pm44xx.c",03/05/2013 22:47:24,,DUPLICATE,https://github.com/Ntemis/NOF-Nemesis/commit/1ac433c3b44460877dbe895f3039c5848b036808,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5] [original:OK],[OK],[VERIFY] [https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5] [original:OK],EXISTS,,,,,,,,,,,,,Ntemis/NOF-Nemesis,,,,Ntemis,
stevetrease,nodejs,Added cummulative power consumption for each browser,04/05/2013 18:18:53,,FALSE-POSITIVE,https://github.com/stevetrease/nodejs/commit/8c56b0164028846c90e9b015fe67917badec3494,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,stevetrease/nodejs,stevetrease,,,stevetrease,
sola-dolphin1,platform_frameworks_base,Implement the Energy saving settings.,06/05/2013 01:11:24,,RELATED,https://github.com/sola-dolphin1/platform_frameworks_base/commit/52985beec7817c8499b8a2058553db1a49714a31,,,[RELATED] [Added power menu],[RELATED] [Added power menu],[RELATED] [ADD POWER MENU],[Added power menu] [ADD POWER MENU],EXISTS,,,,,,,,,,,,,sola-dolphin1/platform_frameworks_base,,,,,
sola-dolphin1,platform_packages_apps_settings,Implement the Energy saving settings.,06/05/2013 01:14:14,,RELATED,https://github.com/sola-dolphin1/platform_packages_apps_settings/commit/15ebca673b282f358b0ce3a7d888dd97770314e6,,,[RELATED] [Added power menu],[RELATED] [Added power menu],[RELATED] [ADD POWER MENU],[Added power menu] [ADD POWER MENU],EXISTS,,,,,,,,,,,,,sola-dolphin1/platform_packages_apps_settings,,,,,
huchengtw-moz,gaia,Bug 827109 - [System] add a notification while entering power saving mode automatically.,06/05/2013 06:31:47,,NOT-FOUND,https://github.com/huchengtw-moz/gaia/commit/7107f293ca722103768fc605d83cd1706fd1a24d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,huchengtw-moz/gaia,,,,,
huchengtw-moz,gaia,Bug 827109 - [System] add a notification while entering power saving mode automatically.,06/05/2013 07:41:54,,NOT-FOUND,https://github.com/huchengtw-moz/gaia/commit/63c87cf2fd7d30f008c7ff7d31068ab7abdd8c17,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,huchengtw-moz/gaia,,,,,
iodak,LG_X3_P880_v20a,removed LG core power save pluging for now,06/05/2013 11:07:53,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/iodak/LG_X3_P880_v20a/commit/7e30b368fb82eb478f707259e0b296a3bd247fe8,,,[?][TRADE-OFF],[TRADEOFF-UNABLE-TO-CATEGORIZE] [Remove power saving],[DO NOT ANALYZE],[Remove power saving] [TRADE-OFF],EXISTS,,,,,,,,,,,,,iodak/LG_X3_P880_v20a,iodak,,,iodak,
stevetrease,nodejs,CSS for index.html and daily/hourly cumulative power consumpion,06/05/2013 15:10:53,,FALSE-POSITIVE,https://github.com/stevetrease/nodejs/commit/2283bd2eefc5340ab4e8942a0a773ccc35fd519a,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,stevetrease/nodejs,stevetrease,,,stevetrease,
keho98,tickle-band,Added power saver codes,07/05/2013 01:22:44,,UNABLE-TO-CATEGORIZE,https://github.com/keho98/tickle-band/commit/31f3f877cbec19cdc367f5e18d084b9764fe6213,,,[Unable to categorize],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,keho98/tickle-band,keho98,,,keho98,
fancydropbear,AstroLab,Statistics for DDsat Detumbling (Gyroscope Method) This scrip gives a basic statistics for DDsatDetumbling.m Check the mean and standard deviation of detumbling time and power consumption.,08/05/2013 16:11:44,,FALSE-POSITIVE,https://github.com/fancydropbear/AstroLab/commit/9ceacfa65b8140c191403853630eb6dd0dcc99b2,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,fancydropbear/AstroLab,fancydropbear,,,fancydropbear,
fancydropbear,AstroLab,Addded statistics for Bdot with Errors detumbling Show the statistics result for detumbling time and power consumption for Bdot method with errors,08/05/2013 17:27:40,,FALSE-POSITIVE,https://github.com/fancydropbear/AstroLab/commit/1be99af249a5d38ed6380dcd2dafa4dfa6d8d467,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,fancydropbear/AstroLab,fancydropbear,,,fancydropbear,
simphax,Touchmote,Fixed reconnecting from power save,08/05/2013 23:18:46,,FALSE-POSITIVE,https://github.com/simphax/Touchmote/commit/a81a6553a85f07d9861640b611b6b3e7be41d902,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Bug fix],[DO NOT ANALYZE],[Bug fix],EXISTS,,,,,,,,,,,,,simphax/Touchmote,simphax,,,simphax,
temasek,android_kernel_samsung_smdk4412,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",09/05/2013 05:56:29,,DUPLICATE,https://github.com/temasek/android_kernel_samsung_smdk4412/commit/d210b7a7d6101e219b83e19d4dd90de16e2e5796,,,,,,,EXISTS,,,,,,,,,,,,,temasek/android_kernel_samsung_smdk4412,faux123,,,temasek,
nasenatmer,ftw,Add backlight power saving.,09/05/2013 10:47:19,,OK,https://github.com/nasenatmer/ftw/commit/614dd1e2615d0300e3a4bd7066f19bdb3e568c9c,,,[OK][Decrease brightness],[OK][Decrease brightness],[DO NOT ANALYZE],[Decrease brightness],EXISTS,[Dim Backlight],[power saving],[Decrease brightness] [Script] [Config],[Decrease brightness],,,Certain,Linux ?,No,Libraries and Utilities,Bash,Add backlight power saving.,nasenatmer/ftw,nasenatmer,[Display and UI tuning],,nasenatmer,Script bash
nasenatmer,ftw,# This is a combination of 2 commits. # The first commit's message is: Add backlight power saving. # The 2nd commit message will be skipped: # Check existence of config functions,09/05/2013 11:09:24,,DUPLICATE,https://github.com/nasenatmer/ftw/commit/a0b67b9f816851cbd213f62b7e3102bf0bf688ec,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/nasenatmer/ftw/commit/614dd1e2615d0300e3a4bd7066f19bdb3e568c9c] [original:OK],[?] [OK],[VERIFY] [https://github.com/nasenatmer/ftw/commit/614dd1e2615d0300e3a4bd7066f19bdb3e568c9c] [original:OK] [OK],EXISTS,,,,,,,,,,,,,nasenatmer/ftw,nasenatmer,,,nasenatmer,
nasenatmer,ftw,Add backlight power saving.,09/05/2013 11:17:29,,DUPLICATE,https://github.com/nasenatmer/ftw/commit/6427ed396c69cbe20fee06218258b6ac1831d197,,,,,,,EXISTS,,,,,,,,,,,,,nasenatmer/ftw,nasenatmer,,,nasenatmer,
supplantr,ftw,Add backlight power saving.,09/05/2013 20:41:01,,DUPLICATE,https://github.com/supplantr/ftw/commit/329b5be4356b8ac3eebc0015d7cb4fc87ce5b985,,,,,,,EXISTS,,,,,,,,,,,,,supplantr/ftw,nasenatmer,,,supplantr,
MinoochX,lge-kernel-star,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Signed-off-by: nicholas <firepoison35@gmail.com> Conflicts: kernel/sched/core.c",09/05/2013 21:39:31,,DUPLICATE,https://github.com/MinoochX/lge-kernel-star/commit/fdef0ed9cfb6dc88076d6847b4e43da50f54a0ee,,,[DUPLICATE],[DUPLICATE],[DUPLICATE],,EXISTS,,,,,,,,,,,,,MinoochX/lge-kernel-star,longman88,,,,
aznrice,kernel_htc_msm8960,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",10/05/2013 03:10:07,,DUPLICATE,https://github.com/aznrice2k4/kernel_htc_msm8960/commit/09fe414e48141fb710497ac1f3d97d2c26afc8b9,https://github.com/aznrice/kernel_htc_msm8960/commit/09fe414e48141fb710497ac1f3d97d2c26afc8b9,,,,,,EXISTS,,,,,,,,,,,,,aznrice/kernel_htc_msm8960,,,,,
huchengtw-moz,gaia,Bug 827109 - [System] add a notification while entering power saving mode automatically.,10/05/2013 03:33:09,,DUPLICATE,https://github.com/huchengtw-moz/gaia/commit/5141767bd149994469e363f7be84639ecf775aa8,,,,,,,EXISTS,,,,,,,,,,,,,huchengtw-moz/gaia,huchengtw-moz,,,huchengtw-moz,
mozilla-b2g,gaia,"Merge pull request #9540 from huchengtw-moz/first-bug Bug 827109 - [System] add a notification while entering power saving mode, r=alive",10/05/2013 03:35:12,,FALSE-POSITIVE,https://github.com/mozilla-b2g/gaia/commit/b31310565b6be3356507178e782aae88a74a20a0,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,alivedise,,,alivedise,
djintrigue808,lge-kernel-mako,"msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org>",10/05/2013 06:52:10,,NOT-FOUND,https://github.com/djintrigue808/lge-kernel-mako/commit/ebe0a159e07fcaaca38b99dfc699ffdec8b85244,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,djintrigue808/lge-kernel-mako,,,,,
buildingfirefoxos,Building-Blocks,Bug 827109 - [System] add a notification while entering power saving mode automatically.,10/05/2013 07:00:31,,DUPLICATE,https://github.com/buildingfirefoxos/Building-Blocks/commit/5141767bd149994469e363f7be84639ecf775aa8,,,,,,,EXISTS,,,,,,,,,,,,,buildingfirefoxos/Building-Blocks,huchengtw-moz,,,huchengtw-moz,
gaye,gaia,Bug 827109 - [System] add a notification while entering power saving mode automatically.,10/05/2013 17:39:12,,DUPLICATE,https://github.com/gaye/gaia/commit/5141767bd149994469e363f7be84639ecf775aa8,,,,,,,EXISTS,,,,,,,,,,,,,gaye/gaia,huchengtw-moz,,,huchengtw-moz,
RonGokhale,codeaurora_kernel,net: wireless: bcmdhd: Update to version 1.88.16 - Change the logic to enable Power save mode for STA or P2P GC - Fix protxstatus bug for corner case - Reset uninitialized value for mac entry - Remove dhd_wlfc_init/deinit in wl_android.c - Fix IBSS mode Change-Id: I4589e87eda456798eae48548261a1f7cb9542660 Signed-off-by: Dmitry Shmidt <dimitrysh@google.com>,11/05/2013 07:00:20,,OK,https://github.com/RonGokhale/codeaurora_kernel/commit/05485840822d6139a1031989e0c3e14ca09e54de,,,[OK][Enable power saving mode],[OK][Enable power saving mode],[DO NOT ANALYZE],[Enable power saving mode],EXISTS,[enable Power save mode for STA or P2P GC] [add PM Enable timer to go to power save mode],[power saving],[Go to low power on inactivity timeout],[Add timeout] [Sub1: Disable device],,Maybe UTC,Certain,Codeaurora,No,OS,C,Change the logic to enable Power save mode for STA or P2P GC,RonGokhale/codeaurora_kernel,,[Timing out],,,Driver net
dorimanx,initramfs3,UKSM: small corrections to save power and allow access. when setting cpu_governor to full max_cpu set to 95 and when cpu_governor to low max_cpu set to 20 by auto. so i correct to 85 for awake state.,11/05/2013 10:54:11,,OK,https://github.com/dorimanx/initramfs3/commit/cb7c7f0a114251c3431309f61ed63a73af5993ff,,,[OK][DVFS],[OK] [Scale CPU frequency],[DO NOT ANALYZE],[Scale CPU frequency] [DVFS],EXISTS,[config governor] [small corrections decrease max cpu and increase min cpu],[power saving],[Reduce max CPU frequency] [Scale CPU frequency] [Script] [Config] [Configure governor],[DVFS] [Sub1: Governor tuning],,Multiple changes,Certain,Android,No,Libraries and Utilities,Shell,UKSM: small corrections to save power and allow access,dorimanx/initramfs3,dorimanx,[Frequency and voltage scaling],,dorimanx,Script sbin/shell
edoko,Air_Kernel-Mako,net: wireless: bcmdhd: Update to version 1.88.16 - Change the logic to enable Power save mode for STA or P2P GC - Fix protxstatus bug for corner case - Reset uninitialized value for mac entry - Remove dhd_wlfc_init/deinit in wl_android.c - Fix IBSS mode Change-Id: I4589e87eda456798eae48548261a1f7cb9542660 Signed-off-by: Dmitry Shmidt <dimitrysh@google.com>,11/05/2013 12:19:25,,DUPLICATE,https://github.com/edoko/Air_Kernel-Mako/commit/05485840822d6139a1031989e0c3e14ca09e54de,,,,,,,EXISTS,,,,,,,,,,,,,edoko/Air_Kernel-Mako,,,,,
Grarak,ButterKernel-tuna,net: wireless: bcmdhd: Update to version 1.88.16 - Change the logic to enable Power save mode for STA or P2P GC - Fix protxstatus bug for corner case - Reset uninitialized value for mac entry - Remove dhd_wlfc_init/deinit in wl_android.c - Fix IBSS mode Change-Id: I4589e87eda456798eae48548261a1f7cb9542660 Signed-off-by: Dmitry Shmidt <dimitrysh@google.com> Conflicts: drivers/net/wireless/bcmdhd/wl_cfg80211.c,11/05/2013 23:38:12,,NOT-FOUND,https://github.com/Grarak/ButterKernel-tuna/commit/f08e573d4d2bf304b4b3d37ad0aec8721539adaf,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Grarak/ButterKernel-tuna,,,,,
ktoonsez,KTManta,net: wireless: bcmdhd: Update to version 1.88.16 - Change the logic to enable Power save mode for STA or P2P GC - Fix protxstatus bug for corner case - Reset uninitialized value for mac entry - Remove dhd_wlfc_init/deinit in wl_android.c - Fix IBSS mode Change-Id: I4589e87eda456798eae48548261a1f7cb9542660 Signed-off-by: Dmitry Shmidt <dimitrysh@google.com>,12/05/2013 07:12:04,,DUPLICATE,https://github.com/ktoonsez/KTManta/commit/b0df7054ca3dea53ad1ea0550e9e3561726d4c35,,,,,,,EXISTS,,,,,,,,,,,,,ktoonsez/KTManta,,,,ktoonsez,
linux-sunxi,linux-sunxi,net: wireless: bcmdhd: Update to version 1.88.16 - Change the logic to enable Power save mode for STA or P2P GC - Fix protxstatus bug for corner case - Reset uninitialized value for mac entry - Remove dhd_wlfc_init/deinit in wl_android.c - Fix IBSS mode Change-Id: I4589e87eda456798eae48548261a1f7cb9542660 Signed-off-by: Dmitry Shmidt <dimitrysh@google.com>,12/05/2013 11:13:36,,DUPLICATE,https://github.com/linux-sunxi/linux-sunxi/commit/05485840822d6139a1031989e0c3e14ca09e54de,,,,,,,EXISTS,,,,,,,,,,,,,linux-sunxi/linux-sunxi,,,,,
mcdope,lge-kernel-omap4,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>",12/05/2013 14:47:51,,DUPLICATE,https://github.com/mcdope/lge-kernel-omap4/commit/fd2bba37e261b7be271fbd64e0a1e1c5d2829418,,,,,,,EXISTS,,,,,,,,,,,,,mcdope/lge-kernel-omap4,grygoriyS,,,mcdope,
NikolaiSamteladze,USF_Personal_Site,Tests for Energy Profiler & Publishing script 1. Test files for network power consumption experiments in DELTA Energy Profiler 2. Script to publish the web site,13/05/2013 08:27:36,,FALSE-POSITIVE,https://github.com/NikolaiSamteladze/USF_Personal_Site/commit/341afc6de75f3ccf80aefdacfe8f0904871829be,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,NikolaiSamteladze/USF_Personal_Site,,,,,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"OMAP4: PM: Handle LPDDR CLK IO errata during suspend/idle There is a HW bug in CMD PHY which gives ISO signals as same for both PADn and PADp on differential IO pad, because of which IO leaks higher as pull controls are differential internally and pull value does not match A value. Though there is no functionality impact due to this bug, it is seen that by disabling the pulls there is a savings ~500uA in OSWR, but draws ~300uA more during OFF mode. To save power during both idle/suspend following approach taken: 1) Enable WA during boot-up. 2) Disable WA while attempting suspend and enable during resume. CDDS no: OMAP4460-1.0BUG00291 (OMAP official errata ID yet to be available). Change-Id: Ic39f17be50ff602c71e714b05af3811b35c1a67f Reported-by: Logan Lee <hklee@ti.com> Signed-off-by: Shashi Shekar B.S. <shashi.shekar@ti.com> Signed-off-by: Ambresh K <ambresh@ti.com>",13/05/2013 11:02:24,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/0705c9710c796e88cef3667446a06895575233b6,,,[OK][Disabling devices],[OK] [Disable component] [Android],[DO NOT ANALYZE],[Disable component] [Android] [Disabling devices],EXISTS,"[Enable WA during boot-up, disable during suspend and reenable on resume]",[save power during both idle/suspend],[REVIEW] [Bug fix],[Disable device] [Energy bug] ?,,,Certain,Android,CDDS no: OMAP4460-1.0BUG00291,OS,C,To save power during both idle/suspend following approach taken: 1) Enable WA during boot-up. 2) Disable WA while attempting suspend and enable during resume.,RAZR-K-Devs/android_kernel_motorola_omap4-common,Ambresh,[Energy bug],,dtrail,Kernel arch
Dm47021,Warp_Jellybean_7,ADD: put eMMC in sleep (cmd5) mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend to minimize power consumption.,15/05/2013 06:42:22,,DUPLICATE,https://github.com/Dm47021/Warp_Jellybean_7/commit/8c552c57e579da6ccdc8ac7b1d89249e1e41a670,,,,[VERIFIED] [https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad],,[https://github.com/BobZhome/GingerKernel-thunderc/commit/1a5038d0e9518d572e7e49af148a710fab77b2ad],EXISTS,,,,,,,,,,,,,Dm47021/Warp_Jellybean_7,Dm47021,,,Dm47021,
denis-m-tyurin,ethernet-alarm,Power consumption optimization. Enabled watchdog. Fixed DHCP setting bug. Removed UDP server functionality. Signed-off-by: denis-m-tyurin <denis.m.turin@gmail.com>,15/05/2013 06:50:31,,OK,https://github.com/denis-m-tyurin/ethernet-alarm/commit/069f90a766da9949cc43bd3c9defbb6e9ade6f5a,,,[OK][Go to idle],[OK] [Go to idle] [Set sleep mode],[DO NOT ANALYZE],[Go to idle] [Set sleep mode],EXISTS,[use power save mode to keep T2 running],[power saving],[Go to sleep] [Set sleep mode],[Go to low power],,,Certain,Embedded,No,Application,C,Power consumption optimization.,denis-m-tyurin/ethernet-alarm,denis-m-tyurin,[Low power idling],,denis-m-tyurin,Embedded application
ryrzy,s3_JB,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values. thx to AndreiLux",15/05/2013 09:44:45,,NOT-FOUND,https://github.com/ryrzy/s3_JB/commit/816481a841f27a8b02059770e5826e21d56d5ea7,,,bf3bd7010bb335fe2989f8d3d5eeb00589fe5f6d,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ryrzy/s3_JB,,,,,
ckorn,PlayDeb,"openra: 20130514-1~getdeb1 * New upstream version All mods: Destroyed bridges can now be repaired with an engineer. Significantly improved AI. Added (beta) support for left-click mouse orders via the settings menu. Added ""move viewport to group"" hotkey (home key or double tap group number). Exposed several new and/or hidden preferences in the settings menu. Games can now be paused with a hotkey (F9 by default) or by opening the menu in a single player game. New/improved UI for spectators and defeated players. Improved server list and lobby UI. Fixed units attacking enemy units hidden by fog/shroud. Fixed several other visibility-related bugs. Improved range circle contrast against terrain. Fixed UI notification sound issues. Added ""Reset Exploration"" developer option (same effect as the hide-map crate). Fixed the visibility of peripheral effects for spectators/replays (ranks, production bars, etc). Improved aircraft contrail rendering. Fixed issue with harvesters not undocking when a refinery is destroyed. Fixed civilian building rendering. Added in-game player statistics for spectators (RA and D2K only). Added ""Fragile Alliances"" option, allowing alliances to be changed during free-for-all games (RA and D2K only). Added a tooltip that shows provided and drained power (RA and D2K - C&C already had this) Improved ingame chat dialog (RA and D2K only). Red Alert: Added Mobile Gap Generator. Added Mobile Radar Jammer (jams radar and deflects enemy missiles). Added desert theater (ported from C&C plus additional custom tiles by Harrison). Removed Volkov. Added announcer voice upon game start. Civilians now panic when attacked. Added a new desert-themed shellmap inspired by C&C Generals. Added ice floe actors for use on snow maps. Several improvements to the original shellmap. New missions: Allies03, Allies04, Soviet01Classic, MonsterTankMadness, Survival01. New maps: Room Convergence, Ghost Town, Bad Neighbors. Improved maps: Chaos Canyon, Bomber John, Bombardment Islands. Fixed Mechanic repair cursor. Fixed graphics for craters for snow maps. Re-enabled ""Mud"" music track. Fixed supply track shadow. Added unit production hotkeys. Fixed Airfield tooltip. Changed minimap color of gems to blue. Gap Generator shroud now disappears on low-power/death. Added support for Nyerguds music upgrade pack. Fixed target line/flash for Demo Truck targets. Added building death frames for Construction Yard, Power Plants and Ore Refinery. Improved Ore Silo artwork (more fill states). Improved Weapon Factory door animation and prevented the door closing before units exited. Changed building placement color to black on snow maps for increased contrast. Fixed Attack Dog sound. Added duration indicators for units under Chronosphere and Iron Curtain effects. Fixed Tanya shooting buildings and using C4 on barrels. Fixed Chrono Tank being unable to crush infantry/sandbags or trigger mines. Balance changes: Base defense damage reduced against structures. Pillbox armor increased from wood to heavy. Construction Yard armor reduced/health increased. Construction Yard is now unsellable to prevent Mobile Construction Vehicle crate exploit. Superweapon health increased. Chrono Tank damage increased/health increased/Chrono-shift range limit added/Chronosphere prerequisite added. Demo Truck cost increased/health reduced/speed reduced. Disguised Spies are now hidden from enemy GPS. Added build limit to Missile Silo and Tanya. Oil derricks are now repairable by engineers. Minelayers can now detect mines, allowing other units to target and destroy them. Nukes can destroy ore wells and trees. Tesla Tank health increased. Medium Tank damage increased. Mammoth Tank turret rotation speed increased/damage increased. Badger bomber health increased. Cruiser speed increased. Missile Sub accuracy increased. C&C: Building range and a short construction delay added to Construction Yards to prevent base walking. Mobile SAM launcher given to Nod as dedicated mobile AA. Improved explosions. Corrected music.yaml track titles. Tweaked building construction animation speed. Improved cloak and building destruction sounds. Added blue tiberium trees. Fixed blue tiberium not poisoning infantry. Increased crate lifetime and removed level-up crate effect. Fixed infantry running animations. Fixed Viceroid unit decorations (veterancy/group number). Fixed tooltip flickering when moving the mouse. Fixed mouse-interaction bugs in the production palette. Improved tooltip names. Added maps: The Sentinel, Bialystok, No Escapism, Rock Canyon, Slippery Slopes, Skull Valley, Dead in Motion Redux, East vs West redux, Drop Zone, The Hourglass. Added EVA notification for nuclear missile launches. Husk lifetime reduced to 10 seconds. Obelisk is now automatically targeted by units. Balance: Harvester capacity increased. Advanced Comm-Center and Temple of Nod act as a substitute prerequisite of the Comm-Center. Reduced MCV crate probability to 80% to solve Construction Yard sell exploit. MCV can be constructed without a service depot. Construction Yard health reduced. Infantry detect nearby cloaked units. Infantry and vehicle speed on clear terrain increased. Airstrike regen reduced to three minutes. Comm-Center health reduced. Airfield health reduced. Helipad price reduced. Advanced Guard Tower range increased/health reduced/power consumption increased. Advanced Guard Tower missiles improved vs aircraft and vehicles/reduced vs infantry Obelisk range increased. Tank firing rate increased/damage vs light armor increased. Light Tank speed increased/turn rate increased/ROF increased/damage reduced. Turn speeds increased for most units. Recon Bike damage reduced/sight increased/speed increased on clear, reduced on road. Buggy health reduced/sight increased. Flamethrower range reduced/damage increased vs wood. Flame Tank significantly buffed. Chinook price reduced. Helicopter prerequisites changed to Comm-Center/Advanced Tech building. Apache sight increased. Orca ROF reduced/ammo increased/damage reduced/sight increased. Stealth Tank initial stance changed to ""hold-fire."" Increased sight range for Light Tank and APC. A10 sight range increased. Mammoth Tank speed increased/health increased/turret rotation increased/missile spread increased. Stealth Tank range reduced/cloak delay increased/damage vs heavy armor reduced. Turret and Guard Tower range increased. APC damage increased/speed reduced. Artillery range reduced/damage vs wood reduced. Rocket Infantry damage increased vs armor. Increased nuke and Ion Cannon damage vs heavy armor. Grenadier's grenade speed increased. SAM site pop-up speed increased. Humvee / Buggy damage increased. MLRS range reduced/ROF reduced/damage reduced. Recon Bike damage increased vs heavy armor/burst delay added/range reduced. Dune 2000: Removed shroud (uses fog-of-war instead). Buildings are hidden under the fog until they are first seen. Added Medic. Added Stealth Raider. Removed Deviator. Aircraft are now unbuildable. Fixed building positioning and selection boxes. Added husks for units and turrets. Added trails to shells and missiles. Fixed animations for Windtrap, Repair Pad, IX Research. Reduced ""silos needed"" warnings. Husk lifetime reduced to 20 seconds. Added large building radius to construction yard. Improved explosions. Crate probabilities adjusted. New UI button artwork. Added maps: Black Mesa, Black Mesa (large), Dune Boogie, Dune Boogie (large), Brimstone, Death Depths - Modded, Tuck's Sietch. Complete rebalancing from the ground up. Engine: Fixed several desync crashes. Fixed a crash involving keyboard shortcuts and dead units. Fixed a crash involving replays and multiple game sessions on a single machine. Fixed a rare loadscreen crash. Improved logging on game desync. Improved UPnP support via Mono.Nat. Improved freetype support via SharpFont (replaces custom patched Tao.Freetype). Improved dedicated server support. Improved mix file decryption (fixes a crash when playing the ""Mud"" audio track). Introduced a new coordinate model to simplify eventual TS/RA2 support. Initial work to port existing code to new coordinates model. Added a muzzle positioning debug visualization. Added a pathfinder debug visualization. Removed player-configurable range behind the scenes of the color picker. Fixes ""radioactive"" color exploit. Show an improved error message when connecting to a server with incompatible mods. Added automatic map downloads from content.open-ra.org when joining a server with an unknown map. Added support for randomized weapon reports. Improved loading times by removing unnecessary map indexing. Scripted maps can now require human players in specified slots. Allow mods to independently enable/disable shroud and fog of war. Minor pathfinding improvements. Other misc refactoring and code cleanup. Build system and packages: Added a `version` rule to the makefile for setting mod version strings on local development builds. Added a `docs` rule for generating trait documentation. Fixed permission errors in the .deb package. Support `--instdir` options for parallel installation of .deb packages. Added Desura compatibility for Linux. Map Editor and Tools: Added a toolstrip with new and improved tools. Added support for terrain categories. Fixed wrong palette remapping for neutral buildings. Maps are now saved/loaded from the custom maps directory. Fixed legacy map importer. Added a --docs flag for OpenRA.Utility for generating trait documentation.",15/05/2013 19:19:14,,FALSE-POSITIVE,https://github.com/ckorn/PlayDeb/commit/e03ae8fe2fd6d55238c1def0ba13ce238bb273d5,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[DO NOT ANALYZE],[Game],EXISTS,,,,,,,,,,,,,ckorn/PlayDeb,ckorn,,,ckorn,
ckorn,PlayDeb,"openra: 20130514-1~getdeb1 * New upstream version All mods: Destroyed bridges can now be repaired with an engineer. Significantly improved AI. Added (beta) support for left-click mouse orders via the settings menu. Added ""move viewport to group"" hotkey (home key or double tap group number). Exposed several new and/or hidden preferences in the settings menu. Games can now be paused with a hotkey (F9 by default) or by opening the menu in a single player game. New/improved UI for spectators and defeated players. Improved server list and lobby UI. Fixed units attacking enemy units hidden by fog/shroud. Fixed several other visibility-related bugs. Improved range circle contrast against terrain. Fixed UI notification sound issues. Added ""Reset Exploration"" developer option (same effect as the hide-map crate). Fixed the visibility of peripheral effects for spectators/replays (ranks, production bars, etc). Improved aircraft contrail rendering. Fixed issue with harvesters not undocking when a refinery is destroyed. Fixed civilian building rendering. Added in-game player statistics for spectators (RA and D2K only). Added ""Fragile Alliances"" option, allowing alliances to be changed during free-for-all games (RA and D2K only). Added a tooltip that shows provided and drained power (RA and D2K - C&C already had this) Improved ingame chat dialog (RA and D2K only). Red Alert: Added Mobile Gap Generator. Added Mobile Radar Jammer (jams radar and deflects enemy missiles). Added desert theater (ported from C&C plus additional custom tiles by Harrison). Removed Volkov. Added announcer voice upon game start. Civilians now panic when attacked. Added a new desert-themed shellmap inspired by C&C Generals. Added ice floe actors for use on snow maps. Several improvements to the original shellmap. New missions: Allies03, Allies04, Soviet01Classic, MonsterTankMadness, Survival01. New maps: Room Convergence, Ghost Town, Bad Neighbors. Improved maps: Chaos Canyon, Bomber John, Bombardment Islands. Fixed Mechanic repair cursor. Fixed graphics for craters for snow maps. Re-enabled ""Mud"" music track. Fixed supply track shadow. Added unit production hotkeys. Fixed Airfield tooltip. Changed minimap color of gems to blue. Gap Generator shroud now disappears on low-power/death. Added support for Nyerguds music upgrade pack. Fixed target line/flash for Demo Truck targets. Added building death frames for Construction Yard, Power Plants and Ore Refinery. Improved Ore Silo artwork (more fill states). Improved Weapon Factory door animation and prevented the door closing before units exited. Changed building placement color to black on snow maps for increased contrast. Fixed Attack Dog sound. Added duration indicators for units under Chronosphere and Iron Curtain effects. Fixed Tanya shooting buildings and using C4 on barrels. Fixed Chrono Tank being unable to crush infantry/sandbags or trigger mines. Balance changes: Base defense damage reduced against structures. Pillbox armor increased from wood to heavy. Construction Yard armor reduced/health increased. Construction Yard is now unsellable to prevent Mobile Construction Vehicle crate exploit. Superweapon health increased. Chrono Tank damage increased/health increased/Chrono-shift range limit added/Chronosphere prerequisite added. Demo Truck cost increased/health reduced/speed reduced. Disguised Spies are now hidden from enemy GPS. Added build limit to Missile Silo and Tanya. Oil derricks are now repairable by engineers. Minelayers can now detect mines, allowing other units to target and destroy them. Nukes can destroy ore wells and trees. Tesla Tank health increased. Medium Tank damage increased. Mammoth Tank turret rotation speed increased/damage increased. Badger bomber health increased. Cruiser speed increased. Missile Sub accuracy increased. C&C: Building range and a short construction delay added to Construction Yards to prevent base walking. Mobile SAM launcher given to Nod as dedicated mobile AA. Improved explosions. Corrected music.yaml track titles. Tweaked building construction animation speed. Improved cloak and building destruction sounds. Added blue tiberium trees. Fixed blue tiberium not poisoning infantry. Increased crate lifetime and removed level-up crate effect. Fixed infantry running animations. Fixed Viceroid unit decorations (veterancy/group number). Fixed tooltip flickering when moving the mouse. Fixed mouse-interaction bugs in the production palette. Improved tooltip names. Added maps: The Sentinel, Bialystok, No Escapism, Rock Canyon, Slippery Slopes, Skull Valley, Dead in Motion Redux, East vs West redux, Drop Zone, The Hourglass. Added EVA notification for nuclear missile launches. Husk lifetime reduced to 10 seconds. Obelisk is now automatically targeted by units. Balance: Harvester capacity increased. Advanced Comm-Center and Temple of Nod act as a substitute prerequisite of the Comm-Center. Reduced MCV crate probability to 80% to solve Construction Yard sell exploit. MCV can be constructed without a service depot. Construction Yard health reduced. Infantry detect nearby cloaked units. Infantry and vehicle speed on clear terrain increased. Airstrike regen reduced to three minutes. Comm-Center health reduced. Airfield health reduced. Helipad price reduced. Advanced Guard Tower range increased/health reduced/power consumption increased. Advanced Guard Tower missiles improved vs aircraft and vehicles/reduced vs infantry Obelisk range increased. Tank firing rate increased/damage vs light armor increased. Light Tank speed increased/turn rate increased/ROF increased/damage reduced. Turn speeds increased for most units. Recon Bike damage reduced/sight increased/speed increased on clear, reduced on road. Buggy health reduced/sight increased. Flamethrower range reduced/damage increased vs wood. Flame Tank significantly buffed. Chinook price reduced. Helicopter prerequisites changed to Comm-Center/Advanced Tech building. Apache sight increased. Orca ROF reduced/ammo increased/damage reduced/sight increased. Stealth Tank initial stance changed to ""hold-fire."" Increased sight range for Light Tank and APC. A10 sight range increased. Mammoth Tank speed increased/health increased/turret rotation increased/missile spread increased. Stealth Tank range reduced/cloak delay increased/damage vs heavy armor reduced. Turret and Guard Tower range increased. APC damage increased/speed reduced. Artillery range reduced/damage vs wood reduced. Rocket Infantry damage increased vs armor. Increased nuke and Ion Cannon damage vs heavy armor. Grenadier's grenade speed increased. SAM site pop-up speed increased. Humvee / Buggy damage increased. MLRS range reduced/ROF reduced/damage reduced. Recon Bike damage increased vs heavy armor/burst delay added/range reduced. Dune 2000: Removed shroud (uses fog-of-war instead). Buildings are hidden under the fog until they are first seen. Added Medic. Added Stealth Raider. Removed Deviator. Aircraft are now unbuildable. Fixed building positioning and selection boxes. Added husks for units and turrets. Added trails to shells and missiles. Fixed animations for Windtrap, Repair Pad, IX Research. Reduced ""silos needed"" warnings. Husk lifetime reduced to 20 seconds. Added large building radius to construction yard. Improved explosions. Crate probabilities adjusted. New UI button artwork. Added maps: Black Mesa, Black Mesa (large), Dune Boogie, Dune Boogie (large), Brimstone, Death Depths - Modded, Tuck's Sietch. Complete rebalancing from the ground up. Engine: Fixed several desync crashes. Fixed a crash involving keyboard shortcuts and dead units. Fixed a crash involving replays and multiple game sessions on a single machine. Fixed a rare loadscreen crash. Improved logging on game desync. Improved UPnP support via Mono.Nat. Improved freetype support via SharpFont (replaces custom patched Tao.Freetype). Improved dedicated server support. Improved mix file decryption (fixes a crash when playing the ""Mud"" audio track). Introduced a new coordinate model to simplify eventual TS/RA2 support. Initial work to port existing code to new coordinates model. Added a muzzle positioning debug visualization. Added a pathfinder debug visualization. Removed player-configurable range behind the scenes of the color picker. Fixes ""radioactive"" color exploit. Show an improved error message when connecting to a server with incompatible mods. Added automatic map downloads from content.open-ra.org when joining a server with an unknown map. Added support for randomized weapon reports. Improved loading times by removing unnecessary map indexing. Scripted maps can now require human players in specified slots. Allow mods to independently enable/disable shroud and fog of war. Minor pathfinding improvements. Other misc refactoring and code cleanup. Build system and packages: Added a `version` rule to the makefile for setting mod version strings on local development builds. Added a `docs` rule for generating trait documentation. Fixed permission errors in the .deb package. Support `--instdir` options for parallel installation of .deb packages. Added Desura compatibility for Linux. Map Editor and Tools: Added a toolstrip with new and improved tools. Added support for terrain categories. Fixed wrong palette remapping for neutral buildings. Maps are now saved/loaded from the custom maps directory. Fixed legacy map importer. Added a --docs flag for OpenRA.Utility for generating trait documentation.",15/05/2013 19:19:15,,DUPLICATE,https://github.com/ckorn/PlayDeb/commit/c8f0993f98a991cabbca7f13f8d426471e2b965e,,,,,,,EXISTS,,,,,,,,,,,,,ckorn/PlayDeb,ckorn,,,ckorn,
temasek,android_kernel_samsung_smdk4412,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Seongmin Park <r_data@naver.com>",16/05/2013 00:46:38,,DUPLICATE,https://github.com/temasek/android_kernel_samsung_smdk4412/commit/3b00c7b7a4d8af64e81cff4924148ffb9d5fdcd4,,,[DUPLICATE],[DUPLICATE],[DUPLICATE],,EXISTS,,,,,,,,,,,,,temasek/android_kernel_samsung_smdk4412,longman88,,,temasek,
oxavelar,android_device_motorola_intel_smi,Power saving features.,16/05/2013 04:51:45,,OK,https://github.com/oxavelar/android_device_motorola_intel_smi/commit/958260609a108cb510025e527b51ee17aa16dbef,,,[OK][Scaling frequency],[OK] [Scale CPU frequency] [Android],[DO NOT ANALYZE],[Scale CPU frequency] [Android] [Scaling frequency],EXISTS,[Config governor],[power saving],[Configure governor] [Scale CPU frequency] [Script] [Config],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,Libraries and Utilities,Shell,Power saving features.,oxavelar/android_device_motorola_intel_smi,oxavelar,[Frequency and voltage scaling],,oxavelar,Script recovery/shell
RAZR-K-Devs,android_kernel_motorola_omap4-common,Disabled debug user / changed DMA mode for power saving,16/05/2013 16:17:59,,SOFT-DUPLICATE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/4b264bd5661e23ac3161397982e723d7d8d6d1ad,,,[Unable to categorize],[OK] [Change DMA mode] [Android],[DO NOT ANALYZE],[Change DMA mode] [Android],EXISTS,,,[REVIEW],,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,,,dtrail,
SlimRoms,kernel_lge_mako,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org> Signed-off-by: Stratos Karafotis <stratosk@semaphore.gr>",17/05/2013 14:28:37,,DUPLICATE,https://github.com/SlimRoms/kernel_lge_mako/commit/e6315e077a18ad622c774fffd4671faeac9e0cda,,,,[VERIFIED] [https://github.com/AOKP/kernel_samsung_d2/commit/7acf591209f9d06fe60dafa026fa9fbc80912245],,[https://github.com/AOKP/kernel_samsung_d2/commit/7acf591209f9d06fe60dafa026fa9fbc80912245],EXISTS,,,,,,,,,,,,,SlimRoms/kernel_lge_mako,,,,PRJosh,
ParanoidAndroid,lge-kernel-mako,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",19/05/2013 16:56:34,,OK,https://github.com/ParanoidAndroid/lge-kernel-mako/commit/a7529545942ae572483681b6918c7b48495b34b2,,,[OK][?],[OK] [Bug fix] [Disable device] [Disable component] [Android],[DO NOT ANALYZE],[Bug fix] [Disable device] [Disable component] [Android] [?],EXISTS,[suspend hsic by default after initialization],[hsic votes for resources that prevent power saving modes],[Disable component] [Disable component on initialization],[Disable device] [Sub1: By default],,,Certain,Android,CRs-Fixed: 400263,OS,C,"Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization.",ParanoidAndroid/lge-kernel-mako,,[Energy bug],,franciscofranco,Driver
SupSuper,OpenXcom,"Adjustment to path Highlighting. now takes energy consumption and TU reservation into account. yellow highlighting denotes ""can move here, but cannot perform reserved action"" if no reservation option is chosen, defaults to auto shot.",19/05/2013 17:09:08,,FALSE-POSITIVE,https://github.com/SupSuper/OpenXcom/commit/297a25c4dbf8ca737d0a88344bbda58bbb3bd149,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,SupSuper/OpenXcom,Warboy1982,,,Warboy1982,
zeroeth,arduino_pir_datalogger,"Reorganization, LED status indication, no led on trigger for small power savings",19/05/2013 22:54:07,,OK,https://github.com/zeroeth/arduino_pir_datalogger/commit/0423d239cee179b4161385ab92935d171eafa819,,,[FALSE-POSITIVE],[OK] [Disable component] [Disable led],[DO NOT ANALYZE],[Disable component] [Disable led],EXISTS,[no led on trigger],[small power saving],[Disable component] [Disable led] [Disable device],[Disable device],,,Certain,Arduino,No,Application,Ino,no led on trigger for small power savings,zeroeth/arduino_pir_datalogger,zeroeth,[Disabling feature/devices],,zeroeth,Arduino application
Karatekiwi,lsdc,total power consumption,21/05/2013 07:27:47,,FALSE-POSITIVE,https://github.com/Karatekiwi/lsdc/commit/b89862635146bc54b247e159de64f18a9cbcb857,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,Karatekiwi/lsdc,,,,,
Karatekiwi,lsdc,tests for power consumption,21/05/2013 08:00:34,,FALSE-POSITIVE,https://github.com/Karatekiwi/lsdc/commit/b76492ee0462578f25ff3fd0ba7aa4fd3edf11f4,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,Karatekiwi/lsdc,,,,,
milaq,android_device_hp_tenderloin,board: do not set DISABLE_ARM_PIE flag until power consumption issue is fixed,21/05/2013 23:17:46,,FALSE-POSITIVE,https://github.com/milaq/android_device_hp_tenderloin/commit/eece917cba8958e714df9e4a508e65f40cd54000,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,milaq/android_device_hp_tenderloin,milaq,,,milaq,
bytbox,ep,Graphing per-capita energy consumption,22/05/2013 23:28:32,,NOT-FOUND,https://github.com/bytbox/ep/commit/88ce75089f06d0df1de684c66f252ed638097e18,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,bytbox/ep,,,,,
sbreen94,Zeus_N8013,1600MHz CPU OC Corrected CPU freq. going above scaling_max (even if only fractions of seconds) Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode,23/05/2013 03:37:25,,DUPLICATE,https://github.com/sbreen94/Zeus_N8013/commit/85311d779e337f37b83c90bdc4bcec3d835e3990,,,,,,,EXISTS,,,,,,,,,,,,,sbreen94/Zeus_N8013,yank555-lu,,,sbreen94,
leileiy,d3-1,"Created index.html, index2.html, data.csv and data1.csv Index.html - Original vs. eDVA Tech Energy Savings Comparison Index2.html - Sample donut pie chart with text labels Data.csv - data for index2.html sample donut pie chart data1.csv - potential data file for energy savings chart",23/05/2013 21:20:51,,FALSE-POSITIVE,https://github.com/leileiy/d3-1/commit/3d6f72a31e78584f16bfc1660c8280917fde15b7,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Ui],[FALSE-POSITIVE],[Ui],EXISTS,,,,,,,,,,,,,leileiy/d3-1,leileiy,,,leileiy,
rsmin,testfs,53% energy saving,24/05/2013 12:49:49,,FALSE-POSITIVE,https://github.com/rsmin/testfs/commit/ce9404db5e5d07bfeb33f8303d80efb407eddecc,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,rsmin/testfs,rsmin,,,rsmin,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"OMAP: CPU: CPUFREQ: CLOCK: VOLTAGE: LPDD: BOARD: PM: Several fixes for stability to run an stable OPP frequency table with 10 - 12 OPPs. Prior to this commit we changed vp_timeout to u8 to allow boot OMAP with more than 7 OPPs. While browsing the mach-omap2 folder I found some mistakes from ealier commits and fixed these. In my testing phase with the new OPP table I faced random crashes/reboots which were related to voltage/sr calibration rule. Now trying the kernel with including these fixes. We may switch partly or completely to EMIF or SR_CLASS 1.5 if we can't get this to work. Work left to do: USB might be unstable related to usb performance boost mode - Not the boost is the problem but the voltage calibration, so whether we have to fix SR/switch to static voltages (but this may cause higher power consumption, possibly it also helps to set single OPPs to fixed, non-scalabe voltage) - or remove the variable usb performance mode and set a fixed frequency value (600mhz min/max). In current kexec kernel we are facing an issue which causes the user cpufreq policy to be reset to kernel default in suspend/idle mode. This can be simply override by user setting an app dependant frequency lock. This issue also causes the @default_available rule for OPPs to be not effective. As we want to limit the default max frequency at 1.0GHZ we have to solve this problem or just define a new rule in omap2plus-cpufreq.c to prevent policy auto-reset.",25/05/2013 00:58:36,,FALSE-POSITIVE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/2804c972e3c1eea9d3df63936d76547564a3800e,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,,,dtrail,
ryrzy,yoda-kernel-i9300-JB,cpufreq: 1600MHz CPU OC Corrected CPU freq. going above scaling_max (even if only fractions of seconds) Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode,25/05/2013 15:04:39,,DUPLICATE,https://github.com/ryrzy/yoda-kernel-i9300-JB/commit/104a2d8d573f308d2b7a9347f6da3ce0a5796f6a,,,,[SOFT-DUPLICATE] [VERIFY] [No original] [https://github.com/dsb9938/GT-N8013-JB-Kernel/commit/5d2bf6f39ab04972d41bfd570e3fb2392d889556] [original:FALSE-POSITIVE],,[VERIFY] [No original] [https://github.com/dsb9938/GT-N8013-JB-Kernel/commit/5d2bf6f39ab04972d41bfd570e3fb2392d889556] [original:FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,ryrzy/yoda-kernel-i9300-JB,yank555-lu,,,ryrzy,
droidroidz,USCC_R970_kernel,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",26/05/2013 05:13:21,,NOT-FOUND,https://github.com/droidroidz/USCC_R970_kernel/commit/25ca98cd710b1bf110fb31cbf515c73896cf0ca1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,droidroidz/USCC_R970_kernel,,,,,
RudyLu,gaia,Bug 871437 - change the value of Power save mode threshold to -1 for never case. r=alive,27/05/2013 11:38:48,,FALSE-POSITIVE,https://github.com/RudyLu/gaia/commit/ba57090bd5572656b58f88c4c8ea97db28371efe,,,[FALSE-POSITIVE][Related?],[FALSE-POSITIVE],[DO NOT ANALYZE],[Related?],EXISTS,,,,,,,,,,,,,RudyLu/gaia,RudyLu,,,RudyLu,
mozilla-b2g,gaia,Merge pull request #9985 from RudyLu/powersave/Bug871437-disabled_dataConnection Bug 871437 - change the value of Power save mode threshold to -1 for never case. r=alive,27/05/2013 12:06:00,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/f2930cf440e0c8c21b48f7b0b01fac48b941e3fc,,,,[VERIFIED] [https://github.com/RudyLu/gaia/commit/ba57090bd5572656b58f88c4c8ea97db28371efe],,[https://github.com/RudyLu/gaia/commit/ba57090bd5572656b58f88c4c8ea97db28371efe],EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,RudyLu,,,RudyLu,
gabrielesvelto,gaia,Merge pull request #9985 from RudyLu/powersave/Bug871437-disabled_dataConnection Bug 871437 - change the value of Power save mode threshold to -1 for never case. r=alive,27/05/2013 13:55:11,,DUPLICATE,https://github.com/gabrielesvelto/gaia/commit/f2930cf440e0c8c21b48f7b0b01fac48b941e3fc,,,,,,,EXISTS,,,,,,,,,,,,,gabrielesvelto/gaia,RudyLu,,,RudyLu,
davidflanagan,gaia,Merge pull request #9985 from RudyLu/powersave/Bug871437-disabled_dataConnection Bug 871437 - change the value of Power save mode threshold to -1 for never case. r=alive,27/05/2013 21:42:57,,DUPLICATE,https://github.com/davidflanagan/gaia/commit/f2930cf440e0c8c21b48f7b0b01fac48b941e3fc,,,,,,,EXISTS,,,,,,,,,,,,,davidflanagan/gaia,RudyLu,,,RudyLu,
ChangYeoun,Kite,USB: HSIC: Add support for HSIC core and SMSC HUB using DT Add device tree support in SMSC HUB driver which also registers platform_device for HSIC as its child. This allows SMSC HUB driver to turn OFF clocks for power savings after HSIC is suspended. Also add support for SMSC HUB to use dedicated clock as ref_clk instead of XO. Change-Id: I3e8828ddc232936df3e21c8e1158af92b16996a2 Signed-off-by: Manu Gautam <mgautam@codeaurora.org> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: drivers/usb/host/ehci-msm-hsic.c,28/05/2013 06:28:20,,NOT-FOUND,https://github.com/ChangYeoun/Kite/commit/a3da2a28d3687c9abe878bed7b806386a9e84643,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Kite,,,,,
faux123,Galaxy_Note_2,Overclocking: Correctd CPU freq going above scaling_max Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode,29/05/2013 00:21:29,,DUPLICATE,https://github.com/faux123/Galaxy_Note_2/commit/d74f238dce3b5650fa56d87a6e69252354da735b,,,,[FALSE-POSITIVE] [VERIFY],,[VERIFY],EXISTS,,,,,,,,,,,,,faux123/Galaxy_Note_2,yank555-lu,,,faux123,
faux123,Galaxy_Note_2,Overclocking: Corrected CPU freq going above scaling_max Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode,29/05/2013 00:22:32,,DUPLICATE,https://github.com/faux123/Galaxy_Note_2/commit/98c43a8e62563361634eaf7f86a2ce338081fd1b,,,,[VERIFIED] [DUPLICATE] [d74f238dce3b5650fa56d87a6e69252354da735b],,[DUPLICATE] [d74f238dce3b5650fa56d87a6e69252354da735b],EXISTS,,,,,,,,,,,,,faux123/Galaxy_Note_2,yank555-lu,,,faux123,
basti35,eFM,energy consumption added,29/05/2013 10:16:07,,FALSE-POSITIVE,https://github.com/basti35/eFM/commit/6d75395cfcabcace787617112830a7bd2598ed92,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,basti35/eFM,jolahde,,,jolahde,
RudyLu,gaia,Merge pull request #9985 from RudyLu/powersave/Bug871437-disabled_dataConnection Bug 871437 - change the value of Power save mode threshold to -1 for never case. r=alive,29/05/2013 12:16:23,,DUPLICATE,https://github.com/RudyLu/gaia/commit/f2930cf440e0c8c21b48f7b0b01fac48b941e3fc,,,,,,,EXISTS,,,,,,,,,,,,,RudyLu/gaia,RudyLu,,,RudyLu,
Unvanquished,Unvanquished,Refactor human buildable interference to a form of power consumption. Prepare for having varyig power requirements for different buildable types. The gameplay mechanics should not have changed.,30/05/2013 13:49:33,,FALSE-POSITIVE,https://github.com/Unvanquished/Unvanquished/commit/7b6817e4974847bc2fdf0539a89620fdcf30c5f1,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[DO NOT ANALYZE],[Game],EXISTS,,,,,,,,,,,,,Unvanquished/Unvanquished,,,,,
SchedMD,slurm,IPMI - correct math for energy consumption,30/05/2013 16:58:27,,FALSE-POSITIVE,https://github.com/SchedMD/slurm/commit/5a62593209d73fdc88151c0e4fe5dfc30e4580b4,,,[RELATED][ENERGY MONITOR],[FALSE-POSITIVE] [Bug fix] [Compute energy consumption],[OK] [BUG FIX],[Bug fix] [Compute energy consumption] [ENERGY MONITOR],EXISTS,,,,,,,,,,,,,SchedMD/slurm,dannyauble,,,dannyauble,
neonglass,CamButtonDisable,"Further power fixes Turns out that if you use the SensorManager in a BroadcastReceiver the system never lets go of the Sensor, causing massive power consumption. This patch offsets sensor processing to the Main Activity.",31/05/2013 04:27:25,,OK,https://github.com/neonglass/CamButtonDisable/commit/6976fb52c06cb1353cd25f4df6e10a581b277a73,,,[OK][?][Android],[OK] [Bug fix] [Avoid resource leak] [Move sensor access elsewhere] [Android],[DO NOT ANALYZE],[Bug fix] [Avoid resource leak] [Move sensor access elsewhere] [Android] [?],EXISTS,[offset sensor processing to the Main Activity],[using the SensorManager in a BroadcastReceiver the system never lets go of the Sensor],[Bug fix] [Avoid resource leak],[Avoid resource leak],,,Certain,Android,Yes,Application,Java,"Turns out that if you use the SensorManager in a BroadcastReceiver the system never lets go of the Sensor, causing massive power consumption. This patch offsets sensor processing to the Main Activity.",neonglass/CamButtonDisable,,[Energy bug],,,Application
g3tsum,android_kernel_htc_m7,"msm: pm: Support for Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings. Change-Id: I6b1f0a0d2e4954a705a047fd4a07f4dd1fb3518a Signed-off-by: Girish Mahadevan <girishm@codeaurora.org> (cherry picked from commit d27ca4a) Signed-off-by: Sudhir Sharma <sudsha@codeaurora.org> (cherry picked from commit 3af7249) Conflicts: arch/arm/mach-msm/include/mach/event_timer.h arch/arm/mach-msm/pm-8x60.c",31/05/2013 08:47:01,,DUPLICATE,https://github.com/g3tsum/android_kernel_htc_m7/commit/e78236fa5a34d3ccf5febd317fb820d5f03a5455,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/mathkid95/linux_lg_jb/commit/508f681dc12f7c34bb0d01cbc5034003f89db1d8] [original:OK],[OK],[VERIFY] [https://github.com/mathkid95/linux_lg_jb/commit/508f681dc12f7c34bb0d01cbc5034003f89db1d8] [original:OK],EXISTS,,,,,,,,,,,,,g3tsum/android_kernel_htc_m7,,,,houst0nn,
Ntemis,NOF-Nemesis,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>",31/05/2013 13:27:32,,DUPLICATE,https://github.com/Ntemis/NOF-Nemesis/commit/0b91134cf748ad7dcefd6c120a5db5d0bd909278,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/NOF-Nemesis,grygoriyS,,,Ntemis,
TiaLuna,Nexus_S_kernel,Add power saving state DEEP IDLE version 2.,02/06/2013 06:22:54,,DUPLICATE,https://github.com/TiaLuna/Nexus_S_kernel/commit/122b47b14b27cf996668046c90caa30042722cef,,,,,,,EXISTS,,,,,,,,,,,,,TiaLuna/Nexus_S_kernel,,,,,
TiaLuna,Nexus_S_kernel,Add power saving state DEEP IDLE version 2.,02/06/2013 09:17:10,,DUPLICATE,https://github.com/TiaLuna/Nexus_S_kernel/commit/00370f5424dbd8cf48a9f846badd2880a2a069a3,,,,,,,EXISTS,,,,,,,,,,,,,TiaLuna/Nexus_S_kernel,,,,,
TiaLuna,Nexus_S_kernel,Add power saving state DEEP IDLE version 2.,02/06/2013 09:50:52,,DUPLICATE,https://github.com/TiaLuna/Nexus_S_kernel/commit/c5e5e0997f2e2e696edbafd2cec3aef4d9eac9a7,,,,,,,EXISTS,,,,,,,,,,,,,TiaLuna/Nexus_S_kernel,,,,,
ibr-alg,wiselib,adding piggyback functionality for stats (also available for crazy heuristics for energy consumption),02/06/2013 12:56:58,,FALSE-POSITIVE,https://github.com/ibr-alg/wiselib/commit/56a7c44481d980381edc18e2ee4a70dea7efd9af,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,ibr-alg/wiselib,konstantinosch,,,konstantinosch,
archlinuxarm,PKGBUILDs,aur/dkms-8192cu disable power saving mode,03/06/2013 06:37:22,,FALSE-POSITIVE,https://github.com/archlinuxarm/PKGBUILDs/commit/68d74a1a7694d686e7220eb07677811da7bc8567,,,[FALSE-POSITIVE][Instalation issues],[FALSE-POSITIVE],[DO NOT ANALYZE],[Instalation issues],EXISTS,,,,,,,,,,,,,archlinuxarm/PKGBUILDs,moonman,,,moonman,
wetherbeei,SD2013-UIUC,stable power consumption treeemap,04/06/2013 02:27:50,,FALSE-POSITIVE,https://github.com/wetherbeei/SD2013-UIUC/commit/72df115b95f7877f022c996c2728abfd9a3596aa,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,wetherbeei/SD2013-UIUC,danielmurray,,,danielmurray,
sakindia123,android_kernel_samsung_smdk4412,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",05/06/2013 05:52:53,,DUPLICATE,https://github.com/sakindia123/android_kernel_samsung_smdk4412/commit/88b3290433e1c2fb3899e8df61d690bd051aae7c,,,,,,,EXISTS,,,,,,,,,,,,,sakindia123/android_kernel_samsung_smdk4412,faux123,,,sakindia123,
alessandroleite,wattsup-java-sdk,"bug fixes, and added the option to plot the power consumption in a chart using JFreeChart",05/06/2013 08:55:53,,FALSE-POSITIVE,https://github.com/alessandroleite/wattsup/commit/77c3b79690ec0849437d3155b53a8ccbb236b755,https://github.com/alessandroleite/wattsup-java-sdk/commit/77c3b79690ec0849437d3155b53a8ccbb236b755,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,alessandroleite/wattsup-java-sdk,,,,,
pinpong,android_kernel_htc_m7,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org> Conflicts: arch/arm/mach-msm/acpuclock-krait.c",05/06/2013 19:33:06,,DUPLICATE,https://github.com/pinpong/android_kernel_htc_m7-1/commit/a1c5722c6377ac3e90ef8b8dd0d483fbf310faa9,https://github.com/pinpong/android_kernel_htc_m7/commit/a1c5722c6377ac3e90ef8b8dd0d483fbf310faa9,,[DUPLICATE],[DUPLICATE] [7acf591209f9d06fe60dafa026fa9fbc80912245],[DUPLICATE],[7acf591209f9d06fe60dafa026fa9fbc80912245],EXISTS,,,,,,,,,,,,,pinpong/android_kernel_htc_m7,,,,,
eschulte,goa,TODO measure energy consumption of evolved programs,05/06/2013 19:49:28,,FALSE-POSITIVE,https://github.com/eschulte/optimization/commit/10c8e44da1a414a5e2d0b5253ff5979cce637ab2,https://github.com/eschulte/goa/commit/10c8e44da1a414a5e2d0b5253ff5979cce637ab2,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,eschulte/goa,,,,,
somemetricprefix,ckfw,Send device to sleepmode to save energy.,06/06/2013 08:14:19,,OK,https://github.com/somemetricprefix/ckfw/commit/43a15010b2e528acb483429aa7e8185c4d7d74bb,,,[OK][GO TO IDLE],[OK] [Go to idle],[OK] [GO TO IDLE],[Go to idle],EXISTS,[Send device to sleepmode],[power saving],[Go to sleep],[Go to low power],,,Certain,Embedded !,No,Hardware,C++,Send device to sleepmode to save energy.,somemetricprefix/ckfw,somemetricprefix,[Low power idling],,somemetricprefix,Firmware
plokhotnyuk,actors,improved backoff to be more energy efficient by parking waiting threads until submitting of new tasks,06/06/2013 13:19:52,,OK,https://github.com/plokhotnyuk/actors/commit/8d96e0e6fd0bc1df605908ed711346171b662810,,,[OK][CONCURRENT PROGRAMMING TECHNIQUES],[OK] [Go to idle] [Park threads] [Improve backoff],[OK] [GO TO IDLE],[Go to idle] [Park threads] [Improve backoff] [CONCURRENT PROGRAMMING TECHNIQUES],EXISTS,[Improving backoff by parking waiting threads],[more energy efficient],[Improve backoff] [Concurrent programming techniques],[Improve backoff],,,Certain,Scala,No,Libraries and Utilities,Scala,improved backoff to be more energy efficient by parking waiting threads until submitting of new tasks,plokhotnyuk/actors,,[Miscellaneous],,,Sofware stack
Ntemis,NOF-Nemesis,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,06/06/2013 15:29:43,,DUPLICATE,https://github.com/Ntemis/NOF-Nemesis/commit/ccfe374c8dd19654d32fe2f713149e208881cf78,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/NOF-Nemesis,dvdhrm,,,Ntemis,
DragonFlyBSD,DragonFlyBSD,wlan: 802.11 devices and vap is not ready for ALTQ packet schedulers Current power saving queue inject and send queue flush code do not work with ALTQ packet schedulers.,07/06/2013 13:00:19,,FALSE-POSITIVE,https://github.com/DragonFlyBSD/DragonFlyBSD/commit/c3d4131842e47b168d93a0650d58d425ebeef789,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,DragonFlyBSD/DragonFlyBSD,,,,,
Ntemis,NOF-Nemesis,"rfkill: prevent unnecessary event generation Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>",07/06/2013 14:17:35,,DUPLICATE,https://github.com/Ntemis/NOF-Nemesis/commit/04e67e2b1a7d9c0cf24a19a3dffc0948240eb33f,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/NOF-Nemesis,,,,Ntemis,
Teamlce,android_frameworks_av,"audioflinger: Fix to release wakelock after closeoutput -In DirectTrack destructor, closeOutput is called after releaseWakelock is done. This may sometimes result in power collapse happening even before actual close sequence of Audio path is completed and will result in high power consumption. -Release wakelock only after closeOutput is done in directtrack destructor. (cherry picked from commit fb48938f73e335ac66c83e6adba96431e050ec94) Change-Id: Ib8d05a38f28d7e2f0bdf9e420e5db526cf874bc6 CRs-Fixed: 430786 Conflicts: services/audioflinger/AudioFlinger.cpp",08/06/2013 22:41:52,,DUPLICATE,https://github.com/Teamlce/android_frameworks_av/commit/62289a94ad9b2297cf63b5234425c48d981f3cf4,,,,,,,EXISTS,,,,,,,,,,,,,Teamlce/android_frameworks_av,,,,coderzstas,
CyanogenMod,android_kernel_samsung_n1,"Squashed commits from P4 commit b8a8494156b0868e5c830b08c5ab827835678e5d Author: Adam77Root <adam77root@gmail.com> Date: Sun Jun 9 17:37:30 2013 +0200 defconfig: remove duplicate Change-Id: I688f347a899ecbb926c1faaad6cf42946767dce4 commit 85284d500d6a6ff6e957f29f449ad7064b3f7893 Author: Adam77Root <adam77root@gmail.com> Date: Sun Jun 9 17:30:02 2013 +0200 defconfig: enable UHID Change-Id: I353acd9d98afa21d8bd8ca9c401d1e01dd1a68c4 commit bb4c191a9516dab88d7a82c113817ded81b611db Author: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Date: Sat Jul 14 18:59:25 2012 -0300 HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 8cab1b88d2674bc871cd9c8f75495253c6564f62 Author: Jiri Kosina <jkosina@suse.cz> Date: Mon Jun 18 17:08:08 2012 +0200 HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ‘uhid_hid_get_raw’: drivers/hid/uhid.c:157: warning: ‘len’ may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit dd7dfc79700c10c024c26566806af17871e3d33d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:27 2012 +0200 HID: uhid: add example program This adds an example user-space program that emulates a 3 button mouse with wheel. It detects keyboard presses and moves the mouse accordingly. It register a fake HID device to feed the raw HID reports into the kernel. In this example, you could use uinput to get the same result, but this shows how to get the same behavior with uhid so you don't need HID parsers in user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit ca8cdce13357cc3ff7748c59c925413dce314a49 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:26 2012 +0200 HID: uhid: add documentation This describes the protocol used by uhid for user-space applications. It describes the details like non-blocking I/O and readv/writev for multiple events per syscall. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 655fc6be4996d7ec1230c7cabd709d2e3ec62c4d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:25 2012 +0200 HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit ccf1b5e4699d768cee9da29433e5d85ca2d21699 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:24 2012 +0200 HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit a14a1e601fb4518dd962978dd96c55e8420f4c6d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:23 2012 +0200 HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit c87a868ba79c931c21ab3da720f03c74e31e819f Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:22 2012 +0200 HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit c3b3287848544622be9d28a490f93ce790ff9fb6 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:21 2012 +0200 HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 69b67c28c6f903e755985b0acab6f7adee45728c Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:20 2012 +0200 HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit f81484567e8ef20dbeccb79f04692e08b40704e2 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:19 2012 +0200 HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 5147437a91b810fc58ccb5a14dca93728b78ec29 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:18 2012 +0200 HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 09136c8bac2053e99ed8f37e19d290bf6bc72289 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:17 2012 +0200 HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 0a0b89ce47acdf869ab19860258700e3179ce76d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:16 2012 +0200 HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 92c2a8f37fd84c8cf00012b38216b0a21daeda45 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:15 2012 +0200 HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this  ...",09/06/2013 16:46:59,,UNABLE-TO-CATEGORIZE,https://github.com/CyanogenMod/android_kernel_samsung_n1/commit/19a2a69a87f9bbee6c860aaea6425cde460d1681,,,[?][GIANT COMMIT],[UNABLE-TO-CATEGORIZE][GIANT COMMIT],[?],[GIANT COMMIT],EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_samsung_n1,Adam77Root,,,Adam77Root,
AndreiLux,Perseus-UNIVERSAL5410,"cpufreq: Fake the IKS specific frequency table to stock values The table is implementation specfic and is used nowhere else, however Samsung's framework uses it for its power savings feature. The power- saving level is determined as a index offset from the maximum frequency. Discarding entries not in the stock frequency table ensures a correct power-savings mode.",09/06/2013 19:16:16,,UNABLE-TO-CATEGORIZE,https://github.com/AndreiLux/Perseus-UNIVERSAL5410/commit/1206bff50ee80761bf982257ba27eacf0be6f79e,,,[Unable to categorize],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,AndreiLux/Perseus-UNIVERSAL5410,AndreiLux,,,AndreiLux,
jarjar124,AK-mako,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",09/06/2013 21:52:41,,NOT-FOUND,https://github.com/jarjar124/AK-mako/commit/ad0aeb00c7adab882c02ef170d6e63e2f39a9375,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jarjar124/AK-mako,,,,,
FlatTurtle,MyTurtleSleep,Save power state on sleep,10/06/2013 16:08:48,,FALSE-POSITIVE,https://github.com/FlatTurtle/MyTurtleSleep/commit/9ae32c7b7be07e0315912d7f6918adb3114b363f,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,FlatTurtle/MyTurtleSleep,NtynMichiel,,,NtynMichiel,
stevetrease,HomeMon,Modified to use Google charts for graphing hourly power consumption.,10/06/2013 20:05:22,,FALSE-POSITIVE,https://github.com/stevetrease/HomeMon/commit/d404f6cccab24e8409ab4e88345c8f1abdba92dc,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,stevetrease/HomeMon,stevetrease,,,stevetrease,
Ntemis,NOF-Nemesis,"OMAP4: PM: Handle LPDDR CLK IO errata during suspend/idle There is a HW bug in CMD PHY which gives ISO signals as same for both PADn and PADp on differential IO pad, because of which IO leaks higher as pull controls are differential internally and pull value does not match A value. Though there is no functionality impact due to this bug, it is seen that by disabling the pulls there is a savings ~500uA in OSWR, but draws ~300uA more during OFF mode. To save power during both idle/suspend following approach taken: 1) Enable WA during boot-up. 2) Disable WA while attempting suspend and enable during resume. CDDS no: OMAP4460-1.0BUG00291 (OMAP official errata ID yet to be available). Change-Id: Ic39f17be50ff602c71e714b05af3811b35c1a67f Reported-by: Logan Lee <hklee@ti.com> Signed-off-by: Shashi Shekar B.S. <shashi.shekar@ti.com> Signed-off-by: Ambresh K <ambresh@ti.com> Conflicts: arch/arm/mach-omap2/pm44xx.c",10/06/2013 21:51:31,,DUPLICATE,https://github.com/Ntemis/NOF-Nemesis/commit/5e9815a7f486f8d670b3606af9d6e3314d7b9712,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/0705c9710c796e88cef3667446a06895575233b6] [original:OK],[OK],[VERIFY] [https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/0705c9710c796e88cef3667446a06895575233b6] [original:OK],EXISTS,,,,,,,,,,,,,Ntemis/NOF-Nemesis,Ambresh,,,Ntemis,
Domination-42,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",12/06/2013 19:33:57,,NOT-FOUND,https://github.com/Domination-42/android_packages_apps_Phone/commit/68475622e6c536122db6ae973123b90b0bec4832,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Domination-42/android_packages_apps_Phone,,,,,
TeamRegular,android_kernel_samsung_epicmtd,Add power saving state DEEP IDLE version 2. Conflicts: drivers/misc/Makefile Change-Id: I1655f10cbbfea854d3cc0e9484669439b5af7f89,12/06/2013 22:58:48,,DUPLICATE,https://github.com/TeamRegular/android_kernel_samsung_epicmtd/commit/2621c21882cce8ac827e175c58dc90c4d08ef0f8,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/edoko/AirKernel_NS_JBN/commit/05e48ffaa5acd97b0d74377f74cf1ba62dfc3357] [original:RELATED],,[VERIFY] [https://github.com/edoko/AirKernel_NS_JBN/commit/05e48ffaa5acd97b0d74377f74cf1ba62dfc3357] [original:RELATED],EXISTS,,,,,,,,,,,,,TeamRegular/android_kernel_samsung_epicmtd,Ezekeel,,,C457,
gabrielmd,contiki,added an output for the energy consumption,13/06/2013 17:52:35,,FALSE-POSITIVE,https://github.com/gabrielmd/contiki/commit/f8680354df7bed5c5dbaff2935bf764ab4df78bc,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,gabrielmd/contiki,gabrielmd,,,gabrielmd,
BigBrother1984,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption.",13/06/2013 18:38:13,,DUPLICATE,https://github.com/BigBrother1984/android_packages_apps_Phone/commit/3fa57429e1a7994316edb41cee06cf131727483d,,,,[VERIFIED] [https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],,[https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],EXISTS,,,,,,,,,,,,,BigBrother1984/android_packages_apps_Phone,,,,BigBrother1984,
sakindia123,android_kernel_samsung_smdk4412,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Seongmin Park <r_data@naver.com>",14/06/2013 07:04:27,,DUPLICATE,https://github.com/sakindia123/android_kernel_samsung_smdk4412/commit/05029b10d6cfbfa1d854386bb2c597075fd512b7,,,,,,,EXISTS,,,,,,,,,,,,,sakindia123/android_kernel_samsung_smdk4412,longman88,,,sakindia123,
Grarak,ButterKernel-n1,"Squashed commits from P4 commit b8a8494156b0868e5c830b08c5ab827835678e5d Author: Adam77Root <adam77root@gmail.com> Date: Sun Jun 9 17:37:30 2013 +0200 defconfig: remove duplicate Change-Id: I688f347a899ecbb926c1faaad6cf42946767dce4 commit 85284d500d6a6ff6e957f29f449ad7064b3f7893 Author: Adam77Root <adam77root@gmail.com> Date: Sun Jun 9 17:30:02 2013 +0200 defconfig: enable UHID Change-Id: I353acd9d98afa21d8bd8ca9c401d1e01dd1a68c4 commit bb4c191a9516dab88d7a82c113817ded81b611db Author: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Date: Sat Jul 14 18:59:25 2012 -0300 HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 8cab1b88d2674bc871cd9c8f75495253c6564f62 Author: Jiri Kosina <jkosina@suse.cz> Date: Mon Jun 18 17:08:08 2012 +0200 HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ‘uhid_hid_get_raw’: drivers/hid/uhid.c:157: warning: ‘len’ may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit dd7dfc79700c10c024c26566806af17871e3d33d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:27 2012 +0200 HID: uhid: add example program This adds an example user-space program that emulates a 3 button mouse with wheel. It detects keyboard presses and moves the mouse accordingly. It register a fake HID device to feed the raw HID reports into the kernel. In this example, you could use uinput to get the same result, but this shows how to get the same behavior with uhid so you don't need HID parsers in user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit ca8cdce13357cc3ff7748c59c925413dce314a49 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:26 2012 +0200 HID: uhid: add documentation This describes the protocol used by uhid for user-space applications. It describes the details like non-blocking I/O and readv/writev for multiple events per syscall. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 655fc6be4996d7ec1230c7cabd709d2e3ec62c4d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:25 2012 +0200 HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit ccf1b5e4699d768cee9da29433e5d85ca2d21699 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:24 2012 +0200 HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit a14a1e601fb4518dd962978dd96c55e8420f4c6d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:23 2012 +0200 HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit c87a868ba79c931c21ab3da720f03c74e31e819f Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:22 2012 +0200 HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit c3b3287848544622be9d28a490f93ce790ff9fb6 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:21 2012 +0200 HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 69b67c28c6f903e755985b0acab6f7adee45728c Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:20 2012 +0200 HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit f81484567e8ef20dbeccb79f04692e08b40704e2 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:19 2012 +0200 HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 5147437a91b810fc58ccb5a14dca93728b78ec29 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:18 2012 +0200 HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 09136c8bac2053e99ed8f37e19d290bf6bc72289 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:17 2012 +0200 HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 0a0b89ce47acdf869ab19860258700e3179ce76d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:16 2012 +0200 HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 92c2a8f37fd84c8cf00012b38216b0a21daeda45 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:15 2012 +0200 HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this  ...",14/06/2013 16:50:07,,NOT-FOUND,https://github.com/Grarak/ButterKernel-n1/commit/b29ee96c4cdaeb170607cbeb7fd4693f3c20f157,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Grarak/ButterKernel-n1,,,,,
Grarak,ButterKernel-n1,"Squashed commits from P4 commit b8a8494156b0868e5c830b08c5ab827835678e5d Author: Adam77Root <adam77root@gmail.com> Date: Sun Jun 9 17:37:30 2013 +0200 defconfig: remove duplicate Change-Id: I688f347a899ecbb926c1faaad6cf42946767dce4 commit 85284d500d6a6ff6e957f29f449ad7064b3f7893 Author: Adam77Root <adam77root@gmail.com> Date: Sun Jun 9 17:30:02 2013 +0200 defconfig: enable UHID Change-Id: I353acd9d98afa21d8bd8ca9c401d1e01dd1a68c4 commit bb4c191a9516dab88d7a82c113817ded81b611db Author: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Date: Sat Jul 14 18:59:25 2012 -0300 HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 8cab1b88d2674bc871cd9c8f75495253c6564f62 Author: Jiri Kosina <jkosina@suse.cz> Date: Mon Jun 18 17:08:08 2012 +0200 HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ‘uhid_hid_get_raw’: drivers/hid/uhid.c:157: warning: ‘len’ may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit dd7dfc79700c10c024c26566806af17871e3d33d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:27 2012 +0200 HID: uhid: add example program This adds an example user-space program that emulates a 3 button mouse with wheel. It detects keyboard presses and moves the mouse accordingly. It register a fake HID device to feed the raw HID reports into the kernel. In this example, you could use uinput to get the same result, but this shows how to get the same behavior with uhid so you don't need HID parsers in user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit ca8cdce13357cc3ff7748c59c925413dce314a49 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:26 2012 +0200 HID: uhid: add documentation This describes the protocol used by uhid for user-space applications. It describes the details like non-blocking I/O and readv/writev for multiple events per syscall. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 655fc6be4996d7ec1230c7cabd709d2e3ec62c4d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:25 2012 +0200 HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit ccf1b5e4699d768cee9da29433e5d85ca2d21699 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:24 2012 +0200 HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit a14a1e601fb4518dd962978dd96c55e8420f4c6d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:23 2012 +0200 HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit c87a868ba79c931c21ab3da720f03c74e31e819f Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:22 2012 +0200 HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit c3b3287848544622be9d28a490f93ce790ff9fb6 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:21 2012 +0200 HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 69b67c28c6f903e755985b0acab6f7adee45728c Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:20 2012 +0200 HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit f81484567e8ef20dbeccb79f04692e08b40704e2 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:19 2012 +0200 HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 5147437a91b810fc58ccb5a14dca93728b78ec29 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:18 2012 +0200 HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 09136c8bac2053e99ed8f37e19d290bf6bc72289 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:17 2012 +0200 HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 0a0b89ce47acdf869ab19860258700e3179ce76d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:16 2012 +0200 HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 92c2a8f37fd84c8cf00012b38216b0a21daeda45 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:15 2012 +0200 HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this  ...",15/06/2013 09:32:58,,NOT-FOUND,https://github.com/Grarak/ButterKernel-n1/commit/0fb34646a1bdf97f33f9a3b38fde34df46e170ba,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Grarak/ButterKernel-n1,,,,,
pinkflozd,L5_Kernel_3.4,"cpufreq: boost the sampling rate on touch event For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate. Also, change sampling down factor proportional to the sampling rate. Change-Id: I111b1cf3b8ed133347149afc34d329d0384ecfcb Signed-off-by: Narayanan Gopalakrishnan <nargop@codeaurora.org> Signed-off-by: nobodyAtall <tsogkas@ceid.upatras.gr>",15/06/2013 10:09:05,,DUPLICATE,https://github.com/pinkflozd/L5_Kernel_3.4/commit/00d3fd18a76234282654ea7d4204eed2bedb1a67,,,,[VERIFIED] [https://github.com/CyanogenMod/android_kernel_htc_msm8960/commit/694447e65dd4af2af7193021ab67c4cad91ff412],,[https://github.com/CyanogenMod/android_kernel_htc_msm8960/commit/694447e65dd4af2af7193021ab67c4cad91ff412],EXISTS,,,,,,,,,,,,,pinkflozd/L5_Kernel_3.4,,,,pinkflozd,
postgres,postgres,"Use WaitLatch, not pg_usleep, for delaying in pg_sleep(). This avoids platform-dependent behavior wherein pg_sleep() might fail to be interrupted by statement timeout, query cancel, SIGTERM, etc. Also, since there's no reason to wake up once a second any more, we can reduce the power consumption of a sleeping backend a tad. Back-patch to 9.3, since use of SA_RESTART for SIGALRM makes this a bigger issue than it used to be.",15/06/2013 20:30:08,,OK,https://github.com/postgres/postgres/commit/a64ca63e59c11d8fe6db24eee3d82b61db7c2c83,,,[OK][Use latch instead of sleep],[OK] [Concurrent techniques] [Use latch],[DO NOT ANALYZE],[Concurrent techniques] [Use latch] [Use latch instead of sleep],EXISTS,[Use WaitLatch instead of pg_usleep for delaying],[no reason to wake up once a second any more],[Use latch] [Concurrent techniques] [Use latch instead of sleep],[Avoid sleeping busy wait],,,Certain,Database postgres,No,Application,C,"This avoids platform-dependent behavior wherein pg_sleep() might fail to be interrupted by statement timeout, query cancel, SIGTERM, etc.  Also, since there's no reason to wake up once a second any more, we can reduce the power consumption of a sleeping backend a tad.",postgres/postgres,,[Polling avoidance],,,Application
postgres,postgres,"Use WaitLatch, not pg_usleep, for delaying in pg_sleep(). This avoids platform-dependent behavior wherein pg_sleep() might fail to be interrupted by statement timeout, query cancel, SIGTERM, etc. Also, since there's no reason to wake up once a second any more, we can reduce the power consumption of a sleeping backend a tad. Back-patch to 9.3, since use of SA_RESTART for SIGALRM makes this a bigger issue than it used to be.",15/06/2013 20:30:08,,DUPLICATE,https://github.com/postgres/postgres/commit/c38b64c2959662298f23ad5d86246009e7853b75,,,,,,,EXISTS,,,,,,,,,,,,,postgres/postgres,,,,,
ParanoidAndroid,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption.",16/06/2013 14:37:55,,DUPLICATE,https://github.com/ParanoidAndroid/android_packages_apps_Phone/commit/db65272ae4af403a1055c12b28ff72dcdf4ccd58,,,,,,,EXISTS,,,,,,,,,,,,,ParanoidAndroid/android_packages_apps_Phone,,,,BigBrother1984,
doadin,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",17/06/2013 08:46:06,,NOT-FOUND,https://github.com/doadin/android_packages_apps_Phone/commit/2cf9d211da0f224738e4f1d6cc78b7009a0c321d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,doadin/android_packages_apps_Phone,,,,,
kbc-developers,android_kernel_samsung_jfdcm,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",17/06/2013 14:24:51,,DUPLICATE,https://github.com/kbc-developers/android_kernel_samsung_jfdcm/commit/7b413bdcbb12773cdc33f0d2aded01fcabfa9327,,,,,,,EXISTS,,,,,,,,,,,,,kbc-developers/android_kernel_samsung_jfdcm,,,,HomuHomu,
Dm47021,Warp_Jellybean_7,"kernel: Prevent unnecessary rfkill event generation. Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption.",18/06/2013 01:33:36,,DUPLICATE,https://github.com/Dm47021/Warp_Jellybean_7/commit/3e6948095d45aad33ffa7c97f12c64a9f92a0e71,,,,[VERIFIED] [https://github.com/androidarmv6/android_kernel_lge_msm7x27/commit/a6ef72fddaf6a04daf6b0adc0da8d9c77aaadedd],,[https://github.com/androidarmv6/android_kernel_lge_msm7x27/commit/a6ef72fddaf6a04daf6b0adc0da8d9c77aaadedd],EXISTS,,,,,,,,,,,,,Dm47021/Warp_Jellybean_7,Dm47021,,,Dm47021,
Amperific,kernel_tuna_4.3,"omap44xx: cpuidle: Update target residencies to saner values The current values are insane. There is no possible way power saving can be attained by heading into C4 for not much more than 1ms. The average values are in the 20ms range, so why do we need to even entertain entering at much lower values when we will use more power than we save in doing so. The actual recommended values are shown in 79e796f7b993bd82ad108fa488c35ddd1b9387eb but for some obscure reason, in 16385c726d55f9e84bbc60ff9e329a84d56a13a3 and 22e2193661b6bffcfdc1a4d17f6af0d1782ba860 they were updated to match the exit_latency. This seems horribly wrong to me as there comes a point when the target residency is so low that you use more power actually entering the state than you gain from the insignificant amount of time you spend there. With the values in this commit, C4 state is used for >95% of the time when the screen is off, with C3 picking up the remainder. During audio playback, C4 is used ~50% of the time, C3 is used ~25% of the time and C2 picks up whatever is left. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",18/06/2013 10:44:37,,DUPLICATE,https://github.com/Amperific/kernel_tuna_4.2/commit/28ec28aba736452d93cb05120cfe18081b8f9fd2,https://github.com/Amperific/kernel_tuna_4.3/commit/28ec28aba736452d93cb05120cfe18081b8f9fd2,,[DUPLICATE],[DUPLICATE] [4203efd9820495e1612bca6386a4c0303e842e18],[DUPLICATE],[4203efd9820495e1612bca6386a4c0303e842e18],EXISTS,,,,,,,,,,,,,Amperific/kernel_tuna_4.3,,,,,
hellsgod,lge-kernel-mako,"mmc: msm_sdcc: Enable clock scaling capability Enable capability, MMC_CAP2_CLK_SCALE to allow mmc core to scale the clocks at runtime based on load on card. Clock scaling in MSM platforms also allow voltage scaling between NOMINAL and SVS levels, thus allowing additional power savings. Change-Id: Id1995ffea7a6c06a2e8b29b43da70894f35f6c0b Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",18/06/2013 22:39:32,,NOT-FOUND,https://github.com/hellsgod/lge-kernel-mako/commit/b56e4b2f16ab5279d82be83706a64667efcb8c2c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,hellsgod/lge-kernel-mako,,,,,
ChangYeoun,Kite2,"mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. Change-Id: Iac064221199f69d162d91f5311becd735c15700a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: drivers/mmc/core/core.h drivers/mmc/core/mmc.c Conflicts: drivers/mmc/core/core.h drivers/mmc/core/mmc.c",19/06/2013 02:34:14,,NOT-FOUND,https://github.com/ChangYeoun/Kite2/commit/2440b6e4ea99469e4e7e989f7fd586170dbab7ce,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Kite2,,,,,
ChangYeoun,Kite2,"mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. Change-Id: I22a5054beec41b0b66b3bf030ddfcf284de448b3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: drivers/mmc/core/core.c include/linux/mmc/host.h Conflicts: drivers/mmc/core/core.c include/linux/mmc/host.h",19/06/2013 02:39:56,,NOT-FOUND,https://github.com/ChangYeoun/Kite2/commit/a171dd61fac9af469614ee78836aba5ca5b4cd70,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Kite2,,,,,
ChangYeoun,Kite2,mmc: core: Log MMC clock frequency transitions Use kernel's ftrace support to capture MMC clock frequency transitions which can be useful for debugging issues related to power consumption. Usage: mount -t debugfs none /sys/kernel/debug echo 1 > /sys/kernel/debug/tracing/events/mmc/mmc_clk/enable cat /sys/kernel/debug/tracing/trace_pipe Change-Id: I25c4ee39dcbe30e7665902a9f723a5a421b55ca3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Conflicts: include/trace/events/mmc.h,19/06/2013 02:45:23,,NOT-FOUND,https://github.com/ChangYeoun/Kite2/commit/68e9117e47e2b25e993861105efe59e1edd42e72,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Kite2,,,,,
ChangYeoun,Kite2,"mmc: msm_sdcc: Enable clock scaling capability Enable capability, MMC_CAP2_CLK_SCALE to allow mmc core to scale the clocks at runtime based on load on card. Clock scaling in MSM platforms also allow voltage scaling between NOMINAL and SVS levels, thus allowing additional power savings. Change-Id: Id1995ffea7a6c06a2e8b29b43da70894f35f6c0b Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",19/06/2013 02:46:01,,NOT-FOUND,https://github.com/ChangYeoun/Kite2/commit/0c9207ca8bf2bdac43579943e324277cb324537d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Kite2,,,,,
requalix,roofix,"added power saving package, removed hub package (was erroring out), fixed xinitrc config etc.",19/06/2013 13:36:11,,OK,https://github.com/requalix/arch_setup/commit/14abd0689278870571290134d6a029f38759349a,https://github.com/requalix/roofix/commit/14abd0689278870571290134d6a029f38759349a,,[FALSE-POSITIVE],[?] [OK] [Enable power saving],[OK] [IMPROVE POWER USAGE],[OK] [Enable power saving] [IMPROVE POWER USAGE],EXISTS,[added powersaving tlp package],[power saving],[Use power saving package] [Enable power saving],[Enable power saving service],,,Certain,Linux,No,Libraries and Utilities,Conf,added power saving package,requalix/roofix,,[Use power efficient library/device],,,Script
tmk,tmk_keyboard,Add power consumptions to doc,19/06/2013 13:38:23,,FALSE-POSITIVE,https://github.com/tmk/tmk_keyboard/commit/bebbe15562b45aeb911952b0765cd9c732d34306,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,tmk/tmk_keyboard,,,,,
lyfkevin,Wind_iproj_JB_kernel,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> modified for Mako from LKML reference Signed-off-by: faux123 <reioux@gmail.com>",20/06/2013 07:09:25,,NOT-FOUND,https://github.com/lyfkevin/Wind_iproj_JB_kernel/commit/8d4002b25800f0500ae4636cbcf367411e8e5976,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,lyfkevin/Wind_iproj_JB_kernel,,,,,
sonhuytran,Code.Forces.Problem.Set,10A - Power Consumption Calculation,20/06/2013 14:08:24,,FALSE-POSITIVE,https://github.com/sonhuytran/Code.Forces.Problem.Set/commit/5bcbe16a22f1a0cc93a5a94c3ef9a2d47d017be8,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,sonhuytran/Code.Forces.Problem.Set,sonhuytran,,,sonhuytran,
invisiblek,android_kernel_samsung_d2,"spi_qsd: Add runtime PM support to SPI QSD driver Enable and disable the clocks and gpios to the SPI controller using runtime PM. This serves the dual purpose of reducing power Consumption a little and letting the core know when the device is idle. If runtime_pm is not supported, then make sure the device becomes active in first transaction after system-suspend, instead of system-resume. CRs-Fixed: 460988 Change-Id: I2360b6f48491cd0e8e5f1ce54805079daf92e36b Signed-off-by: Alok Chauhan <alokc@codeaurora.org>",21/06/2013 03:17:50,,OK,https://github.com/invisiblek/android_kernel_samsung_d2/commit/2a647c91f09648733262756478d0befc1bc27287,,,[OK][Use a runtime to enable/disable clocks],[OK] [Use runtime PM],[DO NOT ANALYZE],[Use runtime PM] [Use a runtime to enable/disable clocks],EXISTS,[Enable and disable the clocks and gpios to the SPI controller using runtime PM],[reduce power consumption],[Use runtime power management component],[Use power efficient service],,,Certain,Android,Yes,OS,C,Enable and disable the clocks and gpios to the SPI controller using runtime PM. This serves the dual purpose of reducing power Consumption a little and letting the core know when the device is idle.,invisiblek/android_kernel_samsung_d2,,[Use power efficient library/device],,,Driver
gridcentric,cobalt,"Merge ""Save power_state in export"" into stable/folsom",21/06/2013 13:23:42,,FALSE-POSITIVE,https://github.com/gridcentric/cobalt/commit/9844872097971da1240ffa56ebf3cab18d37ff89,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,gridcentric/cobalt,rui-lin,,,,
gridcentric,cobalt,Update notes for submitted changes * Save power_state in export,21/06/2013 13:23:42,,FALSE-POSITIVE,https://github.com/gridcentric/cobalt/commit/f6c3f2859a408e7a60c422e8c7ecd266c68e7429,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,gridcentric/cobalt,rui-lin,,,,
skalk,genode,Arndale: save power by default (Fix #774) * Use regulator interface in eMMC driver to enable its clock,21/06/2013 15:10:08,,NOT-FOUND,https://github.com/skalk/genode/commit/27c666495c1b11f96b267b03e08b9f38e3d4bdbc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,skalk/genode,,,,,
czobor,samsung-kernel-msm7x30,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,21/06/2013 15:18:55,,NOT-FOUND,https://github.com/czobor/samsung-kernel-msm7x30/commit/3676420a3777f6d0ca45cee7aa3197fc679c5748,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,czobor/samsung-kernel-msm7x30,,,,,
Mustaavalkosta,htc7x30-3.0,"Linux 3.0.83 commit 937d4f9ee2fe18a6ab012a343fc3b620756b954e Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Date: Thu Jun 20 11:28:30 2013 -0700 Linux 3.0.83 commit 088d9d4d782d66941fc9e29ff4eb0dd72f84493b Author: Sage Weil <sage@inktank.com> Date: Fri Feb 22 15:31:00 2013 -0800 ceph: fix statvfs fr_size commit 92a49fb0f79f3300e6e50ddf56238e70678e4202 upstream. Different versions of glibc are broken in different ways, but the short of it is that for the time being, frsize should == bsize, and be used as the multiple for the blocks, free, and available fields. This mirrors what is done for NFS. The previous reporting of the page size for frsize meant that newer glibc and df would report a very small value for the fs size. Fixes http://tracker.ceph.com/issues/3793. Signed-off-by: Sage Weil <sage@inktank.com> Reviewed-by: Greg Farnum <greg@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 0ffdfdbe55c84906dd65627f069619bec54e5422 Author: Kees Cook <keescook@chromium.org> Date: Wed Jun 5 11:47:18 2013 -0700 x86: Fix typo in kexec register clearing commit c8a22d19dd238ede87aa0ac4f7dbea8da039b9c1 upstream. Fixes a typo in register clearing code. Thanks to PaX Team for fixing this originally, and James Troup for pointing it out. Signed-off-by: Kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/20130605184718.GA8396@www.outflux.net Cc: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 79848ba66d91e0c171ff203363e0c96629279c15 Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Date: Wed Jun 12 14:05:04 2013 -0700 mm: migration: add migrate_entry_wait_huge() commit 30dad30922ccc733cfdbfe232090cf674dc374dc upstream. When we have a page fault for the address which is backed by a hugepage under migration, the kernel can't wait correctly and do busy looping on hugepage fault until the migration finishes. As a result, users who try to kick hugepage migration (via soft offlining, for example) occasionally experience long delay or soft lockup. This is because pte_offset_map_lock() can't get a correct migration entry or a correct page table lock for hugepage. This patch introduces migration_entry_wait_huge() to solve this. Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Reviewed-by: Rik van Riel <riel@redhat.com> Reviewed-by: Wanpeng Li <liwanp@linux.vnet.ibm.com> Reviewed-by: Michal Hocko <mhocko@suse.cz> Cc: Mel Gorman <mgorman@suse.de> Cc: Andi Kleen <andi@firstfloor.org> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 78ef884ebb6c02d45abefc95350f428be7390a26 Author: Rafael Aquini <aquini@redhat.com> Date: Wed Jun 12 14:04:49 2013 -0700 swap: avoid read_swap_cache_async() race to deadlock while waiting on discard I/O completion commit cbab0e4eec299e9059199ebe6daf48730be46d2b upstream. read_swap_cache_async() can race against get_swap_page(), and stumble across a SWAP_HAS_CACHE entry in the swap map whose page wasn't brought into the swapcache yet. This transient swap_map state is expected to be transitory, but the actual placement of discard at scan_swap_map() inserts a wait for I/O completion thus making the thread at read_swap_cache_async() to loop around its -EEXIST case, while the other end at get_swap_page() is scheduled away at scan_swap_map(). This can leave the system deadlocked if the I/O completion happens to be waiting on the CPU waitqueue where read_swap_cache_async() is busy looping and !CONFIG_PREEMPT. This patch introduces a cond_resched() call to make the aforementioned read_swap_cache_async() busy loop condition to bail out when necessary, thus avoiding the subtle race window. Signed-off-by: Rafael Aquini <aquini@redhat.com> Acked-by: Johannes Weiner <hannes@cmpxchg.org> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: Shaohua Li <shli@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit bac5719cdfb081dd68b0eeef7d9796c15fc29811 Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date: Mon Jun 10 09:47:58 2013 +0200 drm/i915: prefer VBT modes for SVDO-LVDS over EDID commit c3456fb3e4712d0448592af3c5d644c9472cd3c1 upstream. In commit 53d3b4d7778daf15900867336c85d3f8dd70600c Author: Egbert Eich <eich@suse.de> Date: Tue Jun 4 17:13:21 2013 +0200 drm/i915/sdvo: Use &intel_sdvo->ddc instead of intel_sdvo->i2c for DDC Egbert Eich fixed a long-standing bug where we simply used a non-working i2c controller to read the EDID for SDVO-LVDS panels. Unfortunately some machines seem to not be able to cope with the mode provided in the EDID. Specifically they seem to not be able to cope with a 4x pixel mutliplier instead of a 2x one, which seems to have been worked around by slightly changing the panels native mode in the VBT so that the dotclock is just barely above 50MHz. Since it took forever to notice the breakage it's fairly safe to assume that at least for SDVO-LVDS panels the VBT contains fairly sane data. So just switch around the order and use VBT modes first. v2: Also add EDID modes just in case, and spell Egbert correctly. v3: Elaborate a bit more about what's going on on Chris' machine. Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=65524 Reported-and-tested-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: Egbert Eich <eich@suse.de> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 319d630e7f0778c8999f6ef503998a4d99cee5f1 Author: Sujith Manoharan <c_manoha@qca.qualcomm.com> Date: Sat Jun 1 07:08:09 2013 +0530 ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 720083f1dc15ac6b6fb85b323d0eae1a151e20ce Author: Kees Cook <keescook@chromium.org> Date: Fri May 10 14:48:21 2013 -0700 b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",21/06/2013 20:59:27,,TRADEOFF,https://github.com/Mustaavalkosta/htc7x30-3.0/commit/9df762c4a0efbe630f591f840005745e1e05d63c,,,[OK][Disabling power saving mode],[TRADEOFF] [Disable power saving] [Unable to map message to changes],[DO NOT ANALYZE],[Disable power saving] [Unable to map message to changes] [Disabling power saving mode],EXISTS,[Disable power saving by default],[Fix conection issues],,,,,Certain,Linux,Yes,Kernel,C,,Mustaavalkosta/htc7x30-3.0,Mustaavalkosta,Correctness,,Mustaavalkosta,Kernel
PurityROM,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Credits to Chris Lei",21/06/2013 22:15:28,,DUPLICATE,https://github.com/PurityROM/android_packages_apps_Phone/commit/5e32e26372cc6299a6239901a6d9076aa1365110,,,,[VERIFIED] [https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],,[https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],EXISTS,,,,,,,,,,,,,PurityROM/android_packages_apps_Phone,AndroidRul3z,,,AndroidRul3z,
CIB,Baystation12,"Implemented robot components(organs) Features: - You now have to open up a cyborg after constructing it and insert all the components - Cyborgs have per-component damage rather than total damage. - Too much damage can fry a component, making it non-functional - Components consume power - You can disable a component to save power - Actuator component allows you to move - Camera component allows you to see - Comms component allows you to use :b - Radio component allows you to use radio - The same placeholder icon for all components",22/06/2013 01:22:06,,NOT-FOUND,https://github.com/CIB/Baystation12/commit/922d44a6892db3fa2e56710fbf40bfd6971805b7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,CIB/Baystation12,,,,,
task650,kernel_underwear_manta,"cpuidle: Quickly notice prediction failure for repeat mode The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. cpuidle menu governor has a method to predict the repeat pattern if there are 8 C-states residency which are continuous and the same or very close, so it will predict the next C-states residency will keep same residency time. There is a real case that turbostat utility (tools/power/x86/turbostat) at kernel 3.3 or early. turbostat utility will read 10 registers one by one at Sandybridge, so it will generate 10 IPIs to wake up idle CPUs. So cpuidle menu governor will predict it is repeat mode and there is another IPI wake up idle CPU soon, so it keeps idle CPU stay at C1 state even though CPU is totally idle. However, in the turbostat, following 10 registers reading is sleep 5 seconds by default, so the idle CPU will keep at C1 for a long time though it is idle until break event occurs. In a idle Sandybridge system, run ""./turbostat -v"", we will notice that deep C-state dangles between ""70% ~ 99%"". After patched the kernel, we will notice deep C-state stays at >99.98%. In the patch, a timer is added when menu governor detects a repeat mode and choose a shallow C-state. The timer is set to a time out value that greater than predicted time, and we conclude repeat mode prediction failure if timer is triggered. When repeat mode happens as expected, the timer is not triggered and CPU waken up from C-states and it will cancel the timer initiatively. When repeat mode does not happen, the timer will be time out and menu governor will quickly notice that the repeat mode prediction fails and then re-evaluates deeper C-states possibility. Below is another case which will clearly show the patch much benefit: volatile int * shutdown; volatile long * count; int delay = 20; int loop = 8; void usage(void) { fprintf(stderr, ""Usage: idle_predict [options]\n"" "" --help -h Print this help\n"" "" --thread -n Thread number\n"" "" --loop -l Loop times in shallow Cstate\n"" "" --delay -t Sleep time (uS)in shallow Cstate\n""); } void *simple_loop() { int idle_num = 1; while (!(*shutdown)) { *count = *count + 1; if (idle_num % loop) usleep(delay); else { /* sleep 1 second */ usleep(1000000); idle_num = 0; } idle_num++; } } static void sighand(int sig) { *shutdown = 1; } int main(int argc, char *argv[]) { sigset_t sigset; int signum = SIGALRM; int i, c, er = 0, thread_num = 8; pthread_t pt[1024]; static char optstr[] = ""n:l:t:h:""; while ((c = getopt(argc, argv, optstr)) != EOF) switch (c) { case 'n': thread_num = atoi(optarg); break; case 'l': loop = atoi(optarg); break; case 't': delay = atoi(optarg); break; case 'h': default: usage(); exit(1); } printf(""thread=%d,loop=%d,delay=%d\n"",thread_num,loop,delay); count = malloc(sizeof(long)); shutdown = malloc(sizeof(int)); *count = 0; *shutdown = 0; sigemptyset(&sigset); sigaddset(&sigset, signum); sigprocmask (SIG_BLOCK, &sigset, NULL); signal(SIGINT, sighand); signal(SIGTERM, sighand); for(i = 0; i < thread_num ; i++) pthread_create(&pt[i], NULL, simple_loop, NULL); for (i = 0; i < thread_num; i++) pthread_join(pt[i], NULL); exit(0); } Get powertop V2 from git://github.com/fenrus75/powertop, build powertop. After build the above test application, then run it. Test plaform can be Intel Sandybridge or other recent platforms. We will find that deep C-state will dangle between 40%~100% and much time spent on C1 state. It is because menu governor wrongly predict that repeat mode is kept, so it will choose the C1 shallow C-state even though it has chance to sleep 1 second in deep C-state. While after patched the kernel, we find that deep C-state will keep >99.6%. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Signed-off-by: task650 <task650@gmail.com> Conflicts: kernel/time/tick-sched.c Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/time/tick-sched.c",22/06/2013 02:20:45,,NOT-FOUND,https://github.com/task650/kernel_underwear_manta/commit/402aef17f505a4d1e79d4d566eb5746061b8144f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,task650/kernel_underwear_manta,,,,,
CIB,Baystation12,"Implemented robot components(organs) Features: - You now have to open up a cyborg after constructing it and insert all the components - Cyborgs have per-component damage rather than total damage. - Too much damage can fry a component, making it non-functional - Components consume power - You can disable a component to save power - Actuator component allows you to move - Camera component allows you to see - Comms component allows you to use :b - Radio component allows you to use radio - The same placeholder icon for all components",22/06/2013 05:10:58,,DUPLICATE,https://github.com/CIB/Baystation12/commit/b58326c8fae68040b9fe1a7da0d755afccfaa73e,,,,,,,EXISTS,,,,,,,,,,,,,CIB/Baystation12,,,,,
mharizanov,new_Funky,optimization for a shorted led blink to save power,22/06/2013 07:21:21,,OK,https://github.com/mharizanov/new_Funky/commit/199c4b63c2ba15e8493fbe8dd033e03a23597599,,,[OK][Disabling devices],[OK] [Shorten LED blink] [Disable component],[DO NOT ANALYZE],[Shorten LED blink] [Disable component] [Disabling devices],EXISTS,[shorten led blink],[power saving],[Reduce resource usage] [Shorten LED blink],[Reduce device usage],,,Certain,Arduino,No,Application,Ino,optimization for a shorted led blink to save power,mharizanov/new_Funky,mharizanov,[Miscellaneous],,mharizanov,Arduino controller
oxavelar,XT890-Kernel-Gamma,Power saving.,23/06/2013 03:02:55,,OK,https://github.com/oxavelar/XT890-Kernel-Gamma/commit/2a4c49029b7482a185a58b132f3d6c136c3ebdc5,,,[OK][Scaling CPU freq],[OK] [Scale frequency] [Reduce sampling rate],[DO NOT ANALYZE],[Scale frequency] [Reduce sampling rate] [Scaling CPU freq],EXISTS,[Config governor],[power saving],[Configure governor] [Scale CPU frequency],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,OS,C,Power saving.,oxavelar/XT890-Kernel-Gamma,oxavelar,[Frequency and voltage scaling],,oxavelar,Driver cpufreq
Juansheng,android_kernel_samsung_crespo,"Linux 3.0.83 (Squashed commit) b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drm/i915: prefer VBT modes for SVDO-LVDS over EDID commit c3456fb3e4712d0448592af3c5d644c9472cd3c1 upstream. In commit 53d3b4d7778daf15900867336c85d3f8dd70600c Author: Egbert Eich <eich@suse.de> Date: Tue Jun 4 17:13:21 2013 +0200 drm/i915/sdvo: Use &intel_sdvo->ddc instead of intel_sdvo->i2c for DDC Egbert Eich fixed a long-standing bug where we simply used a non-working i2c controller to read the EDID for SDVO-LVDS panels. Unfortunately some machines seem to not be able to cope with the mode provided in the EDID. Specifically they seem to not be able to cope with a 4x pixel mutliplier instead of a 2x one, which seems to have been worked around by slightly changing the panels native mode in the VBT so that the dotclock is just barely above 50MHz. Since it took forever to notice the breakage it's fairly safe to assume that at least for SDVO-LVDS panels the VBT contains fairly sane data. So just switch around the order and use VBT modes first. v2: Also add EDID modes just in case, and spell Egbert correctly. v3: Elaborate a bit more about what's going on on Chris' machine. Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=65524 Reported-and-tested-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: Egbert Eich <eich@suse.de> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> swap: avoid read_swap_cache_async() race to deadlock while waiting on discard I/O completion commit cbab0e4eec299e9059199ebe6daf48730be46d2b upstream. read_swap_cache_async() can race against get_swap_page(), and stumble across a SWAP_HAS_CACHE entry in the swap map whose page wasn't brought into the swapcache yet. This transient swap_map state is expected to be transitory, but the actual placement of discard at scan_swap_map() inserts a wait for I/O completion thus making the thread at read_swap_cache_async() to loop around its -EEXIST case, while the other end at get_swap_page() is scheduled away at scan_swap_map(). This can leave the system deadlocked if the I/O completion happens to be waiting on the CPU waitqueue where read_swap_cache_async() is busy looping and !CONFIG_PREEMPT. This patch introduces a cond_resched() call to make the aforementioned read_swap_cache_async() busy loop condition to bail out when necessary, thus avoiding the subtle race window. Signed-off-by: Rafael Aquini <aquini@redhat.com> Acked-by: Johannes Weiner <hannes@cmpxchg.org> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: Shaohua Li <shli@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> mm: migration: add migrate_entry_wait_huge() commit 30dad30922ccc733cfdbfe232090cf674dc374dc upstream. When we have a page fault for the address which is backed by a hugepage under migration, the kernel can't wait correctly and do busy looping on hugepage fault until the migration finishes. As a result, users who try to kick hugepage migration (via soft offlining, for example) occasionally experience long delay or soft lockup. This is because pte_offset_map_lock() can't get a correct migration entry or a correct page table lock for hugepage. This patch introduces migration_entry_wait_huge() to solve this. Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Reviewed-by: Rik van Riel <riel@redhat.com> Reviewed-by: Wanpeng Li <liwanp@linux.vnet.ibm.com> Reviewed-by: Michal Hocko <mhocko@suse.cz> Cc: Mel Gorman <mgorman@suse.de> Cc: Andi Kleen <andi@firstfloor.org> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> x86: Fix typo in kexec register clearing commit c8a22d19dd238ede87aa0ac4f7dbea8da039b9c1 upstream. Fixes a typo in register clearing code. Thanks to PaX Team for fixing this originally, and James Troup for pointing it out. Signed-off-by: Kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/20130605184718.GA8396@www.outflux.net Cc: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ceph: fix statvfs fr_size commit 92a49fb0f79f3300e6e50ddf56238e70678e4202 upstream. Different versions of glibc are broken in different ways, but the short of it is that for the time being, frsize should == bsize, and be used as the multiple for the blocks, free, and available fields. This mirrors what is done for NFS. The previous reporting of the page size for frsize meant that newer glibc and df would report a very small value for the fs size. Fixes http://tracker.ceph.com/issues/3793. Signed-off-by: Sage Weil <sage@inktank.com> Reviewed-by: Greg Farnum <greg@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Linux 3.0.83",23/06/2013 09:21:24,,NOT-FOUND,https://github.com/Juansheng/android_kernel_samsung_crespo/commit/9ad419a77172f40a846d8ccd2df8a426d188c3e3,,,,[VERIFIED] [NOT FOUND],,[NOT FOUND],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Juansheng/android_kernel_samsung_crespo,,,,,
Grarak,grakernel-n1,"Squashed commits from P4 commit b8a8494156b0868e5c830b08c5ab827835678e5d Author: Adam77Root <adam77root@gmail.com> Date: Sun Jun 9 17:37:30 2013 +0200 defconfig: remove duplicate Change-Id: I688f347a899ecbb926c1faaad6cf42946767dce4 commit 85284d500d6a6ff6e957f29f449ad7064b3f7893 Author: Adam77Root <adam77root@gmail.com> Date: Sun Jun 9 17:30:02 2013 +0200 defconfig: enable UHID Change-Id: I353acd9d98afa21d8bd8ca9c401d1e01dd1a68c4 commit bb4c191a9516dab88d7a82c113817ded81b611db Author: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Date: Sat Jul 14 18:59:25 2012 -0300 HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 8cab1b88d2674bc871cd9c8f75495253c6564f62 Author: Jiri Kosina <jkosina@suse.cz> Date: Mon Jun 18 17:08:08 2012 +0200 HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ‘uhid_hid_get_raw’: drivers/hid/uhid.c:157: warning: ‘len’ may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit dd7dfc79700c10c024c26566806af17871e3d33d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:27 2012 +0200 HID: uhid: add example program This adds an example user-space program that emulates a 3 button mouse with wheel. It detects keyboard presses and moves the mouse accordingly. It register a fake HID device to feed the raw HID reports into the kernel. In this example, you could use uinput to get the same result, but this shows how to get the same behavior with uhid so you don't need HID parsers in user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit ca8cdce13357cc3ff7748c59c925413dce314a49 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:26 2012 +0200 HID: uhid: add documentation This describes the protocol used by uhid for user-space applications. It describes the details like non-blocking I/O and readv/writev for multiple events per syscall. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 655fc6be4996d7ec1230c7cabd709d2e3ec62c4d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:25 2012 +0200 HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit ccf1b5e4699d768cee9da29433e5d85ca2d21699 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:24 2012 +0200 HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit a14a1e601fb4518dd962978dd96c55e8420f4c6d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:23 2012 +0200 HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit c87a868ba79c931c21ab3da720f03c74e31e819f Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:22 2012 +0200 HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit c3b3287848544622be9d28a490f93ce790ff9fb6 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:21 2012 +0200 HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 69b67c28c6f903e755985b0acab6f7adee45728c Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:20 2012 +0200 HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit f81484567e8ef20dbeccb79f04692e08b40704e2 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:19 2012 +0200 HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 5147437a91b810fc58ccb5a14dca93728b78ec29 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:18 2012 +0200 HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 09136c8bac2053e99ed8f37e19d290bf6bc72289 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:17 2012 +0200 HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 0a0b89ce47acdf869ab19860258700e3179ce76d Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:16 2012 +0200 HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> commit 92c2a8f37fd84c8cf00012b38216b0a21daeda45 Author: David Herrmann <dh.herrmann@googlemail.com> Date: Sun Jun 10 15:16:15 2012 +0200 HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this  ...",23/06/2013 12:26:55,,DUPLICATE,https://github.com/Grarak/ButterKernel-n1/commit/22bdaa2fa571efd2abdf7daaf225c7ad875b1072,https://github.com/Grarak/grakernel-n1/commit/22bdaa2fa571efd2abdf7daaf225c7ad875b1072,,,,,,EXISTS,,,,,,,,,,,,,Grarak/grakernel-n1,,,,,
hhjjj,WaterDrop.X,4 kHz PWM out / 1 mA power consumption,23/06/2013 16:45:46,,FALSE-POSITIVE,https://github.com/hhjjj/WaterDrop.X/commit/88c05d756039d4e10a73d70f649fd9e771718746,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,hhjjj/WaterDrop.X,ossicode,,,ossicode,
drowningchild,dc-geebus,"mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. Change-Id: Iac064221199f69d162d91f5311becd735c15700a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: drivers/mmc/core/core.h drivers/mmc/core/mmc.c",23/06/2013 22:45:40,,FALSE-POSITIVE,https://github.com/drowningchild/dc-geebus/commit/6c7bf50984b4941575efd1360fbc778e342a820e,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,drowningchild/dc-geebus,,,,drowningchild,
genodelabs,genode,Arndale: save power by default (Fix #774) * Use regulator interface in eMMC driver to enable its clock,24/06/2013 10:42:49,,DUPLICATE,https://github.com/genodelabs/genode/commit/a4eb4bfa078d15005c77aab911ed010b0cb1d72f,,,,,,,EXISTS,,,,,,,,,,,,,genodelabs/genode,skalk,,,nfeske,
reddikih,spsim2,implemented energy efficient buffer manager. but need debug. for bfa_tik_06,24/06/2013 10:57:08,,UNABLE-TO-CATEGORIZE,https://github.com/reddikih/spsim2/commit/22f8604648e0a4209445d506f0be97664b0b956b,,,[OK][BUFFERING OPERATIONS],[OK] [UNABLE-TO-CATEGORIZE],[OK] [UNABLE TO CATEGORIZE],[UNABLE-TO-CATEGORIZE] [BUFFERING OPERATIONS] [UNABLE TO CATEGORIZE],EXISTS,,,[REVIEW],,,,,,No,,Java,implemented energy efficient buffer manager.,reddikih/spsim2,reddikih,,,reddikih,
IllusionRoms,packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",25/06/2013 04:11:33,,NOT-FOUND,https://github.com/IllusionRoms/packages_apps_Phone/commit/ae483c6f5bd094d03a977350837ee4fbaea53db7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,IllusionRoms/packages_apps_Phone,,,,,
bdossantos,dashboard,Add notes about power saving,25/06/2013 13:43:25,,FALSE-POSITIVE,https://github.com/bdossantos/dashboard/commit/6bba24207a6c2c5d07a8d1fdebe13f6fbaec66e1,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Documentation],[DO NOT ANALYZE],[Documentation],EXISTS,,,,,,,,,,,,,bdossantos/dashboard,bdossantos,,,bdossantos,
Andromadus,htc7x30-3.0,"Linux 3.0.83 (Squashed Commit) b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drm/i915: prefer VBT modes for SVDO-LVDS over EDID commit c3456fb3e4712d0448592af3c5d644c9472cd3c1 upstream. In commit 53d3b4d7778daf15900867336c85d3f8dd70600c Author: Egbert Eich <eich@suse.de> Date: Tue Jun 4 17:13:21 2013 +0200 drm/i915/sdvo: Use &intel_sdvo->ddc instead of intel_sdvo->i2c for DDC Egbert Eich fixed a long-standing bug where we simply used a non-working i2c controller to read the EDID for SDVO-LVDS panels. Unfortunately some machines seem to not be able to cope with the mode provided in the EDID. Specifically they seem to not be able to cope with a 4x pixel mutliplier instead of a 2x one, which seems to have been worked around by slightly changing the panels native mode in the VBT so that the dotclock is just barely above 50MHz. Since it took forever to notice the breakage it's fairly safe to assume that at least for SDVO-LVDS panels the VBT contains fairly sane data. So just switch around the order and use VBT modes first. v2: Also add EDID modes just in case, and spell Egbert correctly. v3: Elaborate a bit more about what's going on on Chris' machine. Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=65524 Reported-and-tested-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: Egbert Eich <eich@suse.de> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> swap: avoid read_swap_cache_async() race to deadlock while waiting on discard I/O completion commit cbab0e4eec299e9059199ebe6daf48730be46d2b upstream. read_swap_cache_async() can race against get_swap_page(), and stumble across a SWAP_HAS_CACHE entry in the swap map whose page wasn't brought into the swapcache yet. This transient swap_map state is expected to be transitory, but the actual placement of discard at scan_swap_map() inserts a wait for I/O completion thus making the thread at read_swap_cache_async() to loop around its -EEXIST case, while the other end at get_swap_page() is scheduled away at scan_swap_map(). This can leave the system deadlocked if the I/O completion happens to be waiting on the CPU waitqueue where read_swap_cache_async() is busy looping and !CONFIG_PREEMPT. This patch introduces a cond_resched() call to make the aforementioned read_swap_cache_async() busy loop condition to bail out when necessary, thus avoiding the subtle race window. Signed-off-by: Rafael Aquini <aquini@redhat.com> Acked-by: Johannes Weiner <hannes@cmpxchg.org> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: Shaohua Li <shli@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> mm: migration: add migrate_entry_wait_huge() commit 30dad30922ccc733cfdbfe232090cf674dc374dc upstream. When we have a page fault for the address which is backed by a hugepage under migration, the kernel can't wait correctly and do busy looping on hugepage fault until the migration finishes. As a result, users who try to kick hugepage migration (via soft offlining, for example) occasionally experience long delay or soft lockup. This is because pte_offset_map_lock() can't get a correct migration entry or a correct page table lock for hugepage. This patch introduces migration_entry_wait_huge() to solve this. Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Reviewed-by: Rik van Riel <riel@redhat.com> Reviewed-by: Wanpeng Li <liwanp@linux.vnet.ibm.com> Reviewed-by: Michal Hocko <mhocko@suse.cz> Cc: Mel Gorman <mgorman@suse.de> Cc: Andi Kleen <andi@firstfloor.org> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> x86: Fix typo in kexec register clearing commit c8a22d19dd238ede87aa0ac4f7dbea8da039b9c1 upstream. Fixes a typo in register clearing code. Thanks to PaX Team for fixing this originally, and James Troup for pointing it out. Signed-off-by: Kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/20130605184718.GA8396@www.outflux.net Cc: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ceph: fix statvfs fr_size commit 92a49fb0f79f3300e6e50ddf56238e70678e4202 upstream. Different versions of glibc are broken in different ways, but the short of it is that for the time being, frsize should == bsize, and be used as the multiple for the blocks, free, and available fields. This mirrors what is done for NFS. The previous reporting of the page size for frsize meant that newer glibc and df would report a very small value for the fs size. Fixes http://tracker.ceph.com/issues/3793. Signed-off-by: Sage Weil <sage@inktank.com> Reviewed-by: Greg Farnum <greg@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",25/06/2013 15:30:17,,DUPLICATE,https://github.com/Andromadus/htc7x30-3.0/commit/38511bc1e5b8881a9dfbc97dca7e80916f4172fa,,,[DUPLICATE],[DUPLICATE] [9df762c4a0efbe630f591f840005745e1e05d63c],[DO NOT ANALYZE],[9df762c4a0efbe630f591f840005745e1e05d63c],EXISTS,,,,,,,,,,,,,Andromadus/htc7x30-3.0,gregkh,,,Flinny,
SlimRoms,kernel_lge_mako,"Squash linux version 3.4.50 and bumped to 3.3.0 Change-Id: I92cfd4099a71f389d1ed19775a087d690bac9c14 b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> libceph: must hold mutex for reset_changed_osds() commit 14d2f38df67fadee34625fcbd282ee22514c4846 upstream. An osd client has a red-black tree describing its osds, and occasionally we would get crashes due to one of these trees tree becoming corrupt somehow. The problem turned out to be that reset_changed_osds() was being called without protection of the osd client request mutex. That function would call __reset_osd() for any osd that had changed, and __reset_osd() would call __remove_osd() for any osd with no outstanding requests, and finally __remove_osd() would remove the corresponding entry from the red-black tree. Thus, the tree was getting modified without having any lock protection, and was vulnerable to problems due to concurrent updates. This appears to be the only osd tree updating path that has this problem. It can be fairly easily fixed by moving the call up a few lines, to just before the request mutex gets dropped in kick_requests(). This resolves: http://tracker.ceph.com/issues/5043 Signed-off-by: Alex Elder <elder@inktank.com> Reviewed-by: Sage Weil <sage@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ceph: add cpu_to_le32() calls when encoding a reconnect capability commit c420276a532a10ef59849adc2681f45306166b89 upstream. In his review, Alex Elder mentioned that he hadn't checked that num_fcntl_locks and num_flock_locks were properly decoded on the server side, from a le32 over-the-wire type to a cpu type. I checked, and AFAICS it is done; those interested can consult Locker::_do_cap_update() in src/mds/Locker.cc and src/include/encoding.h in the Ceph server code (git://github.com/ceph/ceph). I also checked the server side for flock_len decoding, and I believe that also happens correctly, by virtue of having been declared __le32 in struct ceph_mds_cap_reconnect, in src/include/ceph_fs.h. Signed-off-by: Jim Schutt <jaschut@sandia.gov> Reviewed-by: Alex Elder <elder@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ceph: ceph_pagelist_append might sleep while atomic commit 39be95e9c8c0b5668c9f8806ffe29bf9f4bc0f40 upstream. Ceph's encode_caps_cb() worked hard to not call __page_cache_alloc() while holding a lock, but it's spoiled because ceph_pagelist_addpage() always calls kmap(), which might sleep. Here's the result: [13439.295457] ceph: mds0 reconnect start [13439.300572] BUG: sleeping function called from invalid context at include/linux/highmem.h:58 [13439.309243] in_atomic(): 1, irqs_disabled(): 0, pid: 12059, name: kworker/1:1 . . . [13439.376225] Call Trace: [13439.378757] [<ffffffff81076f4c>] __might_sleep+0xfc/0x110 [13439.384353] [<ffffffffa03f4ce0>] ceph_pagelist_append+0x120/0x1b0 [libceph] [13439.391491] [<ffffffffa0448fe9>] ceph_encode_locks+0x89/0x190 [ceph] [13439.398035] [<ffffffff814ee849>] ? _raw_spin_lock+0x49/0x50 [13439.403775] [<ffffffff811cadf5>] ? lock_flocks+0x15/0x20 [13439.409277] [<ffffffffa045e2af>] encode_caps_cb+0x41f/0x4a0 [ceph] [13439.415622] [<ffffffff81196748>] ? igrab+0x28/0x70 [13439.420610] [<ffffffffa045e9f8>] ? iterate_session_caps+0xe8/0x250 [ceph] [13439.427584] [<ffffffffa045ea25>] iterate_session_caps+0x115/0x250 [ceph] [13439.434499] [<ffffffffa045de90>] ? set_request_path_attr+0x2d0/0x2d0 [ceph] [13439.441646] [<ffffffffa0462888>] send_mds_reconnect+0x238/0x450 [ceph] [13439.448363] [<ffffffffa0464542>] ? ceph_mdsmap_decode+0x5e2/0x770 [ceph] [13439.455250] [<ffffffffa0462e42>] check_new_map+0x352/0x500 [ceph] [13439.461534] [<ffffffffa04631ad>] ceph_mdsc_handle_map+0x1bd/0x260 [ceph] [13439.468432] [<ffffffff814ebc7e>] ? mutex_unlock+0xe/0x10 [13439.473934] [<ffffffffa043c612>] extra_mon_dispatch+0x22/0x30 [ceph] [13439.480464] [<ffffffffa03f6c2c>] dispatch+0xbc/0x110 [libceph] [13439.486492] [<ffffffffa03eec3d>] process_message+0x1ad/0x1d0 [libceph] [13439.493190] [<ffffffffa03f1498>] ? read_partial_message+0x3e8/0x520 [libceph] . . . [13439.587132] ceph: mds0 reconnect success [13490.720032] ceph: mds0 caps stale [13501.235257] ceph: mds0 recovery completed [13501.300419] ceph: mds0 caps renewed Fix it up by encoding locks into a buffer first, and when the number of encoded locks is stable, copy that into a ceph_pagelist. [elder@inktank.com: abbreviated the stack info a bit.] Signed-off-by: Jim Schutt <jaschut@sandia.gov> Reviewed-by: Alex Elder <elder@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drivers/rtc/rtc-twl.c: fix missing device_init_wakeup() when booted with device tree commit 24b8256a1fb28d357bc6fa09184ba29b4255ba5c upstream. When booted in legacy mode device_init_wakeup() gets called by drivers/mfd/twl-core.c when the children are initialized. However, when booted using device tree, the children are created with of_platform_populate() instead add_children(). This means that the RTC driver will not have device_init_wakeup() set, and we need to call it from the driver probe like RTC drivers typically do. Without this we cannot test PM wake-up events on omaps for cases where there may not be any physical wake-up event. Signed-off-by: Tony Lindgren <tony@atomide.com> Reported-by: Kevin Hilman <khilman@linaro.org> Cc: Alessandro Zummo <a.zummo@towertech.it> Cc: Jingoo Han <jg1.han@samsung.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drm/gma500/psb: Unpin framebuffer on crtc disable commit 820de86a90089ee607d7864538c98a23b503c846 upstream. The framebuffer needs to be unpinned in the crtc->disable callback because of previous pinning in psb_intel_pipe_set_base(). This will fix a memory leak where the framebuffer was released but not unpinned properly. This patch only affects Poulsbo. Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=889511 Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=812113 Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drm/gma500/cdv: Unpin framebuffer on crtc disable commit 22e7c385a80d771aaf3a15ae7ccea3b0686bbe10 upstream. The framebuffer needs to be unpinned in the crtc->disable callback because of previous pinning in psb_intel_pipe_set_base(). This will fix a memory leak where the framebuffer was released but not unpinned properly. This patch only affects Cedarview. Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=889511 Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=812113 Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ath9k: Use minstrel rate control by default commit 5efac94999ff218e0101f67a059e44abb4b0b523 upstream. The ath9k rate control algorithm has various architectural issues that make it a poor fit in scenarios like congested environments etc. An example: https://bugzilla.redhat.com/show_bug.cgi?id=927191 Change the default to minstrel which is more robust in such cases. The ath9k RC code is left in the driver for now, maybe it can be removed altogether later on. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> CPU hotplug: provide a generic helper to disable/enable CPU hotplug commit 16e53dbf10a2d7e228709a7286310e629ede5e45 upstream. There are instances in the kernel where we would like to disable CPU hotplug (from sysfs) during some important operation. Today the freezer code depends on this and the code to do it was kinda tailor-made for that. Restructure the code and make it generic enough to be useful for other usecases too. Signed-off-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com> Signed-off-by: Robin Holt <holt@sgi.com> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@elte.hu> Cc: Russ Anderson <rja@sgi.com> Cc: Robin Holt <holt@sgi.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn> Cc: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> reboot: rigrate shutdown/reboot to boot cpu commit cf7df378aa4ff7da3a44769b7ff6e9eef1a9f3db ...",25/06/2013 19:14:30,,DUPLICATE,https://github.com/SlimRoms/kernel_lge_mako/commit/d9dda86b8b736af4b39434709f8123fe6eaa5e3d,,,[DUP],[DUPLICATE] [9df762c4a0efbe630f591f840005745e1e05d63c],[DO NOT ANALYZE],[9df762c4a0efbe630f591f840005745e1e05d63c],EXISTS,,,,,,,,,,,,,SlimRoms/kernel_lge_mako,PRJosh,,,PRJosh,
djintrigue808,lge-kernel-mako,"mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. Change-Id: Iac064221199f69d162d91f5311becd735c15700a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: drivers/mmc/core/core.h drivers/mmc/core/mmc.c",26/06/2013 04:55:45,,NOT-FOUND,https://github.com/djintrigue808/lge-kernel-mako/commit/cd94b07303a2073f557d788757fa85fcf356bd16,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,djintrigue808/lge-kernel-mako,,,,,
djintrigue808,lge-kernel-mako,"mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. Change-Id: I22a5054beec41b0b66b3bf030ddfcf284de448b3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: drivers/mmc/core/core.c include/linux/mmc/host.h",26/06/2013 04:55:57,,NOT-FOUND,https://github.com/djintrigue808/lge-kernel-mako/commit/a622664ac25bdef50ff8826417d60c5aec00f8dd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,djintrigue808/lge-kernel-mako,,,,,
djintrigue808,lge-kernel-mako,"mmc: core: Add support for notifying host driver while scaling clocks Host drivers can participate in clock scaling by registering ->notify_load host operation, which allows host driver to carry out platform specific operations for further power savings or increasing throughput based on whether load is LOW or HIGH respectively. This can be applicable to non-ultra high speed cards as well so remove the check for ultra high speed cards to initialize clock scaling. Change-Id: Icaab9520135e384f5470db68b2f25c5cdce5663a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",26/06/2013 04:56:52,,NOT-FOUND,https://github.com/djintrigue808/lge-kernel-mako/commit/c1b27b240b35093d91b1618599579c3fb2c8931e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,djintrigue808/lge-kernel-mako,,,,,
colinmeyer,ATtiny13_firefly,added some power saving config,26/06/2013 09:06:08,,OK,https://github.com/colinmeyer/ATtiny13_firefly/commit/0071b80de8ac07a555fffa28595d17f7feec5f81,,,[OK][Disabling devices],[OK] [Disable component] [Disable device],[DO NOT ANALYZE],[Disable component] [Disable device] [Disabling devices],EXISTS,[turn off adc] [turn off analog comparator] [turn off input pins],[power saving],[Disable component] [Disable device],[Disable device],[Pin configuration],Multiple changes,Certain,Embedded !,No,Application,C,added some power saving config,colinmeyer/ATtiny13_firefly,colinmeyer,[Disabling feature/devices],,colinmeyer,Embedded application !
dkwingsmt,AIC13OTA,"athother balanced version, hope to reduce the power consumption",27/06/2013 11:10:41,,UNABLE-TO-CATEGORIZE,https://github.com/dkwingsmt/AIC13OTA/commit/dbc13e4781e7b7d3383ab6a8c42200ae17e497bb,,,[Unable to categorize],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,dkwingsmt/AIC13OTA,dkwingsmt,,,dkwingsmt,
klin1344,android_kernel_samsung_d2_OLD,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",27/06/2013 20:06:58,,DUPLICATE,https://github.com/klin1344/android_kernel_samsung_d2/commit/937096f93fb2919ecf6531284b926bcc838d4113,https://github.com/klin1344/android_kernel_samsung_d2_OLD/commit/937096f93fb2919ecf6531284b926bcc838d4113,,,,,,EXISTS,,,,,,,,,,,,,klin1344/android_kernel_samsung_d2_OLD,,,,,
FIC,us-map,- energy consumption by state data entered,27/06/2013 21:51:27,,NOT-FOUND,https://github.com/FIC/us-map/commit/50847d63c2be61fd834adbef66a43753cfa131c7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,FIC/us-map,,,,,
espmartin,htc7x30-3.0,"Linux 3.0.83 commit 937d4f9ee2fe18a6ab012a343fc3b620756b954e Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Date: Thu Jun 20 11:28:30 2013 -0700 Linux 3.0.83 commit 088d9d4d782d66941fc9e29ff4eb0dd72f84493b Author: Sage Weil <sage@inktank.com> Date: Fri Feb 22 15:31:00 2013 -0800 ceph: fix statvfs fr_size commit 92a49fb0f79f3300e6e50ddf56238e70678e4202 upstream. Different versions of glibc are broken in different ways, but the short of it is that for the time being, frsize should == bsize, and be used as the multiple for the blocks, free, and available fields. This mirrors what is done for NFS. The previous reporting of the page size for frsize meant that newer glibc and df would report a very small value for the fs size. Fixes http://tracker.ceph.com/issues/3793. Signed-off-by: Sage Weil <sage@inktank.com> Reviewed-by: Greg Farnum <greg@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 0ffdfdbe55c84906dd65627f069619bec54e5422 Author: Kees Cook <keescook@chromium.org> Date: Wed Jun 5 11:47:18 2013 -0700 x86: Fix typo in kexec register clearing commit c8a22d19dd238ede87aa0ac4f7dbea8da039b9c1 upstream. Fixes a typo in register clearing code. Thanks to PaX Team for fixing this originally, and James Troup for pointing it out. Signed-off-by: Kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/20130605184718.GA8396@www.outflux.net Cc: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 79848ba66d91e0c171ff203363e0c96629279c15 Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Date: Wed Jun 12 14:05:04 2013 -0700 mm: migration: add migrate_entry_wait_huge() commit 30dad30922ccc733cfdbfe232090cf674dc374dc upstream. When we have a page fault for the address which is backed by a hugepage under migration, the kernel can't wait correctly and do busy looping on hugepage fault until the migration finishes. As a result, users who try to kick hugepage migration (via soft offlining, for example) occasionally experience long delay or soft lockup. This is because pte_offset_map_lock() can't get a correct migration entry or a correct page table lock for hugepage. This patch introduces migration_entry_wait_huge() to solve this. Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Reviewed-by: Rik van Riel <riel@redhat.com> Reviewed-by: Wanpeng Li <liwanp@linux.vnet.ibm.com> Reviewed-by: Michal Hocko <mhocko@suse.cz> Cc: Mel Gorman <mgorman@suse.de> Cc: Andi Kleen <andi@firstfloor.org> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 78ef884ebb6c02d45abefc95350f428be7390a26 Author: Rafael Aquini <aquini@redhat.com> Date: Wed Jun 12 14:04:49 2013 -0700 swap: avoid read_swap_cache_async() race to deadlock while waiting on discard I/O completion commit cbab0e4eec299e9059199ebe6daf48730be46d2b upstream. read_swap_cache_async() can race against get_swap_page(), and stumble across a SWAP_HAS_CACHE entry in the swap map whose page wasn't brought into the swapcache yet. This transient swap_map state is expected to be transitory, but the actual placement of discard at scan_swap_map() inserts a wait for I/O completion thus making the thread at read_swap_cache_async() to loop around its -EEXIST case, while the other end at get_swap_page() is scheduled away at scan_swap_map(). This can leave the system deadlocked if the I/O completion happens to be waiting on the CPU waitqueue where read_swap_cache_async() is busy looping and !CONFIG_PREEMPT. This patch introduces a cond_resched() call to make the aforementioned read_swap_cache_async() busy loop condition to bail out when necessary, thus avoiding the subtle race window. Signed-off-by: Rafael Aquini <aquini@redhat.com> Acked-by: Johannes Weiner <hannes@cmpxchg.org> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: Shaohua Li <shli@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit bac5719cdfb081dd68b0eeef7d9796c15fc29811 Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date: Mon Jun 10 09:47:58 2013 +0200 drm/i915: prefer VBT modes for SVDO-LVDS over EDID commit c3456fb3e4712d0448592af3c5d644c9472cd3c1 upstream. In commit 53d3b4d7778daf15900867336c85d3f8dd70600c Author: Egbert Eich <eich@suse.de> Date: Tue Jun 4 17:13:21 2013 +0200 drm/i915/sdvo: Use &intel_sdvo->ddc instead of intel_sdvo->i2c for DDC Egbert Eich fixed a long-standing bug where we simply used a non-working i2c controller to read the EDID for SDVO-LVDS panels. Unfortunately some machines seem to not be able to cope with the mode provided in the EDID. Specifically they seem to not be able to cope with a 4x pixel mutliplier instead of a 2x one, which seems to have been worked around by slightly changing the panels native mode in the VBT so that the dotclock is just barely above 50MHz. Since it took forever to notice the breakage it's fairly safe to assume that at least for SDVO-LVDS panels the VBT contains fairly sane data. So just switch around the order and use VBT modes first. v2: Also add EDID modes just in case, and spell Egbert correctly. v3: Elaborate a bit more about what's going on on Chris' machine. Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=65524 Reported-and-tested-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: Egbert Eich <eich@suse.de> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 319d630e7f0778c8999f6ef503998a4d99cee5f1 Author: Sujith Manoharan <c_manoha@qca.qualcomm.com> Date: Sat Jun 1 07:08:09 2013 +0530 ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 720083f1dc15ac6b6fb85b323d0eae1a151e20ce Author: Kees Cook <keescook@chromium.org> Date: Fri May 10 14:48:21 2013 -0700 b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",28/06/2013 04:10:11,,DUPLICATE,https://github.com/espmartin/htc7x30-3.0/commit/f052540d050db879e3e1698c437bf7a40d784016,,,,,,,EXISTS,,,,,,,,,,,,,espmartin/htc7x30-3.0,Mustaavalkosta,,,espmartin,
espmartin,htc7x30-3.0,"Linux 3.0.83 commit 937d4f9ee2fe18a6ab012a343fc3b620756b954e Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Date: Thu Jun 20 11:28:30 2013 -0700 Linux 3.0.83 commit 088d9d4d782d66941fc9e29ff4eb0dd72f84493b Author: Sage Weil <sage@inktank.com> Date: Fri Feb 22 15:31:00 2013 -0800 ceph: fix statvfs fr_size commit 92a49fb0f79f3300e6e50ddf56238e70678e4202 upstream. Different versions of glibc are broken in different ways, but the short of it is that for the time being, frsize should == bsize, and be used as the multiple for the blocks, free, and available fields. This mirrors what is done for NFS. The previous reporting of the page size for frsize meant that newer glibc and df would report a very small value for the fs size. Fixes http://tracker.ceph.com/issues/3793. Signed-off-by: Sage Weil <sage@inktank.com> Reviewed-by: Greg Farnum <greg@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 0ffdfdbe55c84906dd65627f069619bec54e5422 Author: Kees Cook <keescook@chromium.org> Date: Wed Jun 5 11:47:18 2013 -0700 x86: Fix typo in kexec register clearing commit c8a22d19dd238ede87aa0ac4f7dbea8da039b9c1 upstream. Fixes a typo in register clearing code. Thanks to PaX Team for fixing this originally, and James Troup for pointing it out. Signed-off-by: Kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/20130605184718.GA8396@www.outflux.net Cc: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 79848ba66d91e0c171ff203363e0c96629279c15 Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Date: Wed Jun 12 14:05:04 2013 -0700 mm: migration: add migrate_entry_wait_huge() commit 30dad30922ccc733cfdbfe232090cf674dc374dc upstream. When we have a page fault for the address which is backed by a hugepage under migration, the kernel can't wait correctly and do busy looping on hugepage fault until the migration finishes. As a result, users who try to kick hugepage migration (via soft offlining, for example) occasionally experience long delay or soft lockup. This is because pte_offset_map_lock() can't get a correct migration entry or a correct page table lock for hugepage. This patch introduces migration_entry_wait_huge() to solve this. Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Reviewed-by: Rik van Riel <riel@redhat.com> Reviewed-by: Wanpeng Li <liwanp@linux.vnet.ibm.com> Reviewed-by: Michal Hocko <mhocko@suse.cz> Cc: Mel Gorman <mgorman@suse.de> Cc: Andi Kleen <andi@firstfloor.org> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 78ef884ebb6c02d45abefc95350f428be7390a26 Author: Rafael Aquini <aquini@redhat.com> Date: Wed Jun 12 14:04:49 2013 -0700 swap: avoid read_swap_cache_async() race to deadlock while waiting on discard I/O completion commit cbab0e4eec299e9059199ebe6daf48730be46d2b upstream. read_swap_cache_async() can race against get_swap_page(), and stumble across a SWAP_HAS_CACHE entry in the swap map whose page wasn't brought into the swapcache yet. This transient swap_map state is expected to be transitory, but the actual placement of discard at scan_swap_map() inserts a wait for I/O completion thus making the thread at read_swap_cache_async() to loop around its -EEXIST case, while the other end at get_swap_page() is scheduled away at scan_swap_map(). This can leave the system deadlocked if the I/O completion happens to be waiting on the CPU waitqueue where read_swap_cache_async() is busy looping and !CONFIG_PREEMPT. This patch introduces a cond_resched() call to make the aforementioned read_swap_cache_async() busy loop condition to bail out when necessary, thus avoiding the subtle race window. Signed-off-by: Rafael Aquini <aquini@redhat.com> Acked-by: Johannes Weiner <hannes@cmpxchg.org> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: Shaohua Li <shli@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit bac5719cdfb081dd68b0eeef7d9796c15fc29811 Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date: Mon Jun 10 09:47:58 2013 +0200 drm/i915: prefer VBT modes for SVDO-LVDS over EDID commit c3456fb3e4712d0448592af3c5d644c9472cd3c1 upstream. In commit 53d3b4d7778daf15900867336c85d3f8dd70600c Author: Egbert Eich <eich@suse.de> Date: Tue Jun 4 17:13:21 2013 +0200 drm/i915/sdvo: Use &intel_sdvo->ddc instead of intel_sdvo->i2c for DDC Egbert Eich fixed a long-standing bug where we simply used a non-working i2c controller to read the EDID for SDVO-LVDS panels. Unfortunately some machines seem to not be able to cope with the mode provided in the EDID. Specifically they seem to not be able to cope with a 4x pixel mutliplier instead of a 2x one, which seems to have been worked around by slightly changing the panels native mode in the VBT so that the dotclock is just barely above 50MHz. Since it took forever to notice the breakage it's fairly safe to assume that at least for SDVO-LVDS panels the VBT contains fairly sane data. So just switch around the order and use VBT modes first. v2: Also add EDID modes just in case, and spell Egbert correctly. v3: Elaborate a bit more about what's going on on Chris' machine. Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=65524 Reported-and-tested-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: Egbert Eich <eich@suse.de> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 319d630e7f0778c8999f6ef503998a4d99cee5f1 Author: Sujith Manoharan <c_manoha@qca.qualcomm.com> Date: Sat Jun 1 07:08:09 2013 +0530 ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 720083f1dc15ac6b6fb85b323d0eae1a151e20ce Author: Kees Cook <keescook@chromium.org> Date: Fri May 10 14:48:21 2013 -0700 b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",28/06/2013 04:10:12,,DUPLICATE,https://github.com/espmartin/htc7x30-3.0/commit/d1a4601bad85cf14fa1889473fbb13a0f5275caf,,,,,,,EXISTS,,,,,,,,,,,,,espmartin/htc7x30-3.0,Mustaavalkosta,,,espmartin,
dpooley,mako-dankernel,"mmc: core: Add support for notifying host driver while scaling clocks Host drivers can participate in clock scaling by registering ->notify_load host operation, which allows host driver to carry out platform specific operations for further power savings or increasing throughput based on whether load is LOW or HIGH respectively. This can be applicable to non-ultra high speed cards as well so remove the check for ultra high speed cards to initialize clock scaling. Change-Id: Icaab9520135e384f5470db68b2f25c5cdce5663a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",28/06/2013 05:49:56,,NOT-FOUND,https://github.com/dpooley/mako-dankernel/commit/06f6fca05a63ad1a2a4b1ce703d9fa5e8e8fccbf,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dpooley/mako-dankernel,,,,,
yggc,yggc,add the funtion of parsing energy saving list,28/06/2013 09:20:35,,NOT-FOUND,https://github.com/yggc/yggc/commit/146e62cbcd8fe36f00531d6165c0e081cd44d054,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,yggc/yggc,,,,,
Team-Kang-Droid,packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935 Conflicts: src/com/android/phone/PhoneGlobals.java",28/06/2013 09:40:17,,DUPLICATE,https://github.com/Team-Kang-Droid/packages_apps_Phone/commit/a8fe85ad9838dc42783cf9b08d945cd50d68b952,,,,[VERIFIED] [https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],,[https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],EXISTS,,,,,,,,,,,,,Team-Kang-Droid/packages_apps_Phone,,,,krislibaeer,
SlimRoms,kernel_lge_mako,"Squash linux version 3.4.50 and bumped to 3.3.0 Change-Id: I92cfd4099a71f389d1ed19775a087d690bac9c14 b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> libceph: must hold mutex for reset_changed_osds() commit 14d2f38df67fadee34625fcbd282ee22514c4846 upstream. An osd client has a red-black tree describing its osds, and occasionally we would get crashes due to one of these trees tree becoming corrupt somehow. The problem turned out to be that reset_changed_osds() was being called without protection of the osd client request mutex. That function would call __reset_osd() for any osd that had changed, and __reset_osd() would call __remove_osd() for any osd with no outstanding requests, and finally __remove_osd() would remove the corresponding entry from the red-black tree. Thus, the tree was getting modified without having any lock protection, and was vulnerable to problems due to concurrent updates. This appears to be the only osd tree updating path that has this problem. It can be fairly easily fixed by moving the call up a few lines, to just before the request mutex gets dropped in kick_requests(). This resolves: http://tracker.ceph.com/issues/5043 Signed-off-by: Alex Elder <elder@inktank.com> Reviewed-by: Sage Weil <sage@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ceph: add cpu_to_le32() calls when encoding a reconnect capability commit c420276a532a10ef59849adc2681f45306166b89 upstream. In his review, Alex Elder mentioned that he hadn't checked that num_fcntl_locks and num_flock_locks were properly decoded on the server side, from a le32 over-the-wire type to a cpu type. I checked, and AFAICS it is done; those interested can consult Locker::_do_cap_update() in src/mds/Locker.cc and src/include/encoding.h in the Ceph server code (git://github.com/ceph/ceph). I also checked the server side for flock_len decoding, and I believe that also happens correctly, by virtue of having been declared __le32 in struct ceph_mds_cap_reconnect, in src/include/ceph_fs.h. Signed-off-by: Jim Schutt <jaschut@sandia.gov> Reviewed-by: Alex Elder <elder@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ceph: ceph_pagelist_append might sleep while atomic commit 39be95e9c8c0b5668c9f8806ffe29bf9f4bc0f40 upstream. Ceph's encode_caps_cb() worked hard to not call __page_cache_alloc() while holding a lock, but it's spoiled because ceph_pagelist_addpage() always calls kmap(), which might sleep. Here's the result: [13439.295457] ceph: mds0 reconnect start [13439.300572] BUG: sleeping function called from invalid context at include/linux/highmem.h:58 [13439.309243] in_atomic(): 1, irqs_disabled(): 0, pid: 12059, name: kworker/1:1 . . . [13439.376225] Call Trace: [13439.378757] [<ffffffff81076f4c>] __might_sleep+0xfc/0x110 [13439.384353] [<ffffffffa03f4ce0>] ceph_pagelist_append+0x120/0x1b0 [libceph] [13439.391491] [<ffffffffa0448fe9>] ceph_encode_locks+0x89/0x190 [ceph] [13439.398035] [<ffffffff814ee849>] ? _raw_spin_lock+0x49/0x50 [13439.403775] [<ffffffff811cadf5>] ? lock_flocks+0x15/0x20 [13439.409277] [<ffffffffa045e2af>] encode_caps_cb+0x41f/0x4a0 [ceph] [13439.415622] [<ffffffff81196748>] ? igrab+0x28/0x70 [13439.420610] [<ffffffffa045e9f8>] ? iterate_session_caps+0xe8/0x250 [ceph] [13439.427584] [<ffffffffa045ea25>] iterate_session_caps+0x115/0x250 [ceph] [13439.434499] [<ffffffffa045de90>] ? set_request_path_attr+0x2d0/0x2d0 [ceph] [13439.441646] [<ffffffffa0462888>] send_mds_reconnect+0x238/0x450 [ceph] [13439.448363] [<ffffffffa0464542>] ? ceph_mdsmap_decode+0x5e2/0x770 [ceph] [13439.455250] [<ffffffffa0462e42>] check_new_map+0x352/0x500 [ceph] [13439.461534] [<ffffffffa04631ad>] ceph_mdsc_handle_map+0x1bd/0x260 [ceph] [13439.468432] [<ffffffff814ebc7e>] ? mutex_unlock+0xe/0x10 [13439.473934] [<ffffffffa043c612>] extra_mon_dispatch+0x22/0x30 [ceph] [13439.480464] [<ffffffffa03f6c2c>] dispatch+0xbc/0x110 [libceph] [13439.486492] [<ffffffffa03eec3d>] process_message+0x1ad/0x1d0 [libceph] [13439.493190] [<ffffffffa03f1498>] ? read_partial_message+0x3e8/0x520 [libceph] . . . [13439.587132] ceph: mds0 reconnect success [13490.720032] ceph: mds0 caps stale [13501.235257] ceph: mds0 recovery completed [13501.300419] ceph: mds0 caps renewed Fix it up by encoding locks into a buffer first, and when the number of encoded locks is stable, copy that into a ceph_pagelist. [elder@inktank.com: abbreviated the stack info a bit.] Signed-off-by: Jim Schutt <jaschut@sandia.gov> Reviewed-by: Alex Elder <elder@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drivers/rtc/rtc-twl.c: fix missing device_init_wakeup() when booted with device tree commit 24b8256a1fb28d357bc6fa09184ba29b4255ba5c upstream. When booted in legacy mode device_init_wakeup() gets called by drivers/mfd/twl-core.c when the children are initialized. However, when booted using device tree, the children are created with of_platform_populate() instead add_children(). This means that the RTC driver will not have device_init_wakeup() set, and we need to call it from the driver probe like RTC drivers typically do. Without this we cannot test PM wake-up events on omaps for cases where there may not be any physical wake-up event. Signed-off-by: Tony Lindgren <tony@atomide.com> Reported-by: Kevin Hilman <khilman@linaro.org> Cc: Alessandro Zummo <a.zummo@towertech.it> Cc: Jingoo Han <jg1.han@samsung.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drm/gma500/psb: Unpin framebuffer on crtc disable commit 820de86a90089ee607d7864538c98a23b503c846 upstream. The framebuffer needs to be unpinned in the crtc->disable callback because of previous pinning in psb_intel_pipe_set_base(). This will fix a memory leak where the framebuffer was released but not unpinned properly. This patch only affects Poulsbo. Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=889511 Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=812113 Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drm/gma500/cdv: Unpin framebuffer on crtc disable commit 22e7c385a80d771aaf3a15ae7ccea3b0686bbe10 upstream. The framebuffer needs to be unpinned in the crtc->disable callback because of previous pinning in psb_intel_pipe_set_base(). This will fix a memory leak where the framebuffer was released but not unpinned properly. This patch only affects Cedarview. Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=889511 Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=812113 Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ath9k: Use minstrel rate control by default commit 5efac94999ff218e0101f67a059e44abb4b0b523 upstream. The ath9k rate control algorithm has various architectural issues that make it a poor fit in scenarios like congested environments etc. An example: https://bugzilla.redhat.com/show_bug.cgi?id=927191 Change the default to minstrel which is more robust in such cases. The ath9k RC code is left in the driver for now, maybe it can be removed altogether later on. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> CPU hotplug: provide a generic helper to disable/enable CPU hotplug commit 16e53dbf10a2d7e228709a7286310e629ede5e45 upstream. There are instances in the kernel where we would like to disable CPU hotplug (from sysfs) during some important operation. Today the freezer code depends on this and the code to do it was kinda tailor-made for that. Restructure the code and make it generic enough to be useful for other usecases too. Signed-off-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com> Signed-off-by: Robin Holt <holt@sgi.com> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@elte.hu> Cc: Russ Anderson <rja@sgi.com> Cc: Robin Holt <holt@sgi.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn> Cc: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> reboot: rigrate shutdown/reboot to boot cpu commit cf7df378aa4ff7da3a44769b7ff6e9eef1a9f3db ...",28/06/2013 17:27:16,,DUPLICATE,https://github.com/SlimRoms/kernel_lge_mako/commit/23daa7834043da49a9cf06ce219bf7cee7254cb7,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/kernel_lge_mako,PRJosh,,,PRJosh,
TeamHackLG,lge-kernel-lproj,"cpufreq: boost the sampling rate on touch event For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate. Also, change sampling down factor proportional to the sampling rate. Change-Id: I111b1cf3b8ed133347149afc34d329d0384ecfcb Signed-off-by: Narayanan Gopalakrishnan <nargop@codeaurora.org>",28/06/2013 18:33:31,,DUPLICATE,https://github.com/TeamHackLG/lge-kernel-lproj/commit/67cbe774aab0bfb175009fab3f5f33926c89d283,,,,,,,EXISTS,,,,,,,,,,,,,TeamHackLG/lge-kernel-lproj,,,,pinkflozd,
Joelz9614,android_422_kernel_htc_monarudo,msm: kgsl: Remove lowest power level The lowest power level does not correspond to significant power savings as the whole system doesn't drop to SVS voltage. Performace is improved without this level for serialized test cases. Signed-off-by: Lucille Sylvester <lsylvest@codeaurora.org> (cherry picked from commit c8404a799a26f0744d3965822160c7b05b8d33d7) Change-Id: Ie349451ffcd82f159eb4d25ad0b986b38f817ede Signed-off-by: Sivasri Kumar Vanka <sivasri@codeaurora.org> Conflicts: arch/arm/mach-msm/devices-8960.c,29/06/2013 05:31:33,,NOT-FOUND,https://github.com/Joelz9614/android_422_kernel_htc_monarudo/commit/ebd2bfe494a18c2a28259d8b8ad0f940523d0f50,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Joelz9614/android_422_kernel_htc_monarudo,,,,,
k2wl,i9105Sammy,Added Adaptive CPU Governor This driver adds a dynamic cpufreq policy governor designed for latency-sensitive workloads and also for demanding performance. This governor attempts to reduce the latency of clock increases so that the system is more responsive to interactive workloads in loweset steady-state but to reduce power consumption in middle operation level up will be done in step by step to prohibit system from going to max operation level.,29/06/2013 10:11:55,,RELATED,https://github.com/k2wl/i9105Sammy/commit/e4a7fb4237b65cec9ca909c218331a41814cabac,,,[RELATED],[RELATED] [Add governor],[DO NOT ANALYZE],[Add governor],EXISTS,,,,,,,,,,,,,k2wl/i9105Sammy,Christopher83,,,,
k2wl,i9105psammy,Added Adaptive CPU Governor This driver adds a dynamic cpufreq policy governor designed for latency-sensitive workloads and also for demanding performance. This governor attempts to reduce the latency of clock increases so that the system is more responsive to interactive workloads in loweset steady-state but to reduce power consumption in middle operation level up will be done in step by step to prohibit system from going to max operation level.,29/06/2013 10:12:10,,DUPLICATE,https://github.com/k2wl/i9105psammy/commit/07447d370699e645dfd1c43b471f3ba3c6d7f468,,,,,,,EXISTS,,,,,,,,,,,,,k2wl/i9105psammy,Christopher83,,,,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"New modified zcache driver, more non-hotplugging governors for power saving",01/07/2013 11:34:55,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/5260c0e89e60574bd8d9226566cb505e7266a5a7,,,[OK][DVFS],[OK] [Use non-hotplugging governor] [Governor],[DO NOT ANALYZE],[Use non-hotplugging governor] [Governor] [DVFS],EXISTS,[include non-hotplugging governors],[power saving],[Enable power saving governor] [Use non-hotplugging governor],[Select power saving governor],,,Certain,Android,No,OS,Defconfig,more non-hotplugging governors for power saving,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,[Frequency and voltage scaling],,dtrail,Kernel arch/defconfig
RAZR-K-Devs,android_kernel_motorola_omap4-common,"New modified zcache driver, more non-hotplugging governors for power saving",01/07/2013 11:35:10,,DUPLICATE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/5260c0e89e60574bd8d9226566cb505e7266a5a7,,,,,,,EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,,,dtrail,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"New modified zcache driver, more non-hotplugging governors for power saving",01/07/2013 11:37:10,,DUPLICATE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/065d4970383e61ed352833fc65f166b20437962c,,,,,,,EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,,,dtrail,
RAZR-K-Devs,android_kernel_motorola_omap4-common,AdaptiveX set to default governor - best for power saving as it only turns off the second core during idle/sleep mode and keeps both cores awake on active state. Hotplugging eats power when switching on/off the secondary core(s) all the time when phone enters low tasks state. Better keep the core awake and suspend it in sleep mode only.,01/07/2013 12:02:52,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/4b3f259eb0f97fab24ac3b18667a67c18c33476b,,,[OK],"[OK] [Use AdaptiveX governor] [This commits ""contradicts"" the one above] [5260c0e89e60574bd8d9226566cb505e7266a5a7] [Governor]",[DO NOT ANALYZE],"[Use AdaptiveX governor] [This commits ""contradicts"" the one above] [5260c0e89e60574bd8d9226566cb505e7266a5a7] [Governor]",EXISTS,[AdaptiveX set to default governor],[Better keep the core awake and suspend it in sleep mode only] [it only turns off the second core during idle/sleep mode and keeps both cores awake on active state unlike hotplugging],[Enable power saving governor] [Use AdaptiveX governor],[Select power saving governor],,,Certain,Android,No,OS,Defconfig,AdaptiveX set to default governor - best for power saving as it only turns off the second core during idle/sleep mode and keeps both cores awake on active state,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,[Frequency and voltage scaling],,dtrail,Kernel arch/defconfig
Davidteri,samsung-kernel-msm7x30,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",01/07/2013 19:49:11,,NOT-FOUND,https://github.com/Davidteri/samsung-kernel-msm7x30/commit/c677e085ff237d9075cd8284de2e57961a43ba1c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Davidteri/samsung-kernel-msm7x30,,,,,
espmartin,KrazyKat7x30-3.0,"Linux 3.0.83 commit 937d4f9ee2fe18a6ab012a343fc3b620756b954e Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Date: Thu Jun 20 11:28:30 2013 -0700 Linux 3.0.83 commit 088d9d4d782d66941fc9e29ff4eb0dd72f84493b Author: Sage Weil <sage@inktank.com> Date: Fri Feb 22 15:31:00 2013 -0800 ceph: fix statvfs fr_size commit 92a49fb0f79f3300e6e50ddf56238e70678e4202 upstream. Different versions of glibc are broken in different ways, but the short of it is that for the time being, frsize should == bsize, and be used as the multiple for the blocks, free, and available fields. This mirrors what is done for NFS. The previous reporting of the page size for frsize meant that newer glibc and df would report a very small value for the fs size. Fixes http://tracker.ceph.com/issues/3793. Signed-off-by: Sage Weil <sage@inktank.com> Reviewed-by: Greg Farnum <greg@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 0ffdfdbe55c84906dd65627f069619bec54e5422 Author: Kees Cook <keescook@chromium.org> Date: Wed Jun 5 11:47:18 2013 -0700 x86: Fix typo in kexec register clearing commit c8a22d19dd238ede87aa0ac4f7dbea8da039b9c1 upstream. Fixes a typo in register clearing code. Thanks to PaX Team for fixing this originally, and James Troup for pointing it out. Signed-off-by: Kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/20130605184718.GA8396@www.outflux.net Cc: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 79848ba66d91e0c171ff203363e0c96629279c15 Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Date: Wed Jun 12 14:05:04 2013 -0700 mm: migration: add migrate_entry_wait_huge() commit 30dad30922ccc733cfdbfe232090cf674dc374dc upstream. When we have a page fault for the address which is backed by a hugepage under migration, the kernel can't wait correctly and do busy looping on hugepage fault until the migration finishes. As a result, users who try to kick hugepage migration (via soft offlining, for example) occasionally experience long delay or soft lockup. This is because pte_offset_map_lock() can't get a correct migration entry or a correct page table lock for hugepage. This patch introduces migration_entry_wait_huge() to solve this. Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Reviewed-by: Rik van Riel <riel@redhat.com> Reviewed-by: Wanpeng Li <liwanp@linux.vnet.ibm.com> Reviewed-by: Michal Hocko <mhocko@suse.cz> Cc: Mel Gorman <mgorman@suse.de> Cc: Andi Kleen <andi@firstfloor.org> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 78ef884ebb6c02d45abefc95350f428be7390a26 Author: Rafael Aquini <aquini@redhat.com> Date: Wed Jun 12 14:04:49 2013 -0700 swap: avoid read_swap_cache_async() race to deadlock while waiting on discard I/O completion commit cbab0e4eec299e9059199ebe6daf48730be46d2b upstream. read_swap_cache_async() can race against get_swap_page(), and stumble across a SWAP_HAS_CACHE entry in the swap map whose page wasn't brought into the swapcache yet. This transient swap_map state is expected to be transitory, but the actual placement of discard at scan_swap_map() inserts a wait for I/O completion thus making the thread at read_swap_cache_async() to loop around its -EEXIST case, while the other end at get_swap_page() is scheduled away at scan_swap_map(). This can leave the system deadlocked if the I/O completion happens to be waiting on the CPU waitqueue where read_swap_cache_async() is busy looping and !CONFIG_PREEMPT. This patch introduces a cond_resched() call to make the aforementioned read_swap_cache_async() busy loop condition to bail out when necessary, thus avoiding the subtle race window. Signed-off-by: Rafael Aquini <aquini@redhat.com> Acked-by: Johannes Weiner <hannes@cmpxchg.org> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: Shaohua Li <shli@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit bac5719cdfb081dd68b0eeef7d9796c15fc29811 Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date: Mon Jun 10 09:47:58 2013 +0200 drm/i915: prefer VBT modes for SVDO-LVDS over EDID commit c3456fb3e4712d0448592af3c5d644c9472cd3c1 upstream. In commit 53d3b4d7778daf15900867336c85d3f8dd70600c Author: Egbert Eich <eich@suse.de> Date: Tue Jun 4 17:13:21 2013 +0200 drm/i915/sdvo: Use &intel_sdvo->ddc instead of intel_sdvo->i2c for DDC Egbert Eich fixed a long-standing bug where we simply used a non-working i2c controller to read the EDID for SDVO-LVDS panels. Unfortunately some machines seem to not be able to cope with the mode provided in the EDID. Specifically they seem to not be able to cope with a 4x pixel mutliplier instead of a 2x one, which seems to have been worked around by slightly changing the panels native mode in the VBT so that the dotclock is just barely above 50MHz. Since it took forever to notice the breakage it's fairly safe to assume that at least for SDVO-LVDS panels the VBT contains fairly sane data. So just switch around the order and use VBT modes first. v2: Also add EDID modes just in case, and spell Egbert correctly. v3: Elaborate a bit more about what's going on on Chris' machine. Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=65524 Reported-and-tested-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: Egbert Eich <eich@suse.de> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 319d630e7f0778c8999f6ef503998a4d99cee5f1 Author: Sujith Manoharan <c_manoha@qca.qualcomm.com> Date: Sat Jun 1 07:08:09 2013 +0530 ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 720083f1dc15ac6b6fb85b323d0eae1a151e20ce Author: Kees Cook <keescook@chromium.org> Date: Fri May 10 14:48:21 2013 -0700 b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",01/07/2013 23:55:14,,NOT-FOUND,https://github.com/espmartin/KrazyKat7x30-3.0/commit/36f2cdc73eacec2be18b7d523ae13051ea6e558a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,espmartin/KrazyKat7x30-3.0,,,,,
Thutmose,concrete,"started adding more to the API, basic work on the power consumption for lifts.",02/07/2013 05:06:46,,FALSE-POSITIVE,https://github.com/Thutmose/concrete/commit/082d8cb2bcd51ad6bbe9d16735a84847250e6e1c,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game] [Minecraft],[DO NOT ANALYZE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,Thutmose/concrete,Thutmose,,,Thutmose,
julienrf,resilience,- Do not use requirejs optimizer - Monitor power consumption,02/07/2013 15:31:23,,FALSE-POSITIVE,https://github.com/julienrf/resilience/commit/0b27128fb5c28e00094096993a993de043a96367,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,julienrf/resilience,julienrf,,,julienrf,
ChangYeoun,Kite,"cpuidle: Quickly notice prediction failure for repeat mode The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. cpuidle menu governor has a method to predict the repeat pattern if there are 8 C-states residency which are continuous and the same or very close, so it will predict the next C-states residency will keep same residency time. There is a real case that turbostat utility (tools/power/x86/turbostat) at kernel 3.3 or early. turbostat utility will read 10 registers one by one at Sandybridge, so it will generate 10 IPIs to wake up idle CPUs. So cpuidle menu governor will predict it is repeat mode and there is another IPI wake up idle CPU soon, so it keeps idle CPU stay at C1 state even though CPU is totally idle. However, in the turbostat, following 10 registers reading is sleep 5 seconds by default, so the idle CPU will keep at C1 for a long time though it is idle until break event occurs. In a idle Sandybridge system, run ""./turbostat -v"", we will notice that deep C-state dangles between ""70% ~ 99%"". After patched the kernel, we will notice deep C-state stays at >99.98%. In the patch, a timer is added when menu governor detects a repeat mode and choose a shallow C-state. The timer is set to a time out value that greater than predicted time, and we conclude repeat mode prediction failure if timer is triggered. When repeat mode happens as expected, the timer is not triggered and CPU waken up from C-states and it will cancel the timer initiatively. When repeat mode does not happen, the timer will be time out and menu governor will quickly notice that the repeat mode prediction fails and then re-evaluates deeper C-states possibility. Below is another case which will clearly show the patch much benefit: volatile int * shutdown; volatile long * count; int delay = 20; int loop = 8; void usage(void) { fprintf(stderr, ""Usage: idle_predict [options]\n"" "" --help -h Print this help\n"" "" --thread -n Thread number\n"" "" --loop -l Loop times in shallow Cstate\n"" "" --delay -t Sleep time (uS)in shallow Cstate\n""); } void *simple_loop() { int idle_num = 1; while (!(*shutdown)) { *count = *count + 1; if (idle_num % loop) usleep(delay); else { /* sleep 1 second */ usleep(1000000); idle_num = 0; } idle_num++; } } static void sighand(int sig) { *shutdown = 1; } int main(int argc, char *argv[]) { sigset_t sigset; int signum = SIGALRM; int i, c, er = 0, thread_num = 8; pthread_t pt[1024]; static char optstr[] = ""n:l:t:h:""; while ((c = getopt(argc, argv, optstr)) != EOF) switch (c) { case 'n': thread_num = atoi(optarg); break; case 'l': loop = atoi(optarg); break; case 't': delay = atoi(optarg); break; case 'h': default: usage(); exit(1); } printf(""thread=%d,loop=%d,delay=%d\n"",thread_num,loop,delay); count = malloc(sizeof(long)); shutdown = malloc(sizeof(int)); *count = 0; *shutdown = 0; sigemptyset(&sigset); sigaddset(&sigset, signum); sigprocmask (SIG_BLOCK, &sigset, NULL); signal(SIGINT, sighand); signal(SIGTERM, sighand); for(i = 0; i < thread_num ; i++) pthread_create(&pt[i], NULL, simple_loop, NULL); for (i = 0; i < thread_num; i++) pthread_join(pt[i], NULL); exit(0); } Get powertop V2 from git://github.com/fenrus75/powertop, build powertop. After build the above test application, then run it. Test plaform can be Intel Sandybridge or other recent platforms. We will find that deep C-state will dangle between 40%~100% and much time spent on C1 state. It is because menu governor wrongly predict that repeat mode is kept, so it will choose the C1 shallow C-state even though it has chance to sleep 1 second in deep C-state. While after patched the kernel, we find that deep C-state will keep >99.6%. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/time/tick-sched.c Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/time/tick-sched.c",03/07/2013 06:56:23,,NOT-FOUND,https://github.com/ChangYeoun/Kite/commit/fee29fb1d6d4a372ac7ec6054c680bedfe46db31,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Kite,,,,,
alessandroleite,scaling-nemesis,added the script to filter the power consumption when it's greater than 99.0,03/07/2013 08:06:09,,FALSE-POSITIVE,https://github.com/alessandroleite/scaling-nemesis/commit/c356ba651216b87ba8619c722c7c41c333651bce,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,alessandroleite/scaling-nemesis,alessandroleite,,,alessandroleite,
CarbonDev,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: I325780ae234088d12960e488d2399b656ac6b5c8",03/07/2013 09:25:03,,DUPLICATE,https://github.com/CarbonDev/android_packages_apps_Phone/commit/f2b3ee8dc552c2f13a1585f664dc16300f135a84,,,,[VERIFIED] [https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],,[https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],EXISTS,,,,,,,,,,,,,CarbonDev/android_packages_apps_Phone,kufikugel,,,aways,
CyanogenMod,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",03/07/2013 20:26:46,,DUPLICATE,https://github.com/CyanogenMod/android_packages_apps_Phone/commit/459351a4af7927685501bfa3c2866b469753494f,,,,,,,EXISTS,,,,,,,,,,,,,CyanogenMod/android_packages_apps_Phone,,,,,
hev88,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",03/07/2013 23:00:38,,DUPLICATE,https://github.com/hev88/android_packages_apps_Phone/commit/73162dd80abd0a1546d79fb56c221f3ae84b701a,,,,,,,EXISTS,,,,,,,,,,,,,hev88/android_packages_apps_Phone,,,,hev88,
Nick0703,samsung-kernel-aries,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",04/07/2013 00:18:39,,DUPLICATE,https://github.com/Nick0703/samsung-kernel-aries/commit/5b82127428432079e1b79cedd089344ea46d2c88,,,,,,,EXISTS,,,,,,,,,,,,,Nick0703/samsung-kernel-aries,faux123,,,Nick0703,
menghang,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",04/07/2013 00:58:32,,NOT-FOUND,https://github.com/menghang/android_packages_apps_Phone/commit/459351a4af7927685501bfa3c2866b469753494f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,menghang/android_packages_apps_Phone,,,,,
TheCollective,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",04/07/2013 01:11:12,,DUPLICATE,https://github.com/TheCollective/packages_apps_Phone/commit/d198dd18e47d7e94c823464866a3a6d916e5b07b,https://github.com/TheCollective/android_packages_apps_Phone/commit/d198dd18e47d7e94c823464866a3a6d916e5b07b,,,,,,EXISTS,,,,,,,,,,,,,TheCollective/android_packages_apps_Phone,,,,,
TaichiN,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",04/07/2013 21:14:08,,DUPLICATE,https://github.com/TaichiN/android_packages_apps_Phone/commit/459351a4af7927685501bfa3c2866b469753494f,,,,,,,EXISTS,,,,,,,,,,,,,TaichiN/android_packages_apps_Phone,,,,,
cphelps76,DEMENTED_kernel_n8013,1600MHz CPU OC Corrected CPU freq. going above scaling_max (even if only fractions of seconds) Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode,05/07/2013 00:08:48,,DUPLICATE,https://github.com/cphelps76/DEMENTED_kernel_smdk4412/commit/788303717b6c0055e70f66026a194dc1c2062e6b,https://github.com/cphelps76/DEMENTED_kernel_n8013/commit/788303717b6c0055e70f66026a194dc1c2062e6b,,,,,,EXISTS,,,,,,,,,,,,,cphelps76/DEMENTED_kernel_n8013,,,,,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"PM: IVA AUTO RET relaxed workaround in idle path AUTO RET for IVA VDD Cannot be permanently enabled during OFF mode due to potential race between IVA VDD entering RET and start of Device OFF mode. It is mandatory to have AUTO RET for IVA VDD exlusive with Devide OFF mode. In order to avoid lockup in OFF mode sequence, system must ensure IVA voltage domain transitions straight from stable ON to OFF. In addition, management of IVA VDD SmartReflex sensor at exit of idle path may introduce a misalignment between IVA Voltage Controller state and IVA PRCM voltage FSM based on following identified scenario: IVA Voltage Controller is woken-up due to SmartReflex management while IVA PRCM voltage FSM stays in RET in absence of any IVA module wake-up event (which is not systematic in idle path as opposed to MPU and CORE VDDs being necessarily woken up with MPU and CORE PDs). WA involves: Ensure stable ON-OFF transition for IVA voltage domain during OFF mode sequence. Ensure VCON and PRCM FSM are kept aligned due to IVA SR handling in idle path. 1) AUTO RET for IVA VDD is enabled entering in idle path, disabled exiting idle path and IVA VDD is always woken-up with a SW dummy wakeup. 2) OFF mode is enabled only in Suspend path. 3) AUTO RET for IVA VDD remains disabled in Suspend path (before OFF mode). REVISIT: Update the patch once proper Errata is out for 44xx. Benefits: 1) This patch ensures it is possible to gate SYS_CLK during OS-Idle LCD OFF when all domains are idled, saving up to 2mA at VBAT from external clock buffer. 2) IVA voltage domain is now allowed to scale to Retention during idle which reduces power consumption on all types of use case allowing extensive use of idle path (e.g.: Home screen, Page reading). Effects are especially visible if system uses Smart-Reflex Class 1.5 compared to Class 3 considering the increased difference of voltage from converged Voltage SR vs Retention voltage. TODO: quantify the actual savings from IVA-RET with further measurements. Change-Id: I01f0431f7556f0baf0b5b6b42092cd11c2442f00 Signed-off-by: Cedric Vamour <c-vamour@ti.com> Conflicts: arch/arm/mach-omap2/pm44xx.c",05/07/2013 13:31:25,,DUPLICATE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/60c74a439532c67e38eeeaa3dec5f81ca4797d80,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5] [original:OK],,[VERIFY] [https://github.com/sonicxml/Popcornkernel-Tuna/commit/8af763e77de8776b1e9824f18f63366f4cb681b5] [original:OK],EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,,,dtrail,
talos,talos.github.com,Added post on energy efficiency in nyc buildings,05/07/2013 22:09:35,,FALSE-POSITIVE,https://github.com/talos/talos.github.com/commit/a27eeb9ed370960a62483e639f71fe551ca3cac4,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,talos/talos.github.com,talos,,,talos,
PAC-man,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",06/07/2013 10:20:14,,DUPLICATE,https://github.com/PAC-man/android_packages_apps_Phone/commit/d0d808680f72b79180d1b2eb71ce28ec39ec24bb,,,,,,,EXISTS,,,,,,,,,,,,,PAC-man/android_packages_apps_Phone,,,,zyonee,
hurtsky,samsung-kernel-msm7x30,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",06/07/2013 13:00:19,,NOT-FOUND,https://github.com/hurtsky/samsung-kernel-msm7x30/commit/6674286e52f50bb582e93c6182693997ff51be3f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,hurtsky/samsung-kernel-msm7x30,,,,,
reddikih,spsim2,modefied calculation of energy efficiency.,06/07/2013 13:26:19,,FALSE-POSITIVE,https://github.com/reddikih/spsim2/commit/9a4979e4ae383f6842b7396fee63a8b6d609b884,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Compute energy consumption] [Refine energy consumption computation],[OK] [BUG FIX],[Compute energy consumption] [Refine energy consumption computation] [BUG FIX],EXISTS,,,,,,,,,,,,,reddikih/spsim2,,,,,
pcarenza,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935 Conflicts: src/com/android/phone/PhoneGlobals.java",06/07/2013 15:07:35,,DUPLICATE,https://github.com/pcarenza/android_packages_apps_Phone/commit/544bf262fc544c21013610e36bdd0e694c6a32eb,,,,,,,EXISTS,,,,,,,,,,,,,pcarenza/android_packages_apps_Phone,,,,pcarenza,
mharizanov,new_Funky,updated code for better power efficiency,06/07/2013 16:33:33,,UNABLE-TO-CATEGORIZE,https://github.com/mharizanov/new_Funky/commit/e1240afe5afc2400324b88cff897b483a4353df9,,,[Unable to categorize],[UNABLE-TO-CATEGORIZE] [Set pin] [Set pin to input] [Arduino],[DO NOT ANALYZE],[Set pin] [Set pin to input] [Arduino],EXISTS,,,,,,,,,,,,,mharizanov/new_Funky,mharizanov,,,mharizanov,
VanirAOSP,packages_apps_phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: If0a7fc972bb7218b1d451eba553911668160182f",06/07/2013 16:59:04,,DUPLICATE,https://github.com/VanirAOSP/packages_apps_phone/commit/ea4c4d9c2dd52e3e44af59f75e8d05bc5d6fcf36,,,,[VERIFIED] [https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],,[https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],EXISTS,,,,,,,,,,,,,VanirAOSP/packages_apps_phone,,,,chevycam94,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",06/07/2013 20:40:41,,DUPLICATE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/85f1e2fbb89835d5e59d0b340dcd783a62e237c9,,,,,,,EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,faux123,,,dtrail,
Altaf-Mahdi,i9505,"mmc: msm_sdcc: Enable clock scaling capability Enable capability, MMC_CAP2_CLK_SCALE to allow mmc core to scale the clocks at runtime based on load on card. Clock scaling in MSM platforms also allow voltage scaling between NOMINAL and SVS levels, thus allowing additional power savings. Change-Id: Id1995ffea7a6c06a2e8b29b43da70894f35f6c0b Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",06/07/2013 23:32:08,,DUPLICATE,https://github.com/Altaf-Mahdi/i9505/commit/8a7ee6570930352a1d90669b9253786672d4061b,,,,,,,EXISTS,,,,,,,,,,,,,Altaf-Mahdi/i9505,,,,Altaf-Mahdi,
mharizanov,Funky-Sensor,more power efficient code,07/07/2013 06:07:11,,DUPLICATE,https://github.com/mharizanov/Funky-Sensor/commit/648c1e7127af8a93b109b500e5754e5fb5f9fa53,,,,[OK] [VERIFY] [No original],,[VERIFY] [No original],EXISTS,,,,,,,,,,,,,mharizanov/Funky-Sensor,mharizanov,,,mharizanov,
cagerton,foundation,remove infinite animation that triggers continious style recalculation and horrible power consumption in webkit,07/07/2013 20:58:45,,OK,https://github.com/cagerton/foundation/commit/f8d9ec651fff130d05e242f25b5e0a2815a5a7fd,,,[OK][Disable feature],[OK] [Disable animation] [Disable component] [Disable feature],[DO NOT ANALYZE],[Disable animation] [Disable component] [Disable feature],EXISTS,[remove infinite animation],[it triggers continious style recalculation,[Disable animation] [Disable infinite animation] [Bug fix],[Disable animation],,,Certain,Browser ?,Yes,Libraries and Utilities,Sass,remove infinite animation that triggers continious style recalculation and horrible power consumption in webkit,cagerton/foundation,cagerton,[Energy bug],,cagerton,Application framework
plokhotnyuk,actors,try not energy efficient back off,08/07/2013 04:38:39,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/plokhotnyuk/actors/commit/bd396223c767f25134517099688c7552d94c14ab,,,[OK][?],[TRADEOFF] [Use inefficient backoff],[?],[Use inefficient backoff] [?],EXISTS,[Try inefficient backoff],[Experiment],,,,,Certain,Scala,No,Application library/framework,Scala,try not energy efficient back off,plokhotnyuk/actors,,,,,Runtime library
plokhotnyuk,actors,back to energy efficiency with simple synchronization without spins,08/07/2013 09:51:37,,OK,https://github.com/plokhotnyuk/actors/commit/a0f946aa6e63ea55a5b6b8a2dc9b8b9efb64f774,,,[OK][FROM IMMUTABILITY TO SYNC],[OK] [UNABLE-TO-CATEGORIZE] [Avoid spinning],[OK] [Avoid spinning],[UNABLE-TO-CATEGORIZE] [Avoid spinning] [FROM IMMUTABILITY TO SYNC],EXISTS,[simple synchronization without spins],[energy efficiency],[Avoid spinning] [Use synchronization],[Avoid busy wait],,,Certain,Scala,No,Libraries and Utilities,Scala,back to energy efficiency with simple synchronization without spins,plokhotnyuk/actors,,[Polling avoidance],,,Sofware stack
KrasnikovEugene,wcn36xx,Merge pull request #70 from dreamfly281/master Add the debugfs and power save relative function,08/07/2013 17:59:25,,UNABLE-TO-CATEGORIZE,https://github.com/KrasnikovEugene/wcn36xx/commit/c1a1a89fe8d9cfef989848bbb5090893e70c23af,,,[Unable to categorize],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,KrasnikovEugene/wcn36xx,KrasnikovEugene,,,KrasnikovEugene,
cphelps76,DEMENTED_kernel_jf,"cpuidle: Quickly notice prediction failure for repeat mode The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. cpuidle menu governor has a method to predict the repeat pattern if there are 8 C-states residency which are continuous and the same or very close, so it will predict the next C-states residency will keep same residency time. There is a real case that turbostat utility (tools/power/x86/turbostat) at kernel 3.3 or early. turbostat utility will read 10 registers one by one at Sandybridge, so it will generate 10 IPIs to wake up idle CPUs. So cpuidle menu governor will predict it is repeat mode and there is another IPI wake up idle CPU soon, so it keeps idle CPU stay at C1 state even though CPU is totally idle. However, in the turbostat, following 10 registers reading is sleep 5 seconds by default, so the idle CPU will keep at C1 for a long time though it is idle until break event occurs. In a idle Sandybridge system, run ""./turbostat -v"", we will notice that deep C-state dangles between ""70% ~ 99%"". After patched the kernel, we will notice deep C-state stays at >99.98%. In the patch, a timer is added when menu governor detects a repeat mode and choose a shallow C-state. The timer is set to a time out value that greater than predicted time, and we conclude repeat mode prediction failure if timer is triggered. When repeat mode happens as expected, the timer is not triggered and CPU waken up from C-states and it will cancel the timer initiatively. When repeat mode does not happen, the timer will be time out and menu governor will quickly notice that the repeat mode prediction fails and then re-evaluates deeper C-states possibility. Below is another case which will clearly show the patch much benefit: volatile int * shutdown; volatile long * count; int delay = 20; int loop = 8; void usage(void) { fprintf(stderr, ""Usage: idle_predict [options]\n"" "" --help -h Print this help\n"" "" --thread -n Thread number\n"" "" --loop -l Loop times in shallow Cstate\n"" "" --delay -t Sleep time (uS)in shallow Cstate\n""); } void *simple_loop() { int idle_num = 1; while (!(*shutdown)) { *count = *count + 1; if (idle_num % loop) usleep(delay); else { /* sleep 1 second */ usleep(1000000); idle_num = 0; } idle_num++; } } static void sighand(int sig) { *shutdown = 1; } int main(int argc, char *argv[]) { sigset_t sigset; int signum = SIGALRM; int i, c, er = 0, thread_num = 8; pthread_t pt[1024]; static char optstr[] = ""n:l:t:h:""; while ((c = getopt(argc, argv, optstr)) != EOF) switch (c) { case 'n': thread_num = atoi(optarg); break; case 'l': loop = atoi(optarg); break; case 't': delay = atoi(optarg); break; case 'h': default: usage(); exit(1); } printf(""thread=%d,loop=%d,delay=%d\n"",thread_num,loop,delay); count = malloc(sizeof(long)); shutdown = malloc(sizeof(int)); *count = 0; *shutdown = 0; sigemptyset(&sigset); sigaddset(&sigset, signum); sigprocmask (SIG_BLOCK, &sigset, NULL); signal(SIGINT, sighand); signal(SIGTERM, sighand); for(i = 0; i < thread_num ; i++) pthread_create(&pt[i], NULL, simple_loop, NULL); for (i = 0; i < thread_num; i++) pthread_join(pt[i], NULL); exit(0); } Get powertop V2 from git://github.com/fenrus75/powertop, build powertop. After build the above test application, then run it. Test plaform can be Intel Sandybridge or other recent platforms. We will find that deep C-state will dangle between 40%~100% and much time spent on C1 state. It is because menu governor wrongly predict that repeat mode is kept, so it will choose the C1 shallow C-state even though it has chance to sleep 1 second in deep C-state. While after patched the kernel, we find that deep C-state will keep >99.6%. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/time/tick-sched.c Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/time/tick-sched.c Conflicts: arch/arm/configs/elite_kernel_defconfig kernel/time/tick-sched.c",09/07/2013 02:21:26,,DUPLICATE,https://github.com/cphelps76/DEMENTED_kernel_jf/commit/070cb90c5c327f483cc4074be366acf7501f3d8e,,,,[OK] [VERIFY] [No original],,[VERIFY] [No original],EXISTS,,,,,,,,,,,,,cphelps76/DEMENTED_kernel_jf,,,,cphelps76,
cphelps76,DEMENTED_kernel_jf,"cpuidle: Quickly notice prediction failure in general case The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. The patch extends to general case that prediction logic get a small predicted residency, so it choose a shallow C-state though the expected residency is large . Once the prediction will be fail, the CPU will keep staying at shallow C-state for a long time. Acutally, the CPU has change enter into deep C-state. So when the expected residency is long enough but governor choose a shallow C-state, an timer will be added in order to monitor if the prediction failure. When C-state is waken up prior to the adding timer, the timer will be cancelled initiatively. When the timer is triggered and menu governor will quickly notice prediction failure and re-evaluates deeper C-states possibility. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",09/07/2013 02:23:59,,UNABLE-TO-CATEGORIZE,https://github.com/cphelps76/DEMENTED_kernel_jf/commit/420271d52cb64c021d78b95adef1bc1cde1ed9d4,,,[Unable to categorize],[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,cphelps76/DEMENTED_kernel_jf,,,,cphelps76,
DJLaMontagneIII,android_kernel_samsung_aries,Add power saving state DEEP IDLE version 2. Conflicts: arch/arm/mach-s5pv210/Kconfig arch/arm/mach-s5pv210/Makefile arch/arm/mach-s5pv210/didle.S drivers/misc/Makefile,09/07/2013 02:32:14,,NOT-FOUND,https://github.com/DJLaMontagneIII/android_kernel_samsung_aries/commit/776ac23919e35295a2254e391c79cc0e3dfbc114,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,DJLaMontagneIII/android_kernel_samsung_aries,,,,,
DJLaMontagneIII,android_kernel_samsung_aries,"Revert ""Add power saving state DEEP IDLE version 2."" This reverts commit 776ac23919e35295a2254e391c79cc0e3dfbc114.",09/07/2013 03:11:45,,NOT-FOUND,https://github.com/DJLaMontagneIII/android_kernel_samsung_aries/commit/368f295bec674db325e61f4979c0bc7b2dced69c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,DJLaMontagneIII/android_kernel_samsung_aries,,,,,
BeerGang,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",09/07/2013 17:54:04,,NOT-FOUND,https://github.com/BeerGang/android_packages_apps_Phone/commit/edd7a9cbf73f0911045c13660e9b3ef63ee34b40,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BeerGang/android_packages_apps_Phone,,,,,
Quallenauge,kernel-archos,Remove wake flags on UART3 to let them suspend to save power.,09/07/2013 20:02:34,,OK,https://github.com/Quallenauge/kernel-archos/commit/9c45affefcba90564766c8956123f701fb363941,,,[OK][Go to idle],[OK] [Go to idle],[DO NOT ANALYZE],[Go to idle],EXISTS,[Remove wake flags on UART3],[let them suspend],[Allow device to sleep],[Allow device low power mode],,,Certain,Android,No,OS,C,Remove wake flags on UART3 to let them suspend to save power.,Quallenauge/kernel-archos,Quallenauge,[Miscellaneous],,Quallenauge,Kernel arch
mozilla,mozilla-central,"Bug 888552 - Use SET ps command to configure power save mode, r=vchang",09/07/2013 20:32:37,,FALSE-POSITIVE,https://github.com/mozilla/mozilla-central/commit/23dc979e9a22017c0d076e374f44e3e4540aee60,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[DO NOT ANALYZE],,EXISTS,,,,,,,,,,,,,mozilla/mozilla-central,michaelwu,,,michaelwu,
LiquidSmooth,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935",09/07/2013 21:15:52,,NOT-FOUND,https://github.com/LiquidSmooth/android_packages_apps_Phone/commit/5d6ab12849b4edd865db34a4c3940b61915bc37d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LiquidSmooth/android_packages_apps_Phone,,,,,
KrasnikovEugene,wcn36xx,Merge pull request #72 from dreamfly281/master Power save relative function and make BMPS work better,10/07/2013 06:05:05,,UNABLE-TO-CATEGORIZE,https://github.com/KrasnikovEugene/wcn36xx/commit/1c7e8bcb13f7709442a474977f7de2dd05e18ce6,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,KrasnikovEugene/wcn36xx,KrasnikovEugene,,,KrasnikovEugene,
cphelps76,packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935 Conflicts: src/com/android/phone/PhoneGlobals.java",10/07/2013 14:45:27,,DUPLICATE,https://github.com/cphelps76/packages_apps_Phone/commit/760cdafef7a1a3122b6a557e65aa59f6144bb005,,,,,,,EXISTS,,,,,,,,,,,,,cphelps76/packages_apps_Phone,,,,cphelps76,
davros-,packages_providers_TelephonyProvider,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Change-Id: Ida45e1270c3f2662365fe0126a584621267cd248 CRs-Fixed: 336244, 435935 Conflicts: src/com/android/phone/PhoneGlobals.java Conflicts: src/com/android/phone/PhoneGlobals.java",10/07/2013 18:03:09,,UNABLE-TO-CATEGORIZE,https://github.com/davros-/packages_providers_TelephonyProvider/commit/16e6f867b3ab7db13016f20c3c9b4295539ade10,,,[DO NOT ANALYZE],[?] [DUPLICATE] [Giga commit] [1e509fe6d08f66d7fab47e01c632a6bd181afb34],[UNABLE-TO-CATEGORIZE],[DUPLICATE] [Giga commit] [1e509fe6d08f66d7fab47e01c632a6bd181afb34],EXISTS,,,,,,,,,,,,,davros-/packages_providers_TelephonyProvider,,,,davros-,
ChangYeoun,Why,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",11/07/2013 02:12:26,,NOT-FOUND,https://github.com/ChangYeoun/Why/commit/ac9c702e4c60d83c2bf9ec9f540458f0129a4054,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Why,,,,,
ahjortland,hg_proc,"evap_fan_modeling.py - Output rtu after modifying the original rtu dataframe to add the duration of each data point, the uncertainty and the average fan power consumption of the data points. Signed-off-by: Howard Cheung <howard.at@gmail.com>",11/07/2013 20:14:04,,FALSE-POSITIVE,https://github.com/ahjortland/hg_proc/commit/3b61b4ddbcee51b369bd8e762f2b678f1bb0034b,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,ahjortland/hg_proc,howardcheung,,,howardcheung,
UCSD-E4E,intelligent_camera_trap,added a few more power saving features. not positive they are working.,12/07/2013 23:20:12,,OK,https://github.com/UCSD-E4E/intelligent_camera_trap/commit/d9af45f30ea525f4e51d122509da830b97bd6678,,,[DO NOT ANALYZE],[OK] [Disable component] [Hardware],[OK] [Disable component],[Disable component] [Hardware],EXISTS,[All ports set to input] [Internal Pull-up resistors deactivated] [ADC turned off] [Analog comparator disabled] [Power saving features turned on] [Disable digital input buffer on analog input pins] [interrupt pins set via set_interrupt_pins],[power saving],[Set port to input] [Disable internal pull-up resistors] [Disable adc] [Disable analog comparator] [Power saving features turned on] [Disable digital input buffer on analog input pins] [interrupt pins set via set_interrupt_pins],[OUTLIER],,Multiple changes,Uncertain,Linux !,No,Application,C,added a few more power saving features. not positive they are working.,UCSD-E4E/intelligent_camera_trap,,[Disabling feature/devices],,,Application
usk,freebsd,"Import wpa_supplicant / hostapd 2.0. 2013-01-12 - v2.0 * added AP-STA-DISCONNECTED ctrl_iface event * improved debug logging (human readable event names, interface name included in more entries) * added number of small changes to make it easier for static analyzers to understand the implementation * added a workaround for Windows 7 Michael MIC failure reporting and use of the Secure bit in EAPOL-Key msg 3/4 * fixed number of small bugs (see git logs for more details) * changed OpenSSL to read full certificate chain from server_cert file * nl80211: number of updates to use new cfg80211/nl80211 functionality - replace monitor interface with nl80211 commands - additional information for driver-based AP SME * EAP-pwd: - fix KDF for group 21 and zero-padding - added support for fragmentation - increased maximum number of hunting-and-pecking iterations * avoid excessive Probe Response retries for broadcast Probe Request frames (only with drivers using hostapd SME/MLME) * added preliminary support for using TLS v1.2 (CONFIG_TLSV12=y) * fixed WPS operation stopping on dual concurrent AP * added wps_rf_bands configuration parameter for overriding RF Bands value for WPS * added support for getting per-device PSK from RADIUS Tunnel-Password * added support for libnl 3.2 and newer * increased initial group key handshake retransmit timeout to 500 ms * added a workaround for 4-way handshake to update SNonce even after having sent EAPOL-Key 3/4 to avoid issues with some supplicant implementations that can change SNonce for each EAP-Key 2/4 * added a workaround for EAPOL-Key 4/4 using incorrect type value in WPA2 mode (some deployed stations use WPA type in that message) * added a WPS workaround for mixed mode AP Settings with Windows 7 * changed WPS AP PIN disabling mechanism to disable the PIN after 10 consecutive failures in addition to using the exponential lockout period * added support for WFA Hotspot 2.0 - GAS/ANQP advertisement of network information - disable_dgaf parameter to disable downstream group-addressed forwarding * simplified licensing terms by selecting the BSD license as the only alternative * EAP-SIM: fixed re-authentication not to update pseudonym * EAP-SIM: use Notification round before EAP-Failure * EAP-AKA: added support for AT_COUNTER_TOO_SMALL * EAP-AKA: skip AKA/Identity exchange if EAP identity is recognized * EAP-AKA': fixed identity for MK derivation * EAP-AKA': updated to RFC 5448 (username prefixes changed); note: this breaks interoperability with older versions * EAP-SIM/AKA: allow pseudonym to be used after unknown reauth id * changed ANonce to be a random number instead of Counter-based * added support for canceling WPS operations with hostapd_cli wps_cancel * fixed EAP/WPS to PSK transition on reassociation in cases where deauthentication is missed * hlr_auc_gw enhancements: - a new command line parameter -u can be used to enable updating of SQN in Milenage file - use 5 bit IND for SQN updates - SQLite database can now be used to store Milenage information * EAP-SIM/AKA DB: added optional use of SQLite database for pseudonyms and reauth data * added support for Chargeable-User-Identity (RFC 4372) * added radius_auth_req_attr and radius_acct_req_attr configuration parameters to allow adding/overriding of RADIUS attributes in Access-Request and Accounting-Request packets * added support for RADIUS dynamic authorization server (RFC 5176) * added initial support for WNM operations - BSS max idle period - WNM-Sleep Mode * added new WPS NFC ctrl_iface mechanism - removed obsoleted WPS_OOB command (including support for deprecated UFD config_method) * added FT support for drivers that implement MLME internally * added SA Query support for drivers that implement MLME internally * removed default ACM=1 from AC_VO and AC_VI * changed VENDOR-TEST EAP method to use proper private enterprise number (this will not interoperate with older versions) * added hostapd.conf parameter vendor_elements to allow arbitrary vendor specific elements to be added to the Beacon and Probe Response frames * added support for configuring GCMP cipher for IEEE 802.11ad * added support for 256-bit AES with internal TLS implementation * changed EAPOL transmission to use AC_VO if WMM is active * fixed EAP-TLS/PEAP/TTLS/FAST server to validate TLS Message Length correctly; invalid messages could have caused the hostapd process to terminate before this fix [CVE-2012-4445] * limit number of active wildcard PINs for WPS Registrar to one to avoid confusing behavior with multiple wildcard PINs * added a workaround for WPS PBC session overlap detection to avoid interop issues with deployed station implementations that do not remove active PBC indication from Probe Request frames properly * added support for using SQLite for the eap_user database * added Acct-Session-Id attribute into Access-Request messages * fixed EAPOL frame transmission to non-QoS STAs with nl80211 (do not send QoS frames if the STA did not negotiate use of QoS for this association) 2012-05-10 - v1.0 * Add channel selection support in hostapd. See hostapd.conf. * Add support for IEEE 802.11v Time Advertisement mechanism with UTC TSF offset. See hostapd.conf for config info. * Delay STA entry removal until Deauth/Disassoc TX status in AP mode. This allows the driver to use PS buffering of Deauthentication and Disassociation frames when the STA is in power save sleep. Only available with drivers that provide TX status events for Deauth/ Disassoc frames (nl80211). * Allow PMKSA caching to be disabled on the Authenticator. See hostap.conf config parameter disable_pmksa_caching. * atheros: Add support for IEEE 802.11w configuration. * bsd: Add support for setting HT values in IFM_MMASK. * Allow client isolation to be configured with ap_isolate. Client isolation can be used to prevent low-level bridging of frames between associated stations in the BSS. By default, this bridging is allowed. * Allow coexistance of HT BSSes with WEP/TKIP BSSes. * Add require_ht config parameter, which can be used to configure hostapd to reject association with any station that does not support HT PHY. * Add support for writing debug log to a file using ""-f"" option. Also add relog CLI command to re-open the log file. * Add bridge handling for WDS STA interfaces. By default they are added to the configured bridge of the AP interface (if present), but the user can also specify a separate bridge using cli command wds_bridge. * hostapd_cli: - Add wds_bridge command for specifying bridge for WDS STA interfaces. - Add relog command for reopening log file. - Send AP-STA-DISCONNECTED event when an AP disconnects a station due to inactivity. - Add wps_config ctrl_interface command for configuring AP. This command can be used to configure the AP using the internal WPS registrar. It works in the same way as new AP settings received from an ER. - Many WPS/WPS ER commands - see WPS/WPS ER sections for details. - Add command get version, that returns hostapd version string. * WNM: Add BSS Transition Management Request for ESS Disassoc Imminent. Use hostapd_cli ess_disassoc (STA addr) (URL) to send the notification to the STA. * Allow AP mode to disconnect STAs based on low ACK condition (when the data connection is not working properly, e.g., due to the STA going outside the range of the AP). Disabled by default, enable by config option disassoc_low_ack. * Add WPA_IGNORE_CONFIG_ERRORS build option to continue in case of bad config file. * WPS: - Send AP Settings as a wrapped Credential attribute to ctrl_iface in WPS-NEW-AP-SETTINGS. - Dispatch more WPS events through hostapd ctrl_iface. - Add mechanism for indicating non-standard WPS errors. - Change concurrent radio AP to use only one WPS UPnP instance. - Add wps_check_pin command for processing PIN from user input. UIs can use this command to process a PIN entered by a user and to validate the checksum digit (if present). - Add hostap_cli get_config command to display current AP config. - Add new hostapd_cli command, wps_ap_pin, to manage AP PIN at runtime and support dynamic AP PIN management. - Disable AP PIN after 10 consecutive failures. Slow down attacks on failures up to 10. - Allow AP to start in Enrollee mode without AP PIN for probing, to be compatible with Windows 7. - Add Config Error into WPS-FAIL events to provide more info to the user on how to resolve the issue. - When controlling multiple interfaces: - apply WPS commands to all interfaces configured to use WPS - apply WPS config changes to all interfaces that use WPS - when an attack is detected on any interface, disable AP PIN on all interfaces * WPS ER: - Show SetSelectedRegistrar events as ctrl_iface events. - Add special AP Setup Locked mode to allow read only ER. ap_setup_locked=2 can now be used to enable a special mode where WPS ER can learn the current AP settings, but cannot change them. * WPS 2.0: Add support for WPS 2.0 (CONFIG_WPS2) - Add build option CONFIG_WPS_EXTENSIBILITY_TESTING to enable tool for testing protocol extensibility. - Add build option CONFIG_WPS_STRICT to allow disabling of WPS workarounds. - Add support for AuthorizedMACs attribute. * TDLS: - Allow TDLS use or TDLS channel switching in the BSS to be prohibited in the BSS, using config params tdls_prohibit and tdls_prohibit_chan_switch. * EAP server: Add support for configuring fragment size (see fragment_size in hostapd.conf). * wlantest: Add a tool wlantest for IEEE802.11 protocol testing. wlantest can be used to capture frames from a monitor interface for realtime capturing or from pcap files for offline analysis. * Interworking: Support added for 802.11u. Enable in .config with CONFIG_INTERWORKING. See hostapd.conf for config parameters for interworking. * Android: Add build and runtime support for Android hostapd. * Add a new debug message level for excessive information. Use -ddd to enable. * TLS: Add support for tls_disable_time_checks=1 in client mode. * Internal TLS: - Add support for TLS v1.1 (RF ...",13/07/2013 18:30:49,,FALSE-POSITIVE,https://github.com/usk/freebsd/commit/5e9e13ee49049544adc4f40a42b737418896a338,,,[DO NOT ANALYZE],[?] [Giga commit] [It's over 9k],[FALSE-POSITIVE],[Giga commit] [It's over 9k],EXISTS,,,,,,,,,,,,,usk/freebsd,rpaulo,,,rpaulo,
hsenot,mapfolio,Re-arranged data directory and added energy efficiency projects PDFs,14/07/2013 03:26:35,,FALSE-POSITIVE,https://github.com/hsenot/mapfolio/commit/140f59c0749003756b48899c67e280e4ccfd0092,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,hsenot/mapfolio,hsenot,,,hsenot,
Davidteri,samsung-kernel-msm7x30,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",14/07/2013 07:35:18,,NOT-FOUND,https://github.com/Davidteri/samsung-kernel-msm7x30/commit/7448f4f5e7852ab853ae9aaa0e60acb55cdc0bfb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Davidteri/samsung-kernel-msm7x30,,,,,
CornuAmmonis,critters,"Tweak console output, change scaling for energy consumption",15/07/2013 08:03:43,,FALSE-POSITIVE,https://github.com/CornuAmmonis/critters/commit/39ad215ef04e923c00a4cfcaaf3f59c4daef0742,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,CornuAmmonis/critters,,,,,
kounkou,GHOS,Power consumption wired to power linux sensor,16/07/2013 04:57:45,,FALSE-POSITIVE,https://github.com/godbod/GHOS/commit/3130f3cf55666c2285905bbab674af8e4acb39ee,https://github.com/kounkou/GHOS/commit/3130f3cf55666c2285905bbab674af8e4acb39ee,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,kounkou/GHOS,godbod,,,godbod,
oVirt,ovirt-engine,engine: policy units logic implementation Translate VdsSelector logic into policy units: - Migration - MigrationDomain - PinToHost - Memory - CPU - Network Translate VdsLoadBalancing logic into policy units: - None (do nothing) - Even distribution - Power saving Change-Id: Ib29c4257586654392555b6b3675928f187ab96b9 Signed-off-by: Gilad Chaplik <gchaplik@redhat.com>,16/07/2013 10:01:05,,RELATED,https://github.com/oVirt/ovirt-engine/commit/4c518c49946a5204bb37e8a10f74838bb77eae8c,,,[DO NOT ANALYZE],[RELATED] [Big commit] [Add power saving policy],[RELATED] [Add Power Saving Policy],[Big commit] [Add power saving policy],EXISTS,,,,,,,,,,,,,oVirt/ovirt-engine,,,,,
espmartin,htc7x30-3.0,"Linux 3.0.83 commit 937d4f9ee2fe18a6ab012a343fc3b620756b954e Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Date: Thu Jun 20 11:28:30 2013 -0700 Linux 3.0.83 commit 088d9d4d782d66941fc9e29ff4eb0dd72f84493b Author: Sage Weil <sage@inktank.com> Date: Fri Feb 22 15:31:00 2013 -0800 ceph: fix statvfs fr_size commit 92a49fb0f79f3300e6e50ddf56238e70678e4202 upstream. Different versions of glibc are broken in different ways, but the short of it is that for the time being, frsize should == bsize, and be used as the multiple for the blocks, free, and available fields. This mirrors what is done for NFS. The previous reporting of the page size for frsize meant that newer glibc and df would report a very small value for the fs size. Fixes http://tracker.ceph.com/issues/3793. Signed-off-by: Sage Weil <sage@inktank.com> Reviewed-by: Greg Farnum <greg@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 0ffdfdbe55c84906dd65627f069619bec54e5422 Author: Kees Cook <keescook@chromium.org> Date: Wed Jun 5 11:47:18 2013 -0700 x86: Fix typo in kexec register clearing commit c8a22d19dd238ede87aa0ac4f7dbea8da039b9c1 upstream. Fixes a typo in register clearing code. Thanks to PaX Team for fixing this originally, and James Troup for pointing it out. Signed-off-by: Kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/20130605184718.GA8396@www.outflux.net Cc: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 79848ba66d91e0c171ff203363e0c96629279c15 Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Date: Wed Jun 12 14:05:04 2013 -0700 mm: migration: add migrate_entry_wait_huge() commit 30dad30922ccc733cfdbfe232090cf674dc374dc upstream. When we have a page fault for the address which is backed by a hugepage under migration, the kernel can't wait correctly and do busy looping on hugepage fault until the migration finishes. As a result, users who try to kick hugepage migration (via soft offlining, for example) occasionally experience long delay or soft lockup. This is because pte_offset_map_lock() can't get a correct migration entry or a correct page table lock for hugepage. This patch introduces migration_entry_wait_huge() to solve this. Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Reviewed-by: Rik van Riel <riel@redhat.com> Reviewed-by: Wanpeng Li <liwanp@linux.vnet.ibm.com> Reviewed-by: Michal Hocko <mhocko@suse.cz> Cc: Mel Gorman <mgorman@suse.de> Cc: Andi Kleen <andi@firstfloor.org> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 78ef884ebb6c02d45abefc95350f428be7390a26 Author: Rafael Aquini <aquini@redhat.com> Date: Wed Jun 12 14:04:49 2013 -0700 swap: avoid read_swap_cache_async() race to deadlock while waiting on discard I/O completion commit cbab0e4eec299e9059199ebe6daf48730be46d2b upstream. read_swap_cache_async() can race against get_swap_page(), and stumble across a SWAP_HAS_CACHE entry in the swap map whose page wasn't brought into the swapcache yet. This transient swap_map state is expected to be transitory, but the actual placement of discard at scan_swap_map() inserts a wait for I/O completion thus making the thread at read_swap_cache_async() to loop around its -EEXIST case, while the other end at get_swap_page() is scheduled away at scan_swap_map(). This can leave the system deadlocked if the I/O completion happens to be waiting on the CPU waitqueue where read_swap_cache_async() is busy looping and !CONFIG_PREEMPT. This patch introduces a cond_resched() call to make the aforementioned read_swap_cache_async() busy loop condition to bail out when necessary, thus avoiding the subtle race window. Signed-off-by: Rafael Aquini <aquini@redhat.com> Acked-by: Johannes Weiner <hannes@cmpxchg.org> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: Shaohua Li <shli@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit bac5719cdfb081dd68b0eeef7d9796c15fc29811 Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date: Mon Jun 10 09:47:58 2013 +0200 drm/i915: prefer VBT modes for SVDO-LVDS over EDID commit c3456fb3e4712d0448592af3c5d644c9472cd3c1 upstream. In commit 53d3b4d7778daf15900867336c85d3f8dd70600c Author: Egbert Eich <eich@suse.de> Date: Tue Jun 4 17:13:21 2013 +0200 drm/i915/sdvo: Use &intel_sdvo->ddc instead of intel_sdvo->i2c for DDC Egbert Eich fixed a long-standing bug where we simply used a non-working i2c controller to read the EDID for SDVO-LVDS panels. Unfortunately some machines seem to not be able to cope with the mode provided in the EDID. Specifically they seem to not be able to cope with a 4x pixel mutliplier instead of a 2x one, which seems to have been worked around by slightly changing the panels native mode in the VBT so that the dotclock is just barely above 50MHz. Since it took forever to notice the breakage it's fairly safe to assume that at least for SDVO-LVDS panels the VBT contains fairly sane data. So just switch around the order and use VBT modes first. v2: Also add EDID modes just in case, and spell Egbert correctly. v3: Elaborate a bit more about what's going on on Chris' machine. Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=65524 Reported-and-tested-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: Egbert Eich <eich@suse.de> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 319d630e7f0778c8999f6ef503998a4d99cee5f1 Author: Sujith Manoharan <c_manoha@qca.qualcomm.com> Date: Sat Jun 1 07:08:09 2013 +0530 ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> commit 720083f1dc15ac6b6fb85b323d0eae1a151e20ce Author: Kees Cook <keescook@chromium.org> Date: Fri May 10 14:48:21 2013 -0700 b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",16/07/2013 15:48:56,,DUPLICATE,https://github.com/espmartin/htc7x30-3.0/commit/2b0691efdb019b0496006451c1ea3a1c2e6d9ed8,,,,,,,EXISTS,,,,,,,,,,,,,espmartin/htc7x30-3.0,Mustaavalkosta,,,espmartin,
PRJosh,kernel_lge_mako,"Squash linux version 3.4.50 and bumped to 3.3.0 Change-Id: I92cfd4099a71f389d1ed19775a087d690bac9c14 b43: stop format string leaking into error msgs commit e0e29b683d6784ef59bbc914eac85a04b650e63c upstream. The module parameter ""fwpostfix"" is userspace controllable, unfiltered, and is used to define the firmware filename. b43_do_request_fw() populates ctx->errors[] on error, containing the firmware filename. b43err() parses its arguments as a format string. For systems with b43 hardware, this could lead to a uid-0 to ring-0 escalation. CVE-2013-2852 Signed-off-by: Kees Cook <keescook@chromium.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> libceph: must hold mutex for reset_changed_osds() commit 14d2f38df67fadee34625fcbd282ee22514c4846 upstream. An osd client has a red-black tree describing its osds, and occasionally we would get crashes due to one of these trees tree becoming corrupt somehow. The problem turned out to be that reset_changed_osds() was being called without protection of the osd client request mutex. That function would call __reset_osd() for any osd that had changed, and __reset_osd() would call __remove_osd() for any osd with no outstanding requests, and finally __remove_osd() would remove the corresponding entry from the red-black tree. Thus, the tree was getting modified without having any lock protection, and was vulnerable to problems due to concurrent updates. This appears to be the only osd tree updating path that has this problem. It can be fairly easily fixed by moving the call up a few lines, to just before the request mutex gets dropped in kick_requests(). This resolves: http://tracker.ceph.com/issues/5043 Signed-off-by: Alex Elder <elder@inktank.com> Reviewed-by: Sage Weil <sage@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ceph: add cpu_to_le32() calls when encoding a reconnect capability commit c420276a532a10ef59849adc2681f45306166b89 upstream. In his review, Alex Elder mentioned that he hadn't checked that num_fcntl_locks and num_flock_locks were properly decoded on the server side, from a le32 over-the-wire type to a cpu type. I checked, and AFAICS it is done; those interested can consult Locker::_do_cap_update() in src/mds/Locker.cc and src/include/encoding.h in the Ceph server code (git://github.com/ceph/ceph). I also checked the server side for flock_len decoding, and I believe that also happens correctly, by virtue of having been declared __le32 in struct ceph_mds_cap_reconnect, in src/include/ceph_fs.h. Signed-off-by: Jim Schutt <jaschut@sandia.gov> Reviewed-by: Alex Elder <elder@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ceph: ceph_pagelist_append might sleep while atomic commit 39be95e9c8c0b5668c9f8806ffe29bf9f4bc0f40 upstream. Ceph's encode_caps_cb() worked hard to not call __page_cache_alloc() while holding a lock, but it's spoiled because ceph_pagelist_addpage() always calls kmap(), which might sleep. Here's the result: [13439.295457] ceph: mds0 reconnect start [13439.300572] BUG: sleeping function called from invalid context at include/linux/highmem.h:58 [13439.309243] in_atomic(): 1, irqs_disabled(): 0, pid: 12059, name: kworker/1:1 . . . [13439.376225] Call Trace: [13439.378757] [<ffffffff81076f4c>] __might_sleep+0xfc/0x110 [13439.384353] [<ffffffffa03f4ce0>] ceph_pagelist_append+0x120/0x1b0 [libceph] [13439.391491] [<ffffffffa0448fe9>] ceph_encode_locks+0x89/0x190 [ceph] [13439.398035] [<ffffffff814ee849>] ? _raw_spin_lock+0x49/0x50 [13439.403775] [<ffffffff811cadf5>] ? lock_flocks+0x15/0x20 [13439.409277] [<ffffffffa045e2af>] encode_caps_cb+0x41f/0x4a0 [ceph] [13439.415622] [<ffffffff81196748>] ? igrab+0x28/0x70 [13439.420610] [<ffffffffa045e9f8>] ? iterate_session_caps+0xe8/0x250 [ceph] [13439.427584] [<ffffffffa045ea25>] iterate_session_caps+0x115/0x250 [ceph] [13439.434499] [<ffffffffa045de90>] ? set_request_path_attr+0x2d0/0x2d0 [ceph] [13439.441646] [<ffffffffa0462888>] send_mds_reconnect+0x238/0x450 [ceph] [13439.448363] [<ffffffffa0464542>] ? ceph_mdsmap_decode+0x5e2/0x770 [ceph] [13439.455250] [<ffffffffa0462e42>] check_new_map+0x352/0x500 [ceph] [13439.461534] [<ffffffffa04631ad>] ceph_mdsc_handle_map+0x1bd/0x260 [ceph] [13439.468432] [<ffffffff814ebc7e>] ? mutex_unlock+0xe/0x10 [13439.473934] [<ffffffffa043c612>] extra_mon_dispatch+0x22/0x30 [ceph] [13439.480464] [<ffffffffa03f6c2c>] dispatch+0xbc/0x110 [libceph] [13439.486492] [<ffffffffa03eec3d>] process_message+0x1ad/0x1d0 [libceph] [13439.493190] [<ffffffffa03f1498>] ? read_partial_message+0x3e8/0x520 [libceph] . . . [13439.587132] ceph: mds0 reconnect success [13490.720032] ceph: mds0 caps stale [13501.235257] ceph: mds0 recovery completed [13501.300419] ceph: mds0 caps renewed Fix it up by encoding locks into a buffer first, and when the number of encoded locks is stable, copy that into a ceph_pagelist. [elder@inktank.com: abbreviated the stack info a bit.] Signed-off-by: Jim Schutt <jaschut@sandia.gov> Reviewed-by: Alex Elder <elder@inktank.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drivers/rtc/rtc-twl.c: fix missing device_init_wakeup() when booted with device tree commit 24b8256a1fb28d357bc6fa09184ba29b4255ba5c upstream. When booted in legacy mode device_init_wakeup() gets called by drivers/mfd/twl-core.c when the children are initialized. However, when booted using device tree, the children are created with of_platform_populate() instead add_children(). This means that the RTC driver will not have device_init_wakeup() set, and we need to call it from the driver probe like RTC drivers typically do. Without this we cannot test PM wake-up events on omaps for cases where there may not be any physical wake-up event. Signed-off-by: Tony Lindgren <tony@atomide.com> Reported-by: Kevin Hilman <khilman@linaro.org> Cc: Alessandro Zummo <a.zummo@towertech.it> Cc: Jingoo Han <jg1.han@samsung.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drm/gma500/psb: Unpin framebuffer on crtc disable commit 820de86a90089ee607d7864538c98a23b503c846 upstream. The framebuffer needs to be unpinned in the crtc->disable callback because of previous pinning in psb_intel_pipe_set_base(). This will fix a memory leak where the framebuffer was released but not unpinned properly. This patch only affects Poulsbo. Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=889511 Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=812113 Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> drm/gma500/cdv: Unpin framebuffer on crtc disable commit 22e7c385a80d771aaf3a15ae7ccea3b0686bbe10 upstream. The framebuffer needs to be unpinned in the crtc->disable callback because of previous pinning in psb_intel_pipe_set_base(). This will fix a memory leak where the framebuffer was released but not unpinned properly. This patch only affects Cedarview. Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=889511 Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=812113 Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> ath9k: Use minstrel rate control by default commit 5efac94999ff218e0101f67a059e44abb4b0b523 upstream. The ath9k rate control algorithm has various architectural issues that make it a poor fit in scenarios like congested environments etc. An example: https://bugzilla.redhat.com/show_bug.cgi?id=927191 Change the default to minstrel which is more robust in such cases. The ath9k RC code is left in the driver for now, maybe it can be removed altogether later on. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> CPU hotplug: provide a generic helper to disable/enable CPU hotplug commit 16e53dbf10a2d7e228709a7286310e629ede5e45 upstream. There are instances in the kernel where we would like to disable CPU hotplug (from sysfs) during some important operation. Today the freezer code depends on this and the code to do it was kinda tailor-made for that. Restructure the code and make it generic enough to be useful for other usecases too. Signed-off-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com> Signed-off-by: Robin Holt <holt@sgi.com> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@elte.hu> Cc: Russ Anderson <rja@sgi.com> Cc: Robin Holt <holt@sgi.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn> Cc: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> reboot: rigrate shutdown/reboot to boot cpu commit cf7df378aa4ff7da3a44769b7ff6e9eef1a9f3db ...",17/07/2013 23:37:10,,DUPLICATE,https://github.com/PRJosh/kernel_lge_mako/commit/2a7912d60f3b2c3b449345dad50e7a8b8197e55a,,,,,,,EXISTS,,,,,,,,,,,,,PRJosh/kernel_lge_mako,PRJosh,,,PRJosh,
ahjortland,hg_proc,evap_fan_modeling.py - add calculation to assign the average evaporator fan power consumption and the uncertainty to the rtu data series Signed-off-by: Howard Cheung <howard.at@gmail.com>,18/07/2013 04:18:53,,FALSE-POSITIVE,https://github.com/ahjortland/hg_proc/commit/d2a97b43bba0c28349fb798b4ad5cc9b0324a6c7,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute power consumption],[FALSE-POSITIVE],[Compute power consumption],EXISTS,,,,,,,,,,,,,ahjortland/hg_proc,howardcheung,,,howardcheung,
crystalfontz,cfa_10036_kernel,"Added the HSADC to the devices in the dt for the 10036. Since these pins can't be used for GPIO, it makes no sense (other than for power consumption, which is already not small) to leave it disabled.",18/07/2013 14:43:59,,FALSE-POSITIVE,https://github.com/crystalfontz/cfa_10036_kernel/commit/b5bdd355bc4fa1bd99073ba17eeb786fcef78274,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,crystalfontz/cfa_10036_kernel,brianlilly,,,brianlilly,
ahjortland,hg_proc,evap_fan_modeling.py - add plots to compare the estimated and measured fan power consumption Signed-off-by: Howard Cheung <howard.at@gmail.com>,18/07/2013 17:02:40,,FALSE-POSITIVE,https://github.com/ahjortland/hg_proc/commit/ea227f3efe111aa1861c891c356d8f7bf934c012,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute power consumption],[FALSE-POSITIVE],[Compute power consumption],EXISTS,,,,,,,,,,,,,ahjortland/hg_proc,howardcheung,,,howardcheung,
ibr-alg,wiselib,added energy consumption support for scl.,18/07/2013 23:28:55,,FALSE-POSITIVE,https://github.com/ibr-alg/wiselib/commit/f5e2dc83e71a33ef5b61caf859dfcc7de5dac7bd,,,[OK][UNABLE TO CATEGORIZE],[RELATED] [Compute energy consumption],[OK][UNABLE TO CATEGORIZE],[Compute energy consumption] [UNABLE TO CATEGORIZE],EXISTS,,,,,,,,,,,,,ibr-alg/wiselib,konstantinosch,,,konstantinosch,
mcirlanaru,gaia,"Bug 894263 - Power saving mode should be disabled after switching to 'never' If the power saving mode was previously enabled and the user switches the ""turn on automatically"" threshold to ""never"", the mode should be disabled, thus ensuring that the functions previously disabled (i.e. Wi-Fi, Data, Geolocation, Bluetooth) are enabled again.",19/07/2013 23:07:57,,NOT-FOUND,https://github.com/mcirlanaru/gaia/commit/008356be78503a27689ba6b4ef2b3403c4900378,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mcirlanaru/gaia,,,,,
mozilla,mozilla-central,Bug 891238. Don't resume reading from a paused connection if we still have plenty of data cached. This could save power. r=cpearce --HG-- extra : rebase_source : 89e0951e9e8ccef628a99ab4b3f07dbe7ff79989,20/07/2013 04:46:23,,OK,https://github.com/mozilla/mozilla-central/commit/92a9c672fd07ba553498a4fc8fe11491fcc25783,,,[DO NOT ANALYZE],[OK] [Bug fix] [Delay reading] [Leverage cache data],[OK] [BUG FIX],[Bug fix] [Delay reading] [Leverage cache data],EXISTS,[Don't resume reading from a paused connection if we still have plenty of data cached],[stream won't need new data within this time interval in the future],[Leverage cache data] [Avoid unnecessary connection],[Avoid unnecessary work],,,Uncertain could,Firefox,Bug 891238,Application,C++,Don't resume reading from a paused connection if we still have plenty of data cached. This could save power,mozilla/mozilla-central,rocallahan,[Energy bug],,rocallahan,Application browser
mozilla,mozilla-central,"Bug 891238. Don't resume reading from a paused connection if we still have plenty of data cached. This could save power. r=cpearce,a=leo+ --HG-- extra : rebase_source : 9cabb01f7e0afa2d1cbca87dd58746c8ee7e3975",20/07/2013 04:56:49,,DUPLICATE,https://github.com/mozilla/mozilla-central/commit/dcdf2575018e17459dbfc0573be1b4612ae97ef5,,,,[VERIFIED] [https://github.com/mozilla/mozilla-central/commit/92a9c672fd07ba553498a4fc8fe11491fcc25783],,[https://github.com/mozilla/mozilla-central/commit/92a9c672fd07ba553498a4fc8fe11491fcc25783],EXISTS,,,,,,,,,,,,,mozilla/mozilla-central,rocallahan,,,rocallahan,
nbp,mozilla-central,Bug 891238. Don't resume reading from a paused connection if we still have plenty of data cached. This could save power. r=cpearce --HG-- extra : rebase_source : 89e0951e9e8ccef628a99ab4b3f07dbe7ff79989,20/07/2013 05:00:45,,DUPLICATE,https://github.com/nbp/mozilla-central/commit/92a9c672fd07ba553498a4fc8fe11491fcc25783,https://github.com/nbp/mozilla-central-old/commit/92a9c672fd07ba553498a4fc8fe11491fcc25783,,,,,,EXISTS,,,,,,,,,,,,,nbp/mozilla-central,rocallahan,,,rocallahan,
lyfkevin,lge-kernel-iproj,msm_fb: display: add mdp bandwidth runtime calculation Currently mdp bandwidth request logic is based on source image size and number of layers. This logic can not support complicated mdp usecases and it is not power efficient. The logic is improved by calculating mdp bandwidth request at runtime from all pipes and mixers. CRs-fixed: 425823 Change-Id: I63206f00f8d3017a2449f8ac617fce3ba2a4d36c Signed-off-by: Huaibin Yang <huaibiny@codeaurora.org> Conflicts: drivers/video/msm/lvds.c drivers/video/msm/mdp.c drivers/video/msm/mdp.h drivers/video/msm/mdp4.h drivers/video/msm/mdp4_overlay.c drivers/video/msm/mdp4_overlay_writeback.c drivers/video/msm/mipi_dsi.c,20/07/2013 09:05:55,,DUPLICATE,https://github.com/lyfkevin/lge-kernel-iproj/commit/94430821d95e8b50c378b547f606a222350be8c1,,,[DO NOT ANALYZE],[DUPLICATE] [9f4da2643633a0b9b8c96134138453c2d74268b9] [Duplicate: 9f4da2643633a0b9b8c96134138453c2d74268b9],[DUPLICATE] [9f4da2643633a0b9b8c96134138453c2d74268b9] [Duplicate: 9f4da2643633a0b9b8c96134138453c2d74268b9],[9f4da2643633a0b9b8c96134138453c2d74268b9] [Duplicate: 9f4da2643633a0b9b8c96134138453c2d74268b9],EXISTS,,,,,,,,,,,,,lyfkevin/lge-kernel-iproj,,,,lyfkevin,
loqui,im,Merge pull request #47 from waalt/disco Supports Disco (XEP-0030) and lowers power consumption,20/07/2013 12:42:36,,UNABLE-TO-CATEGORIZE,https://github.com/waalt/loqui/commit/a43b8ec7a61d8beac526d2864b18c9c98c0a802d,https://github.com/loqui/im/commit/a43b8ec7a61d8beac526d2864b18c9c98c0a802d,,[OK][UNABLE TO CATEGORIZE],[OK] [UNABLE-TO-CATEGORIZE],[OK][UNABLE TO CATEGORIZE],[UNABLE-TO-CATEGORIZE] [UNABLE TO CATEGORIZE],EXISTS,,,,,,,,,,,,,loqui/im,,,,,
mihai,gaia,"Bug 894263 - Power saving mode should be disabled after switching to 'never'. r=alive If the power saving mode was previously enabled and the user switches the ""turn on automatically"" threshold to ""never"", the mode should be disabled, thus ensuring that the functions previously disabled (i.e. Wi-Fi, Data, Geolocation, Bluetooth) are enabled again.",22/07/2013 17:27:01,,FALSE-POSITIVE,https://github.com/mcirlanaru/gaia/commit/e8944204b9faf388666685852e97b5e8f5bc92c9,https://github.com/mihai/gaia/commit/e8944204b9faf388666685852e97b5e8f5bc92c9,,[RELATED][Disable power saving mode on settings change],[RELATED] [Bug fix] [Disable power saving mode on settings change],[FALSE-POSITIVE],[Bug fix] [Disable power saving mode on settings change],EXISTS,,,,,,,,,,,,,mihai/gaia,,,,,
mozilla,mozilla-central,"Bumping gaia.json for 2 gaia-central revision(s) ======== https://hg.mozilla.org/integration/gaia-central/rev/f8d77075d437 Author: Mihai Cîrlănaru <mihai@cirlanaru.com> Desc: Merge pull request #11077 from mcirlanaru/bug_894263 Bug 894263 - Power saving mode should be disabled after switching... r=@alivedise ======== https://hg.mozilla.org/integration/gaia-central/rev/2877ff83ea14 Author: Mihai Cirlanaru <mihai@cirlanaru.com> Desc: Bug 894263 - Power saving mode should be disabled after switching to 'never'. r=alive If the power saving mode was previously enabled and the user switches the ""turn on automatically"" threshold to ""never"", the mode should be disabled, thus ensuring that the functions previously disabled (i.e. Wi-Fi, Data, Geolocation, Bluetooth) are enabled again.",22/07/2013 19:20:48,,FALSE-POSITIVE,https://github.com/mozilla/mozilla-central/commit/faf2cae49d45676fcd538bef226f199b695f36dd,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,mozilla/mozilla-central,,,,,
mozilla,releases-mozilla-central,"Bumping gaia.json for 2 gaia-central revision(s) ======== https://hg.mozilla.org/integration/gaia-central/rev/f8d77075d437 Author: Mihai Cîrlănaru <mihai@cirlanaru.com> Desc: Merge pull request #11077 from mcirlanaru/bug_894263 Bug 894263 - Power saving mode should be disabled after switching... r=@alivedise ======== https://hg.mozilla.org/integration/gaia-central/rev/2877ff83ea14 Author: Mihai Cirlanaru <mihai@cirlanaru.com> Desc: Bug 894263 - Power saving mode should be disabled after switching to 'never'. r=alive If the power saving mode was previously enabled and the user switches the ""turn on automatically"" threshold to ""never"", the mode should be disabled, thus ensuring that the functions previously disabled (i.e. Wi-Fi, Data, Geolocation, Bluetooth) are enabled again.",22/07/2013 19:26:18,,NOT-FOUND,https://github.com/mozilla/releases-mozilla-central/commit/79d820bcba38b2154d579b4539e29fb526045756,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mozilla/releases-mozilla-central,,,,,
nbp,mozilla-central,"Bumping gaia.json for 2 gaia-central revision(s) ======== https://hg.mozilla.org/integration/gaia-central/rev/f8d77075d437 Author: Mihai Cîrlănaru <mihai@cirlanaru.com> Desc: Merge pull request #11077 from mcirlanaru/bug_894263 Bug 894263 - Power saving mode should be disabled after switching... r=@alivedise ======== https://hg.mozilla.org/integration/gaia-central/rev/2877ff83ea14 Author: Mihai Cirlanaru <mihai@cirlanaru.com> Desc: Bug 894263 - Power saving mode should be disabled after switching to 'never'. r=alive If the power saving mode was previously enabled and the user switches the ""turn on automatically"" threshold to ""never"", the mode should be disabled, thus ensuring that the functions previously disabled (i.e. Wi-Fi, Data, Geolocation, Bluetooth) are enabled again.",22/07/2013 20:00:47,,DUPLICATE,https://github.com/nbp/mozilla-central/commit/faf2cae49d45676fcd538bef226f199b695f36dd,https://github.com/nbp/mozilla-central-old/commit/faf2cae49d45676fcd538bef226f199b695f36dd,,,,,,EXISTS,,,,,,,,,,,,,nbp/mozilla-central,,,,,
willijar,LENS,Packet statistics for radio test now matches Castalia. Power consumption needs further checking,26/07/2013 09:46:03,,FALSE-POSITIVE,https://github.com/willijar/LENS/commit/f7d8cb6f9c11f61aede47903de37e32ac0785227,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,willijar/LENS,willijar,,,willijar,
ahjortland,hg_proc,Add functions to estimate compressor power consumption and extracting data needed to train the model. Signed-off-by: Howard Cheung <howard.at@gmail.com>,26/07/2013 13:29:54,,FALSE-POSITIVE,https://github.com/ahjortland/hg_proc/commit/79a209a1125bb67bad5ef368f88bb5926bc8192e,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute power consumption],[FALSE-POSITIVE],[Compute power consumption],EXISTS,,,,,,,,,,,,,ahjortland/hg_proc,howardcheung,,,howardcheung,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",26/07/2013 13:49:22,,DUPLICATE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/399d1d16b10600efced04d7fe3b34fe7ce693d66,,,,,,,EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,longman88,,,dtrail,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",26/07/2013 13:50:08,,DUPLICATE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/46cf1dc5b69178c44eb6bded7953abe6e375db2b,,,,,,,EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,longman88,,,dtrail,
Altaf-Mahdi,i9505,"mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. Change-Id: I22a5054beec41b0b66b3bf030ddfcf284de448b3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",27/07/2013 00:34:24,,OK,https://github.com/Altaf-Mahdi/i9505/commit/648423cb9ae13c72c1d2ba5b275f42be1cf4d542,,,[DO NOT ANALYZE],[OK] [Scale CPU frequency],[OK] [Scale CPU frequency],[Scale CPU frequency],EXISTS,[Add load based clock scaling support],[Scaling down the clock frequency dynamically has huge power savings because of lower frequency/voltage],[Scale CPU frequency] [Load based frequency scaling],[DVFS],,,Certain,Android,No,OS,C,"Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively.",Altaf-Mahdi/i9505,,[Frequency and voltage scaling],,cyanogen,Driver
jerwil,sleep-coach-ATTiny,"Updated circuit from build test, added sleep Reduced power consumption in ""off"" mode from 1.28 mA to 0.31 mA using sleep code found from http://www.insidegadgets.com/2011/02/05/reduce-attiny-power-consumption-by-sleeping-with-the-watchdog-timer/",28/07/2013 04:40:35,,OK,https://github.com/jerwil/sleep-coach-ATTiny/commit/3aacaadcd5107643e8e3cd5df8869c6f2aa886f5,,,[DO NOT ANALYZE],[OK] [Go to idle] [Configure sleep mode],[OK][GO TO IDLE],[Go to idle] [Configure sleep mode],EXISTS,[added sleep],"[Reduced power consumption in ""off"" mode]",[Go to sleep] [Disable device],[Go to low power],[Disable device],Multiple changes,Certain,Arduino,No,Application,Ino,"Reduced power consumption in ""off"" mode from 1.28 mA to 0.31 mA using sleep code found from",jerwil/sleep-coach-ATTiny,jerwil,[Low power idling],,jerwil,Arduino controller
perkarom,Shark-E,1600MHz CPU OC Corrected CPU freq. going above scaling_max (even if only fractions of seconds) Dynamically adjust cpufreq_max_limit according to scaling_max setting without breaking power save mode,28/07/2013 14:38:21,,DUPLICATE,https://github.com/perkarom/Shark-E/commit/5c57cbb3d83a6503d57bcd280384cd992a3f8809,,,,,,,EXISTS,,,,,,,,,,,,,perkarom/Shark-E,yank555-lu,,,perkarom,
CyanogenMod,android_frameworks_av,"audio: Squashed commit of LPA and Tunnel feature from CAF frameworks/av: Add support for LPA and Tunnel Playback -Add DirectTrack and DirectTrackClient. -DirectTrack enables client to create a direct output. -DirectTrackClient allows notifications to be sent to the client from DirectTrack. -DirectTrack is being used for Low Power Audio playback and Tunnel Audio playback Change-Id: Iddaaa557c4d6cb2e44903b6eaeba35cb9315194d frameworks/av: enable tunnel mode based on flags - Enable tunnel mode playback based on flags defined in target board config file instead of checking target name Change-Id: I25a5431b659d9d07ed2791d90ec341ff26bd191f frameworks/av: port fixes in LPA and Tunnel mode playback No History was maintained during porting. Updating the Description and CR's of all the fixes Reference point: AU_LINUX_ANDROID_JB_MR1.04.02.02.049.366 LPA Mode: LPAPlayer synchronization fixes Fixes for seek, pause/resume, EOS handling Fixes for synchronization b/w the decoder thread, TimedEventQueue and player thread. Convert mono to stereo for LPA clips - CRs-Fixed: 421639 Add support to change clip duration to enable LPA Set correct device while creating effects - CRs-Fixed: 496866 Fix the LPA-AudioEffects dead lock issue - CRs-Fixed: 477511 fix volume not updated in pause state of direct track - CRs-Fixed: 490592 Tunnel Mode: Use tunnel player only for music stream Exceptions in using Tunnel mode decode - CRs-Fixed: 432080 Enable Tunnel Decode for select formats - CRs-Fixed:437651 Use software decoder for ADTS content. - CRs-fixed: 431096 Skip tunnel mode for playback through AudioCache - CRs-Fixed: 437539 Fix stability crash on tunnel playback. - CRs-Fixed: 498386 support multiple tunnel instances - CRs-Fixed: 483603 Fix ANR repeated next with tunnel clips on BT/AOA - CRs-Fixed: 482966 Update condition to ignore a seek request - CRs-Fixed: 461908 Return seek position until seek has been processed - CRs-Fixed: 454825 TunnelPlayer performance tweaks for audio video playback - CRs-Fixed: 444041 Stability fixes for Tunnel Player (part 2) - CRs-Fixed: 449122 Adjustment for TunnelPlayer buffer size - CRs-Fixed: 447274, 442365 Remove unnecessary code from TunnelPlayer - CRs-Fixed: 442365 update condition to send SEEK_COMPLETE - CRs-Fixed: 441411 Stop extractor source after start in TunnelPlayer - CRs-Fixed: 440239 Handling of EOS, and triggering EOS was wrong in TunnelPlayer. EOS should not be posted till seek is complete Disable tunnel mode playback for streaming use cases to avoid jittery playback CRs-Fixed: 433346 432233 429868 APIs for returning correct timestamps were implemented Check whether sink is open before flushing or closing it. Check for mIsAudioRouted is good to know if we are closing it Seekbar freezes after seek and pause Check pause status before writing Change-Id: I55687403b8ee77f4c04eeba63538fa5c3d6d43ed frameworks/av: Fix the LPA-AudioEffects dead lock issue - Issue:Deadlock occurs when the LPA clips are subjected to rapid next from BT device and simultaneously on/off the audio effects. - Rootcause:some times flinger thread processing LPAPlayer/directtrack next deadlocks with the thread working on effect configuration as both of them contend for the audioflinger::mlock and effectmodule::mlock. - Fix1:AudioFlinger::deleteEffectSession() not to acquire audioflinger:mLock instead take the mLPAEffectChain.mlock. - Fix2:ThreadBase::effectConfigChanged() not to acquire audioflinger::mlock. CRs-Fixed: 477511 Change-Id: Ia0e6d72f467afce6de5e66c6cd6edbe0759d271b audioflinger: Fix crash in flinger during monkey runs The trackrefptr in DirectTrack descriptor can be invalid and this can result in a crash is stability runs. Add check for validity of the trackrefptr before accessing it Change-Id: I4c7fbff022f381f9d2cdbf0fc04ade8defbb2195 audioflinger: Support SRS Trumedia effects Add support for SRS Trumedia post processing effects Change-Id: I6718b0c90a199d53fe971a8a7c089e63b649c112 frameworks/av: Enable subsystem restart for LPA/Tunnel -Audio Daemon in Audio HAL intimates AudioFlinger of ADSP status (online/offline) using set_paramaters. -AudioFlinger send set_parameters to its clients which is DirectTrack used for LPA/Tunnel playback. -In case of ADSP crash during LPA/Tunnel playback, clean up of DirectTrack is initiated. Change-Id: If83102ddde1da880fb769d86a20884185c049bca libstagefright: Create MP3 decoder libraries without OMX layer - With the current MP3 OMX SW decoders, the decoding time is increased w.r.t the libraries without OMX layer that are present in GB. This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode Change-Id: Ie194b11619de9ba43cd85dddbf7892239858945d frameworks/av: Add metadata mode changes to LPAPlayer -Seek to EOS was causing playback to hang for 3 seconds before switching to the next clip. -This is because the lpa driver works on period size. Partial buffers are not handled. Add support for metadata mode changes to LPAPlayer to support partial frames. CRs-Fixed: 458904 491077 490992 Change-Id: I8673756b54ae7bca18855d326c85ae1064652514 Conflicts: media/libstagefright/LPAPlayerALSA.cpp frameworks/av: audiotrack state check during flush -Audiotrack flush should be handled only on pause/stop state for non LPA/Tunnel playback as per AOSP Change-Id: I112d71a465424dc81fc3acb9423f63cb9f84c2d7 AudioFlinger: SRS effect signal in case of Tunnel send SRS effect signal to Direct Audio Track for tunnel decoding CRs-Fixed: 500015 Change-Id: I43d7296d0956c3b918681b9939c3f6a98b9a143a libstagefright: TunnelPlayer: update condition to send SEEK_COMPLETE - If the client tries to seek to 0 (e.g as a result of LOOPING) without ever calling getPosition(), we will always sent an immediate seek notification without seeking. CRs-Fixed: 441411 Change-Id: I35b059448784324149890636933fdf9d536b2bb8 audioflinger:Set correct device while creating effects Change-Id: Id2c96c1f1fe4cdfc2795c86caa050f31f15e7f8d -Issue: Effectmodule is created with stale output device -Rootcause: While creating effects the output device set is output device of mixer thread, which is stale and not updated, so effects use the wrong/old device as the output device and leads to issue such as difference in volume level after setting correct device etc. -Fix: Cache the latest device value for direct track in a flinger member variable when setparameter of flinger is called with new device and audioflinger::openoutput is called. Use this cached value while creating effects CRs-Fixed: 496866 libstagefright: Fix ANR with rigorous rewind of 3gp LPA clips. -ANR is seen with rigorous rewind of 3gp LPA clips. -The lpa destructor waits for decoder thread to be killed when the thread function has not got the time-slice to execute after creation. -Use mLock instead of extractor mutex. use mLock before signalling the thread to avoid indefinite wait. CRs-Fixed: 491077 490992 Change-Id: Icf2ae64a379ff2b1260d34dd0e5c45f07f429718 Frameworks/av: Fix to prevent deadlock in AudioEffects -Write is blocked waiting for effect chain lock and this causes decoder thread to wait indefintely. -Sometimes it is observed that effectschain is locked before mLPAEffectChain is initialized and but unlocking is skipped if mLPAEffectChain is initialized in between.Due to this LPA silence and framework reboot issues are observed as applyEffectsOn() cannot acquire lock to progress further. -Use flag to check if all effects have been locked and unlock accordingly to prevent the deadlock scenario. (cherry picked from commit 011db22abf565dfbe7f9d0a5c7af7564587b3b48) CRs-Fixed: 435661, 435664, 435680, 430309 Change-Id: I9e3e0a77ea64ef8c5afbe5a18ee583803a96c99d audio: Compile AudioParameter as shared library - AudioParameter as shared lib is needed by BT support in WFD source, SRS TruMedia Change-Id: I8d78740ee0df456c8a305511d9335c228c9be3b0 audio: define QCOM audio parameters - Define QCOM audio paramters for FM, VOIP, fluence, SSR, and etc. Change-Id: Id708c22f7ebe96f1831095447560ff9376c73878",29/07/2013 07:40:32,,UNABLE-TO-CATEGORIZE,https://github.com/CyanogenMod/android_frameworks_av/commit/fda59198a04da83bd9767e1e519c8d5101764fba,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE] [Giga commit],[UNABLE-TO-CATEGORIZE],[Giga commit],EXISTS,,,,,,,,,,,,,CyanogenMod/android_frameworks_av,,,,cyanogen,
TaichiN,android_frameworks_av,"audio: Squashed commit of LPA and Tunnel feature from CAF frameworks/av: Add support for LPA and Tunnel Playback -Add DirectTrack and DirectTrackClient. -DirectTrack enables client to create a direct output. -DirectTrackClient allows notifications to be sent to the client from DirectTrack. -DirectTrack is being used for Low Power Audio playback and Tunnel Audio playback Change-Id: Iddaaa557c4d6cb2e44903b6eaeba35cb9315194d frameworks/av: enable tunnel mode based on flags - Enable tunnel mode playback based on flags defined in target board config file instead of checking target name Change-Id: I25a5431b659d9d07ed2791d90ec341ff26bd191f frameworks/av: port fixes in LPA and Tunnel mode playback No History was maintained during porting. Updating the Description and CR's of all the fixes Reference point: AU_LINUX_ANDROID_JB_MR1.04.02.02.049.366 LPA Mode: LPAPlayer synchronization fixes Fixes for seek, pause/resume, EOS handling Fixes for synchronization b/w the decoder thread, TimedEventQueue and player thread. Convert mono to stereo for LPA clips - CRs-Fixed: 421639 Add support to change clip duration to enable LPA Set correct device while creating effects - CRs-Fixed: 496866 Fix the LPA-AudioEffects dead lock issue - CRs-Fixed: 477511 fix volume not updated in pause state of direct track - CRs-Fixed: 490592 Tunnel Mode: Use tunnel player only for music stream Exceptions in using Tunnel mode decode - CRs-Fixed: 432080 Enable Tunnel Decode for select formats - CRs-Fixed:437651 Use software decoder for ADTS content. - CRs-fixed: 431096 Skip tunnel mode for playback through AudioCache - CRs-Fixed: 437539 Fix stability crash on tunnel playback. - CRs-Fixed: 498386 support multiple tunnel instances - CRs-Fixed: 483603 Fix ANR repeated next with tunnel clips on BT/AOA - CRs-Fixed: 482966 Update condition to ignore a seek request - CRs-Fixed: 461908 Return seek position until seek has been processed - CRs-Fixed: 454825 TunnelPlayer performance tweaks for audio video playback - CRs-Fixed: 444041 Stability fixes for Tunnel Player (part 2) - CRs-Fixed: 449122 Adjustment for TunnelPlayer buffer size - CRs-Fixed: 447274, 442365 Remove unnecessary code from TunnelPlayer - CRs-Fixed: 442365 update condition to send SEEK_COMPLETE - CRs-Fixed: 441411 Stop extractor source after start in TunnelPlayer - CRs-Fixed: 440239 Handling of EOS, and triggering EOS was wrong in TunnelPlayer. EOS should not be posted till seek is complete Disable tunnel mode playback for streaming use cases to avoid jittery playback CRs-Fixed: 433346 432233 429868 APIs for returning correct timestamps were implemented Check whether sink is open before flushing or closing it. Check for mIsAudioRouted is good to know if we are closing it Seekbar freezes after seek and pause Check pause status before writing Change-Id: I55687403b8ee77f4c04eeba63538fa5c3d6d43ed frameworks/av: Fix the LPA-AudioEffects dead lock issue - Issue:Deadlock occurs when the LPA clips are subjected to rapid next from BT device and simultaneously on/off the audio effects. - Rootcause:some times flinger thread processing LPAPlayer/directtrack next deadlocks with the thread working on effect configuration as both of them contend for the audioflinger::mlock and effectmodule::mlock. - Fix1:AudioFlinger::deleteEffectSession() not to acquire audioflinger:mLock instead take the mLPAEffectChain.mlock. - Fix2:ThreadBase::effectConfigChanged() not to acquire audioflinger::mlock. CRs-Fixed: 477511 Change-Id: Ia0e6d72f467afce6de5e66c6cd6edbe0759d271b audioflinger: Fix crash in flinger during monkey runs The trackrefptr in DirectTrack descriptor can be invalid and this can result in a crash is stability runs. Add check for validity of the trackrefptr before accessing it Change-Id: I4c7fbff022f381f9d2cdbf0fc04ade8defbb2195 audioflinger: Support SRS Trumedia effects Add support for SRS Trumedia post processing effects Change-Id: I6718b0c90a199d53fe971a8a7c089e63b649c112 frameworks/av: Enable subsystem restart for LPA/Tunnel -Audio Daemon in Audio HAL intimates AudioFlinger of ADSP status (online/offline) using set_paramaters. -AudioFlinger send set_parameters to its clients which is DirectTrack used for LPA/Tunnel playback. -In case of ADSP crash during LPA/Tunnel playback, clean up of DirectTrack is initiated. Change-Id: If83102ddde1da880fb769d86a20884185c049bca libstagefright: Create MP3 decoder libraries without OMX layer - With the current MP3 OMX SW decoders, the decoding time is increased w.r.t the libraries without OMX layer that are present in GB. This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode Change-Id: Ie194b11619de9ba43cd85dddbf7892239858945d frameworks/av: Add metadata mode changes to LPAPlayer -Seek to EOS was causing playback to hang for 3 seconds before switching to the next clip. -This is because the lpa driver works on period size. Partial buffers are not handled. Add support for metadata mode changes to LPAPlayer to support partial frames. CRs-Fixed: 458904 491077 490992 Change-Id: I8673756b54ae7bca18855d326c85ae1064652514 Conflicts: media/libstagefright/LPAPlayerALSA.cpp frameworks/av: audiotrack state check during flush -Audiotrack flush should be handled only on pause/stop state for non LPA/Tunnel playback as per AOSP Change-Id: I112d71a465424dc81fc3acb9423f63cb9f84c2d7 AudioFlinger: SRS effect signal in case of Tunnel send SRS effect signal to Direct Audio Track for tunnel decoding CRs-Fixed: 500015 Change-Id: I43d7296d0956c3b918681b9939c3f6a98b9a143a libstagefright: TunnelPlayer: update condition to send SEEK_COMPLETE - If the client tries to seek to 0 (e.g as a result of LOOPING) without ever calling getPosition(), we will always sent an immediate seek notification without seeking. CRs-Fixed: 441411 Change-Id: I35b059448784324149890636933fdf9d536b2bb8 audioflinger:Set correct device while creating effects Change-Id: Id2c96c1f1fe4cdfc2795c86caa050f31f15e7f8d -Issue: Effectmodule is created with stale output device -Rootcause: While creating effects the output device set is output device of mixer thread, which is stale and not updated, so effects use the wrong/old device as the output device and leads to issue such as difference in volume level after setting correct device etc. -Fix: Cache the latest device value for direct track in a flinger member variable when setparameter of flinger is called with new device and audioflinger::openoutput is called. Use this cached value while creating effects CRs-Fixed: 496866 libstagefright: Fix ANR with rigorous rewind of 3gp LPA clips. -ANR is seen with rigorous rewind of 3gp LPA clips. -The lpa destructor waits for decoder thread to be killed when the thread function has not got the time-slice to execute after creation. -Use mLock instead of extractor mutex. use mLock before signalling the thread to avoid indefinite wait. CRs-Fixed: 491077 490992 Change-Id: Icf2ae64a379ff2b1260d34dd0e5c45f07f429718 Frameworks/av: Fix to prevent deadlock in AudioEffects -Write is blocked waiting for effect chain lock and this causes decoder thread to wait indefintely. -Sometimes it is observed that effectschain is locked before mLPAEffectChain is initialized and but unlocking is skipped if mLPAEffectChain is initialized in between.Due to this LPA silence and framework reboot issues are observed as applyEffectsOn() cannot acquire lock to progress further. -Use flag to check if all effects have been locked and unlock accordingly to prevent the deadlock scenario. (cherry picked from commit 011db22abf565dfbe7f9d0a5c7af7564587b3b48) CRs-Fixed: 435661, 435664, 435680, 430309 Change-Id: I9e3e0a77ea64ef8c5afbe5a18ee583803a96c99d audio: Compile AudioParameter as shared library - AudioParameter as shared lib is needed by BT support in WFD source, SRS TruMedia Change-Id: I8d78740ee0df456c8a305511d9335c228c9be3b0 audio: define QCOM audio parameters - Define QCOM audio paramters for FM, VOIP, fluence, SSR, and etc. Change-Id: Id708c22f7ebe96f1831095447560ff9376c73878",29/07/2013 11:52:58,,DUPLICATE,https://github.com/TaichiN/android_frameworks_av/commit/fda59198a04da83bd9767e1e519c8d5101764fba,,,,,,,EXISTS,,,,,,,,,,,,,TaichiN/android_frameworks_av,,,,cyanogen,
androidarmv6,android_frameworks_av,"audio: Squashed commit of LPA and Tunnel feature from CAF frameworks/av: Add support for LPA and Tunnel Playback -Add DirectTrack and DirectTrackClient. -DirectTrack enables client to create a direct output. -DirectTrackClient allows notifications to be sent to the client from DirectTrack. -DirectTrack is being used for Low Power Audio playback and Tunnel Audio playback Change-Id: Iddaaa557c4d6cb2e44903b6eaeba35cb9315194d frameworks/av: enable tunnel mode based on flags - Enable tunnel mode playback based on flags defined in target board config file instead of checking target name Change-Id: I25a5431b659d9d07ed2791d90ec341ff26bd191f frameworks/av: port fixes in LPA and Tunnel mode playback No History was maintained during porting. Updating the Description and CR's of all the fixes Reference point: AU_LINUX_ANDROID_JB_MR1.04.02.02.049.366 LPA Mode: LPAPlayer synchronization fixes Fixes for seek, pause/resume, EOS handling Fixes for synchronization b/w the decoder thread, TimedEventQueue and player thread. Convert mono to stereo for LPA clips - CRs-Fixed: 421639 Add support to change clip duration to enable LPA Set correct device while creating effects - CRs-Fixed: 496866 Fix the LPA-AudioEffects dead lock issue - CRs-Fixed: 477511 fix volume not updated in pause state of direct track - CRs-Fixed: 490592 Tunnel Mode: Use tunnel player only for music stream Exceptions in using Tunnel mode decode - CRs-Fixed: 432080 Enable Tunnel Decode for select formats - CRs-Fixed:437651 Use software decoder for ADTS content. - CRs-fixed: 431096 Skip tunnel mode for playback through AudioCache - CRs-Fixed: 437539 Fix stability crash on tunnel playback. - CRs-Fixed: 498386 support multiple tunnel instances - CRs-Fixed: 483603 Fix ANR repeated next with tunnel clips on BT/AOA - CRs-Fixed: 482966 Update condition to ignore a seek request - CRs-Fixed: 461908 Return seek position until seek has been processed - CRs-Fixed: 454825 TunnelPlayer performance tweaks for audio video playback - CRs-Fixed: 444041 Stability fixes for Tunnel Player (part 2) - CRs-Fixed: 449122 Adjustment for TunnelPlayer buffer size - CRs-Fixed: 447274, 442365 Remove unnecessary code from TunnelPlayer - CRs-Fixed: 442365 update condition to send SEEK_COMPLETE - CRs-Fixed: 441411 Stop extractor source after start in TunnelPlayer - CRs-Fixed: 440239 Handling of EOS, and triggering EOS was wrong in TunnelPlayer. EOS should not be posted till seek is complete Disable tunnel mode playback for streaming use cases to avoid jittery playback CRs-Fixed: 433346 432233 429868 APIs for returning correct timestamps were implemented Check whether sink is open before flushing or closing it. Check for mIsAudioRouted is good to know if we are closing it Seekbar freezes after seek and pause Check pause status before writing Change-Id: I55687403b8ee77f4c04eeba63538fa5c3d6d43ed frameworks/av: Fix the LPA-AudioEffects dead lock issue - Issue:Deadlock occurs when the LPA clips are subjected to rapid next from BT device and simultaneously on/off the audio effects. - Rootcause:some times flinger thread processing LPAPlayer/directtrack next deadlocks with the thread working on effect configuration as both of them contend for the audioflinger::mlock and effectmodule::mlock. - Fix1:AudioFlinger::deleteEffectSession() not to acquire audioflinger:mLock instead take the mLPAEffectChain.mlock. - Fix2:ThreadBase::effectConfigChanged() not to acquire audioflinger::mlock. CRs-Fixed: 477511 Change-Id: Ia0e6d72f467afce6de5e66c6cd6edbe0759d271b audioflinger: Fix crash in flinger during monkey runs The trackrefptr in DirectTrack descriptor can be invalid and this can result in a crash is stability runs. Add check for validity of the trackrefptr before accessing it Change-Id: I4c7fbff022f381f9d2cdbf0fc04ade8defbb2195 audioflinger: Support SRS Trumedia effects Add support for SRS Trumedia post processing effects Change-Id: I6718b0c90a199d53fe971a8a7c089e63b649c112 frameworks/av: Enable subsystem restart for LPA/Tunnel -Audio Daemon in Audio HAL intimates AudioFlinger of ADSP status (online/offline) using set_paramaters. -AudioFlinger send set_parameters to its clients which is DirectTrack used for LPA/Tunnel playback. -In case of ADSP crash during LPA/Tunnel playback, clean up of DirectTrack is initiated. Change-Id: If83102ddde1da880fb769d86a20884185c049bca libstagefright: Create MP3 decoder libraries without OMX layer - With the current MP3 OMX SW decoders, the decoding time is increased w.r.t the libraries without OMX layer that are present in GB. This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode Change-Id: Ie194b11619de9ba43cd85dddbf7892239858945d frameworks/av: Add metadata mode changes to LPAPlayer -Seek to EOS was causing playback to hang for 3 seconds before switching to the next clip. -This is because the lpa driver works on period size. Partial buffers are not handled. Add support for metadata mode changes to LPAPlayer to support partial frames. CRs-Fixed: 458904 491077 490992 Change-Id: I8673756b54ae7bca18855d326c85ae1064652514 Conflicts: media/libstagefright/LPAPlayerALSA.cpp frameworks/av: audiotrack state check during flush -Audiotrack flush should be handled only on pause/stop state for non LPA/Tunnel playback as per AOSP Change-Id: I112d71a465424dc81fc3acb9423f63cb9f84c2d7 AudioFlinger: SRS effect signal in case of Tunnel send SRS effect signal to Direct Audio Track for tunnel decoding CRs-Fixed: 500015 Change-Id: I43d7296d0956c3b918681b9939c3f6a98b9a143a libstagefright: TunnelPlayer: update condition to send SEEK_COMPLETE - If the client tries to seek to 0 (e.g as a result of LOOPING) without ever calling getPosition(), we will always sent an immediate seek notification without seeking. CRs-Fixed: 441411 Change-Id: I35b059448784324149890636933fdf9d536b2bb8 audioflinger:Set correct device while creating effects Change-Id: Id2c96c1f1fe4cdfc2795c86caa050f31f15e7f8d -Issue: Effectmodule is created with stale output device -Rootcause: While creating effects the output device set is output device of mixer thread, which is stale and not updated, so effects use the wrong/old device as the output device and leads to issue such as difference in volume level after setting correct device etc. -Fix: Cache the latest device value for direct track in a flinger member variable when setparameter of flinger is called with new device and audioflinger::openoutput is called. Use this cached value while creating effects CRs-Fixed: 496866 libstagefright: Fix ANR with rigorous rewind of 3gp LPA clips. -ANR is seen with rigorous rewind of 3gp LPA clips. -The lpa destructor waits for decoder thread to be killed when the thread function has not got the time-slice to execute after creation. -Use mLock instead of extractor mutex. use mLock before signalling the thread to avoid indefinite wait. CRs-Fixed: 491077 490992 Change-Id: Icf2ae64a379ff2b1260d34dd0e5c45f07f429718 Frameworks/av: Fix to prevent deadlock in AudioEffects -Write is blocked waiting for effect chain lock and this causes decoder thread to wait indefintely. -Sometimes it is observed that effectschain is locked before mLPAEffectChain is initialized and but unlocking is skipped if mLPAEffectChain is initialized in between.Due to this LPA silence and framework reboot issues are observed as applyEffectsOn() cannot acquire lock to progress further. -Use flag to check if all effects have been locked and unlock accordingly to prevent the deadlock scenario. (cherry picked from commit 011db22abf565dfbe7f9d0a5c7af7564587b3b48) CRs-Fixed: 435661, 435664, 435680, 430309 Change-Id: I9e3e0a77ea64ef8c5afbe5a18ee583803a96c99d audio: Compile AudioParameter as shared library - AudioParameter as shared lib is needed by BT support in WFD source, SRS TruMedia Change-Id: I8d78740ee0df456c8a305511d9335c228c9be3b0 audio: define QCOM audio parameters - Define QCOM audio paramters for FM, VOIP, fluence, SSR, and etc. Change-Id: Id708c22f7ebe96f1831095447560ff9376c73878",29/07/2013 12:46:08,,DUPLICATE,https://github.com/androidarmv6/android_frameworks_av/commit/fda59198a04da83bd9767e1e519c8d5101764fba,,,,,,,EXISTS,,,,,,,,,,,,,androidarmv6/android_frameworks_av,,,,cyanogen,
LSTS,dune,energy_consumed: Added program to compute energy consumed from the batteries during a plan.,29/07/2013 13:20:36,,FALSE-POSITIVE,https://github.com/LSTS/dune/commit/e978e15e98f8a56b07a1d0794e0cf3fe42bb5677,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,LSTS/dune,pdcalado,,,pdcalado,
darkknight1812,hp-kernel-tenderloin,msm: acpuclock-8x60: Update CPU voltages for 1.5GHz frequency tables Update the voltages with the proposed S/W setting based on HW characterization data to reduce power consumption. Change-Id: Ib6ccdbc8a66e749223b20164ddd6490525870d57 Signed-off-by: Tianyi Gou <tgou@codeaurora.org>,31/07/2013 00:18:10,,OK,https://github.com/darkknight1812/hp-kernel-tenderloin/commit/a2d3ad1eb4cf7f2537ec4b94ac0149549deaa2ca,,,[DO NOT ANALYZE],[OK] [Reduce voltage],[OK] [Reduce voltage],[Reduce voltage],EXISTS,[Update/Reduce CPU voltages for 1.5GHz frequency tables],[proposed S/W setting based on HW characterization data],[Reduce voltage] [Reduce voltage based on experiment],[Reduce voltage],,,Certain,Android,No,OS,C,Update the voltages with the proposed S/W setting based on HW characterization data to reduce power consumption.,darkknight1812/hp-kernel-tenderloin,,[Frequency and voltage scaling],,darkknight1812,Kernel arch
willijar,LENS,Energy consumption now matching (except that Castalia starts radio at time 0 while I start it at node startup time),31/07/2013 12:14:42,,FALSE-POSITIVE,https://github.com/willijar/LENS/commit/90152b6ff5d4c4dac941fa101a031ba1d2ba01c0,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,willijar/LENS,,,,,
OpenSensing,funf-v4,"Lots of changes and bug fixes. See extended description. Added ability to load pipeline config from reference to string resource in FunfManager service metadata. Activity probe behaves like 3 again - one sendData call for aggregate Activity, rather than one for each row. Removed gson jars - it's included in the source already. Added ability to register and update pipelines to FunfManager. Fixed DatedContentProvider sorting. Added ability to load DatedContentProvider timestamp from SharedPrefs. Slowed down SensorProbe sampling frequency in hopes of reducing power consumption. Fixed DatabaseService to properly acquire a wakelock while working. Made UploadService an IntentService, rather than trying to replicate IntentService functionality in a standard service. InternalAudioMediaProbe for collecting audio on internal and external storage separately. Property on AudioMediaProbe to specify internal or external storage. Fixed SimpleLocationProbe logic for determining when a location is good enough.",31/07/2013 20:23:52,,OK,https://github.com/OpenSensing/funf-v4/commit/b109d4bd71df191c414eab61ef57e00265f2afdb,,,[DO NOT ANALYZE],[OK] [Decrease sensor probe frequency] [Reduce polling] [Android],[OK] [Scale AccelerometerSensor Frequency],[Decrease sensor probe frequency] [Reduce polling] [Android] [Scale AccelerometerSensor Frequency],EXISTS,[Slowed down SensorProbe sampling frequency],[reduce power consumption],[Reduce sampling frequency],[Reduce sampling/scanning frequency],,,Uncertain,Android,No,Application,Java,Added ability to load DatedContentProvider timestamp from SharedPrefs. Slowed down SensorProbe sampling frequency in hopes of reducing power consumption.,OpenSensing/funf-v4,brian717,[Polling avoidance],,brian717,Application
vsrinivas,dragonfly,"kernel - Add hw.cpu_mwait_haltand hw.cpu_mwait_spin * Add globals with machine-specific meanings. This allows us to operate with MONITOR/MWAIT and gain the same power savings that we get with ACPI halt mode when idle. Waiting on a follow-up commit to set the the defaults. * For example, if we sysctl hw.cpu_mwait_halt=0x44 hw.cpu_mwait_spin=0x11 (and leaving machdep.cpu_idle_hlt=2) on a haswell cpu it will shave the idle power down by another 5W, from 25W to 20W on an idle Haswell Xeon 3.4 GHz server chip without impacting wakeup performance too badly.",01/08/2013 00:50:37,,NOT-FOUND,https://github.com/vsrinivas/dragonfly/commit/a46b4a23d8980802ae39fb00397b19320968c4d6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,vsrinivas/dragonfly,,,,,
DragonFlyBSD,DragonFlyBSD,"kernel - Add hw.cpu_mwait_haltand hw.cpu_mwait_spin * Add globals with machine-specific meanings. This allows us to operate with MONITOR/MWAIT and gain the same power savings that we get with ACPI halt mode when idle. Waiting on a follow-up commit to set the the defaults. * For example, if we sysctl hw.cpu_mwait_halt=0x44 hw.cpu_mwait_spin=0x11 (and leaving machdep.cpu_idle_hlt=2) on a haswell cpu it will shave the idle power down by another 5W, from 25W to 20W on an idle Haswell Xeon 3.4 GHz server chip without impacting wakeup performance too badly.",01/08/2013 01:00:16,,DUPLICATE,https://github.com/DragonFlyBSD/DragonFlyBSD/commit/a46b4a23d8980802ae39fb00397b19320968c4d6,,,,,,,EXISTS,,,,,,,,,,,,,DragonFlyBSD/DragonFlyBSD,,,,,
mageec,beebs,"Add note about versions to README. * README.md: Note that release-0.1 is the code used in ""Identifying Compiler Options to Minimise Energy Consumption for Embedded Platforms"" by James Pallister, Simon Hollis and Jeremy Bennett.",02/08/2013 14:30:38,,FALSE-POSITIVE,https://github.com/mageec/lowpower-benchmarks/commit/e5f2fa1526bd9c786d35231ad74b27d6a5895d2b,https://github.com/mageec/beebs/commit/e5f2fa1526bd9c786d35231ad74b27d6a5895d2b,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,mageec/beebs,,,,,
llamadonica,arduino-flicker,Working on the power saving code.,03/08/2013 00:23:09,,NOT-FOUND,https://github.com/llamadonica/arduino-flicker/commit/0610c7bc23ad1e65d04dc4ff7bfa588bb15bf613,,,[Avoid polling],,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,llamadonica/arduino-flicker,llamadonica,,,llamadonica,
brandon14,android_kernel_samsung_smdk4412,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values. Conflicts: drivers/media/video/samsung/mali/linux/mali_kernel_linux.c drivers/media/video/samsung/mali/platform/mali_platform.h drivers/media/video/samsung/mali/platform/pegasus-m400/mali_platform.c drivers/media/video/samsung/mali/platform/pegasus-m400/mali_platform_dvfs.c",04/08/2013 08:08:04,,NOT-FOUND,https://github.com/brandon14/android_kernel_samsung_smdk4412/commit/e7249bb48567154aaba5ec700ed10152c5b72d29,,,bf3bd7010bb335fe2989f8d3d5eeb00589fe5f6d,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,brandon14/android_kernel_samsung_smdk4412,,,,,
brandon14,android_kernel_samsung_smdk4412,"mali: platform rewrite - based on AndreiLux's changes Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",04/08/2013 19:49:08,,NOT-FOUND,https://github.com/brandon14/android_kernel_samsung_smdk4412/commit/d06518c468a5c009fdfa24ec0fee673464fa0089,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,brandon14/android_kernel_samsung_smdk4412,,,,,
SlimRoms,frameworks_av,"audio: Squashed commit of LPA and Tunnel feature from CAF frameworks/av: Add support for LPA and Tunnel Playback -Add DirectTrack and DirectTrackClient. -DirectTrack enables client to create a direct output. -DirectTrackClient allows notifications to be sent to the client from DirectTrack. -DirectTrack is being used for Low Power Audio playback and Tunnel Audio playback Change-Id: Iddaaa557c4d6cb2e44903b6eaeba35cb9315194d frameworks/av: enable tunnel mode based on flags - Enable tunnel mode playback based on flags defined in target board config file instead of checking target name Change-Id: I25a5431b659d9d07ed2791d90ec341ff26bd191f frameworks/av: port fixes in LPA and Tunnel mode playback No History was maintained during porting. Updating the Description and CR's of all the fixes Reference point: AU_LINUX_ANDROID_JB_MR1.04.02.02.049.366 LPA Mode: LPAPlayer synchronization fixes Fixes for seek, pause/resume, EOS handling Fixes for synchronization b/w the decoder thread, TimedEventQueue and player thread. Convert mono to stereo for LPA clips - CRs-Fixed: 421639 Add support to change clip duration to enable LPA Set correct device while creating effects - CRs-Fixed: 496866 Fix the LPA-AudioEffects dead lock issue - CRs-Fixed: 477511 fix volume not updated in pause state of direct track - CRs-Fixed: 490592 Tunnel Mode: Use tunnel player only for music stream Exceptions in using Tunnel mode decode - CRs-Fixed: 432080 Enable Tunnel Decode for select formats - CRs-Fixed:437651 Use software decoder for ADTS content. - CRs-fixed: 431096 Skip tunnel mode for playback through AudioCache - CRs-Fixed: 437539 Fix stability crash on tunnel playback. - CRs-Fixed: 498386 support multiple tunnel instances - CRs-Fixed: 483603 Fix ANR repeated next with tunnel clips on BT/AOA - CRs-Fixed: 482966 Update condition to ignore a seek request - CRs-Fixed: 461908 Return seek position until seek has been processed - CRs-Fixed: 454825 TunnelPlayer performance tweaks for audio video playback - CRs-Fixed: 444041 Stability fixes for Tunnel Player (part 2) - CRs-Fixed: 449122 Adjustment for TunnelPlayer buffer size - CRs-Fixed: 447274, 442365 Remove unnecessary code from TunnelPlayer - CRs-Fixed: 442365 update condition to send SEEK_COMPLETE - CRs-Fixed: 441411 Stop extractor source after start in TunnelPlayer - CRs-Fixed: 440239 Handling of EOS, and triggering EOS was wrong in TunnelPlayer. EOS should not be posted till seek is complete Disable tunnel mode playback for streaming use cases to avoid jittery playback CRs-Fixed: 433346 432233 429868 APIs for returning correct timestamps were implemented Check whether sink is open before flushing or closing it. Check for mIsAudioRouted is good to know if we are closing it Seekbar freezes after seek and pause Check pause status before writing Change-Id: I55687403b8ee77f4c04eeba63538fa5c3d6d43ed frameworks/av: Fix the LPA-AudioEffects dead lock issue - Issue:Deadlock occurs when the LPA clips are subjected to rapid next from BT device and simultaneously on/off the audio effects. - Rootcause:some times flinger thread processing LPAPlayer/directtrack next deadlocks with the thread working on effect configuration as both of them contend for the audioflinger::mlock and effectmodule::mlock. - Fix1:AudioFlinger::deleteEffectSession() not to acquire audioflinger:mLock instead take the mLPAEffectChain.mlock. - Fix2:ThreadBase::effectConfigChanged() not to acquire audioflinger::mlock. CRs-Fixed: 477511 Change-Id: Ia0e6d72f467afce6de5e66c6cd6edbe0759d271b audioflinger: Fix crash in flinger during monkey runs The trackrefptr in DirectTrack descriptor can be invalid and this can result in a crash is stability runs. Add check for validity of the trackrefptr before accessing it Change-Id: I4c7fbff022f381f9d2cdbf0fc04ade8defbb2195 audioflinger: Support SRS Trumedia effects Add support for SRS Trumedia post processing effects Change-Id: I6718b0c90a199d53fe971a8a7c089e63b649c112 frameworks/av: Enable subsystem restart for LPA/Tunnel -Audio Daemon in Audio HAL intimates AudioFlinger of ADSP status (online/offline) using set_paramaters. -AudioFlinger send set_parameters to its clients which is DirectTrack used for LPA/Tunnel playback. -In case of ADSP crash during LPA/Tunnel playback, clean up of DirectTrack is initiated. Change-Id: If83102ddde1da880fb769d86a20884185c049bca libstagefright: Create MP3 decoder libraries without OMX layer - With the current MP3 OMX SW decoders, the decoding time is increased w.r.t the libraries without OMX layer that are present in GB. This increase in decoding time results reduction in power savings in LPA mode. - This commit is to remove OMX layer for MP3 to reduce the power consumption in LPA mode Change-Id: Ie194b11619de9ba43cd85dddbf7892239858945d frameworks/av: Add metadata mode changes to LPAPlayer -Seek to EOS was causing playback to hang for 3 seconds before switching to the next clip. -This is because the lpa driver works on period size. Partial buffers are not handled. Add support for metadata mode changes to LPAPlayer to support partial frames. CRs-Fixed: 458904 491077 490992 Change-Id: I8673756b54ae7bca18855d326c85ae1064652514 Conflicts: media/libstagefright/LPAPlayerALSA.cpp frameworks/av: audiotrack state check during flush -Audiotrack flush should be handled only on pause/stop state for non LPA/Tunnel playback as per AOSP Change-Id: I112d71a465424dc81fc3acb9423f63cb9f84c2d7 AudioFlinger: SRS effect signal in case of Tunnel send SRS effect signal to Direct Audio Track for tunnel decoding CRs-Fixed: 500015 Change-Id: I43d7296d0956c3b918681b9939c3f6a98b9a143a libstagefright: TunnelPlayer: update condition to send SEEK_COMPLETE - If the client tries to seek to 0 (e.g as a result of LOOPING) without ever calling getPosition(), we will always sent an immediate seek notification without seeking. CRs-Fixed: 441411 Change-Id: I35b059448784324149890636933fdf9d536b2bb8 audioflinger:Set correct device while creating effects Change-Id: Id2c96c1f1fe4cdfc2795c86caa050f31f15e7f8d -Issue: Effectmodule is created with stale output device -Rootcause: While creating effects the output device set is output device of mixer thread, which is stale and not updated, so effects use the wrong/old device as the output device and leads to issue such as difference in volume level after setting correct device etc. -Fix: Cache the latest device value for direct track in a flinger member variable when setparameter of flinger is called with new device and audioflinger::openoutput is called. Use this cached value while creating effects CRs-Fixed: 496866 libstagefright: Fix ANR with rigorous rewind of 3gp LPA clips. -ANR is seen with rigorous rewind of 3gp LPA clips. -The lpa destructor waits for decoder thread to be killed when the thread function has not got the time-slice to execute after creation. -Use mLock instead of extractor mutex. use mLock before signalling the thread to avoid indefinite wait. CRs-Fixed: 491077 490992 Change-Id: Icf2ae64a379ff2b1260d34dd0e5c45f07f429718 Frameworks/av: Fix to prevent deadlock in AudioEffects -Write is blocked waiting for effect chain lock and this causes decoder thread to wait indefintely. -Sometimes it is observed that effectschain is locked before mLPAEffectChain is initialized and but unlocking is skipped if mLPAEffectChain is initialized in between.Due to this LPA silence and framework reboot issues are observed as applyEffectsOn() cannot acquire lock to progress further. -Use flag to check if all effects have been locked and unlock accordingly to prevent the deadlock scenario. (cherry picked from commit 011db22abf565dfbe7f9d0a5c7af7564587b3b48) CRs-Fixed: 435661, 435664, 435680, 430309 Change-Id: I9e3e0a77ea64ef8c5afbe5a18ee583803a96c99d audio: Compile AudioParameter as shared library - AudioParameter as shared lib is needed by BT support in WFD source, SRS TruMedia Change-Id: I8d78740ee0df456c8a305511d9335c228c9be3b0 audio: define QCOM audio parameters - Define QCOM audio paramters for FM, VOIP, fluence, SSR, and etc. Change-Id: Id708c22f7ebe96f1831095447560ff9376c73878",05/08/2013 07:10:28,,DUPLICATE,https://github.com/SlimRoms/frameworks_av/commit/747000b1b6555bcb358d6b6096ba372bf1263b35,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/frameworks_av,,,,cordell,
komuW,odesk-elance-python-answers,Create question8-calculate bill of power consumed.py,05/08/2013 07:43:50,,FALSE-POSITIVE,https://github.com/komuW/odesk-elance-python-answers/commit/0b93b7ae8820e4ee015728b81aef8c61288af068,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,komuW/odesk-elance-python-answers,komuW,,,komuW,
woosuklee,uplink,"5) simpliciTI has been removed - in order to minimize power consumption, relatively complicated simpliciTI source code has been removed - instead, template for direct radio control is added",06/08/2013 02:17:37,,NOT-FOUND,https://github.com/woosuklee/uplink/commit/58b43c88d899965f0f9d91eaf26abe344a1a9f10,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,woosuklee/uplink,,,,,
dachew,electronics,Power saving measures for camera light,06/08/2013 07:22:28,,NOT-FOUND,https://github.com/dachew/electronics/commit/79329c2f27cf34b6bff43a0dae5656ad402f85eb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dachew/electronics,,,,,
ahjortland,hg_proc,Define steady state power consumption for the second compressor in RTU1.,06/08/2013 12:43:50,,FALSE-POSITIVE,https://github.com/ahjortland/hg_proc/commit/be1f422175783660272096378aaa0f7ea6006ef2,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute power consumption],[FALSE-POSITIVE],[Compute power consumption],EXISTS,,,,,,,,,,,,,ahjortland/hg_proc,howardcheung,,,howardcheung,
SweetFeedback,Gumball_client,"Change speaking from ""I saw you"" to ""save energy get reward"".",06/08/2013 21:03:46,,FALSE-POSITIVE,https://github.com/SweetFeedback/Gumball_client/commit/8be6752b9c8a5875d2c5c33a2c69c0fe143b0c27,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,SweetFeedback/Gumball_client,catlikethief,,,catlikethief,
kvalo,ath,ath10k: add SoC power save option to PCI features map Unify the PCI options location. By default the SoC PS option is disabled to boost the performance and due to poor stability on early HW revisions. In future we can remove the module parameter and turn on/off the PS for given hardware. This change also makes the pci module parameter for SoC PS static. Signed-off-by: Bartosz Markowski <bartosz.markowski@tieto.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>,07/08/2013 07:09:30,,RELATED,https://github.com/kvalo/ath/commit/8cc8df906f953ae0cfe785720989928021d7fe2d,,,[DO NOT ANALYZE],[RELATED] [Add power saving option],[RELATED] [Add power saving option],[Add power saving option],EXISTS,,,,,,,,,,,,,kvalo/ath,,,,kvalo,
PurityROM,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Credits to Chris Lei",07/08/2013 21:27:55,,DUPLICATE,https://github.com/PurityROM/android_packages_apps_Phone/commit/4097268515911511349285b15a56033d0856cdac,,,,,,,EXISTS,,,,,,,,,,,,,PurityROM/android_packages_apps_Phone,AndroidRul3z,,,AndroidRul3z,
tejus,android_system_core,"Squash all 4.2.2 changes into one libsuspend: compile as a static library Compile libsuspend as a static library as well, currently needed by the charger code in some cases. Related-to-bug: 7429504 Change-Id: I113017c2c855f915b77c76d8934b6e57c0bb532c Signed-off-by: Iliyan Malchev <malchev@google.com> init.usb.rc: set sys.usb.config to none before changing it On encrypted devices, persistent properties are loaded after the device is decrypted. To properly change sys.usb.config to its persistent value, it must first be set to ""none"" and then to ${persist.sys.usb.config}. Bug: 7678835 Change-Id: I4f91245cedc04e3178ce9cee21390f5b657733c9 charger: suspend enable in charger mode To reduce power consumption after charging completion, enable suspend when LCD is turned off. Bug: 7429504 Change-Id: I34731dc392661c9051a20cea74f70d94a8aaeb42 Signed-off-by: Iliyan Malchev <malchev@google.com> charger: fix build Looks like libsuspend is not available on all platforms. Change-Id: Ic32dc93221f3c488e846da35235f247f4ddb4c69 Signed-off-by: Iliyan Malchev <malchev@google.com> charger: Do not suspend when disconnecting from charger The device should be power off when disconnecting from charger. If the device enter to suspend, the device couldn't handle the power off process. So the device shouldn't suspend to handle the power off at that time Bug: 7429504 Change-Id: I9a0a60e53f315cd83550dc730a33bc7bd464ef67 rootdir: init.rc: set perms for cpufreq governor boostpulse_duration Change-Id: I09b9a1ed548e4ffe1232f583e8ff5f026760f616 Conflicts: rootdir/init.rc",08/08/2013 10:24:48,,FALSE-POSITIVE,https://github.com/tejus/android_system_core/commit/6679ba416fde18a117be5eed31ffc61ef0a5228c,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Weird],[FALSE-POSITIVE] [Message is clear but I can not find the change],[Weird] [Message is clear but I can not find the change],EXISTS,,,,,,,,,,,,,tejus/android_system_core,,,,tejus,
rriggio,joule,"using energino within the virtual modeler affects the actual power consumption, removing",08/08/2013 11:53:18,,OK,https://github.com/rriggio/joule/commit/e46ab2127f0256ac38f589096948f053d670132b,,,[DO NOT ANALYZE],[RELATED] [Remove power inefficient component] [Package disrupts power consumption measuring],[RELATED],[Remove power inefficient component] [Package disrupts power consumption measuring],EXISTS,removing energino,using energino within the virtual modeler affects the actual power consumption,,[Remove feature],,,Certain,Python,No?,Application,python,,rriggio/joule,Roberto Riggio,[Miscellaneous],,,Application
xens0117,0xens_crespo,"Revert ""Add power saving state DEEP IDLE version 2."" This reverts commit 913a3ca4595d37d450b90fee70329ccbd77dab66.",08/08/2013 16:26:18,,NOT-FOUND,https://github.com/xens0117/0xens_crespo/commit/8f89c08f62088c702d136cf9cacceef493274890,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,xens0117/0xens_crespo,,,,,
swarren,linux-tegra,"usb: host: add has_tdi_phy_lpm capability bit The has_hostpc capability bit indicates that the host controller has the HOSTPC register extensions, but at the same time enables clock disabling power saving features with the PHY Low Power Clock Disable (PHCD) bit. However, some host controllers have the HOSTPC extensions but don't support the low-power feature, so the PHCD bit must not be set on those controllers. Add a separate capability bit for the low-power feature instead, and change all existing users of has_hostpc to use this new capability bit. The idea for this commit is taken from an old 2012 commit that never got merged (""disociate chipidea PHY low power suspend control from hostpc"") Inspired-by: Matthieu CASTET <matthieu.castet@parrot.com> Signed-off-by: Tuomas Tynkkynen <ttynkkynen@nvidia.com> Acked-by: Alan Stern <stern@rowland.harvard.edu> Signed-off-by: Stephen Warren <swarren@nvidia.com>",08/08/2013 21:15:22,,NOT-FOUND,https://github.com/swarren/linux-tegra/commit/45a649e6c8a28656eafe0aef8cbf2f8b21c76d16,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,swarren/linux-tegra,,,,,
drowdemon,Universe,Fixed syntax error. Added health loss penalties. Losing health increases the chances of getting a disease. Losing health increases energy consumption. Both penalties are genetic.,09/08/2013 04:15:17,,FALSE-POSITIVE,https://github.com/drowdemon/Universe/commit/cf020da3bbd6731c847a48e42cbabe24476c9f80,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,drowdemon/Universe,drowdemon,,,drowdemon,
skybardpf,twt-erp-php,Fix. Save power attorney for contractor,09/08/2013 14:37:07,,FALSE-POSITIVE,https://github.com/skybardpf/twt-erp-php/commit/1b73148e49067efffc787334575b2ef88d20623f,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,skybardpf/twt-erp-php,,,,,
TheMrcool212,android_device_asus_flo,"flo: Enable use of CAF driver variants * Lots of kernel updates to support this * Improved performance, better power consumption, added features Change-Id: Ic7956c0aefb91d8a164f1285e1254fc534b53a2f",10/08/2013 08:07:33,,NOT-FOUND,https://github.com/TheMrcool212/android_device_asus_flo/commit/78f4fa067958524ed5d2474b50c5bc5bcf1bf065,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TheMrcool212/android_device_asus_flo,,,,,
oVirt,ovirt-engine,"core: pre-defined weight modules To be compatible with former scheduler. * none -> should use evenly distributed * even distribution -> weight will be calculated according to cpuLoad, is_spm (config), avg vm consumtions (config), vm's cpu count and host core count. * power saving -> host with no vm will be less likely to be selected, other hosts will be sorted (desc) by even distribution logic. Change-Id: I55cf5014bc472bf1e126a9737829e7fcf7e21853 Signed-off-by: Gilad Chaplik <gchaplik@redhat.com>",11/08/2013 10:34:57,,FALSE-POSITIVE,https://github.com/oVirt/ovirt-engine/commit/3566b455b813a04c8fb2e822bd5837b7acea9531,,,[DO NOT ANALYZE],[OK] [Improve power saving policy],[OK],[Improve power saving policy],EXISTS,,,[REVIEW] [Improve power saving policy],[Improve power saving policy] ?,,,Certain,?,No,Application,Java,"power saving -> host with no vm will be less likely to be selected, other hosts will be sorted (desc) by even distribution logic.",oVirt/ovirt-engine,,?,,,Application
Atte,dotfiles,X numlock and power save settings,11/08/2013 14:50:07,,NOT-FOUND,https://github.com/Atte/dotfiles/commit/12dfb75c06fcc2ed89579648b77c34061404c3c2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Atte/dotfiles,,,,,
codefireXperiment,kernel_oppo_find5,"updates and fixes from caf commits stage 2 ALSA: include: Add new ioctl for metadata mode Add a new ioctl to support metadata mode in lpa driver. This ioctl allows lpa driver to work in default alsa compliant mode and also metadata mode. 110f7b5e5f06624cde157a84c56908513b894ff0 ASoC: msm: Add metadata mode changes to LPA driver Playback hangs for three seconds on seeking to EOS. This is because the lpa driver works on period size. Partial buffers are not handled. Add metadata mode changes to LPA Driver to support partial frames. 2eeba0ca46d3e63a0552481cf052c769cc28e117 msm: cpufreq: increase priority of thread that increases frequencies When the cpufreq governors request for increase in frequency from kworker threads, there is chance that the kworker thread is cpu starved due to other high priority threads, leading to undesirable increase in frequency ramp-up latency. Add the calling thread to SCHED_FIFO policy when requesting for increase in frequency and restore back to original policy after ramp-up is completed. 85e433b5f120956955c1a607b888d2b7fab87145 Merge ""tspp: Add synchronization between API call and tasklet"" 8f31f8b5e5b750b8d2efdd3a26fb36162e3d562b Merge ""msm: Add support for ION Flushing without virtual address"" 2f759537e2b6a96f9bce5f77f247214e50606778 msm_fb: display: Do a pre-fill to writeback buffers. When switching mdp operating mode to blt, writeback buffers need pre-fill. Move the pre-fill code from isr routine to do_blt, where actual switch to blt mode happens. 4ea4a8d5e944298694bc467c85675ecc45b6e1ba msm: display: Limit dynamic fps feature only to MIPI video panels. As dynamic fps feature is supported only for MIPI video panels, return -EINVAL if sysfs node is written for panels other than MIPI video. This change also removes world writable permissions for sysfs node. 9b98565e6332b9162a54afb3ce5438194fbade50 msm: kgsl: Don't do intensive memory recovery when allocating big pages We don't want to incur too much overhead when allocating big pages so don't attempt to retry, perform reclaim, or run memory compaction on high-order allocations. 7ec25d8d3f4787a325f96a1db1a8e018d2e67df0 net: rmnet_usb: Fix probe error path The probe() error path frees the net device before unregistering it. This is resulting in a BUG. Call usbnet_disconnect() in error path. 321b1f7bd594c631aaba84cf03e0269b674f2caa ASoC: audio: Fix BE not disconnected even codec teardown Scenario: When FE1(LowLatency) comes in which opens BE1 and puts it in state SND_SOC_DPCM_STATE_START. Similarly FE2(LPA) comes in with connecting to same BE. Now FE2 is in SND_SOC_DPCM_STATE_PREPARE state and waits for TRIGGER_START. Meanwhile FE1 is closed which doesn't affect BE1 and FE2 which are connected. Also, for FE2 pcm_close is called before TRIGGER_START itself. In such a case, BE1 is not getting disconnected (afe_close is not called) while Codec is teared down resulting in Slimbus overflow. Fix: Whenever BE1 is found to be in SND_SOC_DPCM_STATE_START state and FE1 being connected is not started yet, and close sequence happens for this FE, then allow hw_free to happen for BE1 if this is the only FE connected to this BE1. This allows BE to be disconnected which calls afe_close then followed by Codec teardown not resulting in any Slimbus overflows. f55a660a8a8e00a19401295d925f014d3b6e0007 msm: camera: Handle incorrect parameter properly By this change, when incorrect size is passed, we return back rather than proceeding forward. 4d741d09fa0a0518df9c5f7f0f00f22274dfda61 msm: camera: Fix event queue drain issue when camera daemon is killed, then command processing timeout happens and there is a possibility of pending event payload data. It creates a problem for further command processing due to mismatch of event ids. Drain the event payload queue when there is a timeout for any event. eda9dd015f877b45a9aa1ced39bcfa8183fd93fa ASoC: msm: flush if prior and current backends rate not matching It is found that during device switch from one backend with one sample rate to another backend with another sample rate, the command to QDSP6 ADM which maps audio stream session to a particular backend would not get carried out until pending data of audio stream session from previous backend is either read out or flushed. This scenario occurs when application stops providing more buffers to retrieve captured data. Remedy is to flush upon detection of rate mismatching 55f54c53ba0536b9a3e4df7b95a55e73519dcc79 msm_fb: Remove the extra freelist in display_commit There is an extra freelist call to unmap IOMMU source buffers in display_commit for LCDC interface. This is causing IOMMU page faults during boot up on targets with LCDC interfaces. Remove this extra freelist call. 3e8044fcbfd108ba990c7c9e041f158ce1320e11 msm_fb: display: keep a minimum mdp ib bandwidth request The calculated ab and ib bandwidth requests are very small which cause underruns if mdp composites only very small layers. For these use cases keeping a minimum ib request based on the baselayer size can prevent underruns and no power impact is observed. 642596cc493a113b26981da16b60f669fb9ddba8 spi_qsd: Auto-select nearest lower available clock rate Specifying max clock frequency for SPI, via platform data, requires a frequency that is available to SPI. The frequencies that are available to SPI and the devices max-frequency are specified in different places and in different files. As a result theses values can easily go out of sync. SPI devices typically can operate at some maximum frequency, with some tolerance for the actual-frequency being lower. SPI users typically know their target-device's max-speed, but they have to dig in platform data files to find the best matching frequency that is available. This patch lets users specify the device's max-frequency, while the actual frequency is automatically selected by the driver. The selected frequency is the same as the requested one, or the nearest lower one. 70af215a8ea6f7a1ecdf7fcf3d39b7b0ad7d7e75 Merge ""msm_fb: Remove the extra MDP clock enable in writeback_commit"" 41eb15d4f7c0ece7e61d88aa191f11b59b3c2aba msm: vidc: Fix metadata buffer size issue - Metadata buffer size is being set to zero when client calls set buffer requirements to video driver. This change fix it by properly assigning the metadata buffer size to video driver. - When continuous mode enabled, do not get min_dpb from resource tracker for non-H264 codecs, for H264 codec get min_dpb from resource tracker. e7840d213b520879891a0feef9b166ea37d2cbc9 mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. cbec91b6fde7a12e1d0b09f64737919ac615c3d2 mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. 884fa523ece82b5b3ada80a4209c381c019e9051 mmc: core: Add sysfs entries for dynamic control of clock scaling Add sysfs attributes to allow dynamic control of clock scaling parameters. These attributes are used to enable/disable clock scaling at runtime and change the up_threshold, down_threshold, and polling_interval values. Complete documentation for these sysfs entries are provided at ""Documentation/mmc/mmc-dev-attrs.txt"". 70a5c036a8d57c93282500f1951526fea7558400 mmc: core: claim mmc host while enabling clock scaling from userspace A race condition can occur while enabling clock scaling and removal of the card. If the card is removed just after the host->card check is successful then there could be NULL pointer dereference later. Claim mmc host before card availability check to avoid this race condition. 5f0ed3a8e4ba31146afe33e60b681fa8e3caab11 mmc: core: run clock scaling only in valid card state Clock scaling requires the tuning and if the tuning command is sent to the card in invalid state, tuning procedure will fail. With urgent request mechanism implemented, there is a chance that clock scaling invoked when card is not in a proper state to receive the tuning command. This change checks the card state (by sending the status command) before invoking the clock scaling request. a62469141760f07555f32087ba009f87bc63dc7b mmc: core: Log MMC clock frequency transitions Use kernel's ftrace support to capture MMC clock frequency transitions which can be useful for debugging issues related to power consumption. Usage: mount -t debugfs none /sys/kernel/debug echo 1 > /sys/kernel/debug/tracing/events/mmc/mmc_clk/enable cat /sys/kernel/debug/tracing/trace_pipe 71702f9133a19decfb78791b51066027775ce245 mmc: core: Add support for notifying host d ...",11/08/2013 18:08:16,,NOT-FOUND,https://github.com/codefireXperiment/kernel_oppo_find5/commit/a205a7d3058f77f5712f32ff6195b226cd3262f2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,codefireXperiment/kernel_oppo_find5,anders3408,,,anders3408,
brandon14,android_kernel_samsung_smdk4412,"mali_cm: platform rewrite, thanks to AndreiLux Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values.",12/08/2013 07:23:44,,NOT-FOUND,https://github.com/brandon14/android_kernel_samsung_smdk4412/commit/ec24e62baa9d0692923f93e6a6055656880e5ccb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,brandon14/android_kernel_samsung_smdk4412,,,,,
hzpeterchen,linux-usb,"arm: mach-imx: anatop: add two APIs for USB driver imx_anatop_usb1_disconnect_line is used to disconnect dp/dm between PHY and controller, after that, the controller always gets SE0 for the status of dp/dm, it is not any wakeup signal for controller. It is used to avoid unknown interrupt due to dp/dm is floading after the USB PHY is no powered when there is no vbus supplied. imx_anatop_set_stop_mode_config is used to keep internal regualtor on when the system enters suspend mode, it will increase power consumption, we only enable it when the user enables USB wakeup (default is off). Signed-off-by: Peter Chen <peter.chen@freescale.com>",12/08/2013 13:35:16,,FALSE-POSITIVE,https://github.com/hzpeterchen/linux-usb/commit/322a0e57e391ca7eb1e6c8f88be3488e8a59dabe,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,hzpeterchen/linux-usb,,,,,
swarren,linux-tegra,"usb: host: add has_tdi_phy_lpm capability bit The has_hostpc capability bit indicates that the host controller has the HOSTPC register extensions, but at the same time enables clock disabling power saving features with the PHY Low Power Clock Disable (PHCD) bit. However, some host controllers have the HOSTPC extensions but don't support the low-power feature, so the PHCD bit must not be set on those controllers. Add a separate capability bit for the low-power feature instead, and change all existing users of has_hostpc to use this new capability bit. The idea for this commit is taken from an old 2012 commit that never got merged (""disociate chipidea PHY low power suspend control from hostpc"") Inspired-by: Matthieu CASTET <matthieu.castet@parrot.com> Signed-off-by: Tuomas Tynkkynen <ttynkkynen@nvidia.com> Acked-by: Alan Stern <stern@rowland.harvard.edu> Signed-off-by: Stephen Warren <swarren@nvidia.com>",12/08/2013 17:23:19,,NOT-FOUND,https://github.com/swarren/linux-tegra/commit/e839469578b8dc6ccebaeabae72021cb6c1fdb3d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,swarren/linux-tegra,,,,,
garwedgess,android_kernel_samsung_smdk4412,"cpufreq : ZZMoove Governor 0.4 * Version 0.4 - limits * * - added ""soft""-freqency-limit. the term ""soft"" means here that this is unfortuneately not a hard limit. a hard limit is only possible with * cpufreq driver which is the freqency ""giver"" the governor is the ""decision maker"". So now the governor will scale up to only the given up * limit on higher system load but if the cpufreq driver ""wants"" to go above that limit the freqency will go up there. u can see this for * example with touchboost or wake up freqencies (1000 and 800 mhz) where the governor will be bypassed by the cpufreq driver. * but nevertheless this soft-limit will reduce the use of freqencies higer than given limit and therefore it will reduce power consumption. * * for this function following new tuneables were indroduced: * * freq_limit_sleep -> limit freqency on early suspend (possible values 0 disable limit, 200-1600, default: 0) * freq_limit -> limit freqency on awake (possible values 0 disable limit, 200-1600, default: 0) * * - added scaling frequencies to frequency tables for a faster up/down scaling. This should bring more performance but on the other hand it * can be of course a little bit more power consumptive. * * for this function following new tuneables were indroduced: * * fast_scaling -> fast scaling on awake (possible values 0 disable or 1 enable, default: 0) * fast_scaling_sleep (sysfs) -> fast scaling on early suspend (possible values 0 disable or 1 enable, default: 0) * * - added tuneable ""freq_step_sleep"" for setting the freq step at early suspend (possible values same as freq_step 0 to 100, default 5) * - added DEF_FREQ_STEP and IGNORE_NICE definitions * - changed downscaling cpufreq relation to the ""lower way"" * - code/documentation cleaning",12/08/2013 17:30:06,,NOT-FOUND,https://github.com/garwedgess/android_kernel_samsung_smdk4412/commit/73c25d9770cb8109df432d145f617944bb0f96d2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,garwedgess/android_kernel_samsung_smdk4412,,,,,
Keff,skull-kernel,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",12/08/2013 21:34:29,,DUPLICATE,https://github.com/Keff/skull-kernel/commit/c954107b881ed478b8f6f0ac18e4bdb93098cfd8,,,,,,,EXISTS,,,,,,,,,,,,,Keff/skull-kernel,Christopher83,,,Keff,
sandeep-ravi1990,BodySensorApplication,Internal Sensor and Activity Recognition Code to get data from internal sensors of the phone has been implemented along with code to get data from activity recognition(a context-aware power saving scheme has been developed in this update),13/08/2013 02:12:11,,UNABLE-TO-CATEGORIZE,https://github.com/sandeep-ravi1990/BodySensorApplication/commit/9610a0574b5485f8375f2683309f254b9cf54c66,,,[DO NOT ANALYZE],[?] [Giga commit],[UNABLE-TO-CATEOGRIZE],[Giga commit],EXISTS,,,,,,,,,,,,,sandeep-ravi1990/BodySensorApplication,sandeep-ravi1990,,,sandeep-ravi1990,
lucho-yankov,Arduino-Playground,added link to a article about power saving with Arduino,13/08/2013 14:37:02,,FALSE-POSITIVE,https://github.com/lucho870601/Arduino-Playground/commit/1850fa93b133424af75121fff3955133989ada67,https://github.com/lucho-yankov/Arduino-Playground/commit/1850fa93b133424af75121fff3955133989ada67,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,lucho-yankov/Arduino-Playground,,,,,
oxavelar,XT890-Kernel-Gamma,Power savings on khugepaged.,14/08/2013 13:06:40,,UNABLE-TO-CATEGORIZE,https://github.com/oxavelar/XT890-Kernel-Gamma/commit/438fae75a2c134ff59f78bb5883e6fae682f7394,,,[DO NOT ANALYZE],[UNABLE-TO-CATEOGRIZE] [OS config],[UNABLE-TO-CATEOGRIZE] [OS config],[OS config],EXISTS,,,,,,,,,,,,,oxavelar/XT890-Kernel-Gamma,oxavelar,,,oxavelar,
flavioalles,2kr,commit#17: re-structured output/. files for energy consumption are now created (all and mean),14/08/2013 20:03:37,,NOT-FOUND,https://github.com/flavioalles/2kr/commit/b8f08145776423fe6bf17dc5ebad03f7682bf7f9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,flavioalles/2kr,,,,,
OdysseyRom,lge-kernel-mako,"mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. Change-Id: I22a5054beec41b0b66b3bf030ddfcf284de448b3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",15/08/2013 07:35:32,,NOT-FOUND,https://github.com/OdysseyRom/lge-kernel-mako/commit/1527e2cc38e96c4b0982738632659f6d4095b5bf,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,OdysseyRom/lge-kernel-mako,,,,,
garwedgess,android_kernel_samsung_smdk4412,"cpufreq : ZZMoove Governor 0.4 * Version 0.4 - limits * * - added ""soft""-freqency-limit. the term ""soft"" means here that this is unfortuneately not a hard limit. a hard limit is only possible with * cpufreq driver which is the freqency ""giver"" the governor is the ""decision maker"". So now the governor will scale up to only the given up * limit on higher system load but if the cpufreq driver ""wants"" to go above that limit the freqency will go up there. u can see this for * example with touchboost or wake up freqencies (1000 and 800 mhz) where the governor will be bypassed by the cpufreq driver. * but nevertheless this soft-limit will reduce the use of freqencies higer than given limit and therefore it will reduce power consumption. * * for this function following new tuneables were indroduced: * * freq_limit_sleep -> limit freqency on early suspend (possible values 0 disable limit, 200-1600, default: 0) * freq_limit -> limit freqency on awake (possible values 0 disable limit, 200-1600, default: 0) * * - added scaling frequencies to frequency tables for a faster up/down scaling. This should bring more performance but on the other hand it * can be of course a little bit more power consumptive. * * for this function following new tuneables were indroduced: * * fast_scaling -> fast scaling on awake (possible values 0 disable or 1 enable, default: 0) * fast_scaling_sleep (sysfs) -> fast scaling on early suspend (possible values 0 disable or 1 enable, default: 0) * * - added tuneable ""freq_step_sleep"" for setting the freq step at early suspend (possible values same as freq_step 0 to 100, default 5) * - added DEF_FREQ_STEP and IGNORE_NICE definitions * - changed downscaling cpufreq relation to the ""lower way"" * - code/documentation cleaning",15/08/2013 20:04:44,,NOT-FOUND,https://github.com/garwedgess/android_kernel_samsung_smdk4412/commit/4d5774e3699126134b5d8d7f566f5b82c05dace8,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,garwedgess/android_kernel_samsung_smdk4412,,,,,
marciopl,lge-kernel-mako,"mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. Change-Id: I22a5054beec41b0b66b3bf030ddfcf284de448b3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",16/08/2013 03:35:08,,DUPLICATE,https://github.com/marciopl/lge-kernel-mako/commit/1527e2cc38e96c4b0982738632659f6d4095b5bf,,,,,,,EXISTS,,,,,,,,,,,,,marciopl/lge-kernel-mako,,,,rmcc,
david-macmahon,katcp_devel,"Deprogram FPGA if progdev is not given a BOF name Calling progdev without a BOF filename was a no-op. The progdev command now treats a missing filename as a request to deprogram the FPGA (e.g. to save power). Prior to this, there was no way (that I knew of) to explicitly deprogram the FPGA via KATCP.",16/08/2013 04:13:47,,FALSE-POSITIVE,https://github.com/david-macmahon/katcp_devel/commit/e361566bebefebbab719dd2ab88171b5fef3e9f5,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,david-macmahon/katcp_devel,david-macmahon,,,david-macmahon,
g3tsum,kernel_msm,"mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. Change-Id: Iac064221199f69d162d91f5311becd735c15700a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",16/08/2013 15:56:14,,NOT-FOUND,https://github.com/g3tsum/kernel_msm/commit/2a322907d4a3900562a2a920dbb33d6c15dae73b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,g3tsum/kernel_msm,,,,,
blackbox87,zte_skate_35,"Delay going tickless under CPU load to favor deeper C states When going idle with a high load average, CPUidle menu governor will decide to pick a shallow C-state since one of the guiding principles of the menu governor is ""The busier the system, the less impact of C states is acceptable"" (taken from cpuidle/governors/menu.c.) That makes perfect sense. However, there are missed power-saving opportunities for bursty workloads with long idle times (e.g. MP3 playback.) Given such a workload, because of the load average, CPUidle tends to pick a shallow C-state. Because we also go tickless, this shallow C-state is used for the duration of the idle period. If the idle period is long, a deeper C state would've resulted in better power savings. This patch delays going tickless when there is a load such that on the next tick, the CPUidle governor will have another opportunity to to pick a deeper C-state. Since the system will have been idle for potentially a full tick, the load average will drop and a deeper C state will most likely be chosen. Delaying NOHZ decisions until the load is zero improved the load estimation on our ARM/OMAP4 platform where HZ=128 and increased the time spent in deep C-states (~50% of idle time in C-states deeper than C1). A power saving of ~20mA at battery level is observed during MP3 playback on OMAP4/Blaze board.",16/08/2013 20:12:46,,NOT-FOUND,https://github.com/blackbox87/zte_skate_35/commit/e5fe45fdf355cee18e8df5174a436facabf9cf63,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,blackbox87/zte_skate_35,,,,,
dcd1182,lge-kernel-mako,"mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. Change-Id: I22a5054beec41b0b66b3bf030ddfcf284de448b3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",17/08/2013 06:20:43,,NOT-FOUND,https://github.com/dcd1182/lge-kernel-mako/commit/c988b59719115a5d286f50e68e3f56b2d4b50273,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dcd1182/lge-kernel-mako,,,,,
mobilisunicamp,SmartLocation,Changed the way of save power information on database. Now just save when disconnected.,18/08/2013 03:27:16,,NOT-FOUND,https://github.com/mobilisunicamp/SmartLocation/commit/5763bfa45ddc0de5ed866e160fa6fb43d682c2a9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mobilisunicamp/SmartLocation,,,,,
RonGokhale,codeaurora_kernel,power: qpnp-bms: export shadow coulomb counter value Export the shadow coulomb counter register value to userspace in order to assist in recording power consumption. Change-Id: I47ac60ce3d17e96f9cef418f5f346ba278d09521 Signed-off-by: Xiaozhe Shi <xiaozhes@codeaurora.org>,18/08/2013 05:05:15,,FALSE-POSITIVE,https://github.com/RonGokhale/codeaurora_kernel/commit/df24c359f217b7252ed4f504c74c89f1d708aee3,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,RonGokhale/codeaurora_kernel,,,,,
EXTER7,Foundry,Tweak power consumption,18/08/2013 05:13:58,,FALSE-POSITIVE,https://github.com/EXTER7/Foundry/commit/982620bc423826aeb38a1d980b26138fa2f8f3d3,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSITIVE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,EXTER7/Foundry,EXTER7,,,EXTER7,
Ntemis,lge-kernel-p880,"time: RCU permitted to stop idle entry via softirq RCU needs to be able to use softirq to stop idle entry in order to be able to drain RCU callbacks from the current CPU, which in turn enables faster entry into dyntick-idle mode, which in turn reduces power consumption. This commit therefore silences the error message that is sometimes produced when the going-idle CPU suddenly finds that it has an RCU_SOFTIRQ to process. Signed-off-by: Paul E. McKenney <paul.mckenney@linaro.org> backported by faux123 from Linux 3.5+ to Linux 3.0",18/08/2013 10:36:55,,DUPLICATE,https://github.com/Ntemis/lge-kernel-p880/commit/8c1035d1911cc1040a980f757a255c1b1fb92d89,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/lge-kernel-p880,faux123,,,Ntemis,
Pesach85,ph85-p880-kernel-project,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for grouper kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",18/08/2013 13:19:42,,DUPLICATE,https://github.com/Pesach85/ph85-p880-kernel-project/commit/d4bef44e833c079f251ce4fb26c1f32a289cb8c3,,,,,,,EXISTS,,,,,,,,,,,,,Pesach85/ph85-p880-kernel-project,faux123,,,Pesach85,
Sportsstar89,kernel-msm,power: qpnp-bms: export shadow coulomb counter value Export the shadow coulomb counter register value to userspace in order to assist in recording power consumption. Change-Id: I47ac60ce3d17e96f9cef418f5f346ba278d09521 Signed-off-by: Xiaozhe Shi <xiaozhes@codeaurora.org>,19/08/2013 23:30:28,,DUPLICATE,https://github.com/Sportsstar89/kernel-msm/commit/df24c359f217b7252ed4f504c74c89f1d708aee3,,,,,,,EXISTS,,,,,,,,,,,,,Sportsstar89/kernel-msm,,,,,
CyanogenMod,lge-kernel-gproj,"mmc: msm_sdcc: Add support for dynamic bus clock vote SDCC controller on some targets like 8660, 8960, 8064 and their variants connects with Daytona Fabric (DFAB). To achieve max. possible performance the DFAB clock is voted to 64MHz at the cost of some power consumption. Since we now have dynamic clock scaling for SD/eMMC clock we can also scale the DFAB clock accordingly without impact on performance but have some power savings in low throughput cases. Change-Id: Ic26541d6845b65803aa813d672ccabdfc4658d9c Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",20/08/2013 04:43:47,,OK,https://github.com/CyanogenMod/lge-kernel-gproj/commit/71ef771bd11dcbaef0055d142760c7b8ff041a7f,,,[DO NOT ANALYZE],[OK] [Scale CPU frequency],[OK] [Scale CPU frequency],[Scale CPU frequency],EXISTS,[Add support for dynamic clock scaling],[some power savings in low throughput cases] [not possible before],[Scale CPU frequency],[DVFS],,,Certain,Android,No,OS,C,Since we now have dynamic clock scaling for SD/eMMC clock we can also scale the DFAB clock accordingly without impact on performance but have some power savings in low throughput cases.,CyanogenMod/lge-kernel-gproj,,[Frequency and voltage scaling],,rmcc,Driver
OPNay,android_kernel_samsung_jalte,"cpufreq: Fake the IKS specific frequency table to stock values The table is implementation specfic and is used nowhere else, however Samsung's framework uses it for its power savings feature. The power- saving level is determined as a index offset from the maximum frequency. Discarding entries not in the stock frequency table ensures a correct power-savings mode. thanks AndreiLux",20/08/2013 08:56:39,,OK,https://github.com/DiaDust/android_kernel_samsung_jalte/commit/999e0597dcbdb3c9218b8e9ec4f7afc71877e919,https://github.com/OPNay/android_kernel_samsung_jalte/commit/999e0597dcbdb3c9218b8e9ec4f7afc71877e919,,[OK][SCALING CPU],[OK] [Bug fix] [Scaling CPU frequency] [Android],[OK] [SCALING CPU FREQUENCY],[Bug fix] [Scaling CPU frequency] [Android] [SCALING CPU],EXISTS,[discard entries in stock frequency table],[power saving is based as an offset from max frequency (highest index)],[Bug fix] [Fix power saving mode] [discard entries in stock frequency table],[DVFS],,,Certain,Android,Yes,OS,C,Discarding entries not in the stock frequency table ensures a correct power-savings mode,OPNay/android_kernel_samsung_jalte,,[Energy bug],,,Driver cpufreq
Docker-J,Sail_GPROJ,"mmc: msm_sdcc: Add support for dynamic bus clock vote SDCC controller on some targets like 8660, 8960, 8064 and their variants connects with Daytona Fabric (DFAB). To achieve max. possible performance the DFAB clock is voted to 64MHz at the cost of some power consumption. Since we now have dynamic clock scaling for SD/eMMC clock we can also scale the DFAB clock accordingly without impact on performance but have some power savings in low throughput cases. Change-Id: Ic26541d6845b65803aa813d672ccabdfc4658d9c Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",20/08/2013 12:04:51,,DUPLICATE,https://github.com/Docker-J/lge-kernel-gproj/commit/71ef771bd11dcbaef0055d142760c7b8ff041a7f,https://github.com/Docker-J/Sail_GPROJ/commit/71ef771bd11dcbaef0055d142760c7b8ff041a7f,,,,,,EXISTS,,,,,,,,,,,,,Docker-J/Sail_GPROJ,,,,,
ChangYeoun,Kite2,mmc: core: Log MMC clock frequency transitions Use kernel's ftrace support to capture MMC clock frequency transitions which can be useful for debugging issues related to power consumption. Usage: mount -t debugfs none /sys/kernel/debug echo 1 > /sys/kernel/debug/tracing/events/mmc/mmc_clk/enable cat /sys/kernel/debug/tracing/trace_pipe Change-Id: I25c4ee39dcbe30e7665902a9f723a5a421b55ca3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Conflicts: include/trace/events/mmc.h,20/08/2013 12:15:10,,NOT-FOUND,https://github.com/ChangYeoun/Kite2/commit/238e8dc43e87d4ff24268f20d849d9d6ccafc374,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Kite2,,,,,
ChangYeoun,Kite2,"mmc: core: Add support for notifying host driver while scaling clocks Host drivers can participate in clock scaling by registering ->notify_load host operation, which allows host driver to carry out platform specific operations for further power savings or increasing throughput based on whether load is LOW or HIGH respectively. This can be applicable to non-ultra high speed cards as well so remove the check for ultra high speed cards to initialize clock scaling. Change-Id: Icaab9520135e384f5470db68b2f25c5cdce5663a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Conflicts: drivers/mmc/core/mmc.c drivers/mmc/core/sd.c include/linux/mmc/host.h",20/08/2013 12:24:03,,NOT-FOUND,https://github.com/ChangYeoun/Kite2/commit/9cfb6e7eb814e34f7ea6d6ea4160e07a16c3c9cc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ChangYeoun/Kite2,,,,,
kbc-developers,lge-kernel-gproj,"mmc: msm_sdcc: Add support for dynamic bus clock vote SDCC controller on some targets like 8660, 8960, 8064 and their variants connects with Daytona Fabric (DFAB). To achieve max. possible performance the DFAB clock is voted to 64MHz at the cost of some power consumption. Since we now have dynamic clock scaling for SD/eMMC clock we can also scale the DFAB clock accordingly without impact on performance but have some power savings in low throughput cases. Change-Id: Ic26541d6845b65803aa813d672ccabdfc4658d9c Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",20/08/2013 13:13:25,,DUPLICATE,https://github.com/kbc-developers/lge-kernel-gproj/commit/71ef771bd11dcbaef0055d142760c7b8ff041a7f,,,,,,,EXISTS,,,,,,,,,,,,,kbc-developers/lge-kernel-gproj,,,,rmcc,
senseobservationsystems,sense-ios-library,"Fix power consumption bug. - Reverted the motion hack, apparently using ios motion manager with the specified reference frame causes it to keep using cpu even after disabling motion updates - increased the leeway for noise and motion sensors - removed some debug messages",20/08/2013 14:35:53,,OK,https://github.com/senseobservationsystems/sense-ios-library/commit/832963a2cd3a4f8d336bf38bab8201a24a3c2e4f,,,[DO NOT ANALYZE],[OK] [Bug fix] [Disable inefficient component],[OK] [Bug fix] [Disable inefficient component],[Bug fix] [Disable inefficient component],EXISTS,[Reverted the motion hack],[using ios motion manager with the specified reference frame causes it to keep using cpu even after disabling motion updates],[Bug fix] [Do not use inefficient component],[Energy bug],,,Certain,iOS,Yes,Libraries and Utilities,ObjectiveC,"Fix power consumption bug. - Reverted the motion hack, apparently using ios motion manager with the specified reference frame causes it to keep using cpu even after disabling motion updates",senseobservationsystems/sense-ios-library,pimnijdam,[Energy bug],,pimnijdam,Library
blackbox87,zte_skate_gb_kernel,"Delay going tickless under CPU load to favor deeper C states When going idle with a high load average, CPUidle menu governor will decide to pick a shallow C-state since one of the guiding principles of the menu governor is ""The busier the system, the less impact of C states is acceptable"" (taken from cpuidle/governors/menu.c.) That makes perfect sense. However, there are missed power-saving opportunities for bursty workloads with long idle times (e.g. MP3 playback.) Given such a workload, because of the load average, CPUidle tends to pick a shallow C-state. Because we also go tickless, this shallow C-state is used for the duration of the idle period. If the idle period is long, a deeper C state would've resulted in better power savings. This patch delays going tickless when there is a load such that on the next tick, the CPUidle governor will have another opportunity to to pick a deeper C-state. Since the system will have been idle for potentially a full tick, the load average will drop and a deeper C state will most likely be chosen. Delaying NOHZ decisions until the load is zero improved the load estimation on our ARM/OMAP4 platform where HZ=128 and increased the time spent in deep C-states (~50% of idle time in C-states deeper than C1). A power saving of ~20mA at battery level is observed during MP3 playback on OMAP4/Blaze board.",20/08/2013 18:33:38,,DUPLICATE,https://github.com/blackbox87/zte_skate_gb_kernel/commit/84733de575ca4f94f8c177afb8a4e10658e1d958,,,,,,,EXISTS,,,,,,,,,,,,,blackbox87/zte_skate_gb_kernel,blackbox87,,,blackbox87,
xens0117,XENS_e210s,Dynamically adjust cpufreq_max_limit according to scaling_max setting… … without breaking power save mode thx yank555-lu,21/08/2013 02:09:10,,NOT-FOUND,https://github.com/xens0117/XENS_e210s/commit/e8960d8ea7e6effb42d793dcd32e2a80c30908e5,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,xens0117/XENS_e210s,,,,,
xens0117,XENS_e210s,"sched: Create sched_select_non_idle_cpu() to give preferred CPU for power saving In order to save power, it would be useful to schedule light weight work on cpus that aren't IDLE instead of waking up an IDLE one. By idle cpu (from scheduler's perspective) we mean: - Current task is idle task - nr_running == 0 - wake_list is empty This is already implemented for timers as get_nohz_timer_target(). We can figure out few more users of this feature, like workqueues. This patch converts get_nohz_timer_target() into a generic API sched_select_non_idle_cpu() so that other frameworks (like workqueue) can also use it. This routine returns the cpu which is non-idle. If the local CPU isn't idle OR all cpus are idle, local cpu is returned back. If local cpu is idle, then we must look for another CPU which isn't idle. This patch reuses the code from get_nohz_timer_target() routine, which had similar implementation. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Seongmin Park <r_data@naver.com>",21/08/2013 02:33:26,,NOT-FOUND,https://github.com/xens0117/XENS_e210s/commit/b54e4bf740c6d465f527f305d5606ea67f4b18bc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,xens0117/XENS_e210s,,,,,
jimsth,vanir_tuna,HSMMC:Set disable timeout to 1ms The disable timeout is reduced from 100ms to 1ms in order to obtain aggressive power saving. Cherry picked from p-android-omap-2.6.35 commit ID: 50df9d10a9b33c82ad02003686050b12b03d4dfe Change-Id: Ieaa47d51396e7b92f6c1ba71e62900c58a05a26c Signed-off-by: Madhusudhan Chikkature <madhu.cr@ti.com> Signed-off-by: Viswanath Puttagunta <vishp@ti.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>,21/08/2013 05:22:52,,NOT-FOUND,https://github.com/jimsth/vanir_tuna/commit/038d2e1e63209e0f7f13f30d7e36e05591b2d381,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jimsth/vanir_tuna,,,,,
xens0117,XENS_e210s,"mali: platform rewrite Samsung integrated checks on in the Pegasus platform that prevented the GPU control interfaces to work; on every decideNextStatus call the DVFS tables would be rewritten with separate fixed values. Module parameters for these values were present in the kernel so the hypothesis is that they were used for debugging during development. -All checks are removed and the driver now looks very similar to the Orion platform. -Removal of the CPU frequency lock to 1200MHz if the GPU is at 440MHz, this is excessive as 3D load heavy applications usually do not tax the CPU that far, and is an unnecessary power consumption burden. -The thermal control unit temperature throttling causes to fix the voltage to a fixed value when throttling is in place; this is useless considering frequency is not limited, making the whole thing senseless. Thus removed. -Cleaned up the files from unnecessary ifdef's for readability considering the fixed platform values. thx to AndreiLux",21/08/2013 06:29:37,,NOT-FOUND,https://github.com/xens0117/XENS_e210s/commit/d7a098bfca3a7300dabfd52310c2eb12cfc72a14,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,xens0117/XENS_e210s,,,,,
chaosdorf,dorfmap,"add power consumption of hosts, printers etc",21/08/2013 16:48:14,,FALSE-POSITIVE,https://github.com/derf/dorfmap/commit/976cd46da188d04619e68b7ed181fb2f3afa6eb4,https://github.com/chaosdorf/dorfmap/commit/976cd46da188d04619e68b7ed181fb2f3afa6eb4,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,chaosdorf/dorfmap,,,,,
Ntemis,Bexus-N,"rfkill: prevent unnecessary event generation Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>",22/08/2013 02:08:01,,NOT-FOUND,https://github.com/Ntemis/Bexus-N/commit/301c40010c86aa40a415375cccea6b3b20bb8393,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Ntemis/Bexus-N,,,,,
dorimanx,initramfs3,"Use new control value to stol logcat from writing logs, and save power! on sleep by auto, and can be used also for awake, to reduce cpu use! need to set disable in STweaks Android Logger to gain the extra power. but not logs to report on problem.",22/08/2013 15:59:26,,OK,https://github.com/dorimanx/initramfs3/commit/086132af909d46bb9dac3c713e5db06fc1047bb9,,,[DO NOT ANALYZE],[OK] [Disable logging],[OK] [Disable logging],[Disable logging],EXISTS,[stol logcat from writing logs],[power saving],[Disable logging],[Disable feature],,,Certain,Android,No,Libraries and Utilities,Shell,"Use new control value to stol logcat from writing logs, and save power!",dorimanx/initramfs3,dorimanx,[Disabling feature/devices],,dorimanx,Script shell
Ntemis,Bexus-N,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>",23/08/2013 06:12:10,,NOT-FOUND,https://github.com/Ntemis/Bexus-N/commit/0ee41975d9e7aaa532c04f715bc3108ec20233a5,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Ntemis/Bexus-N,,,,,
ljzyal,android_device_samsung_superior,power save,24/08/2013 01:07:40,,OK,https://github.com/ljzyal/android_device_samsung_superior/commit/6f88ff262488453680173179be931ef32da86698,,,[DO NOT ANALYZE],[OK] [Go to idle] [Android] [System config],[OK] [Go to idle],[Go to idle] [Android] [System config],EXISTS,[enable sleep mode],[power saving],[Configure lower power mode] [Use lower power mode on sleep] [Script] [Config],[Reduce sampling/scanning frequency],[Improve low power mode connfig],Multiple changes,Certain,Android,No,Libraries and Utilities,"properties,Make",power save,ljzyal/android_device_samsung_superior,ljzyal,[Polling avoidance],,ljzyal,Script system.prop
TeamHackLG,lge-kernel-lproj,"mmc: msm_sdcc: Enable clock scaling capability Enable capability, MMC_CAP2_CLK_SCALE to allow mmc core to scale the clocks at runtime based on load on card. Clock scaling in MSM platforms also allow voltage scaling between NOMINAL and SVS levels, thus allowing additional power savings. Change-Id: Id1995ffea7a6c06a2e8b29b43da70894f35f6c0b Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",24/08/2013 11:11:07,,DUPLICATE,https://github.com/TeamHackLG/lge-kernel-lproj/commit/b90807d532b115f0e7bf513952bb1a8b7965bb42,,,,,,,EXISTS,,,,,,,,,,,,,TeamHackLG/lge-kernel-lproj,,,,pinkflozd,
graninas,The-Amoeba-World,- Energy consumtion added.,24/08/2013 17:56:49,,FALSE-POSITIVE,https://github.com/graninas/The-Amoeba-World/commit/a7e9c1179a983b40dbfc21c1ef7986163005c124,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,graninas/The-Amoeba-World,,,,,
garwedgess,android_kernel_samsung_smdk4412,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,24/08/2013 23:36:56,,DUPLICATE,https://github.com/garwedgess/android_kernel_samsung_smdk4412/commit/bbe385c9c181aa84374021091df16fb83a808bdc,,,,,,,EXISTS,,,,,,,,,,,,,garwedgess/android_kernel_samsung_smdk4412,AndreiLux,,,garwedgess,
UpInTheAir,P6810_ICS_SkyHigh_Kernel_initramfs,power saving tweaks,25/08/2013 11:58:13,,OK,https://github.com/UpInTheAir/-P6810_ICS_SkyHigh_Kernel_initramfs/commit/e672012387649dc6c05ac028f44e0fd9be030a1b,https://github.com/UpInTheAir/P6810_ICS_SkyHigh_Kernel_initramfs/commit/e672012387649dc6c05ac028f44e0fd9be030a1b,,[OK][CONFIGS],[OK] [Config] [Configure power saving],[OK] [CONFIG],[Config] [Configure power saving] [CONFIGS],EXISTS,[enable sleep mode] [disable power collapse] [set wifi supplicant interval],[power saving],[Configure lower power mode] [Reduce wifi scanning] [Enable lower power mode] [Use lower power mode on sleep] [Script] [Config],[User power saving features],[Increase scan interval],Multiple changes,Certain,Android,No,Libraries and Utilities,Shell,power saving tweaks,UpInTheAir/P6810_ICS_SkyHigh_Kernel_initramfs,,[Use power efficient library/device],,,Script initramfs
nikhiljan93,sony_yuga_kernel,"mmc: msm_sdcc: Enable clock scaling capability Enable capability, MMC_CAP2_CLK_SCALE to allow mmc core to scale the clocks at runtime based on load on card. Clock scaling in MSM platforms also allow voltage scaling between NOMINAL and SVS levels, thus allowing additional power savings. Change-Id: Id1995ffea7a6c06a2e8b29b43da70894f35f6c0b Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",25/08/2013 21:03:21,,DUPLICATE,https://github.com/nikhiljan93/sony_yuga_kernel/commit/402ddbe476bf53ed55d47b0c47596ab4ea29f845,,,,,,,EXISTS,,,,,,,,,,,,,nikhiljan93/sony_yuga_kernel,,,,nikhiljan93,
Nuand,bladeRF,fx3_firmware: fix HS descriptors and increase power consumtion to 200mA This commint makes the HS (USB2.0) descriptor look exactly like the SS (USB3.0) descriptor.,26/08/2013 06:39:23,,TRADEOFF,https://github.com/Nuand/bladeRF/commit/759fc117da57ece24cd0c2e8368fff1d4d30b7be,,,[DO NOT ANALYZE],[RELATED] [Increase power consumption] ,[TRADEOFF],[Increase power consumption] [ ],EXISTS,[Change HS descriptor],[REVIEW] [Fix HS descriptor],,,,,Certain,?,Yes,MCU firmware/Firmware,C,,Nuand/bladeRF,robertghilduta,Correctness,,robertghilduta,?
binarybucks,mqttitude,IOS App 1.10 Stable (hopefully) Lower Power Consumption,26/08/2013 09:45:36,,UNABLE-TO-CATEGORIZE,https://github.com/binarybucks/mqttitude/commit/d1b741a0e911a8ae8e530e94af28349c1e812d11,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE] [Giga commit],[UNABLE-TO-CATEOGRIZE],[Giga commit],EXISTS,,,,,,,,,,,,,binarybucks/mqttitude,,,,,
kdave,btrfs-devel,"Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux Pull drm fixes from Dave Airlie: ""This is just a regular fixes pull, mostly nouveau and i915, the i915 ones fix RC6 on Sandybridge after suspend/resume, which I think people have be wanting for quite a while! Now you shouldn't wish for more patches, as the new mutex/reservation code found a number of problems with the qxl driver, and it currently makes lockdep angry, I'm working on a set of fixes for it, but its a bit large, I'll submit them separately later today or tomorrow once I've banged on them a bit more, just warning you in advance :-)"" Yeah, I'm definitely over the whole ""wish for more patches"" thing. * 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: drm/crtc-helper: explicit DPMS on after modeset drm/i915: fix up gt init sequence fallout drm/i915: Serialize almost all register access drm/i915: quirk no PCH_PWM_ENABLE for Dell XPS13 backlight drm/i915: correctly restore fences with objects attached drm/i915: Fix dereferencing invalid connectors in is_crtc_connector_off() drm/i915: Sanitize shared dpll state drm/i915: fix long-standing SNB regression in power consumption after resume v2 drm/i915: Preserve the DDI_A_4_LANES bit from the bios drm/i915: fix pfit regression for non-autoscaled resolutions drm/i915: fix up readout of the lvds dither bit on gen2/3 drm/nouveau: do not allow negative sizes for now drm/nouveau: add falcon interrupt handler drm/nouveau: use dedicated channel for async moves on GT/GF chipsets. drm/nouveau: bump fence timeout to 15 seconds drm/nouveau: do not unpin in nouveau_gem_object_del drm/nv50/kms: fix pin refcnt leaks drm/nouveau: fix some error-path leaks in fbcon handling code drm/nouveau: fix locking issues in page flipping paths",26/08/2013 12:09:22,,UNABLE-TO-CATEGORIZE,https://github.com/kdave/btrfs-devel/commit/549f3a1218ba18fcde11ef0e22b07e6365645788,,,[DO NOT ANALYZE],[Unable to categorize] [Bug fix],[UNABLE-TO-CATEOGRIZE] [Bug Fix],[Bug fix],EXISTS,,,,,,,,,,,,,kdave/btrfs-devel,torvalds,,,torvalds,
ffainelli,linux,"Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux Pull drm fixes from Dave Airlie: ""This is just a regular fixes pull, mostly nouveau and i915, the i915 ones fix RC6 on Sandybridge after suspend/resume, which I think people have be wanting for quite a while! Now you shouldn't wish for more patches, as the new mutex/reservation code found a number of problems with the qxl driver, and it currently makes lockdep angry, I'm working on a set of fixes for it, but its a bit large, I'll submit them separately later today or tomorrow once I've banged on them a bit more, just warning you in advance :-)"" Yeah, I'm definitely over the whole ""wish for more patches"" thing. * 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: drm/crtc-helper: explicit DPMS on after modeset drm/i915: fix up gt init sequence fallout drm/i915: Serialize almost all register access drm/i915: quirk no PCH_PWM_ENABLE for Dell XPS13 backlight drm/i915: correctly restore fences with objects attached drm/i915: Fix dereferencing invalid connectors in is_crtc_connector_off() drm/i915: Sanitize shared dpll state drm/i915: fix long-standing SNB regression in power consumption after resume v2 drm/i915: Preserve the DDI_A_4_LANES bit from the bios drm/i915: fix pfit regression for non-autoscaled resolutions drm/i915: fix up readout of the lvds dither bit on gen2/3 drm/nouveau: do not allow negative sizes for now drm/nouveau: add falcon interrupt handler drm/nouveau: use dedicated channel for async moves on GT/GF chipsets. drm/nouveau: bump fence timeout to 15 seconds drm/nouveau: do not unpin in nouveau_gem_object_del drm/nv50/kms: fix pin refcnt leaks drm/nouveau: fix some error-path leaks in fbcon handling code drm/nouveau: fix locking issues in page flipping paths",26/08/2013 14:19:06,,DUPLICATE,https://github.com/ffainelli/linux/commit/549f3a1218ba18fcde11ef0e22b07e6365645788,,,,,,,EXISTS,,,,,,,,,,,,,ffainelli/linux,torvalds,,,torvalds,
mysteryemotionz,OptimusG-E970-AOSP-4.3,"mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. Change-Id: I22a5054beec41b0b66b3bf030ddfcf284de448b3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",26/08/2013 17:57:27,,NOT-FOUND,https://github.com/mysteryemotionz/OptimusG-E970-AOSP-4.3/commit/1d88e335cdcb61fad8a38411b92fa089fd7174c0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mysteryemotionz/OptimusG-E970-AOSP-4.3,,,,,
neilbrown,linux,"Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux Pull drm fixes from Dave Airlie: ""This is just a regular fixes pull, mostly nouveau and i915, the i915 ones fix RC6 on Sandybridge after suspend/resume, which I think people have be wanting for quite a while! Now you shouldn't wish for more patches, as the new mutex/reservation code found a number of problems with the qxl driver, and it currently makes lockdep angry, I'm working on a set of fixes for it, but its a bit large, I'll submit them separately later today or tomorrow once I've banged on them a bit more, just warning you in advance :-)"" Yeah, I'm definitely over the whole ""wish for more patches"" thing. * 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: drm/crtc-helper: explicit DPMS on after modeset drm/i915: fix up gt init sequence fallout drm/i915: Serialize almost all register access drm/i915: quirk no PCH_PWM_ENABLE for Dell XPS13 backlight drm/i915: correctly restore fences with objects attached drm/i915: Fix dereferencing invalid connectors in is_crtc_connector_off() drm/i915: Sanitize shared dpll state drm/i915: fix long-standing SNB regression in power consumption after resume v2 drm/i915: Preserve the DDI_A_4_LANES bit from the bios drm/i915: fix pfit regression for non-autoscaled resolutions drm/i915: fix up readout of the lvds dither bit on gen2/3 drm/nouveau: do not allow negative sizes for now drm/nouveau: add falcon interrupt handler drm/nouveau: use dedicated channel for async moves on GT/GF chipsets. drm/nouveau: bump fence timeout to 15 seconds drm/nouveau: do not unpin in nouveau_gem_object_del drm/nv50/kms: fix pin refcnt leaks drm/nouveau: fix some error-path leaks in fbcon handling code drm/nouveau: fix locking issues in page flipping paths",27/08/2013 06:53:17,,DUPLICATE,https://github.com/neilbrown/linux/commit/549f3a1218ba18fcde11ef0e22b07e6365645788,,,,,,,EXISTS,,,,,,,,,,,,,neilbrown/linux,torvalds,,,torvalds,
alobo,SerialGSM,"Disable Auto Power Saving Disable Auto Power Saving when resetting the modem. This can cause several bugs with serial communication, as outlined on (https://www.sparkfun.com/products/9607)",27/08/2013 12:16:16,,TRADEOFF,https://github.com/alobo/SerialGSM/commit/c616b950bd144e9e4c32c337d6429d059ef12b94,,,[DO NOT ANALYZE],[TRADEOFF] [Disable auto power saving] [Bug fix],[TRADEOFF],[Disable auto power saving] [Bug fix],EXISTS,[Disable auto power saving],[Fix bugs] [Fix with serial comunications],,,,,Certain,Arduino,Yes,Embedded library/platform,C++,,alobo/SerialGSM,alobo,Correctness,,alobo,Arduino library
streetpulse,software,added better energy saving (+- 100 uA),27/08/2013 14:15:31,,UNABLE-TO-CATEGORIZE,https://github.com/streetpulse/software/commit/612bb1c148dfc5ce17cfe4bdbd41884b051b8b4a,,,[OK][TURN OFF FEATURE],[OK] [Go to idle] [Disable components],[OK] [DISABLE COMPONENT],[Go to idle] [Disable components] [TURN OFF FEATURE] [DISABLE COMPONENT],EXISTS,,,[REVIEW],"[Disable component] [Use more power efficient network] [Condition: screen off, wifi disabled, music not playing] ?",,Multiple changes,Certain,Arduino,No,Embedded application,Ino,added better energy saving (+- 100 uA),streetpulse/software,davelloper,?,,davelloper,Arduino application
pgadamczyk,Firmware,"Lights Out Added ""lightsout"" which turns off the Red and Blue LEDs to save power. They should stay out unless the main program resets them due to an error or something.",27/08/2013 20:48:05,,OK,https://github.com/pgadamczyk/Firmware/commit/a593cc526673b49078231bbaf97951c2683f6d49,,,[DO NOT ANALYZE],[OK] [Disable component] [Disable led],[OK] [Disable component],[Disable component] [Disable led],EXISTS,[turns off the Red and Blue LEDs],[power saving],[Disable device] [Disable LED],[Disable device],,,Certain,Embedded !,No,Hardware,C,"Added ""lightsout"" which turns off the Red and Blue LEDs to save power.",pgadamczyk/Firmware,pgadamczyk,[Disabling feature/devices],,pgadamczyk,Firmware
oVirt,ovirt-engine,"core: pre-defined weight modules To be compatible with former scheduler. * none -> should use evenly distributed * even distribution -> weight will be calculated according to cpuLoad, is_spm (config), avg vm consumtions (config), vm's cpu count and host core count. * power saving -> host with no vm will be less likely to be selected, other hosts will be sorted (desc) by even distribution logic. Change-Id: I55cf5014bc472bf1e126a9737829e7fcf7e21853 Signed-off-by: Gilad Chaplik <gchaplik@redhat.com>",28/08/2013 11:25:39,,DUPLICATE,https://github.com/oVirt/ovirt-engine/commit/aaa8bd840fc4b64a33450a36250b90c5c70a22b5,,,,,,,EXISTS,,,,,,,,,,,,,oVirt/ovirt-engine,,,,,
kjgregory,SensorNodeSoftware,"Added wakeup counter Added a wakeup counter to give a count of the number of times the CPU has woken up. Also fixed a few bugs, it seems to be working now although the power consumptions seems to be getting unstable. Also added .map and .out to .gitignore because these files don't seem like they need to be tracked.",28/08/2013 21:37:39,,NOT-FOUND,https://github.com/kjgregory/SensorNodeSoftware/commit/5855745d2d0104da7174dd24d7e10802072e137f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,kjgregory/SensorNodeSoftware,,,,,
mpokwsths,mpokang_kernel,"Revert ""[IVAHD] Disable HWSUP mode and save power"" This reverts commit cabe03cc1aebd0ce86137dbd08286edac386b1e3.",28/08/2013 23:06:51,,DUPLICATE,https://github.com/mpokwsths/mpokang_kernel/commit/466fb70addcad7cd10a18ff418ae76c716466aa6,,,,[REVERT] [VERIFY] [https://github.com/ch33kybutt/kernel_cmplus_tuna/commit/342dd821bed948b15c40de7276094e6e011bd379],,[VERIFY] [https://github.com/ch33kybutt/kernel_cmplus_tuna/commit/342dd821bed948b15c40de7276094e6e011bd379],EXISTS,,,,,,,,,,,,,mpokwsths/mpokang_kernel,,,,mpokwsths,
happyaron,dotfiles,Update runtime PM udev rules * Eneable PCI Runtime PM * Disable Wake-on-Lan for ethernet interface * Enable power saving for wireless interface * Enable SATA link power management (may slow down SSD significantly),29/08/2013 09:36:05,,OK,https://github.com/happyaron/dotfiles/commit/39f0bc39a6faacc018595cf86a288f14651e2972,,,[DO NOT ANALYZE],[OK] [Enable power saving] [Enable wireless power saving] [Udev rules] [OS config],[OK] [Enable power saving] [Enable wireless power saving] [Udev rules] [OS config],[Enable power saving] [Enable wireless power saving] [Udev rules] [OS config],EXISTS,[Enable power saving for wireless interface] [Enable sata power management],[power saving],[Enable power saving] [Enable wifi power saving] [Enable sata power saving] [Script],[Enable device power saving mode],,Multiple changes,Certain,dot-files,No,Libraries and Utilities,Script udev,Enable power saving for wireless interface * Enable SATA link power management (may slow down SSD significantly),happyaron/dotfiles,happyaron,[Disabling feature/devices],,happyaron,Script udev
NorthernStars,mrShark,Addes more power saving options. Enabled EESAVE fuse to prevent eeprom from erease cycle.,29/08/2013 21:50:41,,OK,https://github.com/NorthernStars/mrShark/commit/9679ea0c306e4d73597e6fded93d64f011478932,,,[DO NOT ANALYZE],[OK] [Disable component],[OK] [Disable component],[Disable component],EXISTS,[Disable unused components],[power saving],[Disable component] [Disable device],[Disable device],,,Certain,Embedded !,No,Application,C,Addes more power saving options.,NorthernStars/mrShark,,[Disabling feature/devices],,,Embedded application
TeamLGOG,android_device_lge_geefhd-common,Merge pull request #8 from airk000/cm-10.1 Bug fix and power save,30/08/2013 02:02:28,,FALSE-POSITIVE,https://github.com/TeamLGOG/android_device_lge_geefhd-common/commit/1ca23181437e6ad5254aea4142b55cefbeb35292,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,TeamLGOG/android_device_lge_geefhd-common,madmack,,,madmack,
airk000,android_device_lge_geefhd-common,Merge pull request #8 from airk000/cm-10.1 Bug fix and power save,30/08/2013 07:02:50,,DUPLICATE,https://github.com/airk000/android_device_lge_geefhd-common/commit/1ca23181437e6ad5254aea4142b55cefbeb35292,,,,,,,EXISTS,,,,,,,,,,,,,airk000/android_device_lge_geefhd-common,madmack,,,madmack,
srivatsabhat,linux,"Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux Pull drm fixes from Dave Airlie: ""This is just a regular fixes pull, mostly nouveau and i915, the i915 ones fix RC6 on Sandybridge after suspend/resume, which I think people have be wanting for quite a while! Now you shouldn't wish for more patches, as the new mutex/reservation code found a number of problems with the qxl driver, and it currently makes lockdep angry, I'm working on a set of fixes for it, but its a bit large, I'll submit them separately later today or tomorrow once I've banged on them a bit more, just warning you in advance :-)"" Yeah, I'm definitely over the whole ""wish for more patches"" thing. * 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: drm/crtc-helper: explicit DPMS on after modeset drm/i915: fix up gt init sequence fallout drm/i915: Serialize almost all register access drm/i915: quirk no PCH_PWM_ENABLE for Dell XPS13 backlight drm/i915: correctly restore fences with objects attached drm/i915: Fix dereferencing invalid connectors in is_crtc_connector_off() drm/i915: Sanitize shared dpll state drm/i915: fix long-standing SNB regression in power consumption after resume v2 drm/i915: Preserve the DDI_A_4_LANES bit from the bios drm/i915: fix pfit regression for non-autoscaled resolutions drm/i915: fix up readout of the lvds dither bit on gen2/3 drm/nouveau: do not allow negative sizes for now drm/nouveau: add falcon interrupt handler drm/nouveau: use dedicated channel for async moves on GT/GF chipsets. drm/nouveau: bump fence timeout to 15 seconds drm/nouveau: do not unpin in nouveau_gem_object_del drm/nv50/kms: fix pin refcnt leaks drm/nouveau: fix some error-path leaks in fbcon handling code drm/nouveau: fix locking issues in page flipping paths",30/08/2013 12:19:32,,DUPLICATE,https://github.com/srivatsabhat/linux/commit/549f3a1218ba18fcde11ef0e22b07e6365645788,,,,,,,EXISTS,,,,,,,,,,,,,srivatsabhat/linux,torvalds,,,torvalds,
nardholio,android_kernel_samsung_d2,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",30/08/2013 14:35:58,,NOT-FOUND,https://github.com/nardholio/android_kernel_samsung_d2/commit/1143d2786bd10c0ab8784f41a4927bd1bbb58c4f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,nardholio/android_kernel_samsung_d2,,,,,
jgottula,automaton,doc/todo: add power saving items,31/08/2013 02:23:43,,FALSE-POSITIVE,https://github.com/jgottula/automaton/commit/72b9da7b9cdc0a9df200e8f2ec1eac3a4cdcc260,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,jgottula/automaton,jgottula,,,jgottula,
HeisenBugDev,QuantumCraft,save energy buffer fixes #65,31/08/2013 16:04:32,,FALSE-POSITIVE,https://github.com/HeisenBugMC/QuantumCraft/commit/9e14949869c22365160f7c14018afae2ab87131e,https://github.com/HeisenBugDev/QuantumCraft/commit/9e14949869c22365160f7c14018afae2ab87131e,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,HeisenBugDev/QuantumCraft,,,,,
val0x00ff,BashScripts-bin,Script to disable cpu cores This script enables you to easily disable cpu cores to save power on your battery. Tested on Fedora 19 running: Bash: 4.2.45(1)-release sed: GNU sed version 4.2.1,01/09/2013 01:53:58,,RELATED,https://github.com/val0x00ff/BashScripts-bin/commit/06d41959018880b82c818bb924c655ae9eac0d0f,,,[DO NOT ANALYZE],[RELATED] [Disable component] [Disable core],[RELATED] [Disable component],[Disable component] [Disable core],EXISTS,,,,,,,,,,,,,val0x00ff/BashScripts-bin,val0x00ff,,,val0x00ff,
ibr-alg,wiselib,wip: arduino energy saving,01/09/2013 09:49:18,,OK,https://github.com/ibr-alg/wiselib/commit/61b84ef98c74e133044cc5c474107bc4d4382ba0,,,[OK][GO TO IDLE],[OK] [GO TO IDLE],[OK] [UNABLE-TO-CATEGORIZE],[GO TO IDLE] [UNABLE-TO-CATEGORIZE],EXISTS,,,[REVIEW] [Enable sleep mode] [Go to sleep] [Configure sleep mode],[Go to low power],,,Certain,Embedded,No,Libraries and Utilities,C++,wip: arduino energy saving,ibr-alg/wiselib,Droggelbecher,[Low power idling],,Droggelbecher,Library
franciscofranco,mako,"mmc: core: Add support for notifying host driver while scaling clocks Host drivers can participate in clock scaling by registering ->notify_load host operation, which allows host driver to carry out platform specific operations for further power savings or increasing throughput based on whether load is LOW or HIGH respectively. This can be applicable to non-ultra high speed cards as well so remove the check for ultra high speed cards to initialize clock scaling. Change-Id: Icaab9520135e384f5470db68b2f25c5cdce5663a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",02/09/2013 02:18:51,,RELATED,https://github.com/franciscofranco/mako/commit/44f65a94fe715aad1a49daac9225860589768c06,,,[DO NOT ANALYZE],[RELATED] [Enable load changes notifications] [Android],[OK] [Scale CPU frequency],[Enable load changes notifications] [Android] [Scale CPU frequency],EXISTS,,,,,,,,,,,,,franciscofranco/mako,,,,franciscofranco,
CyanogenMod,android_kernel_htc_msm8960,"msm: sps: turn off BAM DMA clock after initial config For power saving, SPS driver will turn off BAM DMA clock after the initial configuration of BAM DMA. The clients of BAM DMA will vote for the clock when BAM DMA is used. Change-Id: I388a21cff3c619ef49705a064d7d5ef760fa9ef8 Signed-off-by: Yan He <yanhe@codeaurora.org>",02/09/2013 07:20:01,,OK,https://github.com/CyanogenMod/android_kernel_htc_msm8960/commit/06295415d5a9e2987549b1738775b54f8fe773bc,,,[DO NOT ANALYZE],[OK] [Disable component] [Disable BAM DMA clock] [Android],[OK] [Disable component],[Disable component] [Disable BAM DMA clock] [Android],EXISTS,[turn off BAM DMA clock after initial config],[power saving],[Disable device] [Disable component after configuration],[Disable device],,,Certain,Android,No,OS,C,"For power saving, SPS driver will turn off BAM DMA clock after the initial configuration of BAM DMA. The clients of BAM DMA will vote for the clock when BAM DMA is used.",CyanogenMod/android_kernel_htc_msm8960,,[Disabling feature/devices],,intervigilium,Driver
hadidjapri,samsung-kernel-msm7x30,"mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. Change-Id: Iac064221199f69d162d91f5311becd735c15700a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",02/09/2013 14:12:28,,DUPLICATE,https://github.com/hadidjapri/samsung-kernel-msm7x30/commit/d9a7d4ff17c235cbafad24d29ea520469c1293da,,,[DO NOT ANALYZE],[RELATED] [Enable BUS frequency scaling] [Android],[RELATED] [Enable BUS frequency scaling],[Enable BUS frequency scaling] [Android],EXISTS,,,,,,,,,,,,,hadidjapri/samsung-kernel-msm7x30,,,,hadidjapri,
cameliasarosi,CRime,power consumption + other changes,02/09/2013 16:36:45,,FALSE-POSITIVE,https://github.com/cameliasarosi/CRime/commit/1b491ca512fd07c3b7e5d9e3fa4c0a21270c07b8,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[?],,EXISTS,,,,,,,,,,,,,cameliasarosi/CRime,,,,,
linrunner,TLP,"Architecture: remove calling upower from init/upstart script. It's not necessary anymore because with the new architecture ""tlp init start"" applies power save settings immediately.",02/09/2013 16:52:47,,FALSE-POSITIVE,https://github.com/linrunner/TLP/commit/541789df44053c01edd22efccb317ddcd005c34d,,,[DO NOT ANALYZE],[RELATED] [Remove unneeded component],[RELATED] [Remove unneeded component],[Remove unneeded component],EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
linrunner,TLP,"Architecture: remove calling upower from init/upstart script. It's not necessary anymore because with the new architecture ""tlp init start"" applies power save settings immediately.",02/09/2013 17:07:20,,DUPLICATE,https://github.com/linrunner/TLP/commit/67ee9ec734677ded74c56060b69f0ed95f5f8b9c,,,,,,,EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
linrunner,TLP,"Architecture: remove calling upower from init/upstart script. It's not necessary anymore because with the new architecture ""tlp init start"" applies power save settings immediately.",02/09/2013 18:46:44,,DUPLICATE,https://github.com/linrunner/TLP/commit/722d91d3b37739b1a53be5db36bcc4cba209f0dd,,,,,,,EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
kozlek,HWSensors,"Minor UI tweaks. Renamed ""POWERS"" to ""POWER CONSUMPTION"". Fixed localizable strings for power sensors units",02/09/2013 18:59:39,,FALSE-POSITIVE,https://github.com/kozlek/HWSensors/commit/66395c3ff41cbe484a2a5fee77f7ad9f6faedf6e,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,kozlek/HWSensors,kozlek,,,kozlek,
flavioalles,2kr-v1,commit#25: ht-machine with lowest CPU util. rate is discarded from energy consumption calculus,02/09/2013 19:01:36,,NOT-FOUND,https://github.com/flavioalles/2kr-v1/commit/a25e4bfecec41ee6703de00080718340661e44e3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,flavioalles/2kr-v1,,,,,
arpel,sensor-node,Integrate last power saving tips from http://harizanov.com/2013/07/optimizing-ds18b20-code-for-low-power-applications and https://github.com/mharizanov/new_Funky/blob/master/examples/Funky_DS18B20_plus_powersave/Funky_DS18B20_plus_powersave.ino,02/09/2013 20:45:16,,FALSE-POSITIVE,https://github.com/arpel/sensor-node/commit/18d1f0c68624b4cf012040346316eda1c7172642,,,[DO NOT ANALYZE],[OK] [Go to idle] [Avoid pointer lookup] [App specific] [Cool],[OK] [Go to idle],[Go to idle] [Avoid pointer lookup] [App specific] [Cool],EXISTS,,,[REVIEW],[Go to low power] [Disable component] ?,,Multiple changes,Certain,Arduino,No,Embedded application,Ino,Integrate last power saving tips from,arpel/sensor-node,arpel,?,,arpel,Arduino application
jrior001,android_kernel_htc_msm8960,"msm: sps: turn off BAM DMA clock after initial config For power saving, SPS driver will turn off BAM DMA clock after the initial configuration of BAM DMA. The clients of BAM DMA will vote for the clock when BAM DMA is used. Change-Id: I388a21cff3c619ef49705a064d7d5ef760fa9ef8 Signed-off-by: Yan He <yanhe@codeaurora.org>",03/09/2013 01:58:48,,DUPLICATE,https://github.com/jrior001/android_kernel_htc_msm8960/commit/a7ec8b5ecd8dcc5ba9fcbc9c2ca1eed783006010,,,,,,,EXISTS,,,,,,,,,,,,,jrior001/android_kernel_htc_msm8960,,,,jrior001,
proger,active,tune beam power consumption,03/09/2013 09:19:50,,OK,https://github.com/proger/active/commit/6aaa505e21e52fa290adfb119263e03f52cccce1,,,[DO NOT ANALYZE],[OK] [Reduce busy wait] [Increase worker wakeup] [Reduce polling] [General solution],[OK] [LAZY EVALUATION] [ERLANG],[Reduce busy wait] [Increase worker wakeup] [Reduce polling] [General solution] [LAZY EVALUATION] [ERLANG],EXISTS,[tune for lazines/conservative power consumption],[power saving],[REVIEW] [Reduce busy wait] [Increase worker wakeup] [Add power saving build] [Use power saving build] [Compiling techniques],[cleanup operations can be left undone while a scheduler is idling] ?,,,Certain,Erlang,No,Libraries and Utilities,Make,tune beam power consumption,proger/active,proger,[Miscellaneous],,proger,Application ?
k2wl,grand4.2.2,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",03/09/2013 20:36:44,,NOT-FOUND,https://github.com/k2wl/grand4.2.2/commit/b14667937c907c6d28ce71f625158163abd8dc9a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,k2wl/grand4.2.2,,,,,
andoma,showtime,"rpi: Fix various bugs related to CEC Also when our video output is not visible, shutdown UI rendering to reduce power consumption, etc",03/09/2013 21:12:48,,OK,https://github.com/andoma/showtime/commit/64f49a43c4f6dd9e2d62611143e9543063f31163,,,[DO NOT ANALYZE],[OK] [Disable component] [Disable UI when not visible],[OK] [BUG FIX],[Disable component] [Disable UI when not visible] [BUG FIX],EXISTS,[shutdown UI rendering when output not visible],[power saving],[Disable component] [Disable UI when not visible],[Disable UI] [Condition: not visible],,,Certain,HTPC media centers,No,Application,C,"Also when our video output is not visible, shutdown UI rendering to reduce power consumption, etc",andoma/showtime,andoma,[Display and UI tuning],[not visible],andoma,Application
codefireXperiment,kernel_htc_msm8960,"msm: sps: turn off BAM DMA clock after initial config For power saving, SPS driver will turn off BAM DMA clock after the initial configuration of BAM DMA. The clients of BAM DMA will vote for the clock when BAM DMA is used. Change-Id: I388a21cff3c619ef49705a064d7d5ef760fa9ef8 Signed-off-by: Yan He <yanhe@codeaurora.org>",04/09/2013 00:08:54,,NOT-FOUND,https://github.com/codefireXperiment/kernel_htc_msm8960/commit/a7ec8b5ecd8dcc5ba9fcbc9c2ca1eed783006010,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,codefireXperiment/kernel_htc_msm8960,,,,jrior001,
KrasnikovEugene,wcn36xx,wcn36xx: enter BMPS just after DHCP is done This is when wcn36xx can start to save power. Signed-off-by: Eugene Krasnikov <k.eugene.e@gmail.com>,04/09/2013 07:31:34,,UNABLE-TO-CATEGORIZE,https://github.com/KrasnikovEugene/wcn36xx/commit/5894fef735282cb618324e9e1f62807d689dee87,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,KrasnikovEugene/wcn36xx,,,,,
kozlek,HWSensors,"Fix missed ""Power Consumption"" category title in Graphs window",04/09/2013 10:47:08,,BINARIES,https://github.com/kozlek/HWSensors/commit/f0abdcdb9be67b11f939ae319b11367f6fcfad06,,,,,,,EXISTS,,,,,,,,,,,,,kozlek/HWSensors,kozlek,,,kozlek,
jianC,android_device_htc_lexikon,"Revert ""Match cpu frequencies with kernel and estimate power consumption"" This reverts commit db2d9e41af21f40966551527b94c2dfbb6b9c4dc.",06/09/2013 16:28:45,,FALSE-POSITIVE,https://github.com/jianC/android_device_htc_lexikon/commit/82c6c0f0864fb2de161d4f3cfe2ba5de75784ddc,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Revert],[FALSE-POSITIVE],[Revert],EXISTS,,,,,,,,,,,,,jianC/android_device_htc_lexikon,jianC,,,jianC,
minghuadev,chromeos-kernel-3-8-merged-master,exynos5420: devfreq: Remove aclk333 from devfreq Performance degradation is observed during multi-instance video(1080p) playback when aclk_333 frequency is being controlled by devfreq. Bumping aclk_333 down to lower frequencies doesn't make much difference on the power consumption when MFC clock is already controlled by the driver by clock-gating Hence keep aclk_333 at 333 Mhz BUG=chrome-os-partner:20714 TEST=Ran multi-instance video playback (3 1080p 24fps videos) 10 mw increase in power is observed on INT rail during single instance 480p playback Change-Id: I694305dd16c6a7f6af15bf1c2d1ff2d6bdd82045 Signed-off-by: Arjun.K.V <arjun.kv@samsung.com> Signed-off-by: Arun Mankuzhi <arun.m@samsung.com> Reviewed-on: https://gerrit.chromium.org/gerrit/64183 Reviewed-by: Prathyush Kalashwaram <prathyush@chromium.org> Tested-by: Prathyush Kalashwaram <prathyush@chromium.org> Reviewed-by: Andrew Bresticker <abrestic@chromium.org> Commit-Queue: Andrew Bresticker <abrestic@chromium.org>,06/09/2013 22:01:37,,TRADEOFF,https://github.com/minghuadev/chromeos-kernel-3-8-merged-master/commit/98d6fa96d08dbb08a2150dcd48a6b2a8773172e0,,,[DO NOT ANALYZE],[TRADEOFF] [Disable frequency scaling],[TRADEOFF] [Disable frequency scaling],[Disable frequency scaling],EXISTS,[Do not reduce frequency],[No power saving],,,,,Certain,ChromeOS,BUG=chrome-os-partner:20714,Driver,C,,minghuadev/chromeos-kernel-3-8-merged-master,,No power saving,,,Driver devfreq
Docker-J,Sail_GPROJ,"mmc: msm_sdcc: Add support for dynamic bus clock vote SDCC controller on some targets like 8660, 8960, 8064 and their variants connects with Daytona Fabric (DFAB). To achieve max. possible performance the DFAB clock is voted to 64MHz at the cost of some power consumption. Since we now have dynamic clock scaling for SD/eMMC clock we can also scale the DFAB clock accordingly without impact on performance but have some power savings in low throughput cases. Change-Id: Ic26541d6845b65803aa813d672ccabdfc4658d9c Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",07/09/2013 10:37:59,,DUPLICATE,https://github.com/Docker-J/lge-kernel-gproj/commit/71ef771bd11dcbaef0055d142760c7b8ff041a7f,https://github.com/Docker-J/Sail_GPROJ/commit/71ef771bd11dcbaef0055d142760c7b8ff041a7f,,,,,,EXISTS,,,,,,,,,,,,,Docker-J/Sail_GPROJ,,,,,
burstlam,leanKernel,ondemandplus governor: remove adaptive timer_rate logic It is unlikely this gives any power savings and only add some ugly code :),07/09/2013 13:27:05,,DUPLICATE,https://github.com/burstlam/leanKernel/commit/067483a15cdb7db1a39a14ee0519f893693869c6,,,[DO NOT ANALYZE],[RELATED] [Remove ugly code],"[RELATED] [""Remove ugly code""]","[Remove ugly code] [""Remove ugly code""]",EXISTS,,,,,,,,,,,,,burstlam/leanKernel,,,,burstlam,
alviteri,samsung-kernel-msm7x30,"mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. Change-Id: Iac064221199f69d162d91f5311becd735c15700a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",08/09/2013 21:26:06,,NOT-FOUND,https://github.com/alviteri/samsung-kernel-msm7x30/commit/05ccaccc67f4780c424d1020415e248e3c9495ee,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,alviteri/samsung-kernel-msm7x30,,,,,
staxgr,j2nbus,working alarm on Nexus 7. MIUI has power saving feature with an alarm bug,10/09/2013 02:57:24,,NOT-FOUND,https://github.com/staxgr/j2nbus/commit/d8999e1de581c2a0cda4fbca78de58e8d6d3816d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,staxgr/j2nbus,,,,,
jinfu-leng,ROS_Nodes,added threshold to next_second_least_power and fixed a bug in computing power consumption,10/09/2013 15:39:28,,FALSE-POSITIVE,https://github.com/jinfu-leng/ROS_Nodes/commit/6d3ee0c2376f0668328e161a50a0602fa8545af0,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Power consumption],[FALSE-POSITIVE] [Power consumption],[Power consumption],EXISTS,,,,,,,,,,,,,jinfu-leng/ROS_Nodes,jinfu-leng,,,jinfu-leng,
linrunner,TLP,* Remove faulty checks for wifi power save capability * Enhance debug output of tlp cmd params and PATH,10/09/2013 17:18:00,,OK,https://github.com/linrunner/TLP/commit/fe1c35a2b387a76c0a416009063c93114fb6a158,,,[DO NOT ANALYZE],[OK],[OK] [BUG FIX],[BUG FIX],EXISTS,[Remove faulty checks for wifi power save capability],[power saving],[Bug fix],[Energy bug],,,Certain,Linux,Yes,Application,Shell?,,linrunner/TLP,,[Miscellaneous],,,Application
linrunner,TLP,* Remove faulty checks for wifi power save capability * Enhance debug output of tlp cmd params and PATH,10/09/2013 19:52:35,,DUPLICATE,https://github.com/linrunner/TLP/commit/0302abbe1ff1fd40f2af490353b7c9c8d24aabd9,,,,,,,EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
linrunner,TLP,* Remove faulty checks for wifi power save capability * Enhance debug output of tlp cmd params and PATH,10/09/2013 19:55:12,,DUPLICATE,https://github.com/linrunner/TLP/commit/cdd0b312f69c7740afa7b64bdcad0eb292239a2b,,,,,,,EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
linrunner,TLP,* Remove faulty checks for wifi power save capability * Enhance debug output of tlp cmd params and PATH,10/09/2013 20:09:52,,DUPLICATE,https://github.com/linrunner/TLP/commit/56b02b29de51c7b2808f04148233fb66caa92d88,,,,,,,EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
Ntemis,Pellamos,"OMAP4: Tablet2: configure TC35876x panel refresh rate to 60 fps Current configuration refreshes the LCD at ~70 fps, which is more than UI expects and also can impact power consumption. This is now corercted to 60 fps. Change-Id: I98ce97b35f0458b1e24040fe0556aa698b3b00a2 Signed-off-by: Sergiy Kibrik <sergiy.kibrik@globallogic.com> Conflicts: arch/arm/mach-omap2/board-44xx-tablet-panel.c",11/09/2013 15:08:27,,OK,https://github.com/Ntemis/Pellamos/commit/993d1bfe85f648953a49071d6c75535001a4ecf6,,,[DO NOT ANALYZE],[?] [OK] [Reduce screen refresh rate],[OK] [Reduce screen refresh rate],[OK] [Reduce screen refresh rate],EXISTS,[configure panel refresh rate to 60 fps],[Current configuration of ~70 fps is more than UI expects],[Reduce screen refresh rate] [Reduce unnecessary work],[Reduce display refresh rate],,,Certain,Android,No,OS,C,"Current configuration refreshes the LCD at ~70 fps, which is more than UI expects and also can impact power consumption. This is now corercted to 60 fps.",Ntemis/Pellamos,,[Display and UI tuning],,Ntemis,Kernel arch
nchinan,data-sci,Adding energy consumption data,11/09/2013 23:01:16,,NOT-FOUND,https://github.com/nchinan/data-sci/commit/b6a6a37ac0c2d8102be15f63526390505eb3398e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,nchinan/data-sci,,,,,
umberto1978,speedwizz_kernel_N2,"sched: Create sched_select_non_idle_cpu() to give preferred CPU for p… …ower saving In order to save power, it would be useful to schedule light weight work on cpus that aren't IDLE instead of waking up an IDLE one. By idle cpu (from scheduler's perspective) we mean: - Current task is idle task - nr_running == 0 - wake_list is empty This is already implemented for timers as get_nohz_timer_target(). We can figure out few more users of this feature, like workqueues. This patch converts get_nohz_timer_target() into a generic API sched_select_non_idle_cpu() so that other frameworks (like workqueue) can also use it. This routine returns the cpu which is non-idle. If the local CPU isn't idle OR all cpus are idle, local cpu is returned back. If local cpu is idle, then we must look for another CPU which isn't idle. This patch reuses the code from get_nohz_timer_target() routine, which had similar implementation. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Seongmin Park <r_data@naver.com>",12/09/2013 11:44:53,,DUPLICATE,https://github.com/umberto1978/speedwizz_kernel_N2/commit/d1020c5dddb10ded700d7d261a2432dd6d8df238,,,,[VERIFIED] [https://github.com/Ntemis/NOF-Nemesis/commit/2b2dc49ea9c4bad9f99b13a0fc03f2f5b19ef16e],,[https://github.com/Ntemis/NOF-Nemesis/commit/2b2dc49ea9c4bad9f99b13a0fc03f2f5b19ef16e],EXISTS,,,,,,,,,,,,,umberto1978/speedwizz_kernel_N2,umberto1978,,,umberto1978,
cp2k,cp2k,Callgraph: Include power consumption git-svn-id: svn://svn.code.sf.net/p/cp2k/code/trunk@13136 bac0169d-1eea-4375-b5f6-f89d2ced9994,12/09/2013 14:18:32,,FALSE-POSITIVE,https://github.com/cp2k/cp2k/commit/ead93adc24b679c7c5301d7ccd97e394dc593653,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute power consumption],[FALSE-POSITIVE] [Compute power consumption],[Compute power consumption],EXISTS,,,,,,,,,,,,,cp2k/cp2k,oschuett,,,oschuett,
dirkhh,teslams,"Fix silly corner case issue in energy accounting On the stats page, if the very first sample in the time range happens to be while you are driving and using energy, the energy consumed for this day is multiplied with the current timestamp at that time - and creates an outrageous (and incorrect) number. Easy to fix. Signed-off-by: Dirk Hohndel <dirk@hohndel.org>",13/09/2013 18:39:32,,FALSE-POSITIVE,https://github.com/dirkhh/teslams/commit/7e5359c17282837aaf6dfcb202777adeb797ec3b,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Bug fix] [Car energy consumption computation],[FALSE-POSITIVE],[Bug fix] [Car energy consumption computation],EXISTS,,,,,,,,,,,,,dirkhh/teslams,dirkhh,,,dirkhh,
ReVolt-ROM,android_kernel_htc_m7,"msm: sps: enable BAM DMA client to control BAM DMA clock For power saving reason, SPS driver will turn off the clock of BAM DMA after the initial configuration. A new API is provided to BAM DMA clients to vote for or relinquish BAM DMA clock when they start/stop using BAM DMA. Change-Id: I03f8a6cfa19c1722ca4e92e0785ca309fdd10ba2 Signed-off-by: Yan He <yanhe@codeaurora.org>",13/09/2013 20:03:15,,RELATED,https://github.com/ReVolt-ROM/android_kernel_htc_m7/commit/07ec06063569ada4a931c88db86af9a69a92538b,,,[DO NOT ANALYZE],[RELATED] [Enable voting for clock disabling],[RELATED] [Enable voting for clock disabling],[Enable voting for clock disabling],EXISTS,,,,,,,,,,,,,ReVolt-ROM/android_kernel_htc_m7,,,,tpoint75,
pgadamczyk,Firmware,"Battery Logging, Reduced System Speed to 60 MHz Added Battery-only logging (independent of Vehicle State) to the ""sdlogimu"" program, and ""sdlog2_messages"". Edited ""board.h"" to reduce the system clock to 60 MHz to save power.",13/09/2013 20:56:04,,OK,https://github.com/pgadamczyk/Firmware/commit/b4665baf4db139ecc6e7da5ce709b9794a75b606,,,[DO NOT ANALYZE],[OK] [Reduce frequency],[OK] [Reduce frequency],[Reduce frequency],EXISTS,[reduce the system clock to 60 MHz],[power saving],[Reduce frequency],[DVFS] [Sub1: Reduce frequency],,,Certain,MCU,No,Hardware,C,"Edited ""board.h"" to reduce the system clock to 60 MHz to save power.",pgadamczyk/Firmware,pgadamczyk,[Frequency and voltage scaling],,pgadamczyk,Firmware
wombleton,gitlaw-nz,New version for Energy Efficiency and Conservation Act 2000,15/09/2013 17:30:24,,FALSE-POSITIVE,https://github.com/wombleton/gitlaw-nz/commit/b765822ea10cb67e6db260473cbca159604370eb,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,wombleton/gitlaw-nz,,,,,
linrunner,TLP,tlp-stat: fix wifi power save detection; again.,17/09/2013 06:20:40,,FALSE-POSITIVE,https://github.com/linrunner/TLP/commit/121607be2bee7a31d32eb89dbf6f36d670ea60aa,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
BigBrother1984,android_kernel_samsung_tuna,"omap44xx: cpuidle: Update target residencies to saner values The current values are insane. There is no possible way power saving can be attained by heading into C4 for not much more than 1ms. The average values are in the 20ms range, so why do we need to even entertain entering at much lower values when we will use more power than we save in doing so. The actual recommended values are shown in 79e796f7b993bd82ad108fa488c35ddd1b9387eb but for some obscure reason, in 16385c726d55f9e84bbc60ff9e329a84d56a13a3 and 22e2193661b6bffcfdc1a4d17f6af0d1782ba860 they were updated to match the exit_latency. This seems horribly wrong to me as there comes a point when the target residency is so low that you use more power actually entering the state than you gain from the insignificant amount of time you spend there. With the values in this commit, C4 state is used for >95% of the time when the screen is off, with C3 picking up the remainder. During audio playback, C4 is used ~50% of the time, C3 is used ~25% of the time and C2 picks up whatever is left. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",18/09/2013 17:19:03,,DUPLICATE,https://github.com/BigBrother1984/android-omap-tuna-3.0-jb-mr2/commit/08ddbaa2c8f9cca79f85728df55007bfa404a6a2,https://github.com/BigBrother1984/android_kernel_samsung_tuna/commit/08ddbaa2c8f9cca79f85728df55007bfa404a6a2,,[DUPLICATE],[DUPLICATE] [4203efd9820495e1612bca6386a4c0303e842e18],[DUPLICATE],[4203efd9820495e1612bca6386a4c0303e842e18],EXISTS,,,,,,,,,,,,,BigBrother1984/android_kernel_samsung_tuna,,,,,
BigBrother1984,android_kernel_samsung_tuna,"omap44xx: cpuidle: Update target residencies to saner values The current values are insane. There is no possible way power saving can be attained by heading into C4 for not much more than 1ms. The average values are in the 20ms range, so why do we need to even entertain entering at much lower values when we will use more power than we save in doing so. The actual recommended values are shown in 79e796f7b993bd82ad108fa488c35ddd1b9387eb but for some obscure reason, in 16385c726d55f9e84bbc60ff9e329a84d56a13a3 and 22e2193661b6bffcfdc1a4d17f6af0d1782ba860 they were updated to match the exit_latency. This seems horribly wrong to me as there comes a point when the target residency is so low that you use more power actually entering the state than you gain from the insignificant amount of time you spend there. With the values in this commit, C4 state is used for >95% of the time when the screen is off, with C3 picking up the remainder. During audio playback, C4 is used ~50% of the time, C3 is used ~25% of the time and C2 picks up whatever is left. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",19/09/2013 20:06:48,,DUPLICATE,https://github.com/BigBrother1984/android-omap-tuna-3.0-jb-mr2/commit/d439cf1e7fa0380f6592828f5d93808699b0b014,https://github.com/BigBrother1984/android_kernel_samsung_tuna/commit/d439cf1e7fa0380f6592828f5d93808699b0b014,,,,,,EXISTS,,,,,,,,,,,,,BigBrother1984/android_kernel_samsung_tuna,,,,,
rupaparaprashant,DP_HA,Version 1.1 made ISR lite.. shifted all load to main.. added debouncing with power saving mode.. things working except when its digitally on then also opamp shows output.. why god why?,22/09/2013 16:37:17,,NOT-FOUND,https://github.com/rupaparaprashant/DP_HA/commit/91644c56eaed1e938bc7fe99e2fcf48d45a42b87,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,rupaparaprashant/DP_HA,,,,,
oh7bf,PiPIC,Flash LED on GP5 when timed command active. If the most significant bit in timer1 is one use 'sleep' instruction to save power. Not sure if this is really useful. Seems to have side effect of slower I2C reply from the PIC. The normal operation can be revovered using timer reset command 0x50 since this will also reset the MSB in timer1.,22/09/2013 20:19:49,,OK,https://github.com/oh7bf/PiPIC/commit/f00ec0ce28e7c15935f79d6817538e1768f885f5,,,[DO NOT ANALYZE],[OK] [Go to idle],"[OK] [GO TO IDLE] [""Not sure if this is really useful""]","[Go to idle] [""Not sure if this is really useful""]",EXISTS,[use sleep instruction],[power saving],[Go to sleep],[Go to low power],,,Uncertain,Raspberry Pi,No,Hardware,Assembly,If the most significant bit in timer1 is one use 'sleep' instruction to save power,oh7bf/PiPIC,oh7bf,[Low power idling],,oh7bf,Firmware ?
stsquad,emacs-chromebooks,chromebook.el: remove the powerd timer logic Currently we just start croutonpowerd in daemon mode although that doesn't seem to work that well. The long term solution is to directly interface with the host-dbus and register to be told before power saving kicks in.,24/09/2013 07:22:34,,FALSE-POSITIVE,https://github.com/stsquad/emacs-chromebooks/commit/9fa4b10c41a61a2ffe7f83ee4b2f73a70762cb3c,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,stsquad/emacs-chromebooks,stsquad,,,stsquad,
MachineMuse,MachineMusePowersuits,Removed treecapitation feature and fixed some energy consumption bugs,24/09/2013 16:55:00,,FALSE-POSITIVE,https://github.com/MachineMuse/MachineMusePowersuits/commit/fcaefe935572baeda0c98df61a8411ea2c499799,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSITIVE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,MachineMuse/MachineMusePowersuits,MachineMuse,,,MachineMuse,
Trinityhaxxor,Xperia_S_T-Core_Kernel,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> modified for Mako from LKML reference Signed-off-by: Paul Reioux <reioux@gmail.com>",25/09/2013 11:14:38,,DUPLICATE,https://github.com/Trinityhaxxor/Xperia_S_T-Core_Kernel/commit/338350e55f5bd30503ba7e4e03a785b2a6bde3f1,,,,[VERIFIED] [https://github.com/Team-Blackout/Blackout-Monarudo/commit/73b2662548cfd5deaa26b20788923a41abad3972],,[https://github.com/Team-Blackout/Blackout-Monarudo/commit/73b2662548cfd5deaa26b20788923a41abad3972],EXISTS,,,,,,,,,,,,,Trinityhaxxor/Xperia_S_T-Core_Kernel,Trinityhaxxor,,,Trinityhaxxor,
sconklin,rotorcontrol,"Add some checks and a power saving timeout Added a simple check for out-of-bounds position sensor readings The power supply regulator for 5V was getting very warm if the rotator ended travel with both az and el moving in a positive direction. This was due to both relays for direction being energized. While measurements showed the regulators to be operating within limits, I added a timout (really a loop counter) that turns off the relays if no movement is under way and no movement commands have been sent to the controller in a while. Signed-off-by: Steve Conklin <sconklin@canonical.com>",25/09/2013 12:34:52,,OK,https://github.com/sconklin/rotorcontrol/commit/1804b9706007c836ea6308ffb1b26ae082735126,,,[DO NOT ANALYZE],[OK] [Add timer] [Disable component],[OK] [Disable component],[Add timer] [Disable component],EXISTS,[added a timout (really a loop counter) that turns off the relays if no movement is under way],[power supply regulator for 5V was getting very warm],[Add inactivity timer] [Disable component] [Disable device],[Add timeout] [Sub1: Disable device],,,Certain,Arduino,No,Application,Ino,Add some checks and a power saving timeout,sconklin/rotorcontrol,,[Timing out],,,Arduino application
mlab,AWS-MLEP,Updated with total energy consumption,26/09/2013 01:48:16,,FALSE-POSITIVE,https://github.com/mlab/AWS-MLEP/commit/74de72afc332d51b838294aecca162c4c6db5068,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Energy consumption plot],[FALSE-POSITIVE],[Energy consumption plot],EXISTS,,,,,,,,,,,,,mlab/AWS-MLEP,willybernal,,,willybernal,
weiwangudel,RCRdaemon-MIC,Code is able to get power consumption from MIC card. Tested on OpenCL programs. (brdr2d). shared memory access needs to be careful. initEnergy = readSharedMemory(); the result of the above is random value. rather the code used this: readSharedMemory(&initEnergy);,26/09/2013 13:20:25,,FALSE-POSITIVE,https://github.com/weiwangudel/RCRdaemon-MIC/commit/a16e6ebed1c82a618df5c90890480143382b9aaa,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute energy consumption],[FALSE-POSITIVE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,weiwangudel/RCRdaemon-MIC,weiwangudel,,,weiwangudel,
weiwangudel,RCRdaemon-MIC,Tested with OpenMP offload. Move on to native mode of power consumption. For offload: need to do something like: source /opt/intel/composerxe/bin/compilervar.sh intel64,26/09/2013 15:29:00,,FALSE-POSITIVE,https://github.com/weiwangudel/RCRdaemon-MIC/commit/cd8319fd2a757a1be122f6704b190de37e1302b5,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[?],,EXISTS,,,,,,,,,,,,,weiwangudel/RCRdaemon-MIC,weiwangudel,,,weiwangudel,
VanirAOSP,frameworks_base,"Active-D: Eradicate sunlight mode (1/2) Active notifications were designed for devices with a direct relationship between the # of pixels on, and power consumption. ... AND we can drastically reduce the incidence of sunburns among Vanir users by removing this. Change-Id: I0853b1ff88ec1d1ba48de7589f11a7b4d3c4c412",27/09/2013 04:42:35,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/VanirAOSP/platform_frameworks_base/commit/5adb8abb2c00992f292ff2e483cf1d67c00eab8f,https://github.com/VanirAOSP/frameworks_base/commit/5adb8abb2c00992f292ff2e483cf1d67c00eab8f,,[?][ANDROID],[TRADEOFF] [Remove active notifications] [Reduce screen burns],[TRADEOFF],[Remove active notifications] [Reduce screen burns] [ANDROID],EXISTS,[Remove sunlight mode],[Reduce sunburn],,,,,Certain,Android,No,OS software stack,Java,,VanirAOSP/frameworks_base,,,,,Software stack framework
VanirAOSP,packages_apps_Settings,"Active-D: Eradicate sunlight mode (2/2) Active notifications were designed for devices with a direct relationship between the # of pixels on, and power consumption. ... AND we can drastically reduce the incidence of sunburns among Vanir users by removing this. Change-Id: I2e325edd861e2c3747547429105ac83c01722faf",27/09/2013 04:42:38,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/VanirAOSP/platform_packages_apps_Settings/commit/6ed0c9d79372a858b7c31a85169dd8e3f3c542e8,https://github.com/VanirAOSP/packages_apps_Settings/commit/6ed0c9d79372a858b7c31a85169dd8e3f3c542e8,,[?][ANDROID],[TRADEOFF] [Partial: 5adb8abb2c00992f292ff2e483cf1d67c00eab8f][Remove active notifications] [Reduce sunburns ???],[TRADEOFF],[Partial: 5adb8abb2c00992f292ff2e483cf1d67c00eab8f] [Remove active notifications] [Reduce sunburns ???] [ANDROID],EXISTS,[Remove sunlight mode],[Reduce sunburn],,,,[Partial:5adb8abb2c00992f292ff2e483cf1d67c00eab8f],Certain,Android,No,OS software stack,Java,,VanirAOSP/packages_apps_Settings,,,,,Software stack framework
Trinityhaxxor,Xperia_S_T-Core_Kernel,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> modified for Mako from LKML reference Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: kernel/power/suspend.c",27/09/2013 05:47:43,,DUPLICATE,https://github.com/Trinityhaxxor/Xperia_S_T-Core_Kernel/commit/602b6b0f6409bbcaf3c08143c404617f4b214beb,,,,[FALSE-POSITIVE] [VERIFY] [MISLEADING-DUPLICATE],,[VERIFY] [MISLEADING-DUPLICATE],EXISTS,,,,,,,,,,,,,Trinityhaxxor/Xperia_S_T-Core_Kernel,Trinityhaxxor,,,Trinityhaxxor,
RonGokhale,codeaurora_kernel,bif: core: set BIF bus state master-disabled when no slaves are found Modify the bif_ctrl_register() function so that the bus state is changed to master-disabled if no BIF slaves are detected. This can save power when a smart battery pack is not connected. Change-Id: Ie50203240f10d09656f41e0feab9971bf265e161 Signed-off-by: David Collins <collinsd@codeaurora.org>,27/09/2013 12:41:58,,OK,https://github.com/RonGokhale/codeaurora_kernel/commit/284716676a24b3fe815761100e50a528617d6034,,,[DO NOT ANALYZE],[OK] [Android] [Disable component] [Disabler bus],[OK] [DISABLE BUS],[Android] [Disable component] [Disabler bus] [DISABLE BUS],EXISTS,[set BIF bus state master-disabled when no slaves are found],[save power when a smart battery pack is not connected],[Disable device when no slaves] [Disable device] [Disable bus],[Disable device] [Condition: no slaves] ,,,Certain,Codeaurora,No,OS,C,bif: core: set BIF bus state master-disabled when no slaves are found Modify the bif_ctrl_register() function so that the bus state is changed to master-disabled if no BIF slaves are detected.  This can save power when a smart battery pack is not connected.,RonGokhale/codeaurora_kernel,,[Disabling feature/devices],[no slaves],,Driver
milaq,android_device_hp_tenderloin,fix ts uart pm #1e44b025e3edd43c4fcc93dac901938ffe525101 intruduces a bug where the ts uart could not be closed correctly. this lead to an issue with power consumption and reopening the uart on wake from sleep which caused ts_srv to restart resulting in an input lag of 1-3secs. also bring back logging but don't include uart_fd retval to keep mentioned commit's functionality.,27/09/2013 16:39:23,,OK,https://github.com/milaq/android_device_hp_tenderloin/commit/e6968626bc8eb1e62a68a0710e182cc57b78027c,,,[DO NOT ANALYZE],[OK] [Bug fix] [Close UART],[OK] [Bug fix],[Bug fix] [Close UART],EXISTS,[fix ts uart pm],[ts uart could not be closed correctly],[Bug fix],[Release resource],,,Certain,Android,Yes,OS,C,#1e44b025e3edd43c4fcc93dac901938ffe525101 intruduces a bug where the ts uart could not be closed correctly. this lead to an issue with power consumption and reopening the uart on wake from sleep which caused ts_srv to restart resulting in an input lag of 1-3secs.,milaq/android_device_hp_tenderloin,milaq,[Energy bug],,milaq,Driver
milaq,android_device_hp_tenderloin,fix ts uart pm 1e44b025e3edd43c4fcc93dac901938ffe525101 intruduced a bug where the ts uart could not be closed correctly. this led to an issue with power consumption and reopening the uart on wake from sleep which caused ts_srv to restart resulting in an input lag of 1-3secs. also bring back logging but don't include uart_fd retval to keep mentioned commit's functionality.,27/09/2013 16:41:15,,DUPLICATE,https://github.com/milaq/android_device_hp_tenderloin/commit/c3ad909e0af80af20b3e3273428c00b022cfa69e,,,,[VERIFIED] [https://github.com/milaq/android_device_hp_tenderloin/commit/e6968626bc8eb1e62a68a0710e182cc57b78027c],,[https://github.com/milaq/android_device_hp_tenderloin/commit/e6968626bc8eb1e62a68a0710e182cc57b78027c],EXISTS,,,,,,,,,,,,,milaq/android_device_hp_tenderloin,milaq,,,milaq,
mifl,android_kernel_qcom_msm,bif: core: set BIF bus state master-disabled when no slaves are found Modify the bif_ctrl_register() function so that the bus state is changed to master-disabled if no BIF slaves are detected. This can save power when a smart battery pack is not connected. Change-Id: Ie50203240f10d09656f41e0feab9971bf265e161 Signed-off-by: David Collins <collinsd@codeaurora.org>,27/09/2013 17:04:31,,DUPLICATE,https://github.com/mifl/android_kernel_qcom_msm/commit/284716676a24b3fe815761100e50a528617d6034,,,,,,,EXISTS,,,,,,,,,,,,,mifl/android_kernel_qcom_msm,,,,,
Docker-J,SailKernel_OG,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> modified for Mako from LKML reference Signed-off-by: Paul Reioux <reioux@gmail.com> Conflicts: kernel/power/suspend.c",28/09/2013 04:52:35,,NOT-FOUND,https://github.com/Docker-J/SailKernel_OG/commit/bfa23dde728fd77d61a4567c322aadcc97beea01,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Docker-J/SailKernel_OG,,,,,
Trinityhaxxor,Xperia_S_T-Core_Kernel,msm: vidc: Adds clock scaling Video driver manages clock rate according to the increase in load on video core. Clock is scaled as per number of macroblocks decoded/encoded per second. This makes sure that the power consumption and performance is optimal. Change-Id: If8aede0e3048cdc9bcdf14ce0c239a58bdd5d263 Signed-off-by: Vinay Kalia <vkalia@codeaurora.org>,28/09/2013 07:53:24,,OK,https://github.com/Trinityhaxxor/Xperia_S_T-Core_Kernel/commit/b536adff4ea015430d560f5d00eb45600d9e7a45,,,[DO NOT ANALYZE],[OK] [Scale frequency] [Android],[OK] [Scale CPU frequency],[Scale frequency] [Android] [Scale CPU frequency],EXISTS,[Adds clock scaling],[power saving],[Scale frequency] [Scale GPU frequency on load],[DVFS],,,Certain,Android,No,OS,C,Video driver manages clock rate according to the increase in load on video core. Clock is scaled as per number of macroblocks decoded/encoded per second. This makes sure that the power consumption and performance is optimal.,Trinityhaxxor/Xperia_S_T-Core_Kernel,,[Frequency and voltage scaling],,Trinityhaxxor,Driver
Trinityhaxxor,Xperia_S_T-Core_Kernel,msm: vidc: Adds bus scaling for video codecs Adds bus scaling so that the bus bandwidth can be voted for according to load. This optimizes power consumption during video encode and decode operation. Change-Id: I4b7123e9ae2e429ffe9bf4636d633284768e1b33 Signed-off-by: Vinay Kalia <vkalia@codeaurora.org>,28/09/2013 07:54:38,,OK,https://github.com/Trinityhaxxor/Xperia_S_T-Core_Kernel/commit/cd95dc00a2ca76c2455c880a8fdad370df882564,,,[DO NOT ANALYZE],[OK] [Scale frequency] [Android],[OK] [SCALE BUS],[Scale frequency] [Android] [SCALE BUS],EXISTS,[Adds bus scaling for video codecs],[power saving],[Scale bus] [Scale bus on load],[DVFS],,,Certain,Android,No,OS,C,Adds bus scaling so that the bus bandwidth can be voted for according to load. This optimizes power consumption during video encode and decode operation.,Trinityhaxxor/Xperia_S_T-Core_Kernel,,[Frequency and voltage scaling],,Trinityhaxxor,Driver
Trinityhaxxor,Xperia_S_T-Core_Kernel,"msm_serial_hs: Don't configure gpios into UART Mode always UARTDM device is used as interface to connect external devices through GPIOs. Currently those GPIOs are configured in active mode once driver's probe() is called and configured in suspend mode once its remove() is called. Probe() is called once only and remove is not called until UARTDM platform device is removed. With this current implementation, although external device (ex. Bluetooth SoC) is not operational mode, used UARTDM GPIOs are configured in active mode which is causing more leakage current and more power consumption. Hence configure those UARTDM GPIOs in active mode only when used UARTDM device is opened and under used. Configure UARTDM GPIOs back to suspend mode when UARTDM device is closed and under not used. CRs-Fixed: 422217 Signed-off-by: Mayank Rana <mrana@codeaurora.org> (cherry picked from commit 40836784d344c6e9def081f47a693488ed2d2857) Change-Id: Iace76a2cc7ed4d23523ee744b2fb81598eaefada Signed-off-by: Sivasri Kumar Vanka <sivasri@codeaurora.org> Conflicts: drivers/tty/serial/msm_serial_hs.c",28/09/2013 14:09:18,,UNABLE-TO-CATEGORIZE,https://github.com/Trinityhaxxor/Xperia_S_T-Core_Kernel/commit/e5eda0647de2b5126877700ac30db56fa418507e,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,Trinityhaxxor/Xperia_S_T-Core_Kernel,,,,Trinityhaxxor,
PurityROM,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Credits to Chris Lei",28/09/2013 15:00:49,,DUPLICATE,https://github.com/PurityROM/android_packages_apps_Phone/commit/b4fb0b40fceed1c5b205f0207edb3c30412c6d30,,,,,,,EXISTS,,,,,,,,,,,,,PurityROM/android_packages_apps_Phone,AndroidRul3z,,,AndroidRul3z,
webriders,pywars,Added energy saving between rounds,29/09/2013 21:11:59,,FALSE-POSITIVE,https://github.com/webriders/pywars/commit/47bdb8a2051e435e224a45452a670580d09f2ac6,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,webriders/pywars,fluder,,,fluder,
albertsegura,Si4703_FM_Tuner_Evaluation_Board,Version 1.1 (30/09/13 - dd/mm/yy) > Contributors: Albert Segura - alb.segu@gmail.com > General: - Added changelog - Cleaned code - Added references to datasheet pdf in order to explain the code in certain cases > Features: - Power down and repower ability to save energy - Support for operation in EUROPE/USA/JAPAN - Full scale of Volume (form 15 to 31 levels) - Mute/unmute ability > TODO: - Check exceptions in the seek function - Re-work the RDS function to get it working (again?),30/09/2013 15:14:54,,RELATED,https://github.com/albertsegura/Si4703_FM_Tuner_Evaluation_Board/commit/9c18503c80e0cb6f200073256df77db87dd4714b,,,[OK][GO TO IDLE],[OK][GO TO IDLE],[OK] [UNABLE-TO-CATEGORIZE],[GO TO IDLE] [UNABLE-TO-CATEGORIZE],EXISTS,,,,,,,,,No,,C++,,albertsegura/Si4703_FM_Tuner_Evaluation_Board,albertsegura,,,albertsegura,
clin54,Resume,Mention of Electronic Design Automation Scalable synthesis for hardware system reliability and energy efficiency,01/10/2013 03:12:48,,FALSE-POSITIVE,https://github.com/clin54/Resume/commit/09eb2203b8decebcf73b5cdbcca24ca3e9604a61,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,clin54/Resume,clin54,,,clin54,
frakbot,FWeather,"Fixes for location management - On ""compatibility mode"" (for devices where Play Services aren't available), the GPS was required due to a distraction error on our part and what's definitely bad APIs design from Google. We've now fixed this so that we only require LOW accuracy on horizontal coordinates (lat-lon) and don't require speed or altitude info. - On the normal, Play Store-powered code path, we've specified the priority should be given to LOW power consumption location providers",01/10/2013 12:58:33,,OK,https://github.com/frakbot/FWeather/commit/42ba61970da4327d13045c5c3c5efe859a994784,,,[DO NOT ANALYZE],[OK] [Reduce GPS accuracy],[OK] [BUG FIX],[Reduce GPS accuracy] [BUG FIX],EXISTS,[Use low accuracy GPS information],[power saving],[Reduce GPS accuracy] [Trade accuracy for power],[Reduce device accuracy],,Trade accuracy for power,Certain,Android,Yes,Application,Java,"Fixes for location management - On ""compatibility mode"" (for devices where Play Services aren't available), the GPS was required due to a distraction error on our part and what's definitely bad APIs design from Google. We've now fixed this so that we only require LOW accuracy on horizontal coordinates (lat-lon) and don't require speed or altitude info. - On the normal, Play Store-powered code path, we've specified the priority should be given to LOW power consumption location providers",frakbot/FWeather,rock3r,[Energy bug],,rock3r,Application
ptmr3,GalaxyS2_Kernel,cpufreq/ondemand: add early suspend drivers to adjust cpu sampling rates screen off: 6 * min sampling rate to reduce power consumption screen on: normal sampling rate set by init,01/10/2013 16:47:48,,DUPLICATE,https://github.com/ptmr3/GalaxyS2_Kernel/commit/9bc4a4911274eec77341c5f1e4918bed1cda44fe,,,,,,,EXISTS,,,,,,,,,,,,,ptmr3/GalaxyS2_Kernel,faux123,,,ptmr3,
CyanogenMod,android_kernel_htc_m7,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",02/10/2013 00:46:03,,DUPLICATE,https://github.com/CyanogenMod/android_kernel_htc_m7/commit/a8124a6214bdf971da2c8441b90ca2f67a37635b,,,,,,,EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_htc_m7,,,,cyanogen,
Team-Hydra,android_kernel_htc_m7,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",02/10/2013 01:11:09,,DUPLICATE,https://github.com/Team-Hydra/android_kernel_htc_m7/commit/a8124a6214bdf971da2c8441b90ca2f67a37635b,,,,,,,EXISTS,,,,,,,,,,,,,Team-Hydra/android_kernel_htc_m7,,,,cyanogen,
dazer,ShadowCraft-Engine,"5.4 Sub Tweaks (Unoptimized and Experimental) - Fixed energy consumption when opening from stealth. - Set ShD pooling to use an adv_param, default to 10 below max. - Tweaking swing resets. - Slightly lower Shadowmeld usage. - Ambush from CDs better accounts for the opening sequence of events. That is, it accounts for the fact that not every CD is blown at the pull. - Shadow Dance now relies on a loop to gauge APS. Better handles smaller time intervals. - FW uptime better handles opening sequence of events like Ambush now does. - Autoattack's FW weight was fixed to support AoC. - t16 4pc Accounts for overlap. - THINGS TO NOTE: Ambush damage might still be a little high? Either the ambush buff didn't go through, the FW modifier is broken still, people aren't pooling before ShD properly (and I'm struggling to see the failures), or there's still a bug with the APS. May be more than one issue.",02/10/2013 02:36:25,,FALSE-POSITIVE,https://github.com/dazer/ShadowCraft-Engine/commit/713a18508f195476efc4805e6e5f14c4051b92a8,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,dazer/ShadowCraft-Engine,,,,,
CyanogenMod,android_device_htc_msm8960-common,power: Manage the notify_on_migrate setting * We don't want to do this with the screen off as it would cause higher power consumption. * Remove timer/sampling rate management. Change-Id: I326b4fca13e58051fbbe2a5f55446654fff60d8d,02/10/2013 18:43:24,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_device_htc_msm8960-common/commit/9e4aa663ef0dd68f59dd6e1e0fc21914c6ad4965,,,[DO NOT ANALYZE],"[FALSE-POSITIVE] [Message does not mention, but code does some freq scaling]",[FALSE-POSITIVE],"[Message does not mention, but code does some freq scaling]",EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_htc_msm8960-common,cyanogen,,,cyanogen,
invisiblek,android_kernel_hp_tenderloin,msm_fb: display: set mdp perf_level to low level after playing video This bug fix sets mdp clk rate back to the rate for UI after playing video to save power. Change-Id: I73a0db158536b27a4a50d25b7737db4327210b8f Signed-off-by: Huaibin Yang <huaibiny@codeaurora.org> (cherry picked from commit 23fa9e7a958be09f9d6743cea026a4f56b84a48f) Conflicts: drivers/video/msm/mdp4_overlay.c Signed-off-by: Zhoulu Luo <zluo@codeaurora.org>,03/10/2013 02:37:00,,OK,https://github.com/invisiblek/android_kernel_hp_tenderloin/commit/ce0e1de089e6d3066301314b5143b2ba3f3529ba,,,[DO NOT ANALYZE],[OK] [Bug fix] [Scale frequency],[OK] [Bug fix] [Scale frequency],[Bug fix] [Scale frequency],EXISTS,[sets mdp clk rate back to the rate for UI after playing video],[power saving],[Bug fix] [Scale frequency] [Scale MDP frequency],[DVFS],,,Certain,Android,Change-Id: I73a0db158536b27a4a50d25b7737db4327210b8f,OS,C,msm_fb: display: set mdp perf_level to low level after playing video This bug fix sets mdp clk rate back to the rate for UI after playing video to save power.,invisiblek/android_kernel_hp_tenderloin,,[Energy bug],,invisiblek,Driver
tako0910,android_device_htc_msm8960-common,power: Manage the notify_on_migrate setting * We don't want to do this with the screen off as it would cause higher power consumption. * Remove timer/sampling rate management. Change-Id: I326b4fca13e58051fbbe2a5f55446654fff60d8d,03/10/2013 05:54:45,,DUPLICATE,https://github.com/tako0910/android_device_htc_msm8960-common/commit/c84b7291c525495434dd254dc45bc4c3b7a83634,,,,,,,EXISTS,,,,,,,,,,,,,tako0910/android_device_htc_msm8960-common,cyanogen,,,tako0910,
CarbonDev,android_device_htc_msm8960-common,power: Manage the notify_on_migrate setting * We don't want to do this with the screen off as it would cause higher power consumption. * Remove timer/sampling rate management. Change-Id: I326b4fca13e58051fbbe2a5f55446654fff60d8d,03/10/2013 19:02:45,,DUPLICATE,https://github.com/CarbonDev/android_device_htc_msm8960-common/commit/84b5cf0820b04be0ccb3ee0eaacb9d6c772b214e,,,,,,,EXISTS,,,,,,,,,,,,,CarbonDev/android_device_htc_msm8960-common,cyanogen,,,daxxmax,
dazer,ShadowCraft-Engine,"5.4 Sub Tweaks - Added hat triggers per second to adv_params. - Stormlash totem is added to adv_params. - Force stormlash into integer if given a bool. - ShD energy consumption is based off loop calculations, not estimated off something else. - HAT Procs during ShD handled during ShD loop. Reduced non ShD HAT procs by ShD uptime. - Removed some dead code.",03/10/2013 23:23:07,,FALSE-POSITIVE,https://github.com/dazer/ShadowCraft-Engine/commit/1eb1dafe45acc86e357949757a5f37c64f9a1531,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,dazer/ShadowCraft-Engine,,,,,
PAC-man,android_frameworks_base,"FW: Active Display [1/2] + AppBar fixes Squashed commit of the following: Add active display Ring Notifications as implemented on the Motorola Moto X. credit to 0xD34D who i'm assuming wrote most/all of the code. I found it unfinished/broken in his gerrit and simply fixed it, improved & optimized a bit PS2: remove unrelated NavigationBarView diff PS3: optimizations Change-Id: Iad6a62a98adc6cc698dc852f1a1477d3ca601e5d Conflicts: core/java/android/provider/Settings.java core/res/res/values/dimens.xml packages/SystemUI/res/values/dimens.xml packages/SystemUI/res/values/styles.xml packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java packages/SystemUI/src/com/android/systemui/statusbar/tablet/TabletStatusBar.java ActiveDisplay: handle NameNotFound inside notification loop, and handle icon resource == 0 ps4: prevent NPE if dismissed called with null mNotification Change-Id: I880ad698a8c6b203039d09bc95bfbd16ac9f789e Signed-off-by: nuclearmistake <nuclearmistake@gmail.com> refactor 0xD34D's changes to active display and add Vanir's improvements still not sure where the original ""porn display"" came from as it was called.. but thanks for porting mr scheff. more to come. ps3: FIX A FUCKING STACK OVERFLOW IN THE SETTINGSOBSERVER. -NUKE Change-Id: Id1dfecf8d1488deb476ffa0f09c8137dcd492567 Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java packages/SystemUI/src/com/android/systemui/statusbar/tablet/TabletStatusBar.java updates to active display: commit da4016824b2e5cad3415cdf8b7b42e25ec39e5ae Author: 0xD34D <clark@scheffsblend.com> Date: Thu Sep 19 19:57:55 2013 -0700 Delay hiding systemui by 100ms When disabling the keyguard, the systemui visibility is changed and can occur after we hide it so delaying this a bit resolves that issue. Change-Id: Iad432f75195983837d643fa38495e6beb54f3e22 commit 4aff6f4e2a9a2d3bff33016ca745993054446311 Author: 0xD34D <clark@scheffsblend.com> Date: Thu Sep 19 13:55:41 2013 -0700 Active display: Add sunlight mode. [1/2] Change-Id: I541e74c5a1a7e6ce5028ab00cf998bba1d4fe0f9 commit 9cd95cf25ffdf8627a54746a114e2399cccca02a Author: PrimeDirective <activethrasher00@gmail.com> Date: Sun Sep 22 11:32:53 2013 -0400 remove observers activate logic until i have more time to get this going. probably easier anyways until the initial wave of development on this subsides Change-Id: Ib38c1dcf35d4a40f606e0a37208e7e26ffbf06a3 commit 45b911b27ac7b9f04852727b7c3bdc08528f1622 Author: PrimeDirective <activethrasher00@gmail.com> Date: Sun Sep 22 11:21:35 2013 -0400 increase notification changer icon size Change-Id: Ia73f556b6bccfe6bd33f7af82ca079509b08f3a9 Change-Id: I4ef6cc5cc61e50caa9416d64551ddfcc60a14520 Conflicts: core/java/android/provider/Settings.java activedisplay: flag_fullscreen for your viewing pleasure Change-Id: I5deb5e3127f854c3e2773dc1b9ffb1336a985d65 Active-D: flag_layout_in_overscan is also needed Change-Id: I08cb92ace6c1eb11f5af8447e1ba45e7ef4ef2c2 Revert ""Active-D: flag_layout_in_overscan is also needed"" This reverts commit ddce9a3a995297c13290885a733a0507cf989545. Change-Id: Ie0710a14e898032a1e95aff84f60aa54a532c8f1 active D: a few fixes ps1: make sure receivers are only registered when the setting is active ps2: combine make sure mNotification is set properly ps3: make active D not shownotification if it's for an incoming call ps4: cleanup Change-Id: I69930a1495cb4fa5e7daa91dde951c097b15fb2f Fix crash in systemui caused by disabling AD. *facepalm* Change-Id: Ibf417b30dab18c70198dc72784c2f1d2021a04c4 active D icon resizing fix layout issues on xhdpi devices for the drag handle increase the size of the overflow notifications slightly increase padding of overflow icons slightly Change-Id: I2f6ab9840916f09045051913763904c003a812e5 Active-D: Eradicate sunlight mode (1/2) Active notifications were designed for devices with a direct relationship between the # of pixels on, and power consumption. ... AND we can drastically reduce the incidence of sunburns among Vanir users by removing this. Change-Id: I0853b1ff88ec1d1ba48de7589f11a7b4d3c4c412 Conflicts: core/java/android/provider/Settings.java Active-D: Increase proximity sensor sampling delay from 60,000 microseconds to 200,000 microseconds (change rate from ~16.6 Hz to 5 Hz) Change-Id: Id92dab800696b5fd0b9f21cfc3fa65225dad9734 Active-D: Unregister proximity sensor when screen turns on, and register when turns off ps2: typo ps3: whitespace Change-Id: I2a66d2f2f8a21cde9c8a278ea985972a6e7c577e Active-D: and girthy. And add some debugging helpers and messages (disabled with final static bool ATM) Flip on debugging temporarily Prevent the proximity sensor from double-tapping when waking the device. Reduce the threshold below which the phone is declared to be in a pocket. Change-Id: I0c38bf33e0461a4b0b014f505e7d3db66f3af344 Active-D: save some B Only enable the proximity sensor for long enough to get one reading at <1 Hz. ps3: fix nomenclature error ps5: don't actually register and unregister the listener... a change that happened while unregistered is not reliably reflected in the values in the callback. ps90: Change handler the settingsobserver is instantiated with, and don't catch securityexceptions to allow systemui to be resurrected if the first notification-showing fails Change-Id: I4627cb4ca27b07fac8f1606c02d886a3efa2af40 Active display: allow hiding low priority notifications. [1/2] ps2: COPY/PASTA Change-Id: I4831d6864b509e62b449c25619c59f5d6760ec47 Change-Id: Ia35cf32cbba54b7ef074df262364bb8107c5068d",04/10/2013 06:15:01,,NOT-FOUND,https://github.com/PAC-man/android_frameworks_base/commit/dcb81acde1fe5733cf47fc4ab72b18f37e27de70,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,PAC-man/android_frameworks_base,,,,,
AOKP,device_htc_msm8960-common,power: Manage the notify_on_migrate setting * We don't want to do this with the screen off as it would cause higher power consumption. * Remove timer/sampling rate management. Change-Id: I326b4fca13e58051fbbe2a5f55446654fff60d8d,04/10/2013 14:13:56,,DUPLICATE,https://github.com/AOKP/device_htc_msm8960-common/commit/4a8832c9a69e32da5ca89a8db52fca29af772129,,,,,,,EXISTS,,,,,,,,,,,,,AOKP/device_htc_msm8960-common,cyanogen,,,Whitehawkx,
SlimRoms,device_htc_msm8960-common,power: Manage the notify_on_migrate setting * We don't want to do this with the screen off as it would cause higher power consumption. * Remove timer/sampling rate management. Change-Id: I326b4fca13e58051fbbe2a5f55446654fff60d8d,05/10/2013 08:55:34,,DUPLICATE,https://github.com/SlimRoms/device_htc_msm8960-common/commit/a916cd5d3e25204dfea589cd35ecca92ca087424,,,,,,,EXISTS,,,,,,,,,,,,,SlimRoms/device_htc_msm8960-common,cyanogen,,,Flinny,
BigBrother1984,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption.",05/10/2013 09:39:44,,DUPLICATE,https://github.com/BigBrother1984/android_packages_apps_Phone/commit/6d0e57dedb4f41357cc95f555c8d3b599765c3ef,,,,,,,EXISTS,,,,,,,,,,,,,BigBrother1984/android_packages_apps_Phone,,,,BigBrother1984,
pato,LEDStatusIndicator,Super duper power efficient (4.5uA idle),06/10/2013 00:51:54,,OK,https://github.com/patopop007/LEDStatusIndicator/commit/7e2b16003b0bc570766401a4d61934959fde0381,https://github.com/pato/LEDStatusIndicator/commit/7e2b16003b0bc570766401a4d61934959fde0381,,[OK] [DISABLE COMPONENT],[OK] [Disable components] [Disable peripherals],[OK] [DISABLE COMPONENT],[Disable components] [Disable peripherals] [DISABLE COMPONENT],EXISTS,[Disable all unused peripherals] [Turn off analog comparator] [Go to sleep mode],[power saving],[Go to sleep] [Disable component],[Wait for interrupt idling],,Multiple changes,Certain,MCU,No,Application,C++,Super duper power efficient (4.5uA idle),pato/LEDStatusIndicator,,[Polling avoidance],,,MCU
mauiaaron,apple2,"Timing model back to nanosleep for sound fidelity This is part 1 of 2 * Proper emulator timing is critical for emulating the Apple2 speaker with a square wave on a modern soundcard. The AppleWin sources provided reference, inspiration, and source for both timing and speaker emulation code. * cpu.S, cpu.h, timing.c : OK so I flip-flopped quite a bit here on how best to do proper emulator timing, but the previous spinloop implementation was not one of my more enlightened decisions :P ... cpu/power consumption nightmare ... * ds-shim.h, win-shim.h -- Shims for Windows-isms and DirectSound-isms. I assume these will eventually be refactored away... * soundcore.[hc], speaker.[hc] -- Directly ported from a recent version of AppleWin. Everything I've added should be braced with #ifdef APPLE2IX. * soundcore-alsa.[hc] -- An ALSA backend using mmap'ed soundcard access.",06/10/2013 06:48:52,,UNABLE-TO-CATEGORIZE,https://github.com/mauiaaron/apple2/commit/41a1f3d598c2cad552c871f8db6e149d214ecff3,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,mauiaaron/apple2,mauiaaron,,,mauiaaron,
BigBrother1984,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Conflicts: src/com/android/phone/PhoneGlobals.java",06/10/2013 14:52:08,,DUPLICATE,https://github.com/BigBrother1984/android_packages_apps_Phone/commit/65cf4ec70e71bf42febe5acfdd10cecd1e099e2c,,,,[VERIFIED] [https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],,[https://github.com/snandlal/Phone/commit/2af4c02a639536747ba906fb245b1b3d08f84a0f],EXISTS,,,,,,,,,,,,,BigBrother1984/android_packages_apps_Phone,,,,BigBrother1984,
EthanJ99,samsung-kernel-aries,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",07/10/2013 01:16:48,,NOT-FOUND,https://github.com/EthanJ99/samsung-kernel-aries/commit/6570ecf23dd58f9f156114ea7cce9c54477ee9f6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EthanJ99/samsung-kernel-aries,,,,,
EthanJ99,samsung-kernel-aries,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",07/10/2013 02:06:35,,NOT-FOUND,https://github.com/EthanJ99/samsung-kernel-aries/commit/5b9b14865a76bd1e4e5ed8caaa8d1410ddba6641,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EthanJ99/samsung-kernel-aries,,,,,
EthanJ99,samsung-kernel-aries,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",07/10/2013 03:05:30,,NOT-FOUND,https://github.com/EthanJ99/samsung-kernel-aries/commit/5b76842dc23137a7b2353cabfb67e9f892c089e1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EthanJ99/samsung-kernel-aries,,,,,
ptakalok,ofono,"[rilmodem] Add support for RIL_REQUEST_SCREEN_STATE request Support for RIL_REQUEST_SCREEN_STATE request will decrease power consumption as RILD will notify the baseband to suppress certain notifications (eg. signal strength and changes in LAC/CID, etc.). Implementation listens to MCE's ""display_status_ind"" DBus signal for sending RIL_REQUEST_SCREEN_STATE. Signed-off-by: Petri Takalokastari <petri.takalokastari@oss.tieto.com>",07/10/2013 14:48:26,,OK,https://github.com/ptakalok/ofono/commit/9e474ea0d0048c4666967b9dec51e2bcba9f2fb0,,,[DO NOT ANALYZE],[OK] [Add support for notification event] [Enable notification suppression],[OK] [?],[Add support for notification event] [Enable notification suppression] [?],EXISTS,[Add support for RIL_REQUEST_SCREEN_STATE request],[will decrease power consumption as RILD will notify the baseband to suppress certain notifications],[Enable notification suppression],[Use power saving feature],,,Certain,Ofono !,No,Libraries and Utilities,C,"Support for RIL_REQUEST_SCREEN_STATE request will decrease power consumption as RILD will notify the baseband to suppress certain notifications (eg. signal strength and changes in LAC/CID, etc.).",ptakalok/ofono,ptakalok,[Use power efficient library/device],,ptakalok,RIL
mr-caos,codeforces,Power Consumption accepted,07/10/2013 16:33:30,,FALSE-POSITIVE,https://github.com/mr-caos/codeforces/commit/c270e987b0ab58b6338b0a635515a6bfd6c2d1ed,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute energy consumption],[FALSE-POSITIVE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,mr-caos/codeforces,mr-caos,,,mr-caos,
denisbohm,firefly-ice-firmware,power saving tweaks,07/10/2013 19:09:46,,DUPLICATE,https://github.com/denisbohm/firefly-ice-firmware/commit/d19d766c238218cb6c176ba931b9a8c61319752a,,,,,,,EXISTS,,,,,,,,,,,,,denisbohm/firefly-ice-firmware,denisbohm,,,denisbohm,
mihai,gaia,Bug 911001 - Don't reset power save mode when battery almost empty. r=alive,09/10/2013 20:28:17,,FALSE-POSITIVE,https://github.com/mcirlanaru/gaia/commit/41f2ed96519374937607db5baa2e4804e8a7e125,https://github.com/mihai/gaia/commit/41f2ed96519374937607db5baa2e4804e8a7e125,,[RELATED][Do not reset power saving],[RELATED] [Bug fix] [Do not reset power saving],[RELATED] [Bug fix] [Do not reset power saving],[Bug fix] [Do not reset power saving],EXISTS,,,,,,,,,,,,,mihai/gaia,,,,,
mozilla-b2g,gaia,Merge pull request #12683 from mcirlanaru/bug_911001 Bug 911001 - Don't reset power save mode when battery almost empty. r=@alivedise,09/10/2013 23:57:51,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/952234afce7b50b908f75b2f3830168a6b9b941b,,,[DO NOT ANALYZE],[DUPLICATE] [41f2ed96519374937607db5baa2e4804e8a7e125],[DUPLICATE],[41f2ed96519374937607db5baa2e4804e8a7e125],EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,mihai,,,mihai,
escapewindow,test-beagle,Bumping gaia.json for 2 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/c4813215e307 Author: Mihai C��rl��naru <mihai@cirlanaru.com> Desc: Merge pull request #12683 from mcirlanaru/bug_911001 Bug 911001 - Don't reset power save mode when battery almost empty. r=@alivedise ======== https://hg.mozilla.org/integration/gaia-central/rev/d5d519230d96 Author: Mihai Cirlanaru <mihai@cirlanaru.com> Desc: Bug 911001 - Don't reset power save mode when battery almost empty. r=alive,10/10/2013 00:06:35,,NOT-FOUND,https://github.com/escapewindow/test-beagle/commit/d5129a7379ed66fcb67b7a6794b997f43c0b2c1e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,escapewindow/test-beagle,,,,,
jugglinmike,gaia,Merge pull request #12683 from mcirlanaru/bug_911001 Bug 911001 - Don't reset power save mode when battery almost empty. r=@alivedise,10/10/2013 00:11:41,,DUPLICATE,https://github.com/jugglinmike/gaia/commit/952234afce7b50b908f75b2f3830168a6b9b941b,,,,,,,EXISTS,,,,,,,,,,,,,jugglinmike/gaia,mihai,,,mihai,
etiennesegonzac,gaia,Merge pull request #12683 from mcirlanaru/bug_911001 Bug 911001 - Don't reset power save mode when battery almost empty. r=@alivedise,10/10/2013 10:03:45,,DUPLICATE,https://github.com/etiennesegonzac/gaia/commit/952234afce7b50b908f75b2f3830168a6b9b941b,,,,,,,EXISTS,,,,,,,,,,,,,etiennesegonzac/gaia,mihai,,,mihai,
jMelpri,uX_packages_apps_phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption. Credits to Chris Lei",10/10/2013 14:32:05,,DUPLICATE,https://github.com/jMelpri/uX_packages_apps_phone/commit/4c0c68c9e660dd459546b595345f056a647e0f11,,,,,,,EXISTS,,,,,,,,,,,,,jMelpri/uX_packages_apps_phone,AndroidRul3z,,,jMelpri,
systemd,systemd,"event: add timer accuracy/coalescing logic In order to improve energy consumption we should minimize our wake-ups when handling timers. Hence, for each timer take an accuracy value and schedule the actual wake-up time somewhere between the specified time and the specified timer plus the accuracy. The specified time of timer event sources hence becomes the time the handler is called the *earliest*, and the specified time plus the accuracy the time by which it is called the *latest*, leaving the library the freedom to schedule the wake-up somewhere inbetween. If the accuracy is specified as 0 the default of 250ms will be used. When scheduling timeouts we will now try to elapse them at the same point within each second, across the entire system. We do this by using a fixed perturbation value keyed off the boot id. If this point within a second is not in the acceptable range, we try again with a fixed time within each 250ms time step. If that doesn't work either, we wake up at the last possible time.",10/10/2013 19:37:14,,OK,https://github.com/systemd/systemd/commit/c2ba3ad6604ef2e189d7e0a36d6911116e84d3ab,,,[OK][MINIMIZE WAKEUPS],[OK] [Enable batch request] [Enable request coalescing] [MINIMIZE WAKEUPS],[OK] [IMPROVE WAKE-UPS],[Enable batch request] [Enable request coalescing] [MINIMIZE WAKEUPS] [IMPROVE WAKE-UPS],EXISTS,[add timer accuracy/coalescing logic],[minimize wake-ups when handling timers],[Minimize wake-up] [Batch wake-up request] [Enable request coalescing],[Batching],,Trade accuracy for power,Certain,Linux,No,OS,C,"In order to improve energy consumption we should minimize our wake-ups when handling timers.  Hence, for each timer take an accuracy value and schedule the actual wake-up time somewhere between the specified time and the specified timer plus the accuracy.",systemd/systemd,mezcalero,[Miscellaneous],,mezcalero,Software stack?
nandrews0424,halflife-vr,"More ep2 tweaks, added calibrated eye offset settings, tweaked power consumption for underwater, sprint & flashlight",12/10/2013 16:28:15,,FALSE-POSITIVE,https://github.com/nandrews0424/halflife-vr/commit/7cdb657df360ce5d3d4da44957e1f431733ac9a3,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,nandrews0424/halflife-vr,nandrews0424,,,nandrews0424,
chaosdorf,dorfmap,index: add phases and total power consumption,12/10/2013 17:10:29,,FALSE-POSITIVE,https://github.com/chaosdorf/dorfmap/commit/75194687c8b0aaee04fcd5ddab6f9fa0c4b6e579,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,chaosdorf/dorfmap,derf,,,derf,
chaosdorf,dorfmap,power consumption: fix a phase copypaste failure,12/10/2013 17:11:46,,DUPLICATE,https://github.com/chaosdorf/dorfmap/commit/b95b7688349b48b0e4a1d65e6265ead74d469822,,,,[FALSE-POSITIVE] [VERIFY],,[VERIFY],EXISTS,,,,,,,,,,,,,chaosdorf/dorfmap,derf,,,derf,
chaosdorf,dorfmap,coordinates: Adjust Putzlicht power consumption (way higher than previously calculated),12/10/2013 19:58:15,,FALSE-POSITIVE,https://github.com/chaosdorf/dorfmap/commit/9b52b8379320887859171045698d22e2d114e553,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,chaosdorf/dorfmap,derf,,,derf,
rangerofthewest,Pangeo-dev,Updated README.txt to include climbing energy consumption,12/10/2013 23:13:11,,FALSE-POSITIVE,https://github.com/rangerofthewest/Pangeo-dev/commit/2cebdfd6ebb6eefd58c22553104aa6c228330f0b,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,rangerofthewest/Pangeo-dev,rangerofthewest,,,rangerofthewest,
jalbertbowden,us-data,state energy consumption per capita from 1960-2008 data shapefile,14/10/2013 05:01:11,,FALSE-POSITIVE,https://github.com/jalbertbowden/us-data/commit/6358a3cecf2390962485fa816b58310ff4176d2a,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,jalbertbowden/us-data,jalbertbowden,,,jalbertbowden,
AriZuu,picoos,Call __WFI in idle task loop for cortex-m cpu to save power.,15/10/2013 10:31:24,,OK,https://github.com/AriZuu/picoos/commit/6fc2cfe8adb4741b44c9565c9ff193b98e8d631a,,,[DO NOT ANALYZE],[OK] [Wait for interrupt] [Go to idle],[OK][GO TO IDLE],[Wait for interrupt] [Go to idle],EXISTS,[Call __WFI in idle task loop],[power saving],[Wait for interrupt] [Idle waiting for interrupt],[Wait for interrupt idling],,,Certain,Pico]Os,No,OS,C,Call __WFI in idle task loop for cortex-m cpu to save power.,AriZuu/picoos,AriZuu,[Polling avoidance],,AriZuu,Embedded OS/Kernel
senseobservationsystems,sense-android-library,Merge pull request #83 from senseobservationsystems/pref3GenergySaving Pref3 genergy saving,16/10/2013 10:20:43,,FALSE-POSITIVE,https://github.com/senseobservationsystems/sense-android-library/commit/33802cbafb94f025daeca540e4e4e3be2d2ab9a8,,,[OK][TRANSMIT ON IF WIFI][ANDROID],[OK] [Cool] [Postpone transmission when not in Wifi] [TRANSMIT ON IF WIFI] [Android],[OK] [TRANSMIT ON IF WIFI],[Cool] [Postpone transmission when not in Wifi] [TRANSMIT ON IF WIFI] [Android],EXISTS,,,,,,,Certain,Android,No,Application library/framework,Java,Pref3 genergy saving,senseobservationsystems/sense-android-library,pimnijdam,,,pimnijdam,Library
openenergymonitor,emonTH,power saving tweaks,16/10/2013 14:26:13,,DUPLICATE,https://github.com/openenergymonitor/emonTH/commit/e80faebc0f61f1f13cc7703c36c2fdc655606bfc,,,,,,,EXISTS,,,,,,,,,,,,,openenergymonitor/emonTH,glynhudson,,,glynhudson,
mozilla,gecko-dev,"Bumping gaia.json for 42 gaia-1_2 revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-1_2/rev/99a682eb5a4f Author: gasolin <gasolin@gmail.com> Desc: Merge pull request #12882 from gasolin/issue-922620 Bug 922620 - Wap push service activated by default, r=arthur(cherry picked from commit ede2d9704615a13f946705ed6550a0d89b3b230e) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/cb8749548088 Author: Fernando Campo <fernando.campo@o2.com> Desc: Merge pull request #12831 from fcampo/export-handle-errors-914125 Bug 914125 - Export page doesn't handle errors (r=arcturus)(cherry picked from commit 1248ea07e150211f1713625ba5140d59e269068c) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/52ff66b05e48 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12876 from cctuan/911117 Bug 911117 - [flatfish] Headset icon is lost on status bar if booting up...(cherry picked from commit 3d4f1107e6e91e5f5649edc0f2565ac837111d7d) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/7e8cdc498691 Author: Greg Weng <snowmantw@gmail.com> Desc: Merge pull request #12845 from snowmantw/issue919888 Bug 919888 - [Lockscreen] The phone unlock itself if you force turn off the screen before unlock(cherry picked from commit 623bdabc5724b05149df76798664608de57d495b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/97b2ed15b85e Author: Cristian Rodriguez <crdlc@tid.es> Desc: Merge pull request #12811 from gitmai/bug-925355-export-url-fb-vcard Bug 925355 - VCARD not export FB url(cherry picked from commit a737c4d7a49d39dbfdd64646432e26aa735bf85d) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/53d92f7d028e Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #11857 from cctuan/851189 Bug 851189 - Move feedback button up one level(cherry picked from commit 95eae7eac0f99711c224d3b42fe103314b0cd705) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f3bfbc98eae0 Author: Arthur Chen <crh0716@gmail.com> Desc: Merge pull request #12850 from crh0716/920722 Bug 920722 - Change the layout to avoid overlapping r=evelyn(cherry picked from commit ab7c5f13dacd4f58604c422d654bf8f2e5c2e6a3) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a137ce2aa1c4 Author: Fabrice Desr�� <fabrice@desre.org> Desc: Bug 925149 - Launching preinstalled twitter app from a SIM Customization launches marketplace, not twitter r=yurenju (cherry picked from commit 360402d59a8354c018d79517266f5673785b0869) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/45ba2c3a477d Author: Ghislain 'Aus' Lacroix <aus@noiseport.org> Desc: Merge pull request #12864 from nullaus/fix-call-support-contacts bug 925520 - fix undesired closure, handle error case.(cherry picked from commit 4a704d649f010de7c4de69f9fed58856bacb1fd0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/5d084bea6228 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12810 from cctuan/922983 Bug 922983 - fix locale inconsistent for zh-TW(cherry picked from commit cf912b3ef234bff03f91e57e182a2982271f0acf) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/00d661aa369d Author: Luke Chang <lchang@mozilla.com> Desc: Merge pull request #12285 from luke-chang/913397_keyboard_1.5x_graphics Bug 913397 - [Keyboard] Make keyboard app support 1.5x graphics, r=rudylu(cherry picked from commit 17e871ae1f82699793e3cd28acda805ba724a8b6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/afa02e2b3543 Author: gasolin <gasolin@gmail.com> Desc: Merge pull request #12840 from gasolin/issue-923088 Bug 923088 - [Settings] Change network mode names to make them user frie..., r=crh0716(cherry picked from commit 7c6a7b1bfb8a33ccf8af64c83c5100f26eb211c1) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f6afcca958e6 Author: Albert <acperez@tid.es> Desc: Merge pull request #12676 from acperez/bug-923766 Bug 923766 - Single variant applications are not placed in correct position in the homescreen(cherry picked from commit 5fd0d24152f20ab316596a0b4bd7a7f10b4e3ff7) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/7051082a63b0 Author: Gregor Wagner <anygregor@gmail.com> Desc: Merge pull request #11206 from leob2g/Bug_898917_Reduce_Indicator_Timeout_to_display_recording_geo-sensor_icon_after_finish Bug 898917 - [Statusbar][Camera][Geo] Reduce Indicator Timeout to displa...(cherry picked from commit 14d1425e5bf82aa622139ebf816b8090cfceea92) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/71b95ba03945 Author: Ben Kelly <bkelly@mozilla.com> Desc: Merge pull request #12778 from wanderview/contacts-render-jank Bug 925348: Spread out contact scroll rendering work. r=arcturus(cherry picked from commit 01e5ae83a57ac5df4e173edb83c2ad2e2d8dfec0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a40112d642b3 Author: Anthony Ricaud <anthony@ricaud.me> Desc: Bug 919931 - After hanging up a phone call, the time on status bar disappears r=alive (cherry picked from commit 1cc90da783d7753f1edc6fba4fb1d4bf4376239a) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/e980b68e997f Author: Arthur Chen <crh0716@gmail.com> Desc: Merge pull request #12460 from crh0716/919861 Bug 919861 - Connect a new device until the previous one is disconnected r=evelyn(cherry picked from commit 3381068ae32d5b1fb0f37eefe030c54c4dbd4494) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/d89869ab9624 Author: John Hu <johu@mozilla.com> Desc: Merge pull request #12543 from huchengtw-moz/camera/Bug_921821_picture_size_larger_when_rotating Bug 921821 - [Buri][Camera]The picture size larger than normally size wh...r=djf(cherry picked from commit 68dd4121263af5c90aaefc400a64b862e4eeb8d6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/582c54b14c42 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12690 from cctuan/923918 Bug 923918 - upload icons(cherry picked from commit ddcc1fd9d3c91a0ab8f257664ada5e6ed87d5a9a) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a1b68e9ac9d5 Author: John Hu <johu@mozilla.com> Desc: Merge pull request #12603 from huchengtw-moz/video/Bug_915911_read_title_from_metadata Bug 915911 - [Video] Saving a video from web will not retain the video n..., r=djf(cherry picked from commit 60bb46e0082284d46d74d6c043003b3ef89d4351) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f5506510c1da Author: Alive.Kuo <alegnadise@gmail.com> Desc: Merge pull request #12782 from alivedise/bugzilla/925609/remove-windowmanager-screenshots Bug 925609 - Remove WindowManager.screenshots, r=timdream(cherry picked from commit 0ee3a340830895f8571c0a1f16971d586605d989) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/ea9d54fa8ef4 Author: mai <mri@tid.es> Desc: Bug 914999 - Mobile phone is not well-formed on vcard export (cherry picked from commit a0d9deba6e37300c9d4c8921ce0dab3885b38134) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/b4934d170c9e Author: Timothy Guan-tin Chien <timdream@gmail.com> Desc: Merge pull request #12680 from timdream/bug923788 Bug 923788 - Calculate position of lock screen icons based with calc() from center, r=gweng(cherry picked from commit eb969daed4fcc0e2d7c96771c3f1fdf10ed6e57b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/313e38522ba9 Author: Germ��n Toro del Valle <gtorodelvalle@gmail.com> Desc: Merge pull request #12767 from jmcanterafonseca/fix_924400 Bug 924400 - A no name contact imported from the SIM card does not allow...(cherry picked from commit e2ca5da33ff6ac022fd7628c3870ed6ae8c481ce) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/8b099673c9fb Author: Mihai C��rl��naru <mihai@cirlanaru.com> Desc: Merge pull request #12683 from mcirlanaru/bug_911001 Bug 911001 - Don't reset power save mode when battery almost empty. r=@alivedise(cherry picked from commit 952234afce7b50b908f75b2f3830168a6b9b941b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/428976be101d Author: Jose M. Cantera <jmcanterafonseca@gmail.com> Desc: Merge pull request #12662 from jmcanterafonseca/fix_sim_msg_no_contacts Bug 923093 - No message while importing contacts from SIM when there are...(cherry picked from commit 77fa96d7db8e25ac359d8747db9d51ebbd940e71) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/d4b4afd6b80d Author: Germ��n Toro del Valle <gtorodelvalle@gmail.com> Desc: Merge pull request #12732 from jmcanterafonseca/fix_tel_merge Bug 924064 - [Contacts] Two entries are created for the same number with...(cherry picked from commit a3c4729583dc09eec343779e2d5d63e5e7bf17c0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/6146806454eb Author: Jose M. Cantera <jmcanterafonseca@gmail.com> Desc: Merge pull request #12730 from gtorodelvalle/contacts-bug-924385-no-duplicates-overlay Bug 924385 - [Contacts] The closing of the ""No duplicates"" overlay leave s the Contacts app unusable (no events dispathed).(cherry picked from commit 0a9c648c13bbbc90365242b07ef58775e2030979) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/68a86ed98f17 Author: Kevin Grandon <kevingrandon@yahoo.com> Desc: Merge pull request #12685 from KevinGrandon/bug_923871_defer_sim_import Bug 923871 - [Contacts] Do not load import_sim_contacts.js for list display r=arcturus(cherry picked from commit a97b97c77743c56978859770e63007c64bf70aa6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/32490bcbd7e6 Author: Francisco Jordano <arcturus@ardeenelinfierno.com> Desc: Merge pull request #12686 from KevinGrandon/bug_923873_contacts_defer_overlay Bug 923873 - [Contacts] Do not load overlay.js for list display(cherry picked from commit a33085ab19a7201ee6abd593f8987b6c17cec629) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/c205104b18b4 Author: James Burke <jrburke@gmail.com> Desc: Merge pull request #12525 from paulrouget/turn-screen-on-on-debug-prompt Bug 914557 - Turn on the screen (brightness, not unlock) when the connect prompt appears. r=alive(cherry picked from commit e519499e33a92b8ccb757492b9ff59d174cf23b3) ======== h ...",16/10/2013 15:43:04,,FALSE-POSITIVE,https://github.com/mozilla/integration-gecko-dev/commit/e1041dbb7ec2ac1e0c25562f8c324e3276e4d273,https://github.com/mozilla/gecko-dev/commit/e1041dbb7ec2ac1e0c25562f8c324e3276e4d273,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,mozilla/gecko-dev,,,,,
mozilla,mozilla-central,"Bumping gaia.json for 42 gaia-1_2 revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-1_2/rev/99a682eb5a4f Author: gasolin <gasolin@gmail.com> Desc: Merge pull request #12882 from gasolin/issue-922620 Bug 922620 - Wap push service activated by default, r=arthur(cherry picked from commit ede2d9704615a13f946705ed6550a0d89b3b230e) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/cb8749548088 Author: Fernando Campo <fernando.campo@o2.com> Desc: Merge pull request #12831 from fcampo/export-handle-errors-914125 Bug 914125 - Export page doesn't handle errors (r=arcturus)(cherry picked from commit 1248ea07e150211f1713625ba5140d59e269068c) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/52ff66b05e48 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12876 from cctuan/911117 Bug 911117 - [flatfish] Headset icon is lost on status bar if booting up...(cherry picked from commit 3d4f1107e6e91e5f5649edc0f2565ac837111d7d) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/7e8cdc498691 Author: Greg Weng <snowmantw@gmail.com> Desc: Merge pull request #12845 from snowmantw/issue919888 Bug 919888 - [Lockscreen] The phone unlock itself if you force turn off the screen before unlock(cherry picked from commit 623bdabc5724b05149df76798664608de57d495b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/97b2ed15b85e Author: Cristian Rodriguez <crdlc@tid.es> Desc: Merge pull request #12811 from gitmai/bug-925355-export-url-fb-vcard Bug 925355 - VCARD not export FB url(cherry picked from commit a737c4d7a49d39dbfdd64646432e26aa735bf85d) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/53d92f7d028e Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #11857 from cctuan/851189 Bug 851189 - Move feedback button up one level(cherry picked from commit 95eae7eac0f99711c224d3b42fe103314b0cd705) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f3bfbc98eae0 Author: Arthur Chen <crh0716@gmail.com> Desc: Merge pull request #12850 from crh0716/920722 Bug 920722 - Change the layout to avoid overlapping r=evelyn(cherry picked from commit ab7c5f13dacd4f58604c422d654bf8f2e5c2e6a3) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a137ce2aa1c4 Author: Fabrice Desr�� <fabrice@desre.org> Desc: Bug 925149 - Launching preinstalled twitter app from a SIM Customization launches marketplace, not twitter r=yurenju (cherry picked from commit 360402d59a8354c018d79517266f5673785b0869) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/45ba2c3a477d Author: Ghislain 'Aus' Lacroix <aus@noiseport.org> Desc: Merge pull request #12864 from nullaus/fix-call-support-contacts bug 925520 - fix undesired closure, handle error case.(cherry picked from commit 4a704d649f010de7c4de69f9fed58856bacb1fd0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/5d084bea6228 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12810 from cctuan/922983 Bug 922983 - fix locale inconsistent for zh-TW(cherry picked from commit cf912b3ef234bff03f91e57e182a2982271f0acf) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/00d661aa369d Author: Luke Chang <lchang@mozilla.com> Desc: Merge pull request #12285 from luke-chang/913397_keyboard_1.5x_graphics Bug 913397 - [Keyboard] Make keyboard app support 1.5x graphics, r=rudylu(cherry picked from commit 17e871ae1f82699793e3cd28acda805ba724a8b6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/afa02e2b3543 Author: gasolin <gasolin@gmail.com> Desc: Merge pull request #12840 from gasolin/issue-923088 Bug 923088 - [Settings] Change network mode names to make them user frie..., r=crh0716(cherry picked from commit 7c6a7b1bfb8a33ccf8af64c83c5100f26eb211c1) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f6afcca958e6 Author: Albert <acperez@tid.es> Desc: Merge pull request #12676 from acperez/bug-923766 Bug 923766 - Single variant applications are not placed in correct position in the homescreen(cherry picked from commit 5fd0d24152f20ab316596a0b4bd7a7f10b4e3ff7) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/7051082a63b0 Author: Gregor Wagner <anygregor@gmail.com> Desc: Merge pull request #11206 from leob2g/Bug_898917_Reduce_Indicator_Timeout_to_display_recording_geo-sensor_icon_after_finish Bug 898917 - [Statusbar][Camera][Geo] Reduce Indicator Timeout to displa...(cherry picked from commit 14d1425e5bf82aa622139ebf816b8090cfceea92) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/71b95ba03945 Author: Ben Kelly <bkelly@mozilla.com> Desc: Merge pull request #12778 from wanderview/contacts-render-jank Bug 925348: Spread out contact scroll rendering work. r=arcturus(cherry picked from commit 01e5ae83a57ac5df4e173edb83c2ad2e2d8dfec0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a40112d642b3 Author: Anthony Ricaud <anthony@ricaud.me> Desc: Bug 919931 - After hanging up a phone call, the time on status bar disappears r=alive (cherry picked from commit 1cc90da783d7753f1edc6fba4fb1d4bf4376239a) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/e980b68e997f Author: Arthur Chen <crh0716@gmail.com> Desc: Merge pull request #12460 from crh0716/919861 Bug 919861 - Connect a new device until the previous one is disconnected r=evelyn(cherry picked from commit 3381068ae32d5b1fb0f37eefe030c54c4dbd4494) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/d89869ab9624 Author: John Hu <johu@mozilla.com> Desc: Merge pull request #12543 from huchengtw-moz/camera/Bug_921821_picture_size_larger_when_rotating Bug 921821 - [Buri][Camera]The picture size larger than normally size wh...r=djf(cherry picked from commit 68dd4121263af5c90aaefc400a64b862e4eeb8d6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/582c54b14c42 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12690 from cctuan/923918 Bug 923918 - upload icons(cherry picked from commit ddcc1fd9d3c91a0ab8f257664ada5e6ed87d5a9a) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a1b68e9ac9d5 Author: John Hu <johu@mozilla.com> Desc: Merge pull request #12603 from huchengtw-moz/video/Bug_915911_read_title_from_metadata Bug 915911 - [Video] Saving a video from web will not retain the video n..., r=djf(cherry picked from commit 60bb46e0082284d46d74d6c043003b3ef89d4351) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f5506510c1da Author: Alive.Kuo <alegnadise@gmail.com> Desc: Merge pull request #12782 from alivedise/bugzilla/925609/remove-windowmanager-screenshots Bug 925609 - Remove WindowManager.screenshots, r=timdream(cherry picked from commit 0ee3a340830895f8571c0a1f16971d586605d989) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/ea9d54fa8ef4 Author: mai <mri@tid.es> Desc: Bug 914999 - Mobile phone is not well-formed on vcard export (cherry picked from commit a0d9deba6e37300c9d4c8921ce0dab3885b38134) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/b4934d170c9e Author: Timothy Guan-tin Chien <timdream@gmail.com> Desc: Merge pull request #12680 from timdream/bug923788 Bug 923788 - Calculate position of lock screen icons based with calc() from center, r=gweng(cherry picked from commit eb969daed4fcc0e2d7c96771c3f1fdf10ed6e57b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/313e38522ba9 Author: Germ��n Toro del Valle <gtorodelvalle@gmail.com> Desc: Merge pull request #12767 from jmcanterafonseca/fix_924400 Bug 924400 - A no name contact imported from the SIM card does not allow...(cherry picked from commit e2ca5da33ff6ac022fd7628c3870ed6ae8c481ce) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/8b099673c9fb Author: Mihai C��rl��naru <mihai@cirlanaru.com> Desc: Merge pull request #12683 from mcirlanaru/bug_911001 Bug 911001 - Don't reset power save mode when battery almost empty. r=@alivedise(cherry picked from commit 952234afce7b50b908f75b2f3830168a6b9b941b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/428976be101d Author: Jose M. Cantera <jmcanterafonseca@gmail.com> Desc: Merge pull request #12662 from jmcanterafonseca/fix_sim_msg_no_contacts Bug 923093 - No message while importing contacts from SIM when there are...(cherry picked from commit 77fa96d7db8e25ac359d8747db9d51ebbd940e71) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/d4b4afd6b80d Author: Germ��n Toro del Valle <gtorodelvalle@gmail.com> Desc: Merge pull request #12732 from jmcanterafonseca/fix_tel_merge Bug 924064 - [Contacts] Two entries are created for the same number with...(cherry picked from commit a3c4729583dc09eec343779e2d5d63e5e7bf17c0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/6146806454eb Author: Jose M. Cantera <jmcanterafonseca@gmail.com> Desc: Merge pull request #12730 from gtorodelvalle/contacts-bug-924385-no-duplicates-overlay Bug 924385 - [Contacts] The closing of the ""No duplicates"" overlay leave s the Contacts app unusable (no events dispathed).(cherry picked from commit 0a9c648c13bbbc90365242b07ef58775e2030979) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/68a86ed98f17 Author: Kevin Grandon <kevingrandon@yahoo.com> Desc: Merge pull request #12685 from KevinGrandon/bug_923871_defer_sim_import Bug 923871 - [Contacts] Do not load import_sim_contacts.js for list display r=arcturus(cherry picked from commit a97b97c77743c56978859770e63007c64bf70aa6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/32490bcbd7e6 Author: Francisco Jordano <arcturus@ardeenelinfierno.com> Desc: Merge pull request #12686 from KevinGrandon/bug_923873_contacts_defer_overlay Bug 923873 - [Contacts] Do not load overlay.js for list display(cherry picked from commit a33085ab19a7201ee6abd593f8987b6c17cec629) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/c205104b18b4 Author: James Burke <jrburke@gmail.com> Desc: Merge pull request #12525 from paulrouget/turn-screen-on-on-debug-prompt Bug 914557 - Turn on the screen (brightness, not unlock) when the connect prompt appears. r=alive(cherry picked from commit e519499e33a92b8ccb757492b9ff59d174cf23b3) ======== h ...",16/10/2013 15:45:51,,DUPLICATE,https://github.com/mozilla/mozilla-central/commit/cf3ea13f4e814fc6b7984bb38303668fbb9c0321,,,,,,,EXISTS,,,,,,,,,,,,,mozilla/mozilla-central,,,,,
mozilla,releases-mozilla-aurora,"Bumping gaia.json for 42 gaia-1_2 revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-1_2/rev/99a682eb5a4f Author: gasolin <gasolin@gmail.com> Desc: Merge pull request #12882 from gasolin/issue-922620 Bug 922620 - Wap push service activated by default, r=arthur(cherry picked from commit ede2d9704615a13f946705ed6550a0d89b3b230e) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/cb8749548088 Author: Fernando Campo <fernando.campo@o2.com> Desc: Merge pull request #12831 from fcampo/export-handle-errors-914125 Bug 914125 - Export page doesn't handle errors (r=arcturus)(cherry picked from commit 1248ea07e150211f1713625ba5140d59e269068c) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/52ff66b05e48 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12876 from cctuan/911117 Bug 911117 - [flatfish] Headset icon is lost on status bar if booting up...(cherry picked from commit 3d4f1107e6e91e5f5649edc0f2565ac837111d7d) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/7e8cdc498691 Author: Greg Weng <snowmantw@gmail.com> Desc: Merge pull request #12845 from snowmantw/issue919888 Bug 919888 - [Lockscreen] The phone unlock itself if you force turn off the screen before unlock(cherry picked from commit 623bdabc5724b05149df76798664608de57d495b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/97b2ed15b85e Author: Cristian Rodriguez <crdlc@tid.es> Desc: Merge pull request #12811 from gitmai/bug-925355-export-url-fb-vcard Bug 925355 - VCARD not export FB url(cherry picked from commit a737c4d7a49d39dbfdd64646432e26aa735bf85d) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/53d92f7d028e Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #11857 from cctuan/851189 Bug 851189 - Move feedback button up one level(cherry picked from commit 95eae7eac0f99711c224d3b42fe103314b0cd705) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f3bfbc98eae0 Author: Arthur Chen <crh0716@gmail.com> Desc: Merge pull request #12850 from crh0716/920722 Bug 920722 - Change the layout to avoid overlapping r=evelyn(cherry picked from commit ab7c5f13dacd4f58604c422d654bf8f2e5c2e6a3) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a137ce2aa1c4 Author: Fabrice Desr�� <fabrice@desre.org> Desc: Bug 925149 - Launching preinstalled twitter app from a SIM Customization launches marketplace, not twitter r=yurenju (cherry picked from commit 360402d59a8354c018d79517266f5673785b0869) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/45ba2c3a477d Author: Ghislain 'Aus' Lacroix <aus@noiseport.org> Desc: Merge pull request #12864 from nullaus/fix-call-support-contacts bug 925520 - fix undesired closure, handle error case.(cherry picked from commit 4a704d649f010de7c4de69f9fed58856bacb1fd0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/5d084bea6228 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12810 from cctuan/922983 Bug 922983 - fix locale inconsistent for zh-TW(cherry picked from commit cf912b3ef234bff03f91e57e182a2982271f0acf) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/00d661aa369d Author: Luke Chang <lchang@mozilla.com> Desc: Merge pull request #12285 from luke-chang/913397_keyboard_1.5x_graphics Bug 913397 - [Keyboard] Make keyboard app support 1.5x graphics, r=rudylu(cherry picked from commit 17e871ae1f82699793e3cd28acda805ba724a8b6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/afa02e2b3543 Author: gasolin <gasolin@gmail.com> Desc: Merge pull request #12840 from gasolin/issue-923088 Bug 923088 - [Settings] Change network mode names to make them user frie..., r=crh0716(cherry picked from commit 7c6a7b1bfb8a33ccf8af64c83c5100f26eb211c1) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f6afcca958e6 Author: Albert <acperez@tid.es> Desc: Merge pull request #12676 from acperez/bug-923766 Bug 923766 - Single variant applications are not placed in correct position in the homescreen(cherry picked from commit 5fd0d24152f20ab316596a0b4bd7a7f10b4e3ff7) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/7051082a63b0 Author: Gregor Wagner <anygregor@gmail.com> Desc: Merge pull request #11206 from leob2g/Bug_898917_Reduce_Indicator_Timeout_to_display_recording_geo-sensor_icon_after_finish Bug 898917 - [Statusbar][Camera][Geo] Reduce Indicator Timeout to displa...(cherry picked from commit 14d1425e5bf82aa622139ebf816b8090cfceea92) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/71b95ba03945 Author: Ben Kelly <bkelly@mozilla.com> Desc: Merge pull request #12778 from wanderview/contacts-render-jank Bug 925348: Spread out contact scroll rendering work. r=arcturus(cherry picked from commit 01e5ae83a57ac5df4e173edb83c2ad2e2d8dfec0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a40112d642b3 Author: Anthony Ricaud <anthony@ricaud.me> Desc: Bug 919931 - After hanging up a phone call, the time on status bar disappears r=alive (cherry picked from commit 1cc90da783d7753f1edc6fba4fb1d4bf4376239a) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/e980b68e997f Author: Arthur Chen <crh0716@gmail.com> Desc: Merge pull request #12460 from crh0716/919861 Bug 919861 - Connect a new device until the previous one is disconnected r=evelyn(cherry picked from commit 3381068ae32d5b1fb0f37eefe030c54c4dbd4494) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/d89869ab9624 Author: John Hu <johu@mozilla.com> Desc: Merge pull request #12543 from huchengtw-moz/camera/Bug_921821_picture_size_larger_when_rotating Bug 921821 - [Buri][Camera]The picture size larger than normally size wh...r=djf(cherry picked from commit 68dd4121263af5c90aaefc400a64b862e4eeb8d6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/582c54b14c42 Author: George <georgeiscoming@gmail.com> Desc: Merge pull request #12690 from cctuan/923918 Bug 923918 - upload icons(cherry picked from commit ddcc1fd9d3c91a0ab8f257664ada5e6ed87d5a9a) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/a1b68e9ac9d5 Author: John Hu <johu@mozilla.com> Desc: Merge pull request #12603 from huchengtw-moz/video/Bug_915911_read_title_from_metadata Bug 915911 - [Video] Saving a video from web will not retain the video n..., r=djf(cherry picked from commit 60bb46e0082284d46d74d6c043003b3ef89d4351) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/f5506510c1da Author: Alive.Kuo <alegnadise@gmail.com> Desc: Merge pull request #12782 from alivedise/bugzilla/925609/remove-windowmanager-screenshots Bug 925609 - Remove WindowManager.screenshots, r=timdream(cherry picked from commit 0ee3a340830895f8571c0a1f16971d586605d989) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/ea9d54fa8ef4 Author: mai <mri@tid.es> Desc: Bug 914999 - Mobile phone is not well-formed on vcard export (cherry picked from commit a0d9deba6e37300c9d4c8921ce0dab3885b38134) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/b4934d170c9e Author: Timothy Guan-tin Chien <timdream@gmail.com> Desc: Merge pull request #12680 from timdream/bug923788 Bug 923788 - Calculate position of lock screen icons based with calc() from center, r=gweng(cherry picked from commit eb969daed4fcc0e2d7c96771c3f1fdf10ed6e57b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/313e38522ba9 Author: Germ��n Toro del Valle <gtorodelvalle@gmail.com> Desc: Merge pull request #12767 from jmcanterafonseca/fix_924400 Bug 924400 - A no name contact imported from the SIM card does not allow...(cherry picked from commit e2ca5da33ff6ac022fd7628c3870ed6ae8c481ce) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/8b099673c9fb Author: Mihai C��rl��naru <mihai@cirlanaru.com> Desc: Merge pull request #12683 from mcirlanaru/bug_911001 Bug 911001 - Don't reset power save mode when battery almost empty. r=@alivedise(cherry picked from commit 952234afce7b50b908f75b2f3830168a6b9b941b) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/428976be101d Author: Jose M. Cantera <jmcanterafonseca@gmail.com> Desc: Merge pull request #12662 from jmcanterafonseca/fix_sim_msg_no_contacts Bug 923093 - No message while importing contacts from SIM when there are...(cherry picked from commit 77fa96d7db8e25ac359d8747db9d51ebbd940e71) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/d4b4afd6b80d Author: Germ��n Toro del Valle <gtorodelvalle@gmail.com> Desc: Merge pull request #12732 from jmcanterafonseca/fix_tel_merge Bug 924064 - [Contacts] Two entries are created for the same number with...(cherry picked from commit a3c4729583dc09eec343779e2d5d63e5e7bf17c0) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/6146806454eb Author: Jose M. Cantera <jmcanterafonseca@gmail.com> Desc: Merge pull request #12730 from gtorodelvalle/contacts-bug-924385-no-duplicates-overlay Bug 924385 - [Contacts] The closing of the ""No duplicates"" overlay leave s the Contacts app unusable (no events dispathed).(cherry picked from commit 0a9c648c13bbbc90365242b07ef58775e2030979) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/68a86ed98f17 Author: Kevin Grandon <kevingrandon@yahoo.com> Desc: Merge pull request #12685 from KevinGrandon/bug_923871_defer_sim_import Bug 923871 - [Contacts] Do not load import_sim_contacts.js for list display r=arcturus(cherry picked from commit a97b97c77743c56978859770e63007c64bf70aa6) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/32490bcbd7e6 Author: Francisco Jordano <arcturus@ardeenelinfierno.com> Desc: Merge pull request #12686 from KevinGrandon/bug_923873_contacts_defer_overlay Bug 923873 - [Contacts] Do not load overlay.js for list display(cherry picked from commit a33085ab19a7201ee6abd593f8987b6c17cec629) ======== https://hg.mozilla.org/integration/gaia-1_2/rev/c205104b18b4 Author: James Burke <jrburke@gmail.com> Desc: Merge pull request #12525 from paulrouget/turn-screen-on-on-debug-prompt Bug 914557 - Turn on the screen (brightness, not unlock) when the connect prompt appears. r=alive(cherry picked from commit e519499e33a92b8ccb757492b9ff59d174cf23b3) ======== h ...",16/10/2013 15:50:33,,NOT-FOUND,https://github.com/mozilla/releases-mozilla-aurora/commit/04ef80833cc84d32d8573b7eba7f65bd4a899601,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mozilla/releases-mozilla-aurora,,,,,
snowmantw,gaia,Merge pull request #12683 from mcirlanaru/bug_911001 Bug 911001 - Don't reset power save mode when battery almost empty. r=@alivedise(cherry picked from commit 952234afce7b50b908f75b2f3830168a6b9b941b),17/10/2013 02:51:57,,DUPLICATE,https://github.com/snowmantw/gaia/commit/9f8a2617e7e96d0f8360cdcefed1da48b8f4d73c,,,,[VERIFIED] [https://github.com/mihai/gaia/commit/41f2ed96519374937607db5baa2e4804e8a7e125],,[https://github.com/mihai/gaia/commit/41f2ed96519374937607db5baa2e4804e8a7e125],EXISTS,,,,,,,,,,,,,snowmantw/gaia,mihai,,,jhford,
Resonant-Engine,Universal-Electricity,Fixed bad buildcraft energy consumption calculation,17/10/2013 07:06:48,,NOT-FOUND,https://github.com/Universal-Electricity/Universal-Electricity/commit/8bf606ecdd68c947e48e47597332bdc05c43accf,https://github.com/Resonant-Engine/Universal-Electricity/commit/8bf606ecdd68c947e48e47597332bdc05c43accf,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSITIVE],[Game] [Minecraft],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Resonant-Engine/Universal-Electricity,calclavia,,,calclavia,
tobiasvdp,industrialProcessing,updated recipes for power consumption,17/10/2013 08:48:34,,FALSE-POSITIVE,https://github.com/tobiasvdp/industrialProcessing/commit/3e04043cac753c603137575f585954081b98ae0e,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSITIVE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,tobiasvdp/industrialProcessing,SGStino,,,SGStino,
milaq,android_kernel_hp_tenderloin,msm8660: revise cpu freqtable * Update the voltages with the proposed S/W setting based on HW characterization data to reduce power consumption. Change-Id: Ib6ccdbc8a66e749223b20164ddd6490525870d57 Signed-off-by: Tianyi Gou <tgou@codeaurora.org> (cherry-picked from caf) * remove 1.782GHz and add an intermediate 1.674GHz slot,17/10/2013 11:09:17,,OK,https://github.com/milaq/android_kernel_hp_tenderloin/commit/e7c4cc22b27dc911732e72b7d6e39400765d25a0,,,[DO NOT ANALYZE],[OK] [a2d3ad1eb4cf7f2537ec4b94ac0149549deaa2ca],[OK] [Scale CPU Frequency],[a2d3ad1eb4cf7f2537ec4b94ac0149549deaa2ca] [Scale CPU Frequency],EXISTS,[Update voltages on cpu frequency table],[based on HW characterization data to reduce power consumption],[Reduce voltage] [Reduce voltage based on experiment],[Reduce voltage],,,Certain,Android,No,OS,Java,Update the voltages with the proposed S/W setting based on HW characterization data to reduce power consumption.,milaq/android_kernel_hp_tenderloin,milaq,[Frequency and voltage scaling],,milaq,Kernel arch
AlexBokhankovich,android_kernel_pantech_ef47s,"prima: Release 3.2.1.1 The following changes were merged in this release: -- Scan optimizations to support concurrency: New Features: 1. Sessionize SME scan cache 2. Separate beacon & porbe rsp entry for PE scan cache 3. Enable scan break down logic in SME for multi-session Fixes: The change fixes issue with host initiated scans interferring with WFD connection and causing jitter in the video stream on the WFD connection -- IMPS mode, TX COMP interrupt flooding fix: To stop TX COMP interrupt with IMPS mode, RIVA shuld power down. But whatever reason, if RIVA could not power down, TX COMP INT could not be cleared and infinite INT may happen -- Fix for issue RIVA does not seem to be getting into BMPS mode: The reason riva does not enter in to power save is because after the connection to the AP (Configured 40Mhz channel in 2.4Ghz) the driver sends the invalid cb mode in the finish scan request to the Riva if we are in scan window. The issue does not show up if we are not in scan window. The reason driver sends the invalid cb mode is because after receiving the join beacon the variable psessionEntry->htSecondaryChannelOffset in the function limCheckAndAnnounceJoinSuccess is over writing with the AP secondary offset. Signed-off-by: Iliyan Malchev <malchev@google.com>",17/10/2013 17:35:52,,UNABLE-TO-CATEGORIZE,https://github.com/AlexBokhankovich/android_kernel_pantech_ef47s/commit/d880919714b383474a1d026e6c8454140b42ee49,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,AlexBokhankovich/android_kernel_pantech_ef47s,,,,AlexBokhankovich,
RAZR-K-Devs,android_kernel_motorola_omap4-common,omap: gpu: Set core OV for OV request of SGX OC. Disable some IVA nitrosb OPPs for power savings,18/10/2013 11:13:35,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/1e7a2fb21adc143139087c7ce61a29db248e038a,,,[DO NOT ANALYZE],[OK] [Disable components] [Android],[OK] [Disable component],[Disable components] [Android] [Disable component],EXISTS,[Disable some OPPs],[power saving],[Reduce max frequency],[DVFS] [Sub1: Reduce max frequency],,,Certain,Android,No,OS,C,Disable some IVA nitrosb OPPs for power savings,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,[Frequency and voltage scaling],,dtrail,Kernel arch
Cl3Kener,HERC-KERNELS,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",18/10/2013 17:44:58,,NOT-FOUND,https://github.com/Cl3Kener/HERC-KERNELS/commit/e5a6ca9623840d315d1bdc9b525cf75bf52a5e6c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Cl3Kener/HERC-KERNELS,faux123,,,Cl3Kener,
Cl3Kener,HERC-KERNELS,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com>",18/10/2013 18:25:03,,NOT-FOUND,https://github.com/Cl3Kener/HERC-KERNELS/commit/0cb4cd8ce3f4c84265f9abfcdb4552416aad2475,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Cl3Kener/HERC-KERNELS,,,,,
dylanryan,PiInTheSky,Try digital output low for xbee power savings.,18/10/2013 19:42:22,,OK,https://github.com/dylanryan/PiInTheSky/commit/42d626d7c0fbfb64e2cec50ec5b72e02fd7809da,,,[DO NOT ANALYZE],[OK] [Set digital output low] [Hardware],[OK] [Set digital output low],[Set digital output low] [Hardware],EXISTS,[Set digital output low],[xbee power saving],[Set digital output low],[Pin configuration],,,Certain,Raspberry Pi,No,Application,C++,Try digital output low for xbee power savings.,dylanryan/PiInTheSky,dylanryan,[Pin management],,dylanryan,Raspberry Pi application
LeroViten,samsung-ancora-kernel,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",21/10/2013 20:43:57,,DUPLICATE,https://github.com/LeroViten/samsung-kernel-msm7x30/commit/18a96ad2fb43959c29afc9715048fdc06153d77a,https://github.com/LeroViten/samsung-ancora-kernel/commit/18a96ad2fb43959c29afc9715048fdc06153d77a,,,,,,EXISTS,,,,,,,,,,,,,LeroViten/samsung-ancora-kernel,,,,,
micdoodle8,Galacticraft,Lower power consumption of cargo loader/unloader.,21/10/2013 23:58:33,,FALSE-POSITIVE,https://github.com/micdoodle8/Galacticraft/commit/1b361b850970d76060b156419844b9fd615ac1af,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSITIVE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,micdoodle8/Galacticraft,micdoodle8,,,micdoodle8,
pato,LEDStatusIndicator,Decreased power consumption and fixed debouncing,22/10/2013 04:40:53,,UNABLE-TO-CATEGORIZE,https://github.com/patopop007/LEDStatusIndicator/commit/e1a76fae9b5947799e25128c00de21aa5c76cc65,https://github.com/pato/LEDStatusIndicator/commit/e1a76fae9b5947799e25128c00de21aa5c76cc65,,[OK][?][GO TO IDLE],[OK] [UNABLE-TO-CATEGORIZE],[OK] [UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE] [?] [GO TO IDLE],EXISTS,,,,,,,,,,,,,pato/LEDStatusIndicator,,,,,
rriggio,openwrt-packages,"use seq number, just one retry for unicast probes, power save support",22/10/2013 14:03:44,,NOT-FOUND,https://github.com/rriggio/openwrt-packages/commit/f3879810b32916b662131834d18a79c87f476748,,,[?],[FALSE-POSITIVE] [Added power save support],[?] [APP SPECIFIC],[Added power save support] [APP SPECIFIC],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,rriggio/openwrt-packages,,,,,
chaosdorf,dorfmap,charwrite: add current power consumption preset,22/10/2013 18:46:07,,FALSE-POSITIVE,https://github.com/chaosdorf/dorfmap/commit/acbbe469f722710391a896c0d8a34c96bbcff8c9,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,chaosdorf/dorfmap,derf,,,derf,
lauripiispanen,energiatieto-2.0,produce a breakdown graph of energy consumption and production,23/10/2013 12:30:34,,FALSE-POSITIVE,https://github.com/lauripiispanen/energiatieto-2.0/commit/e9bf5d576b932a5f902fc6bf6e91793733cc700e,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Energy consumption plot],[FALSE-POSITIVE],[Energy consumption plot],EXISTS,,,,,,,,,,,,,lauripiispanen/energiatieto-2.0,lauripiispanen,,,lauripiispanen,
slg1119,Dokdo-Leak-Kernel,power: Samsung factory limit workaround This avoids userspace factory limit of the CPU frequency without breaking power savings mode.,23/10/2013 17:12:45,,DUPLICATE,https://github.com/slg1119/Dokdo-Leak-Kernel/commit/4ab898f97cf4d9326e232231c23e7fa57413d0b5,,,,,,,EXISTS,,,,,,,,,,,,,slg1119/Dokdo-Leak-Kernel,AndreiLux,,,,
linux-sunxi,linux-sunxi,"net: wireless: bcmdhd: fixed power consumption issue of P2P. solution : add wake_lock not to go to suspend during removing P2P GO interface in wl_cfg80211.c. Description of this issue : if device goes to suspend during removing the interface, we will fail to remove P2P GO virtual interface(p2p-p2p0-0). This will causes P2P GO still alive in firmware Bugnizer case id : 10874302 This issue is reported by LG team. Signed-off-by: Ecco Park <eccopark@broadcom.com>",23/10/2013 22:14:37,,OK,https://github.com/linux-sunxi/linux-sunxi/commit/7fda5d6241be134ad50395d86ce53efb5c9aff41,,,[DO NOT ANALYZE],[OK] [Bug fix] [Add wakelock] [Avoid resource leakage],[OK] [BUG FIX],[Bug fix] [Add wakelock] [Avoid resource leakage],EXISTS,[add wake_lock not to go to suspend during removing P2P GO interface,[if device goes to suspend P2P wouldn't be removed and would keep running],[Bug fix] [Avoid resource leakage] [Avoid suspending before releasing resource],[Avoid resource leak],,,Certain,Linux ?,Bugnizer case id : 10874302,OS,C,net: wireless: bcmdhd: fixed power consumption issue of P2P.,linux-sunxi/linux-sunxi,,[Energy bug],,,Driver
dansan,spring-replay-site,stupid power consumption for stupid SEO bots,24/10/2013 11:32:01,,FALSE-POSITIVE,https://github.com/dansan/spring-replay-site/commit/463aae158c941b1a26ce6c1a4c4d621813123174,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,dansan/spring-replay-site,dansan,,,dansan,
WhatHub,kernel_lge_d802,msm: acpuclock-8974: Modify L2 table for 8974 Currently 1.26 GHz and 1.49 GHz in the L2 tables for 8974 map to 800 MHz DDR. With this change the above frequencies now get mapped to 614 MHz DDR. This change maps the above two frequencies to lower DDR and will thereby help save power for use cases which spend majority of time at above frequencies. Change-Id: I7f1cbc12ff7dae28f65863d5c41e68de2db40bfe Signed-off-by: Dilip Gudlur <dgudlur@codeaurora.org>,25/10/2013 09:43:01,,NOT-FOUND,https://github.com/WhatHub/kernel_lge_d802/commit/b332d2a9fe157a0fb3c6a3db7d6a4873f6ee1902,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,WhatHub/kernel_lge_d802,,,,,
chaosdorf,dorfmap,show avg power consumption on hackcenter/kitchen display by default,25/10/2013 16:07:31,,FALSE-POSITIVE,https://github.com/chaosdorf/dorfmap/commit/9c49cd94ecddd49942c0a3244473e1eb999d55c0,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,chaosdorf/dorfmap,derf,,,derf,
htc-msm8960,android_kernel_htc_msm8930,"mmc: msm_sdcc: Add support for dynamic bus clock vote SDCC controller on some targets like 8660, 8960, 8064 and their variants connects with Daytona Fabric (DFAB). To achieve max. possible performance the DFAB clock is voted to 64MHz at the cost of some power consumption. Since we now have dynamic clock scaling for SD/eMMC clock we can also scale the DFAB clock accordingly without impact on performance but have some power savings in low throughput cases. Change-Id: Ic26541d6845b65803aa813d672ccabdfc4658d9c Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org> Conflicts: drivers/mmc/host/msm_sdcc.c drivers/mmc/host/msm_sdcc.h",26/10/2013 20:04:46,,DUPLICATE,https://github.com/htc-msm8960/android_kernel_htc_msm8930/commit/a04e83a100f20325b58a182b94b0e214d91607b9,,,[DO NOT ANALYZE],[?] [DUPLICATE] [71ef771bd11dcbaef0055d142760c7b8ff041a7f],[DUPLICATED],[DUPLICATE] [71ef771bd11dcbaef0055d142760c7b8ff041a7f],EXISTS,,,,,,,,,,,,,htc-msm8960/android_kernel_htc_msm8930,,,,h8rift,
Ntemis,Bexus-N,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",27/10/2013 14:05:57,,DUPLICATE,https://github.com/Ntemis/Bexus-N/commit/49e763aff66e0450df0ab4093f7e188691d96ae8,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/Bexus-N,longman88,,,Ntemis,
Ntemis,Bexus-N,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",27/10/2013 14:06:42,,DUPLICATE,https://github.com/Ntemis/Bexus-N/commit/fa1426d5f1a95b397dd23da7fb3a96c28245d58a,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/Bexus-N,faux123,,,Ntemis,
lgritz,oiio,"Allow more slop in the timer_test (tolerance of 1/100s instead of 1/1000s). For some reason, this test fails on OS 10.9 Mavericks, seemingly because there's a bit more slop in how long a usleep() really takes to wake you up again. It used to be within 1/1000s, but sometimes it's a bit more on this OS. Changing the tolerance to 1/100s makes the tests pass, and I don't see any problem with it. I've read that one of Mavericks' major design goals was to improve memory efficiency, and apparently the process scheduler tries very hard to juggle time slices around to make slices abut (to amortize the power efficiency of the Intel chips, which have to ramp up and down a bit when there's processor activity). It wouldn't surprise me if this ends up making usleep just a bit less consistent in precisely how long it will be before the process wakes up again. How's that for a hypothesis?",28/10/2013 05:40:34,,FALSE-POSITIVE,https://github.com/lgritz/oiio/commit/0e56fa5a55f9df6ceabd1db19c7f4e10c60f28a5,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,lgritz/oiio,lgritz,,,lgritz,
lgritz,oiio,"Allow more slop in the timer_test (tolerance of 1/100s instead of 1/1000s). For some reason, this test fails on OS 10.9 Mavericks, seemingly because there's a bit more slop in how long a usleep() really takes to wake you up again. It used to be within 1/1000s, but sometimes it's a bit more on this OS. Changing the tolerance to 1/100s makes the tests pass, and I don't see any problem with it. I've read that one of Mavericks' major design goals was to improve memory efficiency, and apparently the process scheduler tries very hard to juggle time slices around to make slices abut (to amortize the power efficiency of the Intel chips, which have to ramp up and down a bit when there's processor activity). It wouldn't surprise me if this ends up making usleep just a bit less consistent in precisely how long it will be before the process wakes up again. How's that for a hypothesis?",28/10/2013 05:47:49,,DUPLICATE,https://github.com/lgritz/oiio/commit/7fdffae72f4893df699aefb095daa24919423f56,,,,,,,EXISTS,,,,,,,,,,,,,lgritz/oiio,lgritz,,,lgritz,
lgritz,oiio,"Allow more slop in the timer_test (tolerance of 1/100s instead of 1/1000s). For some reason, this test fails on OS 10.9 Mavericks, seemingly because there's a bit more slop in how long a usleep() really takes to wake you up again. It used to be within 1/1000s, but sometimes it's a bit more on this OS. Changing the tolerance to 1/100s makes the tests pass, and I don't see any problem with it. I've read that one of Mavericks' major design goals was to improve power efficiency, and apparently the process scheduler tries very hard to juggle time slices around to make slices abut (to amortize the power efficiency of the Intel chips, which have to ramp up and down a bit when there's processor activity). It wouldn't surprise me if this ends up making usleep just a bit less consistent in precisely how long it will be before the process wakes up again. How's that for a hypothesis?",28/10/2013 18:38:49,,DUPLICATE,https://github.com/lgritz/oiio/commit/f64a2cc54c30711c19fea21487281a35e1e97592,,,,[VERIFIED] [https://github.com/lgritz/oiio/commit/0e56fa5a55f9df6ceabd1db19c7f4e10c60f28a5],,[https://github.com/lgritz/oiio/commit/0e56fa5a55f9df6ceabd1db19c7f4e10c60f28a5],EXISTS,,,,,,,,,,,,,lgritz/oiio,lgritz,,,lgritz,
lgritz,oiio,"Allow more slop in the timer_test (tolerance of 1/100s instead of 1/1000s). For some reason, this test fails on OS 10.9 Mavericks, seemingly because there's a bit more slop in how long a usleep() really takes to wake you up again. It used to be within 1/1000s, but sometimes it's a bit more on this OS. Changing the tolerance to 1/100s makes the tests pass, and I don't see any problem with it. I've read that one of Mavericks' major design goals was to improve power efficiency, and apparently the process scheduler tries very hard to juggle time slices around to make slices abut (to amortize the power efficiency of the Intel chips, which have to ramp up and down a bit when there's processor activity). It wouldn't surprise me if this ends up making usleep just a bit less consistent in precisely how long it will be before the process wakes up again. How's that for a hypothesis?",28/10/2013 18:39:06,,DUPLICATE,https://github.com/lgritz/oiio/commit/6562870935988cc0ff9d40fb5be6b5c76a270296,,,,,,,EXISTS,,,,,,,,,,,,,lgritz/oiio,lgritz,,,lgritz,
ktoonsez,KTManta,"net: wireless: bcmdhd: fixed power consumption issue of P2P. solution : add wake_lock not to go to suspend during removing P2P GO interface in wl_cfg80211.c. Description of this issue : if device goes to suspend during removing the interface, we will fail to remove P2P GO virtual interface(p2p-p2p0-0). This will causes P2P GO still alive in firmware Bugnizer case id : 10874302 This issue is reported by LG team. Signed-off-by: Ecco Park <eccopark@broadcom.com>",28/10/2013 19:50:20,,DUPLICATE,https://github.com/ktoonsez/KTManta/commit/bcf4c95b9464ff353fcf0752a2bb7b865ca00f46,,,,,,,EXISTS,,,,,,,,,,,,,ktoonsez/KTManta,,,,ktoonsez,
Ntemis,Bexus-N,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",28/10/2013 21:25:00,,DUPLICATE,https://github.com/Ntemis/Bexus-N/commit/7757ad1de00020d3a3dd0642ef4f5021cbe7f686,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/Bexus-N,longman88,,,Ntemis,
Ntemis,Bexus-N,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",28/10/2013 21:25:53,,DUPLICATE,https://github.com/Ntemis/Bexus-N/commit/bca4e1ca54b4199b984f310bde9f4fe4566fac69,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/Bexus-N,faux123,,,Ntemis,
OpenImageIO,oiio,"Allow more slop in the timer_test (tolerance of 1/100s instead of 1/1000s). For some reason, this test fails on OS 10.9 Mavericks, seemingly because there's a bit more slop in how long a usleep() really takes to wake you up again. It used to be within 1/1000s, but sometimes it's a bit more on this OS. Changing the tolerance to 1/100s makes the tests pass, and I don't see any problem with it. I've read that one of Mavericks' major design goals was to improve power efficiency, and apparently the process scheduler tries very hard to juggle time slices around to make slices abut (to amortize the power efficiency of the Intel chips, which have to ramp up and down a bit when there's processor activity). It wouldn't surprise me if this ends up making usleep just a bit less consistent in precisely how long it will be before the process wakes up again. How's that for a hypothesis?",29/10/2013 04:11:41,,DUPLICATE,https://github.com/OpenImageIO/oiio/commit/6562870935988cc0ff9d40fb5be6b5c76a270296,,,,,,,EXISTS,,,,,,,,,,,,,OpenImageIO/oiio,lgritz,,,lgritz,
lgritz,oiio,"Allow more slop in the timer_test (tolerance of 1/100s instead of 1/1000s). For some reason, this test fails on OS 10.9 Mavericks, seemingly because there's a bit more slop in how long a usleep() really takes to wake you up again. It used to be within 1/1000s, but sometimes it's a bit more on this OS. Changing the tolerance to 1/100s makes the tests pass, and I don't see any problem with it. I've read that one of Mavericks' major design goals was to improve power efficiency, and apparently the process scheduler tries very hard to juggle time slices around to make slices abut (to amortize the power efficiency of the Intel chips, which have to ramp up and down a bit when there's processor activity). It wouldn't surprise me if this ends up making usleep just a bit less consistent in precisely how long it will be before the process wakes up again. How's that for a hypothesis?",29/10/2013 04:13:34,,DUPLICATE,https://github.com/lgritz/oiio/commit/6562870935988cc0ff9d40fb5be6b5c76a270296,,,,,,,EXISTS,,,,,,,,,,,,,lgritz/oiio,lgritz,,,lgritz,
Cilph,RemoteTech2,"KSC Omni Range: 75Mm. Tripled dish angles, lowered power consumption.",29/10/2013 21:53:09,,NOT-FOUND,https://github.com/Cilph/RemoteTech2/commit/4f9072a7b71984a7d5aec169202fbfb41651eefa,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Cilph/RemoteTech2,,,,,
o11s,open80211s,mac80211: fixes for mesh powersave logic Mesh beacon was not being rebuild after a mesh power save mode change. In order to solve this issue use ieee80211_mbss_info_change_notify; which triggers a mesh beacon rebuild; instead of using ieee80211_bss_info_change_notify. Signed-off-by: Javier Lopez <jlopex@cozybit.com>,29/10/2013 23:36:42,,FALSE-POSITIVE,https://github.com/cozybit/open80211s/commit/8fca921018e5e94ceabd998a6b3de1acce34ee1b,https://github.com/o11s/open80211s/commit/8fca921018e5e94ceabd998a6b3de1acce34ee1b,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,o11s/open80211s,jlopex,,,jlopex,
nikhiljan93,sony_yuga_kernel,"mmc: core: Add support for notifying host driver while scaling clocks Host drivers can participate in clock scaling by registering ->notify_load host operation, which allows host driver to carry out platform specific operations for further power savings or increasing throughput based on whether load is LOW or HIGH respectively. This can be applicable to non-ultra high speed cards as well so remove the check for ultra high speed cards to initialize clock scaling. Change-Id: Icaab9520135e384f5470db68b2f25c5cdce5663a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",30/10/2013 17:22:30,,DUPLICATE,https://github.com/nikhiljan93/sony_yuga_kernel/commit/d4681b41d91dac39beecc4633f35ea901f48806e,,,,,,,EXISTS,,,,,,,,,,,,,nikhiljan93/sony_yuga_kernel,,,,nikhiljan93,
pbouchet,dsn-apps,Added firmware for the power consumption module.,31/10/2013 19:37:34,,FALSE-POSITIVE,https://github.com/pbouchet/dsn-apps/commit/a7bba9575a1bbe7b7c850320306e309e2ebfcf45,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,pbouchet/dsn-apps,pbouchet,,,pbouchet,
VanirAOSP,frameworks_av,Update notes for submitted changes * strtok stores its values in thread local storage. So it can not guarantee works well when multithread environment. AudioFlinger has multithread. so strtok_r is more safe. * ExtendedCodec: Enable timestamp reordering for MPEG4 codec type clips * Reduce LPA bufsize as to 128KB to save power for SA+ * frameworks/av: Support Tunnel Playback * audioflinger: Fix delay in enabling effect for LPA * audioflinger: Fix pops in LPA while effects are applied * Audio: Irregular timing shown at the last few seconds of the local playback. * AwesomePlayer will wake up every 10ms while video is playing. * libstagefright: Optimize h263/mpeg4 assambler to reduce frame dropping in the assambler layer. * Patches related to Matroska Extractor.,01/11/2013 12:01:54,,FALSE-POSITIVE,https://github.com/VanirAOSP/frameworks_av/commit/b0951715df4b1e1b9e49b45efd851b659db7c63b,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,VanirAOSP/frameworks_av,,,,,
VanirAOSP,frameworks_av,Update notes for submitted changes * strtok stores its values in thread local storage. So it can not guarantee works well when multithread environment. AudioFlinger has multithread. so strtok_r is more safe. * ExtendedCodec: Enable timestamp reordering for MPEG4 codec type clips * Reduce LPA bufsize as to 128KB to save power for SA+ * frameworks/av: Support Tunnel Playback * audioflinger: Fix delay in enabling effect for LPA * audioflinger: Fix pops in LPA while effects are applied * Audio: Irregular timing shown at the last few seconds of the local playback. * AwesomePlayer will wake up every 10ms while video is playing. * libstagefright: Optimize h263/mpeg4 assambler to reduce frame dropping in the assambler layer. * Patches related to Matroska Extractor.,01/11/2013 12:19:08,,DUPLICATE,https://github.com/VanirAOSP/frameworks_av/commit/b0951715df4b1e1b9e49b45efd851b659db7c63b,,,,,,,EXISTS,,,,,,,,,,,,,VanirAOSP/frameworks_av,,,,,
VanirAOSP,frameworks_av,Update notes for submitted changes * strtok stores its values in thread local storage. So it can not guarantee works well when multithread environment. AudioFlinger has multithread. so strtok_r is more safe. * ExtendedCodec: Enable timestamp reordering for MPEG4 codec type clips * Reduce LPA bufsize as to 128KB to save power for SA+ * frameworks/av: Support Tunnel Playback * audioflinger: Fix delay in enabling effect for LPA * audioflinger: Fix pops in LPA while effects are applied * Audio: Irregular timing shown at the last few seconds of the local playback. * AwesomePlayer will wake up every 10ms while video is playing. * libstagefright: Optimize h263/mpeg4 assambler to reduce frame dropping in the assambler layer. * Patches related to Matroska Extractor.,01/11/2013 12:29:41,,DUPLICATE,https://github.com/VanirAOSP/frameworks_av/commit/b0951715df4b1e1b9e49b45efd851b659db7c63b,,,,,,,EXISTS,,,,,,,,,,,,,VanirAOSP/frameworks_av,,,,,
jseabold,scripts,Add power save script,02/11/2013 11:20:49,,RELATED,https://github.com/jseabold/scripts/commit/52b1b8105a820a694ed3b5e6076369b129b13b83,,,[DO NOT ANALYZE],[RELATED] [Add power saving script],[RELATED] [Add power saving script],[Add power saving script],EXISTS,,,,,,,,,,,,,jseabold/scripts,jseabold,,,jseabold,
VanirAOSP,frameworks_av,Update notes for submitted changes * strtok stores its values in thread local storage. So it can not guarantee works well when multithread environment. AudioFlinger has multithread. so strtok_r is more safe. * ExtendedCodec: Enable timestamp reordering for MPEG4 codec type clips * Reduce LPA bufsize as to 128KB to save power for SA+ * frameworks/av: Support Tunnel Playback * audioflinger: Fix delay in enabling effect for LPA * audioflinger: Fix pops in LPA while effects are applied * Audio: Irregular timing shown at the last few seconds of the local playback. * AwesomePlayer will wake up every 10ms while video is playing. * libstagefright: Optimize h263/mpeg4 assambler to reduce frame dropping in the assambler layer. * Patches related to Matroska Extractor.,02/11/2013 14:49:47,,DUPLICATE,https://github.com/VanirAOSP/frameworks_av/commit/b0951715df4b1e1b9e49b45efd851b659db7c63b,,,,,,,EXISTS,,,,,,,,,,,,,VanirAOSP/frameworks_av,,,,,
pedropaulovc,CloudSim_DVFS,PowerHEFTPolicy is not energy efficient. Just schedules all tasks in one VM. HEFTPolicy is working well. Allocates 1 fast VM and |V| - 1 slow VMs HEFTLookaheadPolicy schedules correctly but does not present a smaller makespan than HEFTPolicy as expected.,03/11/2013 20:29:17,,FALSE-POSITIVE,https://github.com/pedropaulovc/CloudSim_DVFS/commit/9d65c0ce7df8c4a6cd135d89772592ce4bea32e9,,,[OK][?][SCHEDULE ALL TASKS IN ONE VM],[FALSE-POSITIVE] [VM selection] [VM allocation policy for ]est energy,[OK] [APP SPECIFIC],[VM selection] [VM allocation policy for ] [est energy] [?] [SCHEDULE ALL TASKS IN ONE VM] [APP SPECIFIC],EXISTS,,,,,,,,,,,,,pedropaulovc/CloudSim_DVFS,pedropaulovc,,,pedropaulovc,
lauripiispanen,energiatieto-2.0,heating energy consumption is editable unless electric heating,04/11/2013 16:53:52,,FALSE-POSITIVE,https://github.com/lauripiispanen/energiatieto-2.0/commit/0b28a65cade217d3b9c1b7776fc9be051a0f078b,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,lauripiispanen/energiatieto-2.0,lauripiispanen,,,lauripiispanen,
JetBrains,intellij-community,"in power save mode, display a hint in settings that autopopup completion and automake don't work (IDEA-115749, IDEA-102048)",05/11/2013 11:00:49,,FALSE-POSITIVE,https://github.com/JetBrains/intellij-community/commit/989e597f3daa798b71a7f3b0d157c7fc3cdef60c,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,JetBrains/intellij-community,,,,,
keijiro,midi-bridge-osx,Energy efficiency optimization.,05/11/2013 12:17:36,,OK,https://github.com/keijiro/midi-bridge-osx/commit/045d56074bb4c5c44d7518eaaf74d29eaa96add7,,,[OK][USE ONE OPERATIONS INSTEAD OF THREE],[OK] [REDUCE ASSIGNMENTS],[OK] [APP SPECIFIC],[REDUCE ASSIGNMENTS] [USE ONE OPERATIONS INSTEAD OF THREE] [APP SPECIFIC],EXISTS,[Reduce status image update],[Energy efficiency],[Avoid refreshing image] [Avoid unnecessary resource usage],[Reduce image refreshing],,,Certain,OSX,No,Application,ObjectiveC,Energy efficiency optimization.,keijiro/midi-bridge-osx,,[Avoid unnecessary work],,,Application
dannomac,freebsd,Don't return ENOBUFS if the transmit path handles the frame but queues it (eg in power save.) This is definitely an MFC candidate for 10.0-REL. MFC after: 1 week,06/11/2013 18:00:27,,FALSE-POSITIVE,https://github.com/dannomac/freebsd/commit/f293f84ee280135fb6658d3f8a6e6278cee44595,https://github.com/dankm/freebsd/commit/f293f84ee280135fb6658d3f8a6e6278cee44595,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,dannomac/freebsd,,,,,
o11s,open80211s,"mwl8787: dont set IEEE80211_CONF_PS for mesh ps This flag is meant for managed STA ps mode, and it changes meanings depending on what the driver implements. Most drivers we use will go to sleep as soon as IEEE80211_CONF_PS bit is set, and consequently they will ignore any mesh traffic (whereas with mesh PS we want to put them to sleep only after we get their power saving state from a beacon). Signed-off-by: Bob Copeland <me@bobcopeland.com>",06/11/2013 21:30:02,,FALSE-POSITIVE,https://github.com/cozybit/open80211s/commit/c4b82bf5629480b1240a0060355c369815ced901,https://github.com/o11s/open80211s/commit/c4b82bf5629480b1240a0060355c369815ced901,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,o11s/open80211s,bcopeland,,,bcopeland,
Black-Prince,Black_kernel_t1,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",08/11/2013 21:11:55,,DUPLICATE,https://github.com/Black-Prince/Black_kernel_t1/commit/0839a6c5e8aee58045acab3759e4612e43e6c3ed,,,,,,,EXISTS,,,,,,,,,,,,,Black-Prince/Black_kernel_t1,Christopher83,,,Black-Prince,
mikaelpatel,Cosa,Adding example sketch for low power mode evaluation. 1. Modifying Arduino Pro Mini to reduce power consumption. 2. Adding support for software BOD disable. 3. Show different contributions to low power.,09/11/2013 15:28:05,,UNABLE-TO-CATEGORIZE,https://github.com/mikaelpatel/Cosa/commit/b5f39ddafee95d552effe2ec1c917e8033139dbe,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,mikaelpatel/Cosa,mikaelpatel,,,mikaelpatel,
patkan,lightning-detector,switching mosfets for the ENC28J60 for energy saving :D,09/11/2013 22:08:22,,UNABLE-TO-CATEGORIZE,https://github.com/patkan/lightning-detector/commit/e8e93f2a03ef8a0729da7672864b27f1477719f4,,,[OK][BETTER HARDWARE SUPPORT],[OK][BETTER HARDWARE SUPPORT],[OK] [UNABLE-TO-CATEGORIZE],[BETTER HARDWARE SUPPORT] [UNABLE-TO-CATEGORIZE],EXISTS,,,,,,,,,,,,,patkan/lightning-detector,Virtex7,,,Virtex7,
AnakinMac,MPlayerX,Keep ARC parts remove unnecessary timer from loop to prevent energy consumption,10/11/2013 06:25:51,,NOT-FOUND,https://github.com/AnakinMac/MPlayerX/commit/ae986f18b2ac7d00f12172c21d54e4cc07831d7e,,,[NOT-FOUND],[NOT-FOUND],[NOT-FOUND],,EXISTS,,,,,,,,,,,,,AnakinMac/MPlayerX,,,,,
scorpion-afi,oscilator,print format for printing power consumption has been changed.,10/11/2013 13:48:45,,FALSE-POSITIVE,https://github.com/scorpion-afi/oscilator/commit/63f1a11fa12b46d9ccdf126388301592de2b5988,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,scorpion-afi/oscilator,scorpion-afi,,,scorpion-afi,
SlashHacker,ic2stuff,"Version 1.2.0a added * Seed Storage Unit added * Industrial Workbench is now smart about power consumption * Multiple bug fixes, including a duplication bug",11/11/2013 06:05:59,,FALSE-POSITIVE,https://github.com/SlashHacker/ic2stuff/commit/e6db213dde182c71b3070be05468daaba1a21e57,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSITIVE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,SlashHacker/ic2stuff,,,,,
zombiepantslol,PKGBUILDs,power saving disabled by default,12/11/2013 17:57:12,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/zombiepantslol/PKGBUILDs/commit/bcd7c2d346983d8e5b416e62f2ad4d235805a897,,,[DO NOT ANALYZE],[RELATED] [Disable power saving],[RELATED] [Disable power saving],[Disable power saving],EXISTS,,,,,,,,,,,,,zombiepantslol/PKGBUILDs,zombiepantslol,,,zombiepantslol,
opinsys,puavo-users,rest: disable USB power save for fatclients and thinclients USB autosuspend might be causing some trouble with various smartboards and WLAN accesspoints. This commit forces thinclients and fatclients to disable USB autosuspend for all USB devices. It is not something we like to have with laptops though.,13/11/2013 07:53:02,,TRADEOFF,https://github.com/opinsys/puavo-users/commit/1bfb72030a7265bfe18b9a623b2bf1218834d4fd,,,[DO NOT ANALYZE],[TRADEOFF] [Disable power save] [Disabe USB autosuspend],[TRADEOFF] [Disable power save] [Disabe USB autosuspend],[Disable power save] [Disabe USB autosuspend],EXISTS,[Disable USB power save],[Fix issues] [Fix issues with smartboards and WLAN accesspoints],,,,,Uncertain,?,Yes,Application,Ruby,,opinsys/puavo-users,tuomasjjrasanen,Correctness,,tuomasjjrasanen,Application
opinsys,puavo-users,rest: disable USB power save for fatclients and thinclients USB autosuspend might be causing some trouble with various smartboards and WLAN accesspoints. This commit forces thinclients and fatclients to disable USB autosuspend for all USB devices. It is not something we like to have with laptops though.,13/11/2013 07:58:49,,DUPLICATE,https://github.com/opinsys/puavo-users/commit/01098bfc4864220a761177309ca542a1454ecffe,,,,,,,EXISTS,,,,,,,,,,,,,opinsys/puavo-users,tuomasjjrasanen,,,tuomasjjrasanen,
madridii,ancora_kernel,net: wireless: bcmdhd: fixed power consumption issue of P2P,13/11/2013 18:16:20,,NOT-FOUND,https://github.com/madridii/ancora_kernel/commit/4c12fa633bae8e6e426991d63134b65bc3e432ea,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,madridii/ancora_kernel,,,,,
madridii,ancora_kernel,"Revert ""net: wireless: bcmdhd: fixed power consumption issue of P2P"" This reverts commit 4c12fa633bae8e6e426991d63134b65bc3e432ea.",13/11/2013 18:48:54,,NOT-FOUND,https://github.com/madridii/ancora_kernel/commit/e33ed9b25d36dff1a826240efa8514ee1d61c35a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,madridii/ancora_kernel,,,,,
ADVANSEE,contiki,cc2538: spi: Add enable and disable functions This makes it possible to reduce the power consumption when the SPI is unused. Signed-off-by: Beno��t Th��baudeau <benoit.thebaudeau@advansee.com>,15/11/2013 15:02:32,,RELATED,https://github.com/ADVANSEE/contiki/commit/cd99cbbad77c289eddb44d3bde824b5f01b7661f,,,[DO NOT ANALYZE],[RELATED] [Add disable option],[RELATED] [Add disable option],[Add disable option],EXISTS,,,,,,,,,,,,,ADVANSEE/contiki,bthebaudeau,,,bthebaudeau,
raymond-w-ko,dot,disable syndaemon for now to save power,18/11/2013 05:05:56,,OK,https://github.com/raymond-w-ko/dot/commit/7209979a9335db2710be220bbc14e16c1f03a504,,,[DO NOT ANALYZE],[OK] [Disable component] [Disable daemon],[OK] [Disable component],[Disable component] [Disable daemon],EXISTS,[disable syndaemon],[it causes a signficant amount of wakeups in powertop],[Disable component] [reduce wakeup] [Disable daemon] [Stop using energy ineficient program],[Disable inefficient service],,,Certain,Personal config files?,No,Libraries and Utilities,init.rc script,disable syndaemon for now to save power,raymond-w-ko/dot,raymond-w-ko,[Disabling feature/devices],,raymond-w-ko,Script init.rc
KTHHVAC,OpenTestbed,"added some methods to manage the time, and methods to convert signals into power consumptions",18/11/2013 17:46:20,,FALSE-POSITIVE,https://github.com/KTHHVAC/OpenTestbed/commit/7efe1b5c91d33a2c82856b8cc18aba5febecb607,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,KTHHVAC/OpenTestbed,damianovar,,,damianovar,
vincentkriek,phonebell,"Disable timer interrupt when enable bit is not on. Save power, I guess",18/11/2013 22:03:55,,OK,https://github.com/vincentkriek/phonebell/commit/7533c9f56bfaec86d40b3b5a0bd970db6feb8f23,,,[DO NOT ANALYZE],[OK] [Disable component] [Disable timer interrupt],"[OK] [Disable Component] [""Save power, I guess""]","[Disable component] [Disable timer interrupt] [""Save power, I guess""]",EXISTS,[Disable timer interrupt when enable bit is not on],[power saving],[Disable component] [Disable timer interrupt],[Disable component],,,Uncertain,MCU,No,Application,C,"Disable timer interrupt when enable bit is not on. Save power, I guess",vincentkriek/phonebell,vincentkriek,[Disabling feature/devices],,vincentkriek,MCU
rjha,aws,added notes for power saver modes and gsm modem on battery,19/11/2013 18:20:43,,FALSE-POSITIVE,https://github.com/rjha/aws/commit/b3191883e9c33d04b4cc11074fdb42b6efba359a,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,rjha/aws,rjha,,,rjha,
pdziepak,Haiku,scheduler: Try to pack IRQs in power saving mode,20/11/2013 11:53:04,,OK,https://github.com/pdziepak/Haiku/commit/c4ac37a35e449a07393867fed7278f377cca8dbf,,,[DO NOT ANALYZE],[OK] [Batch request] [Aggregate IRQs],[OK] [?],[Batch request] [Aggregate IRQs] [?],EXISTS,[pack IRQs in power saving mode],[power saving],[Aggregate IRQs] [Batch interrupt requests],[Batching],,,Certain,Haiku,No,OS,C++,scheduler: Try to pack IRQs in power saving mode,pdziepak/Haiku,pdziepak,[Miscellaneous],,pdziepak,Kernel
scristian,scripts,monitor power consumption for IBM Blade Center,20/11/2013 12:54:48,,FALSE-POSITIVE,https://github.com/scristian/scripts/commit/9762946369fb2054fb6db99b4198ed2c0cd8a555,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute energy consumption],[FALSE-POSITIVE],[Compute energy consumption],EXISTS,,,,,,,,,,,,,scristian/scripts,scristian,,,scristian,
ADVANSEE,contiki,cc2538: spi: Add enable and disable functions This makes it possible to reduce the power consumption when the SPI is unused. Signed-off-by: Beno��t Th��baudeau <benoit.thebaudeau@advansee.com>,20/11/2013 13:21:59,,DUPLICATE,https://github.com/ADVANSEE/contiki/commit/e8a8870d1dce4d5c978098715786802f586edf58,,,,,,,EXISTS,,,,,,,,,,,,,ADVANSEE/contiki,bthebaudeau,,,bthebaudeau,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"omap: opp: voltage: Raise voltage up to -5mV under stock and adjust values between each OPP for better stability and battery consumption. When using too low voltage values it can result in a higher power consumption because the system tries to compensate low power states while being on high frequencies by pulling more energy (Smartreflex) - excuse this explanation, because of my bad ENglish I'm maybe not able to explain it like I want :)",20/11/2013 17:16:14,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/4f6c5e5c8f66987e10a5d598ae1a0f6c9378605e,,,[DO NOT ANALYZE],[OK] [Increase voltage] [Android],[OK] [Increase voltage],[Increase voltage] [Android],EXISTS,[Raise voltage up to -5mV under stock],[When using too low voltage values it can result in a higher power consumption because the system tries to compensate low power states while being on high frequencies by pulling more energy],[Increase voltage],[Increase voltage],,,Certain,Android,No,OS,C,"omap: opp: voltage: Raise voltage up to -5mV under stock and adjust values between each OPP for better stability and battery consumption. When using too low voltage values it can result in a higher power consumption because the system tries to compensate low power states while being on high frequencies by pulling more energy (Smartreflex) - excuse this explanation, because of my bad ENglish I'm maybe not able to explain it like I want :)",RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,[Frequency and voltage scaling],,dtrail,Kernel arch
RAZR-K-Devs,android_kernel_motorola_omap4-common,Build Script: Edison: Remove Bootloader CMD line from build script - it's obsolete here. This entries are probably responsible for the bad power consumption on Edison devices.,20/11/2013 17:34:57,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/d1f7f19d40b9c617b5b96b72de0271452cd6b638,,,[DO NOT ANALYZE],[OK] [Remove bootloader commad from build] [Android] [Build script],[OK] [BUG FIX [Remove bootloader commad from build],[Remove bootloader commad from build] [Android] [Build script] [BUG FIX [Remove bootloader commad from build],EXISTS,[Remove Bootloader CMD line from build script],[entry responsible for the bad power consumption],[Improve build script] [Use power saving build],[Building],,,Uncertain,Android,No,Libraries and Utilities,Build script,Build Script: Edison: Remove Bootloader CMD line from build script - it's obsolete here. This entries are probably responsible for the bad power consumption on Edison devices.,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,[Miscellaneous],,dtrail,Build
pdziepak,Haiku,"scheduler: Improve power saving mode * Remove possibility to temporarily disable small task packing. * When small task packing target gets overloaded continue packing threads on another core, but avoid migrating the already packed ones. Scheduler still tends to needlessly migrate threads to another cores when under heavier load, but it is now much better than before.",20/11/2013 19:55:27,,OK,https://github.com/pdziepak/Haiku/commit/ecfd44493554c78001bbe001d35637b7eab0ffb6,,,[DO NOT ANALYZE],[OK] [Move tasks to ligher core],[OK] [Scheduling tasks],[Move tasks to ligher core] [Scheduling tasks],EXISTS,[avoid migrating already packed tasks to another core],[power saving],[Avoid task migration] [Forbid disabling small task packing],[Avoid task migration],,Small task packing,Certain,Haiku,No,OS,C++,"scheduler: Improve power saving mode * Remove possibility to temporarily disable small task packing. * When small task packing target gets overloaded continue packing threads on another core, but avoid migrating the already packed ones.",pdziepak/Haiku,pdziepak,[Miscellaneous],,pdziepak,Kernel
audahadi,xm,"Update compat-wireless from ol_R5.SP3.01 to ol_R5.SP6.01 Commits come from https://github.com/TI-OpenLink/. HTC specific changes are still there. Just the commits leading from SP3.01 to SP6.01 were applied. Non squashed commits can be seen here: https://github.com/thoemy/android_kernel_htc_endeavoru/tree/update-wifi-compat Squashed commit of the following: commit f44feec52868feb8147b9fd31afed470ff31e49c Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 14:15:24 2013 +0200 wl12xx: fix unsafe dereference of the wlvif wlvif could be passed as NULL from the wl1271_tx_work_locked() to the wl1271_prepare_tx_frame() and to wl1271_skb_queue_head() functions. This may lead to a Kernel panic, fix this by validating that wlvif != NULL before using it. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 025cff694bca23e5ce922eb13f4ee081590613ca Author: Eyal Reizer <eyalr@ti.com> Date: Tue Mar 5 17:57:32 2013 +0200 wl12xx:support ap a2dp coex Add functionality to support AP A2DP co-existence: 1. Add configuration for enable/disable of CTS protection in AP mode 2. Add indication for completion of connection establishment in ap mode. This is used by the firmware to change coex parameters when a station is in the process and connecting to the ap and change them back after the connection has been established. Signed-off-by: Eyal Reizer <eyalr@ti.com> commit b362724cdf8d78333121410fa81246d2f1bc4c8e Author: Victor Goldenshtein <victorg@ti.com> Date: Wed Feb 27 11:04:38 2013 +0200 cfg80211: consider security during scan results update AP security changes are not updated in the following scenario: STA performs a scheduled scan on DFS channel during connection to open AP, as some devices (wl12xx) will send a probe req on DFS channels once activity is detected, cfg80211 gets and saves the scan result from a probe resp. STA disconnected and AP security is changed to AES, STA performs a passive scan, cfg80211 gets a new scan result for the same BSSID but now from beacon. cfg80211_bss_update() finds previous scan result from probe resp but the security change is not updated correctly. Fix this by considering security mismatch in rb_find_bss. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 84d2dec74d7352b76d726a3f5f772391e2c7c4a9 Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 13:39:13 2013 +0200 wl12xx: fix unset ret value in wl1271_join Set the ret value before the return statement. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 7d3cf22542673fd0a5bd8a0f0dd21c9e36846f7b Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 13:10:52 2013 +0200 wl12xx: fix mem leak in the channel switch command Channel switch command wasn't freed in certain sanity check, fix this by moving the check before the command allocation. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 98bf0f43c8f9a441d13186753eb99179f7ec5ca2 Author: Eyal Shapira <eyal@wizery.com> Date: Sat Nov 3 16:35:35 2012 +0200 mac80211: reject BA action frames if sent fron non HT STA The FW doesn't work well with BA sessions started from non 802.11n STAs. Reject these as a work around until the FW issue is fixed. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit c53bd9ec1ac5b7adea2c6c485cca5df86cc0d177 Author: Eyal Shapira <eyal@wizery.com> Date: Fri Nov 2 12:14:44 2012 +0200 mac80211: warn on enabling beacon while off channel This can cause the beaconing to start on the wrong channel. Several such races were fixed but still add a WARN_ON as we'd like to know if something like that still happens. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 84b4126a8085a36ae2ff53204679f31c01c0e925 Author: Eyal Shapira <eyal@wizery.com> Date: Fri Nov 2 12:19:21 2012 +0200 wl12xx: improve some debug logs These turned out to be useful so add them. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 2cbd264e7dd001a8ca54289c467f4bf272ef0fb4 Author: Ofir Luzon <ofirluzon@ti.com> Date: Wed Oct 31 14:57:56 2012 +0200 wl12xx: fix list_add/list_del add list_del even if wl in off state Signed-off-by: Ofir Luzon <ofirluzon@ti.com> commit cffd2e38e8a3a15b21c68173954c81896b3a3f0e Author: Yair Shapira <yair.shapira@ti.com> Date: Wed Oct 31 12:48:33 2012 +0200 wl12xx: FW recovery trigger assert bug fix The bug was in the partition mapping. It seems that .mem3 partition that we used to write 'magic' 0xCAFECAFE to address 0x1C is actually in use (it contains the struct part of the FW_STATUS). It is in use although the size of the partition is set to 0 The fix was to save old partition, map a new partition with .mem part set to address 0x1C and remap previous partition after writing 0xCAFECAFE. Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit d2fd56a7755f5136a6a3125f46881387300da850 Author: Yair Shapira <yair.shapira@ti.com> Date: Mon Oct 29 19:56:45 2012 +0200 wl12xx: mutually exclude PLT and normal power modes Small fix done to ensure that PLT mode and normal driver power mode (ifconfig/add_interface) are mutually excluded. This is partially based on wl18xx (R8) commit 6620ca8fe29d Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit fbf346aee8f230b01c4319a2827369406283b7a9 Author: Eyal Shapira <eyal@wizery.com> Date: Thu Oct 25 17:33:57 2012 +0200 wl12xx: check for required fw change while enable or disable role In certain scenarios our current hooks for checking required fw change aren't enough and we could be left in MR even though we've gone back to a single interface. This is of course not good as we prefer running with the SR FW which contains goodies like BTCOEX. An example scanerio is when running P2P GO + STA and then removing the P2P GO. Fix it by adding checks for fw change also while enable or disable roles. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 628cded5472953c4c3997c91e625d736c4444c2f Author: Yair Shapira <yair.shapira@ti.com> Date: Mon Oct 29 16:38:57 2012 +0200 wl12xx: disable elp sleep while in plt mode We now disable elp sleep during plt mode to allow normal operation of plt tools such as calibrator. Having elp_sleep enabled during plt mode is actually not required and in fact it distupt plt operations such as rx statistics etc... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 527a8c9e2fe74985b88dbf8b0918a3cba1b3eeae Author: Arik Nemtsov <arik@wizery.com> Date: Wed Oct 24 22:35:27 2012 +0200 mac80211: purge offchannel Tx on reconfig Offchannel Tx occuring during reconfig can cause us the low level driver to start various operations on the wrong channel, similar to remain on channel operations. Purge them before reconfig. Reported-by: Eyal Shapira <eyal@wizery.com> Signed-off-by: Arik Nemtsov <arik@wizery.com> commit 6bddef20fb9bf7af7d6bf8a1529b4da3600e7011 Author: Igal Chernobelsky <igalc@ti.com> Date: Thu Oct 18 17:08:19 2012 +0200 wl12xx: Copy FW log as entire mem block FW log copy is simplified to copy the entire memory block as FW logger utility is repsponsible for parsing of FW log content. (Similar commit was applied to wl18xx: wlcore/wl18xx/wl12xx: FW log params per chip arch) Signed-off-by: Igal Chernobelsky <igalc@ti.com> commit 892ec800368b26df0a51129374e1d229de5340e9 Author: Eyal Shapira <eyal@wizery.com> Date: Thu Oct 18 18:05:24 2012 +0200 wl12xx: decrease elp timeout to 20ms The current elp timeout set to 200 ms is too high. While its purpose was to avoid going to ELP during Tx/Rx the problem is that it keeps the device awake also after issuing commands when there's no traffic. In Android this is a real problem as RSSI is polled by the framework every 3 seconds and keeping the chip out of ELP for 200ms each time has a significant power consumption effect. Fix that by changing to 20ms. This prevents excessive real elp sleeps and wakeups during Rx/Tx with 12xx. There's no real need any more for setting a hard coded 5ms while in forced_ps. The fw won't enter elp anyways before the dynamic-ps timeout expired as well (and it entered ps successfully). (Based on a similar patch by Eliad for wlcore) Signed-off-by: Eyal Shapira <eyal@wizery.com> commit f42634221d0a3be3f626effa91ec6158ca8a055d Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:46 2012 +0200 wl12xx: triggering FW assert to perform recovery Driver based FW recovery was modified. It is now trying to trigger FW assert and waiting for WATCHDOG interrupt before continuing with recovery. This is done to allow FW to perform cleanups and halt gracefully before recovery is performed. This allows for safe reading of on-demand fwlog, core_dump, etc... FW assert triggering is done by writing 0xcafecafe to FW address 0x1c and then triggering PHY_RX_HEADER FW interrupt which is its highest priority interrupt. There is a timeout of 100ms waiting for WATCHDOG interrupt. In case timeout is reached or we get ELP or SDIO errors, we resume recovery without reading fwlog, core_dump, etc beacuse we assume that FW is not responding... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 45106c6f0b3abcf1b6fb8ebffed5eaa88efd7302 Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:45 2012 +0200 wl12xx: fix some line spacing Remove trailing blanks... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit f5b0d71aed8278875fa12f08b4a9c2c3df805b2b Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:44 2012 +0200 wl12xx: recovery elp_wakeup optimizations We now do several optimizations related to recovery situations: We fail elp_wakeup if we have SDIO errors (otherwise we just waste time) We now call elp_wakeup inside the recovery work routine to ensure that FW is awake for recovery operations (such as ewading core dump, on- demand fwlog etc...). This is done prior to disabling wl-interrupts. The call to elp_wakeup was removed from userspace recovery trigger routines (such as libnl and debugfs) because it is now redundent Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 523ae05615fe45613b97fdd5e57143cdb8784d4f Author: Arik Nemtsov <arik@wizery.com> Date: Wed Oct 10 18:11:20 2012 +0200 mac80 ...",20/11/2013 20:15:09,,NOT-FOUND,https://github.com/audahadi/xm/commit/118f8e5a7c30a817321240b4d2b53c93bf7f9f5b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,audahadi/xm,,,,,
teodosia,gaia,Bug 938208 - Write test to enable Power Save mode,21/11/2013 14:44:58,,FALSE-POSITIVE,https://github.com/teodosia/gaia/commit/8b0caa764db462e3a80f3cad77c7ae053f750935,,,[DO NOT ANALYZE],[RELATED] [Power save mode enabling test],[RELATED],[Power save mode enabling test],EXISTS,,,,,,,,,,,,,teodosia/gaia,teodosia,,,teodosia,
terjr,arm-project,added figure file for increase in power consumption,22/11/2013 09:05:00,,FALSE-POSITIVE,https://github.com/terjr/arm-project/commit/e7ff8597649a5c987f6ba90f7c8cb440a855d9b2,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,terjr/arm-project,,,,,
graflann,HTML5Shooter,Energy consumption values in for all turret types; homing cooldown implemented,22/11/2013 18:50:24,,FALSE-POSITIVE,https://github.com/graflann/HTML5Shooter/commit/6648da555e221c53f242f4f9c8f6a15549f37c33,,,[FALSE-POSTIVE],[FALSE-POSITIVE] [Game],[FALSE-POSTIVE],[Game],EXISTS,,,,,,,,,,,,,graflann/HTML5Shooter,,,,,
Lafactorial,samsung-kernel-msm7x30,"Update swap.h CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",22/11/2013 22:34:50,,FALSE-POSITIVE,https://github.com/Lafactorial/samsung-kernel-msm7x30/commit/512226e6af08620450f0e31fd0723e464a06732e,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,Lafactorial/samsung-kernel-msm7x30,Lafactorial,,,Lafactorial,
johngarchie,xmas-icetube,"Sleep code more robust against crystal problems If the crystal oscillator is nonfunctional, the system will sleep, but never wake for the once-per-second interrupt. This could make debugging a bad crystal oscillator difficult, because the system would seem to be dead. Furthermore, because the sleep code is extremely power efficient, the system can run off power stored in the capacitor for minutes, so removing the battery and external power will not reset the system right away. And if clock power is stored before the capacitors are drained, the clock will appear to be dead. To address the issue, the watchdog timer now remains on for the first five seconds. After waking five times (once per second), the crystal oscillator is probably working stably, so only then is the watchdog disabled to save power.",23/11/2013 05:22:43,,FALSE-POSITIVE,https://github.com/johngarchie/xmas-icetube/commit/e5847df742de930e770f43ed372d00fc595380c8,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,johngarchie/xmas-icetube,,,,,
jimsth,vanir_hammerhead,net: wireless: bcmdhd: Enable IPv6 RA filter feature 1) We will block IPv6 Router Advertisement multicast packet in suspend mode to save power on device. Bug: 11638281 Signed-off-by: Ecco Park <eccopark@broadcom.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>,23/11/2013 08:38:57,,NOT-FOUND,https://github.com/jimsth/vanir_hammerhead/commit/47c5b1f16ab948e068e179c4d1a272456892bf62,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jimsth/vanir_hammerhead,,,,,
omnirom,android_kernel_google_msm,net: wireless: bcmdhd: Enable IPv6 RA filter feature 1) We will block IPv6 Router Advertisement multicast packet in suspend mode to save power on device. Bug: 11638281 Signed-off-by: Ecco Park <eccopark@broadcom.com> Change-Id: Icbd6e6ca54004d3c29bd2ef8fd1fbe26fcb88ce4,23/11/2013 20:23:12,,OK,https://github.com/omnirom/android_kernel_google_msm/commit/e2ea3d048789a050dc930564b479dbab0da32eae,,,[DO NOT ANALYZE],[OK] [Block packets],[OK] [?] [Block IPv6 Router Advertisement multicast packet in suspend mode],[Block packets] [?] [Block IPv6 Router Advertisement multicast packet in suspend mode],EXISTS,[block IPv6 Router Advertisement multicast packet in suspend mode],[power saving],[Block packet in suspend mode] [Improve suspend mode],[Disable feature],,,Certain,Android,Bug: 11638281,OS,C,net: wireless: bcmdhd: Enable IPv6 RA filter feature 1) We will block IPv6 Router Advertisement multicast packet in suspend mode to save power on device.,omnirom/android_kernel_google_msm,,[Energy bug],,myfluxi,Driver
bart452,android_frameworks_av,"framework/av: Reduce LPA bufsize as to 128KB to save power for SA+ Root cause: SA+ bassboost takes more than two times the MIPS as NXP, which causes normalized CPU load burst when AP is running, then firing up 2nd core and consume more power unexpectedly. Fix: Reducing the LPA buffer size from 256KB to 128KB will decrease the MIPS required for each round of effect process and keeps the 2nd core offline. Change-Id: Ib1982dd2a7544c82971bf6b74ebc58216d247e77",24/11/2013 00:26:12,,NOT-FOUND,https://github.com/bart452/android_frameworks_av/commit/c5cedd6f03da142f42007303ccd409041f6fa91c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,bart452/android_frameworks_av,,,,,
jimsth,vanir_hammerhead,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s >From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>",24/11/2013 08:56:10,,NOT-FOUND,https://github.com/jimsth/vanir_hammerhead/commit/f4e2374425f9e75bc9c2c11ff297ce8bb969611e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jimsth/vanir_hammerhead,,,,,
minicm4pico,android_packages_apps_Phone,"Phone: Disable accelerometer sensor while in-call and screen UI is off During an active ongoing call, on targets that support proximity sensors, there is an approximate spike in the current waveform in the order of 1 Hz. Krait is woken up frequently by the sensors even when the Screen UI is off while in-call. This fix ensures that by disabling the listener in such a scenario (In-Call + Screen UI turned off) there is no spike in power consumption CRs-Fixed: 336244 Change-Id: I076f4674e8368267393ab181491eaf41239b7b02 Conflicts: src/com/android/phone/PhoneApp.java",25/11/2013 18:42:50,,DUPLICATE,https://github.com/minicm4pico/android_packages_apps_Phone/commit/0650877e521a8af9f24f9aeca457714b40cf27ef,,,,,,,EXISTS,,,,,,,,,,,,,minicm4pico/android_packages_apps_Phone,,,,thewisenerd,
proxuser,kartal,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra wakeup Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s >From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/power/main.c kernel/power/suspend.c",25/11/2013 20:17:37,,DUPLICATE,https://github.com/proxuser/kartal/commit/67d6dfc3c071501e8f6df335afbea216bee25543,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/Team-Blackout/Blackout-Monarudo/commit/73b2662548cfd5deaa26b20788923a41abad3972] [original:RELATED],,[VERIFY] [https://github.com/Team-Blackout/Blackout-Monarudo/commit/73b2662548cfd5deaa26b20788923a41abad3972] [original:RELATED],EXISTS,,,,,,,,,,,,,proxuser/kartal,,,,proxuser,
proxuser,kartal,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra wakeup Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s >From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/power/main.c kernel/power/suspend.c",25/11/2013 20:48:53,,DUPLICATE,https://github.com/proxuser/kartal/commit/0812b601166bfaaade5bf23b7f02746c543c47a0,,,,,,,EXISTS,,,,,,,,,,,,,proxuser/kartal,,,,proxuser,
mcolmant,powerapi,Add new module : tools module which contain the sampling-tool to compute the formula of a processor; new sensor module : sensor-cpu-proc-reg to give some information to allow the use of the polynomial regression in the formula; new formula module : formula-cpu-reg : use the result of polynomial regression to compute the energy consumption of the processor,26/11/2013 13:57:44,,FALSE-POSITIVE,https://github.com/mcolmant/powerapi/commit/657241c7f8c2a66c76c715c6929a0214f0e25275,,,[FALSE-POSTIVE],[FALSE-POSITIVE],[FALSE-POSTIVE],,EXISTS,,,,,,,,,,,,,mcolmant/powerapi,huertas,,,huertas,
GiedriusM,wUPER,Added USB activity detection Changed wUPERs' state flow by forcing a restart on USB power connect/disconnect and then entering either a power active or power save mode.,27/11/2013 08:29:08,,FALSE-POSITIVE,https://github.com/GiedriusM/wUPER/commit/8a96d34e223aa31998651118fce5f1cdf16b68c0,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,GiedriusM/wUPER,GiedriusM,,,GiedriusM,
Tk-Glitch,Glitch_Flo_AOSP,intellidemand : Change optimal freq for power saving,27/11/2013 17:12:03,,OK,https://github.com/Tk-Glitch/Glitch_Flo_AOSP/commit/1b1375838c9884d627dafaccbcb4920e42d4d6e5,,,[DO NOT ANALYZE],[OK] [Scale frequency],[OK] [Scale frequency],[Scale frequency],EXISTS,[Reduce optimal freq],[power saving],[Reduce frequency] [Scale frequency],[DVFS],,,Certain,Android,No,OS,C,intellidemand : Change optimal freq for power saving,Tk-Glitch/Glitch_Flo_AOSP,Tk-Glitch,[Frequency and voltage scaling],,Tk-Glitch,Driver cpufreq
ra-one,scc-pcl,"V0.17 Fully working system changed new simple malloc ,writes power consumption to sink file, noL2, sharedMailbox",27/11/2013 20:10:06,,NOT-FOUND,https://github.com/ra-one/scc-pcl/commit/e1578aea0a1be934300be8f8605975d9ac41fc10,,,,[NOT-FOUND],[FALSE-POSITIVE],,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ra-one/scc-pcl,,,,,
pdziepak,Haiku,scheduler: Migrate threads less often in power saving mode,28/11/2013 15:35:11,,OK,https://github.com/pdziepak/Haiku/commit/f9ee217ad6c59122fefd39a445c99f2c0fb2af1e,,,[DO NOT ANALYZE],[OK] [Avoid task migration] [Reuse core],[OK] [Less thread scaling in power saving mode],[Avoid task migration] [Reuse core] [Less thread scaling in power saving mode],EXISTS,[Migrate tasks less often in power saving mode],[power saving],[Avoid task migration] [Reuse core],[Avoid task migration],,,Certain,Haiku,No,OS,C++,scheduler: Migrate threads less often in power saving mode,pdziepak/Haiku,pdziepak,[Miscellaneous],,pdziepak,Kernel
ksiazkowicz,lightbulb,Remove stuff Removed power saving feature and mute notifications feature - nobody uses this stuff anyway.,28/11/2013 16:55:16,,TRADEOFF,https://github.com/ksiazkowicz/lightbulb/commit/dfa59c62fb8e436cfaae99423787dad97c9d76ce,,,[DO NOT ANALYZE],[RELATED] [Remove power saving code],"[RELATED] [""Removed power saving feature - nobody uses this stuff anyway""]","[Remove power saving code] [""Removed power saving feature - nobody uses this stuff anyway""]",EXISTS,,,,,,,,,,,,,ksiazkowicz/lightbulb,ksiazkowicz,,,ksiazkowicz,
palmbeach05,shadow-cm11.0,"Update system.prop Power Save Tweaks added, WiFi scan tweaked for power save. Various other Performance tweaks",29/11/2013 01:53:57,,OK,https://github.com/palmbeach05/shadow-cm11.0/commit/09048647bdc9afc5c8b48bb3e3e28872f3e21caa,,,[DO NOT ANALYZE],[OK] [Disable power collapse] [Enable sleep mode],[OK] [Enable sleep mode],[Disable power collapse] [Enable sleep mode],EXISTS,[Disable ril power collapse] [Increase wifi supplicant scan interval] [Enable sleep mode],[Power Save Tweaks],[Enable power collapse] [Enable sleep mode] [Increase wifi scan interval],[User power saving features],[Increase scan interval],Multiple changes,Certain,Android,No,Libraries and Utilities,properties,"Update system.prop Power Save Tweaks added, WiFi scan tweaked for power save. Various other Performance tweaks",palmbeach05/shadow-cm11.0,palmbeach05,[Use power efficient library/device],,palmbeach05,Script system.prop
gmillz,kernel_lge_msm8974,msm: mdss: update bandwidth requests on clock switches Bandwidth requests to the bus need to be cleared when clock is turned off for command panel to save power. Change-Id: Id952bf191100ec817c7201e8948ce1eefd6cdc8d Signed-off-by: Sree Sesha Aravind Vadrevu <svadrevu@codeaurora.org> Conflicts: drivers/video/msm/mdss/mdss.h Signed-off-by: Ajay Dudani <adudani@codeaurora.org>,29/11/2013 10:54:01,,NOT-FOUND,https://github.com/gmillz/kernel_lge_msm8974/commit/eaeb4c0e3b3d3740cf3369568c1d23846149cb7e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,gmillz/kernel_lge_msm8974,,,,,
levex,linux,wusb: rh: move switch-cases a bit over This patch moves the USB_PORT_FEAT_C_* cases to the end of the USB_PORT_FEAT_POWER saving one return 0; These features are not yet implemented. Signed-off-by: Levente Kurusa <levex@linux.com>,30/11/2013 15:38:18,,NOT-FOUND,https://github.com/levex/linux/commit/e1c5a85bfbc47f66f17f145dd52daff7aa7693b4,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,levex/linux,levex,,,levex,
Klusch,cakePHP,Monitoring Washing Machine - Power Consumption,30/11/2013 16:08:17,,FALSE-POSITIVE,https://github.com/Klusch/cakePHP/commit/93699618b2b3be5659ec86b14d3d315f70489804,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,Klusch/cakePHP,Klusch,,,Klusch,
Sissors,mbed,"Added (deep)sleep to KL25 Sleep is regular sleep (wait mode). Deepsleep sets it to very-low power stop mode (fairly similar to what NXP calls power-down). Two notes: After uploading new code the KL25 needs its power removed and enabled again, otherwise it stays in a kind of debug mode from programming, resulting in increased power consumption. The interrupt waking up the device will run directly on the crystal, once that interrupt is serviced it will turn back on the PLL (if it used to be enabled)",30/11/2013 16:40:54,,RELATED,https://github.com/Sissors/mbed/commit/9ead1de7c87384cd155c82052962c36b866180fc,,,[DO NOT ANALYZE],[RELATED] [Add sleep modes],[RELATED] [Add sleep modes],[Add sleep modes],EXISTS,,,,,,,,,,,,,Sissors/mbed,Sissors,,,Sissors,
bedalus,nexus4,"Following 'try 2 core minimum' - this time with sleep The previous commit prevented the device from entering deep sleep. I've put a flag in the hotplugging code that keeps track of whether the device is asleep or awake. I'm using that to inhibit the two core minimum if the device is asleep. Seems to have fixed the issue. A two core minimum allows the frequency governor to rest at 192MHz as intended. Previously, on one core, the device kept jumping up to 702MHz. If I understand the power comsumption of a processor correctly, 702MHz will use 3.5 times the power of 192MHz. Of course I now have two cores active. I assume that this is probably slightly less than double the power requirement of 192MHz on one core alone, due to some global overheads of having the chip awake. Unless I'm mistaken, having the second core always online should provide a power saving in this configuration. It will at the very least prevent some spurious hotplugging.",01/12/2013 15:03:26,,OK,https://github.com/bedalus/nexus4/commit/50bc75cdb09efbb1db7241cbcadbcb92bc0104b4,,,[DO NOT ANALYZE],[OK] [Keep core awake],[OK] [BUG FIX],[Keep core awake] [BUG FIX],EXISTS,[Keep at least 2 cores awake],[two core minimum allows the frequency governor to rest at lower frequencies],[Keep core awake],[Core configuration],,,Uncertain,Android,Yes,OS,C,"A two core minimum allows the frequency governor to rest at 192MHz as intended. Previously, on one core, the device kept jumping up to 702MHz. If I understand the power comsumption of a processor correctly, 702MHz will use 3.5 times the power of 192MHz. Of course I now have two cores active. I assume that this is probably slightly less than double the power requirement of 192MHz on one core alone, due to some global overheads of having the chip awake. Unless I'm mistaken, having the second core always online should provide a power saving in this configuration. It will at the very least prevent some spurious hotplugging.",bedalus/nexus4,bedalus,[Energy bug],,bedalus,Kernel arch
boubre,CSC4444_Project,"Added electric.csv, power consumption data.",02/12/2013 00:08:40,,FALSE-POSITIVE,https://github.com/boubre/CSC4444_Project/commit/781b692cf279b0d4f4d48c78d415795d5bbed9fb,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,boubre/CSC4444_Project,dcastl2,,,dcastl2,
tralamazza,mchck,[nrf] add power saving mode remove public read/write register functions,02/12/2013 04:16:15,,RELATED,https://github.com/tralamazza/mchck/commit/201e8143f055f5ef70b30c58ac4a0dd4831d065e,,,[DO NOT ANALYZE],[OK] [Enable power saving],[OK] [Enable power saving],[Enable power saving],EXISTS,,,[REVIEW] [Enable power saving],,,,Certain,MCU,No,MCU firmware/Firmware,C,[nrf] add power saving mode remove public read/write register functions,tralamazza/mchck,tralamazza,,,tralamazza,MCU
DexterInd,EV3_Dexter_Industries_Sensors,Added Power Consumption File,02/12/2013 07:44:27,,FALSE-POSITIVE,https://github.com/DexterInd/EV3_Dexter_Industries_Sensors/commit/015c9d2e0dc504a68433d5f57fdb1df1ceb8f50c,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,DexterInd/EV3_Dexter_Industries_Sensors,sitfit,,,sitfit,
zwliew,android_kernel_lge_hammerhead,net: wireless: bcmdhd: Enable IPv6 RA filter feature 1) We will block IPv6 Router Advertisement multicast packet in suspend mode to save power on device. Bug: 11638281 Signed-off-by: Ecco Park <eccopark@broadcom.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>,02/12/2013 15:02:50,,NOT-FOUND,https://github.com/zwliew/android_kernel_lge_hammerhead/commit/fdbbe5887a234b7e1b64472cfec5f4d74921eb2d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_lge_hammerhead,,,,,
rriggio,wing-click,"Use bssid (lvap) to address the power save table, add a reverse EmpowerStationState lookup table with bssid as key.",02/12/2013 16:51:07,,FALSE-POSITIVE,https://github.com/rriggio/click/commit/1ad3a9c71276922c323b64f712bcd7e016b7e32f,https://github.com/rriggio/wing-click/commit/1ad3a9c71276922c323b64f712bcd7e016b7e32f,,[FALSE-POSITIVE][?],[FALSE-POSITIVE] [?],[FALSE-POSITIVE],[?],EXISTS,,,,,,,,,,,,,rriggio/wing-click,,,,,
snowmantw,gaia-doc,Update Gaia API documents for #8b0caa764db462e3a80f3cad77c7ae053f750935 Bug 938208 - Write test to enable Power Save mode,03/12/2013 13:19:15,,FALSE-POSITIVE,https://github.com/snowmantw/gaia-doc/commit/f5a75213e6f2c39c77d7c6336da6fa99b39ca9ea,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,snowmantw/gaia-doc,,,,,
mozilla-b2g,gaia,Merge pull request #13880 from teodosia/power-save-mode Bug 938208 - Write test to enable Power Save mode,03/12/2013 13:20:11,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/ec850b4664c1781f790b83ccf8398bf90e7c3482,,,,[VERIFIED] [https://github.com/teodosia/gaia/commit/8b0caa764db462e3a80f3cad77c7ae053f750935],,[https://github.com/teodosia/gaia/commit/8b0caa764db462e3a80f3cad77c7ae053f750935],EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,AlinT,,,AlinT,
mozilla,mozilla-central,Bumping gaia.json for 2 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/5d706512ebb7 Author: Trif Andrei-Alin <trifandreialin@gmail.com> Desc: Merge pull request #13880 from teodosia/power-save-mode Bug 938208 - Write test to enable Power Save mode ======== https://hg.mozilla.org/integration/gaia-central/rev/aadc92c43cd0 Author: Teodosia Pop <teodosia.pop@gmail.com> Desc: Bug 938208 - Write test to enable Power Save mode,03/12/2013 13:26:39,,FALSE-POSITIVE,https://github.com/mozilla/mozilla-central/commit/b778f7e42e3ddc9fb49476cfc63510e3135c12d2,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,mozilla/mozilla-central,,,,,
mozilla,gecko-dev,Bumping gaia.json for 2 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/5d706512ebb7 Author: Trif Andrei-Alin <trifandreialin@gmail.com> Desc: Merge pull request #13880 from teodosia/power-save-mode Bug 938208 - Write test to enable Power Save mode ======== https://hg.mozilla.org/integration/gaia-central/rev/aadc92c43cd0 Author: Teodosia Pop <teodosia.pop@gmail.com> Desc: Bug 938208 - Write test to enable Power Save mode,03/12/2013 13:27:08,,DUPLICATE,https://github.com/mozilla/gecko-dev/commit/29c29a1e19d72bd945c3d565fe0db65faed57021,,,,,,,EXISTS,,,,,,,,,,,,,mozilla/gecko-dev,,,,,
snowmantw,gaia-doc,"Update Gaia API documents for #62d09fb5fb595c63356e493c192d878fa7128cdc Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 13:37:07,,FALSE-POSITIVE,https://github.com/snowmantw/gaia-doc/commit/0dfafa998680f569b9e6749aea27009774aac64a,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,snowmantw/gaia-doc,,,,,
mozilla-b2g,gaia,"Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 13:38:01,,FALSE-POSITIVE,https://github.com/mozilla-b2g/gaia/commit/62d09fb5fb595c63356e493c192d878fa7128cdc,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,zacc,,,zacc,
mozilla,mozilla-central,"Bumping gaia.json for 1 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/81c55d0a3083 Author: Zac Campbell <zcampbell@mozilla.com> Desc: Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 13:51:39,,FALSE-POSITIVE,https://github.com/mozilla/mozilla-central/commit/c70c9ab580d008b82d848346c4f2f976f10f8dea,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,mozilla/mozilla-central,,,,,
mozilla,gecko-dev,"Bumping gaia.json for 1 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/81c55d0a3083 Author: Zac Campbell <zcampbell@mozilla.com> Desc: Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 13:52:08,,DUPLICATE,https://github.com/mozilla/gecko-dev/commit/d48a78f1a639299aeea28568bed987e7281faf97,,,,,,,EXISTS,,,,,,,,,,,,,mozilla/gecko-dev,,,,,
Bagception,MiniMeLibrary,energy saving in loop,03/12/2013 14:31:33,,OK,https://github.com/Bagception/MiniMeLibrary/commit/eaa5820226f7d1e608091b8b0919791a971845c5,,,[OK][AVOID POLLING][TIMEOUT][ANDROID],[OK] [Stop scanning after timeout] [Timeout] [Disable after timeout] [Reduce polling],[OK] [IMPROVING LOOP CONSUMPTION],[Stop scanning after timeout] [Timeout] [Disable after timeout] [Reduce polling] [AVOID POLLING] [ANDROID] [IMPROVING LOOP CONSUMPTION],EXISTS,[Add scanning timeout],[power saving],[Stop scanning after timeout] [Add polling timeout],[Add timeout] [Sub1: Stop scanning],,,Certain,Android,No,Application,Java,energy saving in loop,Bagception/MiniMeLibrary,philipphock,[Timing out],,philipphock,Application
DexterInd,EV3_Dexter_Industries_Sensors,Updated EV3 Power Consumption XL Sheet,03/12/2013 16:36:55,,FALSE-POSITIVE,https://github.com/DexterInd/EV3_Dexter_Industries_Sensors/commit/e1a77f94c71dd3febdb15746e3e259cb1ffe8893,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,DexterInd/EV3_Dexter_Industries_Sensors,sitfit,,,sitfit,
alfh,Energia,"Increase sample time for ADC12 when using the internal temperature sensor, needed for F5529 at least. Fix comments and calculations for number of samples per second for ADC10. Add comments for ADC10 with calculations of number of samples per second. Set flag ADC12SR for ADC12 since we are using less than 50ksps, to save power according to documentation http://www.ti.com/lit/ug/slau406b/slau406b.pdf, page 7.",03/12/2013 18:39:12,,OK,https://github.com/alfh/Energia/commit/0a2f1bd1853ef3955f1922fa376cd04165cab043,,,[DO NOT ANALYZE],[OK] [Set flag] [Set conditional flag],[OK] [?],[Set flag] [Set conditional flag] [?],EXISTS,[Set flag ADC12SR for ADC12 since we are using less than 50ksps],[save power according to documentation] [uses slow buffer] [Avoid unnecessary resource usage],[Enable device power saving],[Enable power saving feature],,,Certain,Energia (Arduino),No,Libraries and Utilities,C,"Set flag ADC12SR for ADC12 since we are using less than 50ksps, to save power according to documentation http://www.ti.com/lit/ug/slau406b/slau406b.pdf, page 7.",alfh/Energia,alfh,[Use power efficient library/device],,alfh,?
QoPMLProject,AQoPA,Prepared energy consumption GUI.,03/12/2013 21:20:51,,FALSE-POSITIVE,https://github.com/QoPMLProject/AQoPA/commit/8f0a515e44ba99af97e4388e65aeced678d91efd,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Energy consumption plot],[FALSE-POSITIVE],[Energy consumption plot],EXISTS,,,,,,,,,,,,,QoPMLProject/AQoPA,dusinek,,,dusinek,
escapewindow,test-gecko-git,"Bumping gaia.json for 1 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/81c55d0a3083 Author: Zac Campbell <zcampbell@mozilla.com> Desc: Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 22:06:18,,NOT-FOUND,https://github.com/escapewindow/test-gecko-git/commit/d48a78f1a639299aeea28568bed987e7281faf97,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,escapewindow/test-gecko-git,,,,,
mozilla,mozilla-central,"Bumping gaia.json for 1 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/81c55d0a3083 Author: Zac Campbell <zcampbell@mozilla.com> Desc: Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 22:07:21,,DUPLICATE,https://github.com/mozilla/mozilla-central/commit/c70c9ab580d008b82d848346c4f2f976f10f8dea,,,,,,,EXISTS,,,,,,,,,,,,,mozilla/mozilla-central,,,,,
mozilla,gecko-dev,"Bumping gaia.json for 1 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/81c55d0a3083 Author: Zac Campbell <zcampbell@mozilla.com> Desc: Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 22:34:23,,DUPLICATE,https://github.com/mozilla/gecko-dev/commit/d48a78f1a639299aeea28568bed987e7281faf97,,,,,,,EXISTS,,,,,,,,,,,,,mozilla/gecko-dev,,,,,
mozilla,releases-mozilla-central,"Bumping gaia.json for 1 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/81c55d0a3083 Author: Zac Campbell <zcampbell@mozilla.com> Desc: Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 22:34:26,,NOT-FOUND,https://github.com/mozilla/releases-mozilla-central/commit/f3545164e30fef9869f57bddf035e5486af6d956,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mozilla/releases-mozilla-central,,,,,
mozilla,gecko-dev,"Bumping gaia.json for 1 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/81c55d0a3083 Author: Zac Campbell <zcampbell@mozilla.com> Desc: Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 22:45:18,,DUPLICATE,https://github.com/mozilla/gecko-dev/commit/d48a78f1a639299aeea28568bed987e7281faf97,,,,,,,EXISTS,,,,,,,,,,,,,mozilla/gecko-dev,,,,,
mozilla,mozilla-central,"Bumping gaia.json for 1 gaia-central revision(s) a=gaia-bump ======== https://hg.mozilla.org/integration/gaia-central/rev/81c55d0a3083 Author: Zac Campbell <zcampbell@mozilla.com> Desc: Revert ""Bug 938208 - Write test to enable Power Save mode"" This reverts commit 8b0caa764db462e3a80f3cad77c7ae053f750935.",03/12/2013 22:48:02,,DUPLICATE,https://github.com/mozilla/mozilla-central/commit/c70c9ab580d008b82d848346c4f2f976f10f8dea,,,,,,,EXISTS,,,,,,,,,,,,,mozilla/mozilla-central,,,,,
snowmantw,gaia-doc,Update Gaia API documents for #8b0caa764db462e3a80f3cad77c7ae053f750935 Bug 938208 - Write test to enable Power Save mode,04/12/2013 05:59:13,,DUPLICATE,https://github.com/snowmantw/gaia-doc/commit/8e94e4253f53641b638bf39300cf5257a323a585,,,,,,,EXISTS,,,,,,,,,,,,,snowmantw/gaia-doc,,,,,
dominickuo,gaia,Merge pull request #13880 from teodosia/power-save-mode Bug 938208 - Write test to enable Power Save mode,04/12/2013 09:03:14,,DUPLICATE,https://github.com/dominickuo/gaia/commit/ec850b4664c1781f790b83ccf8398bf90e7c3482,,,,,,,EXISTS,,,,,,,,,,,,,dominickuo/gaia,AlinT,,,AlinT,
AlinT,gaia,Bug 938208 - Write test to enable Power Save mode,04/12/2013 15:21:08,,DUPLICATE,https://github.com/AlinT/gaia/commit/aa6262361433de96622a99db84d49aad9b3c7c4e,,,,,,,EXISTS,,,,,,,,,,,,,AlinT/gaia,teodosia,,,AlinT,
Bagception,MiniMeLibrary,"energy saving added, scan start, stop responsiveness added",04/12/2013 15:25:55,,OK,https://github.com/Bagception/MiniMeLibrary/commit/5b9882167377b32c69c8eabc35f58a1c58b78ec6,,,[OK][AVOID POLLING][TIMEOUT][ANDROID],[OK] [Stop scanning after timeout] [Timeout] [Disable after timeout],[OK] [IMPROVING LOOP CONSUMPTION],[Stop scanning after timeout] [Timeout] [Disable after timeout] [AVOID POLLING] [ANDROID] [IMPROVING LOOP CONSUMPTION],EXISTS,[Improve inactivity timeout],[power saving],[Improve inactivity timeout],[Add timeout] [Sub1: Stop scanning] [Condition: on inactivity],,,Certain,Android,No,Application,Java,"energy saving added, scan start, stop responsiveness added",Bagception/MiniMeLibrary,philipphock,[Timing out],[inactivity],philipphock,Application
QoPMLProject,AQoPA,Added first version of algorithm calculating energy consumption.,04/12/2013 17:50:19,,FALSE-POSITIVE,https://github.com/QoPMLProject/AQoPA/commit/2a1d3ccee89467d03c02b6bfe53135afa4db48a1,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,QoPMLProject/AQoPA,dusinek,,,dusinek,
jinfu-leng,ROS_Nodes,updated to support different power consumption for hovering and flight,04/12/2013 19:30:07,,FALSE-POSITIVE,https://github.com/jinfu-leng/ROS_Nodes/commit/c8d595190911724d628224740571be0d79bce07b,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,jinfu-leng/ROS_Nodes,jinfu-leng,,,jinfu-leng,
snowmantw,gaia-doc,Update Gaia API documents for #aa6262361433de96622a99db84d49aad9b3c7c4e Bug 938208 - Write test to enable Power Save mode,04/12/2013 20:17:03,,DUPLICATE,https://github.com/snowmantw/gaia-doc/commit/6cb576c53dd84d1c1d884b1de2d9e1902ae424e5,,,,[FALSE-POSITIVE] [VERIFY],,[VERIFY],EXISTS,,,,,,,,,,,,,snowmantw/gaia-doc,,,,,
mozilla-b2g,gaia,Merge pull request #14313 from AlinT/bug_938208 Bug 938208 - Write test to enable Power Save mode,04/12/2013 20:17:41,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/5ef899d6dbc22db707e998405500f71fb0842fdc,,,,[VERIFIED] [https://github.com/teodosia/gaia/commit/8b0caa764db462e3a80f3cad77c7ae053f750935],,[https://github.com/teodosia/gaia/commit/8b0caa764db462e3a80f3cad77c7ae053f750935],EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,bobsilverberg,,,bobsilverberg,
snowmantw,gaia-doc,Update Gaia API documents for #7f37355171c25cd8dbe87108b13cbd7e79a1a64d Bug 938208 - Write test to enable Power Save mode,04/12/2013 20:36:50,,DUPLICATE,https://github.com/snowmantw/gaia-doc/commit/a499298c2dc06b740f80ca22bca221324f0d45f7,,,,[VERIFIED] [https://github.com/snowmantw/gaia-doc/commit/6cb576c53dd84d1c1d884b1de2d9e1902ae424e5],,[https://github.com/snowmantw/gaia-doc/commit/6cb576c53dd84d1c1d884b1de2d9e1902ae424e5],EXISTS,,,,,,,,,,,,,snowmantw/gaia-doc,,,,,
mozilla-b2g,gaia,Merge pull request #14312 from AlinT/bug_938203_1_2 Bug 938208 - Write test to enable Power Save mode,04/12/2013 20:36:59,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/daa07bf53d8aec315fa8b9f07d356a30c77fb593,,,,[VERIFIED] [https://github.com/teodosia/gaia/commit/8b0caa764db462e3a80f3cad77c7ae053f750935],,[https://github.com/teodosia/gaia/commit/8b0caa764db462e3a80f3cad77c7ae053f750935],EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,bobsilverberg,,,bobsilverberg,
mozilla,gecko-dev,Bumping gaia.json for 2 gaia-1_2 revision(s) a=gaia-bump Truncated some number of revisions since the previous bump. ======== https://hg.mozilla.org/integration/gaia-1_2/rev/2f94c68612bf Author: Bob Silverberg <bob.silverberg@gmail.com> Desc: Merge pull request #14312 from AlinT/bug_938203_1_2 Bug 938208 - Write test to enable Power Save mode ======== https://hg.mozilla.org/integration/gaia-1_2/rev/401486169080 Author: Teodosia Pop <teodosia.pop@gmail.com> Desc: Bug 938208 - Write test to enable Power Save mode,04/12/2013 20:55:11,,DUPLICATE,https://github.com/mozilla/gecko-dev/commit/f24031d36b410444811725d3d1d7a9dffc918130,,,,[VERIFIED] [https://github.com/mozilla/mozilla-central/commit/faf2cae49d45676fcd538bef226f199b695f36dd],,[https://github.com/mozilla/mozilla-central/commit/faf2cae49d45676fcd538bef226f199b695f36dd],EXISTS,,,,,,,,,,,,,mozilla/gecko-dev,,,,,
escapewindow,test-gecko-git,Bumping gaia.json for 2 gaia-1_2 revision(s) a=gaia-bump Truncated some number of revisions since the previous bump. ======== https://hg.mozilla.org/integration/gaia-1_2/rev/2f94c68612bf Author: Bob Silverberg <bob.silverberg@gmail.com> Desc: Merge pull request #14312 from AlinT/bug_938203_1_2 Bug 938208 - Write test to enable Power Save mode ======== https://hg.mozilla.org/integration/gaia-1_2/rev/401486169080 Author: Teodosia Pop <teodosia.pop@gmail.com> Desc: Bug 938208 - Write test to enable Power Save mode,04/12/2013 20:55:15,,NOT-FOUND,https://github.com/escapewindow/test-gecko-git/commit/f24031d36b410444811725d3d1d7a9dffc918130,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,escapewindow/test-gecko-git,,,,,
gitmai,gaia,Merge pull request #14313 from AlinT/bug_938208 Bug 938208 - Write test to enable Power Save mode,05/12/2013 10:13:47,,DUPLICATE,https://github.com/gitmai/gaia/commit/5ef899d6dbc22db707e998405500f71fb0842fdc,,,,,,,EXISTS,,,,,,,,,,,,,gitmai/gaia,bobsilverberg,,,bobsilverberg,
KnCMiner,meta-kncminer,Advanced settings: display power consumption per ASIC and total,06/12/2013 15:10:01,,FALSE-POSITIVE,https://github.com/KnCMiner/meta-kncminer/commit/32c9993205684732f097973f974af3a469f48d60,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,KnCMiner/meta-kncminer,mborodin,,,mborodin,
AmperificSuperKANG,android_packages_apps_ASKP-Control,multicore power saving and temperature control,06/12/2013 19:55:17,,RELATED,https://github.com/AmperificSuperKANG/ASKP-Control/commit/7aad464b38d771fa896d56322ece1f5c1f32aaaa,https://github.com/AmperificSuperKANG/android_packages_apps_ASKP-Control/commit/7aad464b38d771fa896d56322ece1f5c1f32aaaa,,[OK][LIMITING FREQUENCY][LIMITING TEMPERATURE][ANDROID],[OK] [UNABLE-TO-CATEGORIZE] [Multicore] [Multicore power saving],[OK] [MULTICORE POWER SAVING],[UNABLE-TO-CATEGORIZE] [Multicore] [Multicore power saving] [LIMITING FREQUENCY] [LIMITING TEMPERATURE] [ANDROID],EXISTS,,,,,,,Certain,Android,No,Application,Java,multicore power saving and temperature control,AmperificSuperKANG/android_packages_apps_ASKP-Control,,,,,Application
goyalankit,wp-app,Added power consumption graphs,06/12/2013 21:44:43,,FALSE-POSITIVE,https://github.com/goyalankit/wp-app/commit/72eff368d7a856f498a657be2c1ef365af51d39d,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,goyalankit/wp-app,,,,,
goyalankit,wp-app,adding table and image for energy consumption,06/12/2013 23:39:16,,FALSE-POSITIVE,https://github.com/goyalankit/wp-app/commit/6ec4ab96e2f5e970131273e53e0dba8e18a7c5f4,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,goyalankit/wp-app,goyalankit,,,goyalankit,
delleceste,it.giacomos.android.osmer,Some improvements (hope so) to service power consumption.,08/12/2013 13:51:49,,UNABLE-TO-CATEGORIZE,https://github.com/delleceste/it.giacomos.android.osmer/commit/ea612b489ddaba614ee6c13b542866d5e5181e50,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE] [DISCUSS],"[UNABLE-TO-CATEGORIZE] [""Some improvements (hope so)""]","[DISCUSS] [""Some improvements (hope so)""]",EXISTS,,,,,,,,,,,,,delleceste/it.giacomos.android.osmer,delleceste,,,delleceste,
scristian,scripts,fixes for power consumption blade center,08/12/2013 18:09:07,,FALSE-POSITIVE,https://github.com/scristian/scripts/commit/d634af3249242d78f673b70614597cb8dd6c8218,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,scristian/scripts,scristian,,,scristian,
maxfu,android_kernel_samsung_exynos5410,"cpufreq: Fake the IKS specific frequency table to stock values The table is implementation specfic and is used nowhere else, however Samsung's framework uses it for its power savings feature. The power-saving level is determined as a index offset from the maximum frequency. Discarding entries not in the stock frequency table ensures a correct power-savings mode.",09/12/2013 06:50:26,,DUPLICATE,https://github.com/maxfu/android_kernel_samsung_galaxy_s4/commit/996b145ee5878ca076d5db9646222682eb770179,https://github.com/maxfu/android_kernel_samsung_exynos5410/commit/996b145ee5878ca076d5db9646222682eb770179,,[DUPLICATE],[DUPLICATE] [999e0597dcbdb3c9218b8e9ec4f7afc71877e919],[DUPLICATE],[999e0597dcbdb3c9218b8e9ec4f7afc71877e919],EXISTS,,,,,,,,,,,,,maxfu/android_kernel_samsung_exynos5410,,,,,
haydar9,Group-F-Sysc3010,"Added automatic energy saving for lights (LED), by checking if no motion is detected every 3 seconds. Signed-off-by: haydar9 <haydar.iss4@gmail.com>",09/12/2013 07:39:36,,OK,https://github.com/haydar9/Group-F-Sysc3010/commit/0a6308ae8ebd4d8d02a4a8e6aaadd9acf6e3b00a,,,[OK][TURN OFF LIGHTS][ANDROID],[OK] [Turn off leds] [Disable components] [Shutdown],[OK] [DISABLE COMPONENTS],[Turn off leds] [Disable components] [Shutdown] [TURN OFF LIGHTS] [ANDROID],EXISTS,[automatic disabling leds if no motion detected],[power saving],[Disable LED] [Add device disabling inactivity timeout],[Add timeout] [Sub1: Disable component] [Condition: on inactivity],,,Certain,Embedded,No,Application,Java,"Added automatic energy saving for lights (LED), by checking if no motion is detected every 3 seconds.",haydar9/Group-F-Sysc3010,haydar9,[Timing out],[inactivity],haydar9,Application
LeafGrass,ousia,slow down vcom to 25Hz for lower power consumption,09/12/2013 13:22:21,,OK,https://github.com/LeafGrass/ousia/commit/315e1f9b12c954f408e04c792d37214b140fdffa,,,[DO NOT ANALYZE],[OK] [Scale frequency] [Increase idle time],[OK] [Scale Frequency],[Scale frequency] [Increase idle time],EXISTS,[slow down vcom to 25Hz],[reduce power consumption],[Scale down frequency] [Reduce frequency],[DVFS],,,Certain,Ousia,No,OS,C,slow down vcom to 25Hz for lower power consumption,LeafGrass/ousia,librae8226,[Frequency and voltage scaling],,librae8226,Embedded application
audahadi,kernel_endeavoru,"Update compat-wireless from ol_R5.SP3.01 to ol_R5.SP6.01 Commits come from https://github.com/TI-OpenLink/. HTC specific changes are still there. Just the commits leading from SP3.01 to SP6.01 were applied. Non squashed commits can be seen here: https://github.com/thoemy/android_kernel_htc_endeavoru/tree/update-wifi-compat Squashed commit of the following: commit f44feec52868feb8147b9fd31afed470ff31e49c Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 14:15:24 2013 +0200 wl12xx: fix unsafe dereference of the wlvif wlvif could be passed as NULL from the wl1271_tx_work_locked() to the wl1271_prepare_tx_frame() and to wl1271_skb_queue_head() functions. This may lead to a Kernel panic, fix this by validating that wlvif != NULL before using it. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 025cff694bca23e5ce922eb13f4ee081590613ca Author: Eyal Reizer <eyalr@ti.com> Date: Tue Mar 5 17:57:32 2013 +0200 wl12xx:support ap a2dp coex Add functionality to support AP A2DP co-existence: 1. Add configuration for enable/disable of CTS protection in AP mode 2. Add indication for completion of connection establishment in ap mode. This is used by the firmware to change coex parameters when a station is in the process and connecting to the ap and change them back after the connection has been established. Signed-off-by: Eyal Reizer <eyalr@ti.com> commit b362724cdf8d78333121410fa81246d2f1bc4c8e Author: Victor Goldenshtein <victorg@ti.com> Date: Wed Feb 27 11:04:38 2013 +0200 cfg80211: consider security during scan results update AP security changes are not updated in the following scenario: STA performs a scheduled scan on DFS channel during connection to open AP, as some devices (wl12xx) will send a probe req on DFS channels once activity is detected, cfg80211 gets and saves the scan result from a probe resp. STA disconnected and AP security is changed to AES, STA performs a passive scan, cfg80211 gets a new scan result for the same BSSID but now from beacon. cfg80211_bss_update() finds previous scan result from probe resp but the security change is not updated correctly. Fix this by considering security mismatch in rb_find_bss. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 84d2dec74d7352b76d726a3f5f772391e2c7c4a9 Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 13:39:13 2013 +0200 wl12xx: fix unset ret value in wl1271_join Set the ret value before the return statement. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 7d3cf22542673fd0a5bd8a0f0dd21c9e36846f7b Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 13:10:52 2013 +0200 wl12xx: fix mem leak in the channel switch command Channel switch command wasn't freed in certain sanity check, fix this by moving the check before the command allocation. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 98bf0f43c8f9a441d13186753eb99179f7ec5ca2 Author: Eyal Shapira <eyal@wizery.com> Date: Sat Nov 3 16:35:35 2012 +0200 mac80211: reject BA action frames if sent fron non HT STA The FW doesn't work well with BA sessions started from non 802.11n STAs. Reject these as a work around until the FW issue is fixed. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit c53bd9ec1ac5b7adea2c6c485cca5df86cc0d177 Author: Eyal Shapira <eyal@wizery.com> Date: Fri Nov 2 12:14:44 2012 +0200 mac80211: warn on enabling beacon while off channel This can cause the beaconing to start on the wrong channel. Several such races were fixed but still add a WARN_ON as we'd like to know if something like that still happens. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 84b4126a8085a36ae2ff53204679f31c01c0e925 Author: Eyal Shapira <eyal@wizery.com> Date: Fri Nov 2 12:19:21 2012 +0200 wl12xx: improve some debug logs These turned out to be useful so add them. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 2cbd264e7dd001a8ca54289c467f4bf272ef0fb4 Author: Ofir Luzon <ofirluzon@ti.com> Date: Wed Oct 31 14:57:56 2012 +0200 wl12xx: fix list_add/list_del add list_del even if wl in off state Signed-off-by: Ofir Luzon <ofirluzon@ti.com> commit cffd2e38e8a3a15b21c68173954c81896b3a3f0e Author: Yair Shapira <yair.shapira@ti.com> Date: Wed Oct 31 12:48:33 2012 +0200 wl12xx: FW recovery trigger assert bug fix The bug was in the partition mapping. It seems that .mem3 partition that we used to write 'magic' 0xCAFECAFE to address 0x1C is actually in use (it contains the struct part of the FW_STATUS). It is in use although the size of the partition is set to 0 The fix was to save old partition, map a new partition with .mem part set to address 0x1C and remap previous partition after writing 0xCAFECAFE. Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit d2fd56a7755f5136a6a3125f46881387300da850 Author: Yair Shapira <yair.shapira@ti.com> Date: Mon Oct 29 19:56:45 2012 +0200 wl12xx: mutually exclude PLT and normal power modes Small fix done to ensure that PLT mode and normal driver power mode (ifconfig/add_interface) are mutually excluded. This is partially based on wl18xx (R8) commit 6620ca8fe29d Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit fbf346aee8f230b01c4319a2827369406283b7a9 Author: Eyal Shapira <eyal@wizery.com> Date: Thu Oct 25 17:33:57 2012 +0200 wl12xx: check for required fw change while enable or disable role In certain scenarios our current hooks for checking required fw change aren't enough and we could be left in MR even though we've gone back to a single interface. This is of course not good as we prefer running with the SR FW which contains goodies like BTCOEX. An example scanerio is when running P2P GO + STA and then removing the P2P GO. Fix it by adding checks for fw change also while enable or disable roles. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 628cded5472953c4c3997c91e625d736c4444c2f Author: Yair Shapira <yair.shapira@ti.com> Date: Mon Oct 29 16:38:57 2012 +0200 wl12xx: disable elp sleep while in plt mode We now disable elp sleep during plt mode to allow normal operation of plt tools such as calibrator. Having elp_sleep enabled during plt mode is actually not required and in fact it distupt plt operations such as rx statistics etc... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 527a8c9e2fe74985b88dbf8b0918a3cba1b3eeae Author: Arik Nemtsov <arik@wizery.com> Date: Wed Oct 24 22:35:27 2012 +0200 mac80211: purge offchannel Tx on reconfig Offchannel Tx occuring during reconfig can cause us the low level driver to start various operations on the wrong channel, similar to remain on channel operations. Purge them before reconfig. Reported-by: Eyal Shapira <eyal@wizery.com> Signed-off-by: Arik Nemtsov <arik@wizery.com> commit 6bddef20fb9bf7af7d6bf8a1529b4da3600e7011 Author: Igal Chernobelsky <igalc@ti.com> Date: Thu Oct 18 17:08:19 2012 +0200 wl12xx: Copy FW log as entire mem block FW log copy is simplified to copy the entire memory block as FW logger utility is repsponsible for parsing of FW log content. (Similar commit was applied to wl18xx: wlcore/wl18xx/wl12xx: FW log params per chip arch) Signed-off-by: Igal Chernobelsky <igalc@ti.com> commit 892ec800368b26df0a51129374e1d229de5340e9 Author: Eyal Shapira <eyal@wizery.com> Date: Thu Oct 18 18:05:24 2012 +0200 wl12xx: decrease elp timeout to 20ms The current elp timeout set to 200 ms is too high. While its purpose was to avoid going to ELP during Tx/Rx the problem is that it keeps the device awake also after issuing commands when there's no traffic. In Android this is a real problem as RSSI is polled by the framework every 3 seconds and keeping the chip out of ELP for 200ms each time has a significant power consumption effect. Fix that by changing to 20ms. This prevents excessive real elp sleeps and wakeups during Rx/Tx with 12xx. There's no real need any more for setting a hard coded 5ms while in forced_ps. The fw won't enter elp anyways before the dynamic-ps timeout expired as well (and it entered ps successfully). (Based on a similar patch by Eliad for wlcore) Signed-off-by: Eyal Shapira <eyal@wizery.com> commit f42634221d0a3be3f626effa91ec6158ca8a055d Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:46 2012 +0200 wl12xx: triggering FW assert to perform recovery Driver based FW recovery was modified. It is now trying to trigger FW assert and waiting for WATCHDOG interrupt before continuing with recovery. This is done to allow FW to perform cleanups and halt gracefully before recovery is performed. This allows for safe reading of on-demand fwlog, core_dump, etc... FW assert triggering is done by writing 0xcafecafe to FW address 0x1c and then triggering PHY_RX_HEADER FW interrupt which is its highest priority interrupt. There is a timeout of 100ms waiting for WATCHDOG interrupt. In case timeout is reached or we get ELP or SDIO errors, we resume recovery without reading fwlog, core_dump, etc beacuse we assume that FW is not responding... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 45106c6f0b3abcf1b6fb8ebffed5eaa88efd7302 Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:45 2012 +0200 wl12xx: fix some line spacing Remove trailing blanks... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit f5b0d71aed8278875fa12f08b4a9c2c3df805b2b Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:44 2012 +0200 wl12xx: recovery elp_wakeup optimizations We now do several optimizations related to recovery situations: We fail elp_wakeup if we have SDIO errors (otherwise we just waste time) We now call elp_wakeup inside the recovery work routine to ensure that FW is awake for recovery operations (such as ewading core dump, on- demand fwlog etc...). This is done prior to disabling wl-interrupts. The call to elp_wakeup was removed from userspace recovery trigger routines (such as libnl and debugfs) because it is now redundent Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 523ae05615fe45613b97fdd5e57143cdb8784d4f Author: Arik Nemtsov <arik@wizery.com> Date: Wed Oct 10 18:11:20 2012 +0200 mac80 ...",11/12/2013 16:08:44,,NOT-FOUND,https://github.com/audahadi/kernel_endeavoru/commit/f6e225e8fc3d5e65d036d7d3470259c0a710b16c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,audahadi/kernel_endeavoru,,,,,
telo46,android_kernel_lge_hammerhead,merge: net: wireless: bcmdhd: fixed power consumption issue of P2P.,11/12/2013 18:12:17,,UNABLE-TO-CATEGORIZE,https://github.com/telo46/android_kernel_lge_hammerhead/commit/446ac5da394ca6964699b8c1ef3944bcbbcbb8e2,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,telo46/android_kernel_lge_hammerhead,,,,telo46,
telo46,android_kernel_lge_hammerhead,"net: wireless: bcmdhd: fixed power consumption issue of P2P. solution : add wake_lock not to go to suspend during removing P2P GO interface in wl_cfg80211.c. Description of this issue : if device goes to suspend during removing the interface, we will fail to remove P2P GO virtual interface(p2p-p2p0-0). This will causes P2P GO still alive in firmware Bugnizer case id : 10874302 This issue is reported by LG team. Signed-off-by: Ecco Park <eccopark@broadcom.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",11/12/2013 18:14:03,,FALSE-POSITIVE,https://github.com/telo46/android_kernel_lge_hammerhead/commit/8bf4c1dfbb1d7ed1bc295be4288ba453b20605e2,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,telo46/android_kernel_lge_hammerhead,,,,telo46,
telo46,android_kernel_lge_hammerhead,merge: net: wireless: bcmdhd: fixed power consumption issue of P2P.,11/12/2013 18:22:27,,DUPLICATE,https://github.com/telo46/android_kernel_lge_hammerhead/commit/99eaab4c30796c4bdaddd1d9bc285672d72d1c51,,,,,,,EXISTS,,,,,,,,,,,,,telo46/android_kernel_lge_hammerhead,telo46,,,telo46,
telo46,android_kernel_lge_hammerhead,"Revert ""net: wireless: bcmdhd: fixed power consumption issue of P2P."" This reverts commit 837961187ec3ecf82a11b89d7cf8fb267d3ed9ce. Conflicts: drivers/net/wireless/bcmdhd/dhd_linux.c drivers/net/wireless/bcmdhd/wl_cfg80211.c",11/12/2013 19:43:34,,REVERT,https://github.com/telo46/android_kernel_lge_hammerhead/commit/2da64147dee77e5a7f4978b9d8d8963b4635255c,,,[DO NOT ANALYZE],[REVERT],[REVERT] [837961187ec3ecf82a11b89d7cf8fb267d3ed9ce],[837961187ec3ecf82a11b89d7cf8fb267d3ed9ce],EXISTS,"Revert ""net: wireless: bcmdhd: fixed power consumption issue of P2P.""",,,,,,,,,,,,telo46/android_kernel_lge_hammerhead,franciscofranco,,,telo46,
Redmaner,MiCore_kernel_aries,"msm: pm: boards: support and enable Krait Retention Introduce a new low power state for Krait, retention. This state will lower the voltage to the Krait core to retention voltage in addition to clock gating. This state will be in between WFI and Standalone power collapse in terms of time overhead and power savings.",11/12/2013 21:48:28,,DUPLICATE,https://github.com/Redmaner/MiCore_kernel_aries/commit/52f2e02c60b798993f4db0bcaae4bafd593df5e2,,,,[?] [VERIFY] [https://github.com/mathkid95/linux_lg_jb/commit/508f681dc12f7c34bb0d01cbc5034003f89db1d8] [original:OK],,[VERIFY] [https://github.com/mathkid95/linux_lg_jb/commit/508f681dc12f7c34bb0d01cbc5034003f89db1d8] [original:OK],EXISTS,,,,,,,,,,,,,Redmaner/MiCore_kernel_aries,Redmaner,,,Redmaner,
velotican,ResonantRise,"Power Consumption hiking in Mekanism Mekanism still ends up being the superior processing model objectively eventually, but now the amount of work and power you have to put in to get there doesn't make it an obvious choice. Notably, at a basic level before the nerfs Mekanism was actually more expensive power-wise early-game already.",12/12/2013 01:23:03,,FALSE-POSITIVE,https://github.com/velotican/ResonantRise/commit/aa5952ebcaa8e9e1992a4aebdae00822e2c6715e,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,velotican/ResonantRise,velotican,,,velotican,
it2007me,ButterflyS-tw-4.2.2,"CONFIG: set version,name,use XZ,swap on,energy efficiency,smoother,rw",12/12/2013 10:52:19,,NOT-FOUND,https://github.com/it2007me/ButterflyS-tw-4.2.2/commit/8cb39ef2e07abd1daa1bcb5289965cd76a921dd4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,it2007me/ButterflyS-tw-4.2.2,,,,,
AuxXxilium,aux_kernel_g2,msm: acpuclock-8974: Modify L2 table for 8974 Currently 1.26 GHz and 1.49 GHz in the L2 tables for 8974 map to 800 MHz DDR. With this change the above frequencies now get mapped to 614 MHz DDR. This change maps the above two frequencies to lower DDR and will thereby help save power for use cases which spend majority of time at above frequencies. Change-Id: I7f1cbc12ff7dae28f65863d5c41e68de2db40bfe Signed-off-by: Dilip Gudlur <dgudlur@codeaurora.org>,12/12/2013 20:53:50,,DUPLICATE,https://github.com/AuxXxilium/aux_kernel_g2/commit/cd3a78e285b7810ecc3b0e3da000fe344280afae,,,,,,,EXISTS,,,,,,,,,,,,,AuxXxilium/aux_kernel_g2,,,,AuxXxilium,
special,telepathy-mission-control,[telepathy-mission-control] Prevent assert for offline accounts with power saving,12/12/2013 23:01:44,,FALSE-POSITIVE,https://github.com/special/telepathy-mission-control/commit/2173ce7fa95dde3951c4a3a4bb4c4d6a1913dedc,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,special/telepathy-mission-control,special,,,special,
Ayysir,android_kernel_lge_msm8974,msm: acpuclock-8974: Modify L2 table for 8974 Currently 1.26 GHz and 1.49 GHz in the L2 tables for 8974 map to 800 MHz DDR. With this change the above frequencies now get mapped to 614 MHz DDR. This change maps the above two frequencies to lower DDR and will thereby help save power for use cases which spend majority of time at above frequencies. Change-Id: I7f1cbc12ff7dae28f65863d5c41e68de2db40bfe Signed-off-by: Dilip Gudlur <dgudlur@codeaurora.org>,13/12/2013 06:38:56,,NOT-FOUND,https://github.com/Ayysir/android_kernel_lge_msm8974/commit/039993e111265c6d0f5a33a62e070aeb38b5dd97,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Ayysir/android_kernel_lge_msm8974,,,,Ayysir,
areddyraja,bigwindow,Average power consumption code added,14/12/2013 05:28:23,,FALSE-POSITIVE,https://github.com/areddyraja/bigwindow/commit/7f8f3e8009323e6da7f6be4b28fc0802e1fd35c5,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute power consumption],[FALSE-POSITIVE],[Compute power consumption],EXISTS,,,,,,,,,,,,,areddyraja/bigwindow,,,,,
intelfx,configs,system/essential/verbatim-files: udev/rules.d/40-pm-wol.rules: add a udev rule to disable WOL to save power.,14/12/2013 15:54:05,,OK,https://github.com/intelfx/configs/commit/bd63e2432561be8bb99ce369a2268026cf763fe1,,,[DO NOT ANALYZE],[OK] [Disable component] [Disable WOL] [Udev rule],[OK] [Disable component],[Disable component] [Disable WOL] [Udev rule],EXISTS,[disable wake-on-lan],[power saving],[Disable feature] [Disable wake-on-lan],[Disable feature],,Multiple changes,Certain,Personal config files?,No,Libraries and Utilities,Script udev,system/essential/verbatim-files: udev/rules.d/40-pm-wol.rules: add a udev rule to disable WOL to save power.,intelfx/configs,intelfx,[Disabling feature/devices],,intelfx,Script udev
intelfx,configs,system/essential/verbatim-files: modprobe.d/sound-powersaving.conf: module options for power saving in AC97 and HDA audio codecs.,14/12/2013 15:57:16,,OK,https://github.com/intelfx/configs/commit/5d42182ea36188e58ad8f1e0c9104b92c6f65bc0,,,[DO NOT ANALYZE],[OK] [Enable power saving],[OK] [Enable power saving],[Enable power saving],EXISTS,[enable power saving options for AC97 and HDA audio codecs],[power saving],[Enable AC97 codec power saving] [Enable Intel HDA power saving] [Script],[Enable device power saving],,,Certain,Personal config files?,No,Libraries and Utilities,Script config,system/essential/verbatim-files: modprobe.d/sound-powersaving.conf: module options for power saving in AC97 and HDA audio codecs.,intelfx/configs,intelfx,[Disabling feature/devices],,intelfx,Script config
intelfx,arch-installer,"system: update checkout (fixed problems after a test installation). Submodule system 6054760..15134a3: > configs/pool/user-skel: update checkout. > system/essential/verbatim-files: sysctl.d/99-sysctl.conf: tweak ""vm.dirty_background_ratio"". > system/essential/verbatim-toplevel: pm/config.d/75-modules: do not touch unnecessary/inexistent modules. > system/essential/verbatim-toplevel: pm/power.d/sysctl: add a generalized sysctl configurator for power management. > system/essential/verbatim-files: sysctl.d/99-sysctl.conf: do not unconditionally set ""vm.laptop_mode = 5"". > system/essential/verbatim-files: modprobe.d/sound-powersaving.conf: module options for power saving in AC97 and HDA audio codecs. > system/essential/verbatim-files: udev/rules.d/40-pm-wol.rules: add a udev rule to disable WOL to save power. > system/essential/verbatim-toplevel: router/dnsmasq.conf.default: update. > configs/pool/common-systemd: multi-user.target.wants: move dkms.service and iptables.service to own-systemd. > configs/desktop: desktop-modules-zcache: ditch (unavailable in default -ck kernels).",14/12/2013 16:39:06,,FALSE-POSITIVE,https://github.com/intelfx/arch-installer/commit/5060c14bb9a3e5ea1a6d80f44bd7cfb521be7be1,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,intelfx/arch-installer,intelfx,,,intelfx,
dwegmull,ArduNrfL01,Basic transmitter function is complete Power consumption down to 220uA in standby. Receiver code complete. Not tested outside of debug mode.,14/12/2013 23:48:02,,OK,https://github.com/dwegmull/ArduNrfL01/commit/ff6e16e5786dae25daef127d6e3e667974c4ffa7,,,[DO NOT ANALYZE],[OK] [Disable component] [Go to idle],[?],[Disable component] [Go to idle],EXISTS,,,[Go to sleep] [Disable peripheral],[Go to low power],[Disable device],Multiple changes,Certain,Arduino,No,Application,C,Basic transmitter function is complete Power consumption down to 220uA in standby. Receiver code complete. Not tested outside of debug mode.,dwegmull/ArduNrfL01,dwegmull,[Low power idling],,dwegmull,Arduino application
SyNtheticNightmar3,android_kernel_samsung_d2,d2: defconfig: Enable power efficient workqueues by default Signed-off-by: Luis Cruz <ljc2491@gmail.com>,15/12/2013 12:27:30,,OK,https://github.com/SyNtheticNightmar3/android_kernel_samsung_d2/commit/0aa7b4fe75993424f4f3e2cde8c3d10b8a63dc5f,,,[DO NOT ANALYZE],[OK] [Reverted] [Use power efficient component] [User power efficient work queue],[OK] [Reverted] [Use power efficient component] [User power efficient work queue],[Reverted] [Use power efficient component] [User power efficient work queue],EXISTS,[Enable power efficient workqueues by default],[power saving],[Reverted] [Use power efficient component] [Use power efficient work queue] [Script] [Config],[Use power efficient work queue],,Work queue,Certain,Android,No,OS,Defconfig,d2: defconfig: Enable power efficient workqueues by default,SyNtheticNightmar3/android_kernel_samsung_d2,SyNtheticNightmar3,[Use power efficient library/device],,SyNtheticNightmar3,Kernel arch
wombleton,gitlaw-nz,New version for Energy Efficiency and Conservation Act 2000,16/12/2013 01:38:47,,FALSE-POSITIVE,https://github.com/wombleton/gitlaw-nz/commit/745258e049c0bcd9efc227adde913c44d13aa40f,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,wombleton/gitlaw-nz,,,,,
zeuslightning125,ReplacementQuarries,(Hopefully) fixed energy consumption,16/12/2013 02:36:28,,NOT-FOUND,https://github.com/zeuslightning125/ReplacementQuarries/commit/597623b987bc8157b3582c0b7e214bc28d062afa,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zeuslightning125/ReplacementQuarries,,,,,
Jovy23,N900T_Kernel,"Revert ""net: wireless: bcmdhd: fixed power consumption issue of P2P."" This reverts commit f08b28a27f2f40d4955aa3e196e700b7a79d402d.",16/12/2013 05:45:17,,NOT-FOUND,https://github.com/Jovy23/N900T_Kernel/commit/ba7f13c49a374d417e3af8b159e5719a5d8f1308,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Jovy23/N900T_Kernel,,,,,
poondog,joey-m7-GPE,DEFCONFIG: enable power efficient workques by default Picked from syntheticnightmare git,17/12/2013 00:15:13,,DUPLICATE,https://github.com/poondog/joey-m7-GPE/commit/ca34e3faacc0cad1552d1d54ebfa7f15f36bb937,,,,[OK] [VERIFY] [Enable power efficient workqueue],,[VERIFY] [Enable power efficient workqueue],EXISTS,,,,,,,,,,,,,poondog/joey-m7-GPE,poondog,,,poondog,
audahadi,kernel_htc_endeavoru,"compat-writeless: Update from ol_R5.SP3.01 to ol_R5.SP6.01 Commits come from https://github.com/TI-OpenLink/. HTC specific changes are still there. Just the commits leading from SP3.01 to SP6.01 were applied. Non squashed commits can be seen here: https://github.com/thoemy/android_kernel_htc_endeavoru/tree/update-wifi-compat Squashed commit of the following: commit f44feec52868feb8147b9fd31afed470ff31e49c Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 14:15:24 2013 +0200 wl12xx: fix unsafe dereference of the wlvif wlvif could be passed as NULL from the wl1271_tx_work_locked() to the wl1271_prepare_tx_frame() and to wl1271_skb_queue_head() functions. This may lead to a Kernel panic, fix this by validating that wlvif != NULL before using it. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 025cff694bca23e5ce922eb13f4ee081590613ca Author: Eyal Reizer <eyalr@ti.com> Date: Tue Mar 5 17:57:32 2013 +0200 wl12xx:support ap a2dp coex Add functionality to support AP A2DP co-existence: 1. Add configuration for enable/disable of CTS protection in AP mode 2. Add indication for completion of connection establishment in ap mode. This is used by the firmware to change coex parameters when a station is in the process and connecting to the ap and change them back after the connection has been established. Signed-off-by: Eyal Reizer <eyalr@ti.com> commit b362724cdf8d78333121410fa81246d2f1bc4c8e Author: Victor Goldenshtein <victorg@ti.com> Date: Wed Feb 27 11:04:38 2013 +0200 cfg80211: consider security during scan results update AP security changes are not updated in the following scenario: STA performs a scheduled scan on DFS channel during connection to open AP, as some devices (wl12xx) will send a probe req on DFS channels once activity is detected, cfg80211 gets and saves the scan result from a probe resp. STA disconnected and AP security is changed to AES, STA performs a passive scan, cfg80211 gets a new scan result for the same BSSID but now from beacon. cfg80211_bss_update() finds previous scan result from probe resp but the security change is not updated correctly. Fix this by considering security mismatch in rb_find_bss. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 84d2dec74d7352b76d726a3f5f772391e2c7c4a9 Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 13:39:13 2013 +0200 wl12xx: fix unset ret value in wl1271_join Set the ret value before the return statement. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 7d3cf22542673fd0a5bd8a0f0dd21c9e36846f7b Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 13:10:52 2013 +0200 wl12xx: fix mem leak in the channel switch command Channel switch command wasn't freed in certain sanity check, fix this by moving the check before the command allocation. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 98bf0f43c8f9a441d13186753eb99179f7ec5ca2 Author: Eyal Shapira <eyal@wizery.com> Date: Sat Nov 3 16:35:35 2012 +0200 mac80211: reject BA action frames if sent fron non HT STA The FW doesn't work well with BA sessions started from non 802.11n STAs. Reject these as a work around until the FW issue is fixed. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit c53bd9ec1ac5b7adea2c6c485cca5df86cc0d177 Author: Eyal Shapira <eyal@wizery.com> Date: Fri Nov 2 12:14:44 2012 +0200 mac80211: warn on enabling beacon while off channel This can cause the beaconing to start on the wrong channel. Several such races were fixed but still add a WARN_ON as we'd like to know if something like that still happens. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 84b4126a8085a36ae2ff53204679f31c01c0e925 Author: Eyal Shapira <eyal@wizery.com> Date: Fri Nov 2 12:19:21 2012 +0200 wl12xx: improve some debug logs These turned out to be useful so add them. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 2cbd264e7dd001a8ca54289c467f4bf272ef0fb4 Author: Ofir Luzon <ofirluzon@ti.com> Date: Wed Oct 31 14:57:56 2012 +0200 wl12xx: fix list_add/list_del add list_del even if wl in off state Signed-off-by: Ofir Luzon <ofirluzon@ti.com> commit cffd2e38e8a3a15b21c68173954c81896b3a3f0e Author: Yair Shapira <yair.shapira@ti.com> Date: Wed Oct 31 12:48:33 2012 +0200 wl12xx: FW recovery trigger assert bug fix The bug was in the partition mapping. It seems that .mem3 partition that we used to write 'magic' 0xCAFECAFE to address 0x1C is actually in use (it contains the struct part of the FW_STATUS). It is in use although the size of the partition is set to 0 The fix was to save old partition, map a new partition with .mem part set to address 0x1C and remap previous partition after writing 0xCAFECAFE. Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit d2fd56a7755f5136a6a3125f46881387300da850 Author: Yair Shapira <yair.shapira@ti.com> Date: Mon Oct 29 19:56:45 2012 +0200 wl12xx: mutually exclude PLT and normal power modes Small fix done to ensure that PLT mode and normal driver power mode (ifconfig/add_interface) are mutually excluded. This is partially based on wl18xx (R8) commit 6620ca8fe29d Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit fbf346aee8f230b01c4319a2827369406283b7a9 Author: Eyal Shapira <eyal@wizery.com> Date: Thu Oct 25 17:33:57 2012 +0200 wl12xx: check for required fw change while enable or disable role In certain scenarios our current hooks for checking required fw change aren't enough and we could be left in MR even though we've gone back to a single interface. This is of course not good as we prefer running with the SR FW which contains goodies like BTCOEX. An example scanerio is when running P2P GO + STA and then removing the P2P GO. Fix it by adding checks for fw change also while enable or disable roles. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 628cded5472953c4c3997c91e625d736c4444c2f Author: Yair Shapira <yair.shapira@ti.com> Date: Mon Oct 29 16:38:57 2012 +0200 wl12xx: disable elp sleep while in plt mode We now disable elp sleep during plt mode to allow normal operation of plt tools such as calibrator. Having elp_sleep enabled during plt mode is actually not required and in fact it distupt plt operations such as rx statistics etc... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 527a8c9e2fe74985b88dbf8b0918a3cba1b3eeae Author: Arik Nemtsov <arik@wizery.com> Date: Wed Oct 24 22:35:27 2012 +0200 mac80211: purge offchannel Tx on reconfig Offchannel Tx occuring during reconfig can cause us the low level driver to start various operations on the wrong channel, similar to remain on channel operations. Purge them before reconfig. Reported-by: Eyal Shapira <eyal@wizery.com> Signed-off-by: Arik Nemtsov <arik@wizery.com> commit 6bddef20fb9bf7af7d6bf8a1529b4da3600e7011 Author: Igal Chernobelsky <igalc@ti.com> Date: Thu Oct 18 17:08:19 2012 +0200 wl12xx: Copy FW log as entire mem block FW log copy is simplified to copy the entire memory block as FW logger utility is repsponsible for parsing of FW log content. (Similar commit was applied to wl18xx: wlcore/wl18xx/wl12xx: FW log params per chip arch) Signed-off-by: Igal Chernobelsky <igalc@ti.com> commit 892ec800368b26df0a51129374e1d229de5340e9 Author: Eyal Shapira <eyal@wizery.com> Date: Thu Oct 18 18:05:24 2012 +0200 wl12xx: decrease elp timeout to 20ms The current elp timeout set to 200 ms is too high. While its purpose was to avoid going to ELP during Tx/Rx the problem is that it keeps the device awake also after issuing commands when there's no traffic. In Android this is a real problem as RSSI is polled by the framework every 3 seconds and keeping the chip out of ELP for 200ms each time has a significant power consumption effect. Fix that by changing to 20ms. This prevents excessive real elp sleeps and wakeups during Rx/Tx with 12xx. There's no real need any more for setting a hard coded 5ms while in forced_ps. The fw won't enter elp anyways before the dynamic-ps timeout expired as well (and it entered ps successfully). (Based on a similar patch by Eliad for wlcore) Signed-off-by: Eyal Shapira <eyal@wizery.com> commit f42634221d0a3be3f626effa91ec6158ca8a055d Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:46 2012 +0200 wl12xx: triggering FW assert to perform recovery Driver based FW recovery was modified. It is now trying to trigger FW assert and waiting for WATCHDOG interrupt before continuing with recovery. This is done to allow FW to perform cleanups and halt gracefully before recovery is performed. This allows for safe reading of on-demand fwlog, core_dump, etc... FW assert triggering is done by writing 0xcafecafe to FW address 0x1c and then triggering PHY_RX_HEADER FW interrupt which is its highest priority interrupt. There is a timeout of 100ms waiting for WATCHDOG interrupt. In case timeout is reached or we get ELP or SDIO errors, we resume recovery without reading fwlog, core_dump, etc beacuse we assume that FW is not responding... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 45106c6f0b3abcf1b6fb8ebffed5eaa88efd7302 Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:45 2012 +0200 wl12xx: fix some line spacing Remove trailing blanks... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit f5b0d71aed8278875fa12f08b4a9c2c3df805b2b Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:44 2012 +0200 wl12xx: recovery elp_wakeup optimizations We now do several optimizations related to recovery situations: We fail elp_wakeup if we have SDIO errors (otherwise we just waste time) We now call elp_wakeup inside the recovery work routine to ensure that FW is awake for recovery operations (such as ewading core dump, on- demand fwlog etc...). This is done prior to disabling wl-interrupts. The call to elp_wakeup was removed from userspace recovery trigger routines (such as libnl and debugfs) because it is now redundent Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 523ae05615fe45613b97fdd5e57143cdb8784d4f Author: Arik Nemtsov <arik@wizery.com> Date: Wed Oct 10 18:11:20 2012 +0200 mac ...",17/12/2013 15:40:54,,NOT-FOUND,https://github.com/audahadi/kernel_htc_endeavoru/commit/4dddf26046e448ba1f9af16d8d384bf78dba6383,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,audahadi/kernel_htc_endeavoru,,,,,
AriZuu,picoos,Add support for Energy Micro RTC scheduling clock instead of standard SysTick. This allows energy savings - using SysTick won't allow very deep sleep.,18/12/2013 16:09:39,,RELATED,https://github.com/AriZuu/picoos/commit/b4fb5e30ef5424f17c6fb636b7b5df361195cccc,,,[OK][DEPEER SLEEP STATES],[OK] [App specific] [Add improved energy clock] [DEPEER SLEEP STATES],[OK] [APP SPECIFIC],[App specific] [Add improved energy clock] [DEPEER SLEEP STATES],EXISTS,,,,,,,Certain,Pico]Os,No,Kernel,C,Add support for Energy Micro RTC scheduling clock instead of standard SysTick. This allows energy savings - using SysTick won't allow very deep sleep.,AriZuu/picoos,AriZuu,,,AriZuu,Kernel ?
jimsth,vanir_hammerhead,"cpuidle: Quickly notice prediction failure in general case The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. The patch extends to general case that prediction logic get a small predicted residency, so it choose a shallow C-state though the expected residency is large . Once the prediction will be fail, the CPU will keep staying at shallow C-state for a long time. Acutally, the CPU has change enter into deep C-state. So when the expected residency is long enough but governor choose a shallow C-state, an timer will be added in order to monitor if the prediction failure. When C-state is waken up prior to the adding timer, the timer will be cancelled initiatively. When the timer is triggered and menu governor will quickly notice prediction failure and re-evaluates deeper C-states possibility. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: flar2 <asegaert@gmail.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>",19/12/2013 10:05:17,,NOT-FOUND,https://github.com/jimsth/vanir_hammerhead/commit/b6a3d464caaa2ad9dcf12df21aa8e8e9b270d457,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jimsth/vanir_hammerhead,,,,,
poondog,joey-m7-GPE,ASoC: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit e6058aaadcd473e5827720dc143af56aabbeecc7) Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com>,19/12/2013 10:57:12,,OK,https://github.com/poondog/joey-m7-GPE/commit/f678a6e40f44f4640067f6f595ef9b33d4cd9c96,,,[DO NOT ANALYZE],[OK] [Use power efficient component] [User power efficient work queue],[OK] [Use power efficient component] [User power efficient work queue],[Use power efficient component] [User power efficient work queue],EXISTS,[Use power efficient workqueue],[accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue],[Use power efficient component] [Use power efficient work queue],[Use power efficient work queue],,Work queue,Certain,Android,No,OS,C,ASoC: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue.,poondog/joey-m7-GPE,SyNtheticNightmar3,[Use power efficient library/device],,poondog,Kernel sound
JetBrains,intellij-community,no smart icons and no parameter info in power save mode (cherry picked from commit 4bb3242),19/12/2013 12:01:06,,FALSE-POSITIVE,https://github.com/JetBrains/intellij-community/commit/997edcb7a1d322ba5f3df7e0c5dffe286ef78358,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,JetBrains/intellij-community,,,,,
SyNtheticNightmar3,android_kernel_samsung_d2,"Revert ""d2: defconfig: Enable power efficient workqueues by default"" After some runtime and testing, this seems to do more harm than good to our dual core devices in terms of power efficiency. I can see how this would be very beneficial on a device with more cores though. So I'll just ref this on another branch; just in case I end up with a cool new gadget in the near future. This reverts commit 0aa7b4fe75993424f4f3e2cde8c3d10b8a63dc5f. Signed-off-by: Luis Cruz <ljc2491@gmail.com>",19/12/2013 16:08:44,,REVERT,https://github.com/SyNtheticNightmar3/android_kernel_samsung_d2/commit/fc9af4351aba65b6467f5c8a61db64e5196d7105,,,[DO NOT ANALYZE],[REVERT] [0aa7b4fe75993424f4f3e2cde8c3d10b8a63dc5f],[REVERT] [0aa7b4fe75993424f4f3e2cde8c3d10b8a63dc5f],[0aa7b4fe75993424f4f3e2cde8c3d10b8a63dc5f],EXISTS,"Revert ""d2: defconfig: Enable power efficient workqueues by default""","After some runtime and testing, this seems to do more harm than good to our dual core devices in terms of power efficiency. I can see how this would be very beneficial on a device with more cores though. So I'll just ref this on another branch; just in case I end up with a cool new gadget in the near future.",,,,,,,,,,,SyNtheticNightmar3/android_kernel_samsung_d2,SyNtheticNightmar3,,,SyNtheticNightmar3,
J1nx-Hackable-Gadgets,buildroot-linux-kernel-m3,"[TLBB] Disable wifi power saving We are a set top box, no tablet.",19/12/2013 18:36:26,,TRADEOFF,https://github.com/J1nx-Hackable-Gadgets/buildroot-linux-kernel-m3/commit/46fa2eea1f1c86331e4ef9e53224c103bef95533,,,[DO NOT ANALYZE],[TRADEOFF] [Disable power saving] [Disable wifi saving],[TRADEOFF] [Disable power saving] [Disable wifi saving],[Disable power saving] [Disable wifi saving],EXISTS,[Disable power saving],[Setbox not tablet] [Power saving not needed],,,,,Certain,Linux ?,No,Driver,Make,,J1nx-Hackable-Gadgets/buildroot-linux-kernel-m3,,Miscellaneous,,,Driver
jcmcclurg,DataCenterSim,I think it's finally working the way it should. Added file generation to accumulators and server queue (for logging power consumption). Next step is to do the full factorial experiment.,20/12/2013 06:58:14,,FALSE-POSITIVE,https://github.com/jcmcclurg/DataCenterSim/commit/88a5d0af5e6910ade296f0297a1b9ba0cf5c8300,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,jcmcclurg/DataCenterSim,jcmcclurg,,,jcmcclurg,
zegame,Factorio_FR_Locales,"Updated the structure of files to match the 0.8.0 file organisation (not verified). Orthography verification needed. Fin de ligne 12 �� 14, je n'ai pas compris le sens de la phrase donc, j'ai laisser ""Minimum energy consumption is -80%.""",20/12/2013 18:16:22,,FALSE-POSITIVE,https://github.com/zegame/Factorio_FR_Locales/commit/5ddaea9c2b1f55e84d8c6ee7d847e4ee4b54f492,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,zegame/Factorio_FR_Locales,zegame,,,zegame,
redFrik,udk10-Embedded_Systems,minor note about ethernet power consumption,21/12/2013 15:41:39,,FALSE-POSITIVE,https://github.com/redFrik/udk10-Embedded_Systems/commit/d0fa22da46fa26dd6faf4ad5dbc791040e904a38,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,redFrik/udk10-Embedded_Systems,redFrik,,,redFrik,
Resonant-Engine,Universal-Electricity,Made ItemElectric save energy as long,22/12/2013 15:29:01,,NOT-FOUND,https://github.com/Universal-Electricity/Universal-Electricity/commit/a052c9bd81c8ab28d3048a937845b7a354cdf93b,https://github.com/Resonant-Engine/Universal-Electricity/commit/a052c9bd81c8ab28d3048a937845b7a354cdf93b,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSITIVE],[Game] [Minecraft],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Resonant-Engine/Universal-Electricity,DarkGuardsman,,,DarkGuardsman,
audahadi,kernel_endeavoru,"compat-writeless: Update from ol_R5.SP3.01 to ol_R5.SP6.01 Commits come from https://github.com/TI-OpenLink/. HTC specific changes are still there. Just the commits leading from SP3.01 to SP6.01 were applied. Non squashed commits can be seen here: https://github.com/thoemy/android_kernel_htc_endeavoru/tree/update-wifi-compat Squashed commit of the following: commit f44feec52868feb8147b9fd31afed470ff31e49c Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 14:15:24 2013 +0200 wl12xx: fix unsafe dereference of the wlvif wlvif could be passed as NULL from the wl1271_tx_work_locked() to the wl1271_prepare_tx_frame() and to wl1271_skb_queue_head() functions. This may lead to a Kernel panic, fix this by validating that wlvif != NULL before using it. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 025cff694bca23e5ce922eb13f4ee081590613ca Author: Eyal Reizer <eyalr@ti.com> Date: Tue Mar 5 17:57:32 2013 +0200 wl12xx:support ap a2dp coex Add functionality to support AP A2DP co-existence: 1. Add configuration for enable/disable of CTS protection in AP mode 2. Add indication for completion of connection establishment in ap mode. This is used by the firmware to change coex parameters when a station is in the process and connecting to the ap and change them back after the connection has been established. Signed-off-by: Eyal Reizer <eyalr@ti.com> commit b362724cdf8d78333121410fa81246d2f1bc4c8e Author: Victor Goldenshtein <victorg@ti.com> Date: Wed Feb 27 11:04:38 2013 +0200 cfg80211: consider security during scan results update AP security changes are not updated in the following scenario: STA performs a scheduled scan on DFS channel during connection to open AP, as some devices (wl12xx) will send a probe req on DFS channels once activity is detected, cfg80211 gets and saves the scan result from a probe resp. STA disconnected and AP security is changed to AES, STA performs a passive scan, cfg80211 gets a new scan result for the same BSSID but now from beacon. cfg80211_bss_update() finds previous scan result from probe resp but the security change is not updated correctly. Fix this by considering security mismatch in rb_find_bss. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 84d2dec74d7352b76d726a3f5f772391e2c7c4a9 Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 13:39:13 2013 +0200 wl12xx: fix unset ret value in wl1271_join Set the ret value before the return statement. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 7d3cf22542673fd0a5bd8a0f0dd21c9e36846f7b Author: Victor Goldenshtein <victorg@ti.com> Date: Thu Jan 17 13:10:52 2013 +0200 wl12xx: fix mem leak in the channel switch command Channel switch command wasn't freed in certain sanity check, fix this by moving the check before the command allocation. Signed-off-by: Victor Goldenshtein <victorg@ti.com> commit 98bf0f43c8f9a441d13186753eb99179f7ec5ca2 Author: Eyal Shapira <eyal@wizery.com> Date: Sat Nov 3 16:35:35 2012 +0200 mac80211: reject BA action frames if sent fron non HT STA The FW doesn't work well with BA sessions started from non 802.11n STAs. Reject these as a work around until the FW issue is fixed. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit c53bd9ec1ac5b7adea2c6c485cca5df86cc0d177 Author: Eyal Shapira <eyal@wizery.com> Date: Fri Nov 2 12:14:44 2012 +0200 mac80211: warn on enabling beacon while off channel This can cause the beaconing to start on the wrong channel. Several such races were fixed but still add a WARN_ON as we'd like to know if something like that still happens. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 84b4126a8085a36ae2ff53204679f31c01c0e925 Author: Eyal Shapira <eyal@wizery.com> Date: Fri Nov 2 12:19:21 2012 +0200 wl12xx: improve some debug logs These turned out to be useful so add them. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 2cbd264e7dd001a8ca54289c467f4bf272ef0fb4 Author: Ofir Luzon <ofirluzon@ti.com> Date: Wed Oct 31 14:57:56 2012 +0200 wl12xx: fix list_add/list_del add list_del even if wl in off state Signed-off-by: Ofir Luzon <ofirluzon@ti.com> commit cffd2e38e8a3a15b21c68173954c81896b3a3f0e Author: Yair Shapira <yair.shapira@ti.com> Date: Wed Oct 31 12:48:33 2012 +0200 wl12xx: FW recovery trigger assert bug fix The bug was in the partition mapping. It seems that .mem3 partition that we used to write 'magic' 0xCAFECAFE to address 0x1C is actually in use (it contains the struct part of the FW_STATUS). It is in use although the size of the partition is set to 0 The fix was to save old partition, map a new partition with .mem part set to address 0x1C and remap previous partition after writing 0xCAFECAFE. Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit d2fd56a7755f5136a6a3125f46881387300da850 Author: Yair Shapira <yair.shapira@ti.com> Date: Mon Oct 29 19:56:45 2012 +0200 wl12xx: mutually exclude PLT and normal power modes Small fix done to ensure that PLT mode and normal driver power mode (ifconfig/add_interface) are mutually excluded. This is partially based on wl18xx (R8) commit 6620ca8fe29d Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit fbf346aee8f230b01c4319a2827369406283b7a9 Author: Eyal Shapira <eyal@wizery.com> Date: Thu Oct 25 17:33:57 2012 +0200 wl12xx: check for required fw change while enable or disable role In certain scenarios our current hooks for checking required fw change aren't enough and we could be left in MR even though we've gone back to a single interface. This is of course not good as we prefer running with the SR FW which contains goodies like BTCOEX. An example scanerio is when running P2P GO + STA and then removing the P2P GO. Fix it by adding checks for fw change also while enable or disable roles. Signed-off-by: Eyal Shapira <eyal@wizery.com> commit 628cded5472953c4c3997c91e625d736c4444c2f Author: Yair Shapira <yair.shapira@ti.com> Date: Mon Oct 29 16:38:57 2012 +0200 wl12xx: disable elp sleep while in plt mode We now disable elp sleep during plt mode to allow normal operation of plt tools such as calibrator. Having elp_sleep enabled during plt mode is actually not required and in fact it distupt plt operations such as rx statistics etc... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 527a8c9e2fe74985b88dbf8b0918a3cba1b3eeae Author: Arik Nemtsov <arik@wizery.com> Date: Wed Oct 24 22:35:27 2012 +0200 mac80211: purge offchannel Tx on reconfig Offchannel Tx occuring during reconfig can cause us the low level driver to start various operations on the wrong channel, similar to remain on channel operations. Purge them before reconfig. Reported-by: Eyal Shapira <eyal@wizery.com> Signed-off-by: Arik Nemtsov <arik@wizery.com> commit 6bddef20fb9bf7af7d6bf8a1529b4da3600e7011 Author: Igal Chernobelsky <igalc@ti.com> Date: Thu Oct 18 17:08:19 2012 +0200 wl12xx: Copy FW log as entire mem block FW log copy is simplified to copy the entire memory block as FW logger utility is repsponsible for parsing of FW log content. (Similar commit was applied to wl18xx: wlcore/wl18xx/wl12xx: FW log params per chip arch) Signed-off-by: Igal Chernobelsky <igalc@ti.com> commit 892ec800368b26df0a51129374e1d229de5340e9 Author: Eyal Shapira <eyal@wizery.com> Date: Thu Oct 18 18:05:24 2012 +0200 wl12xx: decrease elp timeout to 20ms The current elp timeout set to 200 ms is too high. While its purpose was to avoid going to ELP during Tx/Rx the problem is that it keeps the device awake also after issuing commands when there's no traffic. In Android this is a real problem as RSSI is polled by the framework every 3 seconds and keeping the chip out of ELP for 200ms each time has a significant power consumption effect. Fix that by changing to 20ms. This prevents excessive real elp sleeps and wakeups during Rx/Tx with 12xx. There's no real need any more for setting a hard coded 5ms while in forced_ps. The fw won't enter elp anyways before the dynamic-ps timeout expired as well (and it entered ps successfully). (Based on a similar patch by Eliad for wlcore) Signed-off-by: Eyal Shapira <eyal@wizery.com> commit f42634221d0a3be3f626effa91ec6158ca8a055d Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:46 2012 +0200 wl12xx: triggering FW assert to perform recovery Driver based FW recovery was modified. It is now trying to trigger FW assert and waiting for WATCHDOG interrupt before continuing with recovery. This is done to allow FW to perform cleanups and halt gracefully before recovery is performed. This allows for safe reading of on-demand fwlog, core_dump, etc... FW assert triggering is done by writing 0xcafecafe to FW address 0x1c and then triggering PHY_RX_HEADER FW interrupt which is its highest priority interrupt. There is a timeout of 100ms waiting for WATCHDOG interrupt. In case timeout is reached or we get ELP or SDIO errors, we resume recovery without reading fwlog, core_dump, etc beacuse we assume that FW is not responding... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 45106c6f0b3abcf1b6fb8ebffed5eaa88efd7302 Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:45 2012 +0200 wl12xx: fix some line spacing Remove trailing blanks... Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit f5b0d71aed8278875fa12f08b4a9c2c3df805b2b Author: Yair Shapira <yair.shapira@ti.com> Date: Sun Oct 14 17:10:44 2012 +0200 wl12xx: recovery elp_wakeup optimizations We now do several optimizations related to recovery situations: We fail elp_wakeup if we have SDIO errors (otherwise we just waste time) We now call elp_wakeup inside the recovery work routine to ensure that FW is awake for recovery operations (such as ewading core dump, on- demand fwlog etc...). This is done prior to disabling wl-interrupts. The call to elp_wakeup was removed from userspace recovery trigger routines (such as libnl and debugfs) because it is now redundent Signed-off-by: Yair Shapira <yair.shapira@ti.com> commit 523ae05615fe45613b97fdd5e57143cdb8784d4f Author: Arik Nemtsov <arik@wizery.com> Date: Wed Oct 10 18:11:20 2012 +0200 mac ...",23/12/2013 06:15:33,,NOT-FOUND,https://github.com/audahadi/kernel_endeavoru/commit/f0049e435daacc88f45deb496f75bfec70265d9d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,audahadi/kernel_endeavoru,,,,,
audahadi,kernel_endeavoru,HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Change-Id: I19dfd27cb97a8bd9989530f4053b241397ef6752 Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>,23/12/2013 06:38:10,,NOT-FOUND,https://github.com/audahadi/kernel_endeavoru/commit/961efa02fe6044ce72b31547f1d243b06012420f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,audahadi/kernel_endeavoru,,,,,
omnirom,android_kernel_samsung_jf,sched: set power savings to POWERSAVINGS_BALANCE_WAKEUP save some power by default Change-Id: Ica16419a0af38efade80c527f5a69bce046ccca9,23/12/2013 22:41:02,,OK,https://github.com/omnirom/android_kernel_samsung_jf/commit/b3bb3e795614779946fe7590c51dfce0f49f38ed,,,[DO NOT ANALYZE],[OK] [Set power saving mode] [Android] [Reverted],[OK] [Enable power saving],[Set power saving mode] [Android] [Reverted] [Enable power saving],EXISTS,[Set multicore power savings to POWERSAVINGS_BALANCE_WAKEUP],[save some power by default],[Set scheduler multicore power savings to POWERSAVINGS_BALANCE_WAKEUP] [Reverted],[Enable power saving feature],,,Certain,Android,No,OS,C,sched: set power savings to POWERSAVINGS_BALANCE_WAKEUP save some power by default,omnirom/android_kernel_samsung_jf,Evisceration,[Use power efficient library/device],,,Kernel
omnirom,android_kernel_samsung_jf,Update notes for submitted changes * sched: set power savings to POWERSAVINGS_BALANCE_WAKEUP,23/12/2013 22:41:03,,FALSE-POSITIVE,https://github.com/omnirom/android_kernel_samsung_jf/commit/779b9817f5475b62cb54d45a76669a55fe196bd3,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,omnirom/android_kernel_samsung_jf,,,,,
PlutoniumHeart,linux,drm/radeon/dpm: disable ss on Cayman Spread spectrum seems to cause hangs when dynamic clock switching is enabled. Disable it for now. This does not affect performance or the amount of power saved. Tracked down by Martin Andersson. bug: https://bugs.freedesktop.org/show_bug.cgi?id=69723 Signed-off-by: Alex Deucher <alexander.deucher@amd.com> Cc: stable@vger.kernel.org,23/12/2013 23:13:09,,FALSE-POSITIVE,https://github.com/PlutoniumHeart/linux/commit/c745fe611ca42295c9d91d8e305d27983e9132ef,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,PlutoniumHeart/linux,,,,,
gustavoss,android_kernel_samsung_smdk4412,"Revert ""sched: set power savings to POWERSAVINGS_BALANCE_WAKEUP"" this reverts commit https://github.com/gustavoss/android_kernel_samsung_smdk4412/commit/51e0615cfe55fe1f4bde680445881cb4b22e2745",24/12/2013 03:13:43,,REVERT,https://github.com/gustavoss/android_kernel_samsung_smdk4412/commit/fad1a2e97acaf89d54edfa08e9e0b05423a44c31,,,[DO NOT ANALYZE],[REVERT] [51e0615cfe55fe1f4bde680445881cb4b22e2745],[REVERT] [51e0615cfe55fe1f4bde680445881cb4b22e2745],[51e0615cfe55fe1f4bde680445881cb4b22e2745],EXISTS,"Revert ""sched: set power savings to POWERSAVINGS_BALANCE_WAKEUP""",,,,,,,,,,,,gustavoss/android_kernel_samsung_smdk4412,gustavoss,,,gustavoss,
benquach16,lost-horizons,beginning to add energy consumption,25/12/2013 08:54:34,,FALSE-POSITIVE,https://github.com/benquach16/lost-horizons/commit/f367bce5a00364eb0e8d70fddeb612d2f149530d,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,benquach16/lost-horizons,benquach16,,,benquach16,
benquach16,lost-horizons,mostly functional energy consumption added,25/12/2013 11:46:54,,FALSE-POSITIVE,https://github.com/benquach16/lost-horizons/commit/3a58ac234dc2e91467344c242048d9d440433e33,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,benquach16/lost-horizons,benquach16,,,benquach16,
Resonant-Engine,Universal-Electricity,Made network save energy on split,25/12/2013 20:54:58,,NOT-FOUND,https://github.com/Universal-Electricity/Universal-Electricity/commit/a2cd2b6856fe1d948406ae677c91b79c511e40c2,https://github.com/Resonant-Engine/Universal-Electricity/commit/a2cd2b6856fe1d948406ae677c91b79c511e40c2,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Resonant-Engine/Universal-Electricity,DarkGuardsman,,,DarkGuardsman,
cod2xnp,android_kernel_samsung_tuna,"omap44xx: cpuidle: Update target residencies to saner values The current values are insane. There is no possible way power saving can be attained by heading into C4 for not much more than 1ms. The average values are in the 20ms range, so why do we need to even entertain entering at much lower values when we will use more power than we save in doing so. The actual recommended values are shown in 79e796f7b993bd82ad108fa488c35ddd1b9387eb but for some obscure reason, in 16385c726d55f9e84bbc60ff9e329a84d56a13a3 and 22e2193661b6bffcfdc1a4d17f6af0d1782ba860 they were updated to match the exit_latency. This seems horribly wrong to me as there comes a point when the target residency is so low that you use more power actually entering the state than you gain from the insignificant amount of time you spend there. With the values in this commit, C4 state is used for >95% of the time when the screen is off, with C3 picking up the remainder. During audio playback, C4 is used ~50% of the time, C3 is used ~25% of the time and C2 picks up whatever is left. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",26/12/2013 05:06:45,,NOT-FOUND,https://github.com/cod2xnp/android_kernel_samsung_tuna/commit/13d05e7fac55510ffd16dc48c18b47c4aa40b193,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,cod2xnp/android_kernel_samsung_tuna,thalamus,,,cod2xnp,
mtb3000gt,android_kernel_samsung_smdk4412,sched: set power savings to POWERSAVINGS_BALANCE_WAKEUP,26/12/2013 21:35:13,,NOT-FOUND,https://github.com/mtb3000gt/android_kernel_samsung_smdk4412/commit/d4d1f69773d75953d13431e43f31ec05d708434a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,mtb3000gt/android_kernel_samsung_smdk4412,,,,,
pantoniou,linux-beagle-track-mainline,"Revert ""mac80211: allow disable power save in mesh"" This reverts commit ee1f668136b2fb6640ee2d54c2a525ea41f98211. The aformentioned commit added a check to allow 'iw wlan0 set power_save off' to work for mesh interfaces. However, this is problematic because it also allows 'iw wlan0 set power_save on', which will crash in short order because all of the subsequent code manipulates sdata->u.mgd. The power-saving states for mesh interfaces can be manipulated through the mesh config, e.g: 'iw wlan0 set mesh_param mesh_power_save=active' (which, despite the name, actualy disables power saving since the setting refers to the type of sleep the interface undergoes). Cc: stable@vger.kernel.org Fixes: ee1f668136b2 (""mac80211: allow disable power save in mesh"") Signed-off-by: Bob Copeland <me@bobcopeland.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>",27/12/2013 17:13:40,,REVERT,https://github.com/pantoniou/linux-beagle-track-mainline/commit/2d3db210860f1df099a35b1dd54cca35454e0361,,,[DO NOT ANALYZE],[REVERT],[REVERT] [ee1f668136b2fb6640ee2d54c2a525ea41f98211],[ee1f668136b2fb6640ee2d54c2a525ea41f98211],EXISTS,"Revert ""mac80211: allow disable power save in mesh""","The aformentioned commit added a check to allow 'iw wlan0 set power_save off' to work for mesh interfaces. However, this is problematic because it also allows 'iw wlan0 set power_save on', which will crash in short order because all of the subsequent code manipulates sdata->u.mgd. The power-saving states for mesh interfaces can be manipulated through the mesh config, e.g: 'iw wlan0 set mesh_param mesh_power_save=active' (which, despite the name, actualy disables power saving since the setting refers to the type of sleep the interface undergoes).",,,,,,,,,,,pantoniou/linux-beagle-track-mainline,bcopeland,,,jmberg,
samlls,BiliLocal,improve power saving prevention,29/12/2013 02:51:31,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/samlls/BiliLocal/commit/0d9aa4a02fb8761642354a3f6eb2fa4ba07c1785,,,[DO NOT ANALYZE],[RELATED] [Prevent power saving],[RELATED] [Prevent power saving],[Prevent power saving],EXISTS,,,,,,,,,,,,,samlls/BiliLocal,,,,,
poondog,flo,ASoC: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit e6058aaadcd473e5827720dc143af56aabbeecc7) Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com>,29/12/2013 06:03:11,,DUPLICATE,https://github.com/poondog/flo/commit/74973659bae050e7e90066ce1e6ddefe5487b1f1,,,,,,,EXISTS,,,,,,,,,,,,,poondog/flo,SyNtheticNightmar3,,,poondog,
AnakinMac,MPlayerX,Eliminate unnecessary timer for power saving And add timer tolerance for 10.9 Mavericks,29/12/2013 23:02:22,,NOT-FOUND,https://github.com/AnakinMac/MPlayerX/commit/0f1db5fbe92895c373880180c412c8cfcfb3fc4f,,,[NOT-FOUND],[NOT-FOUND],[NOT-FOUND],,EXISTS,,,,,,,,,,,,,AnakinMac/MPlayerX,,,,,
AOSPAL,android_kernel_asus_flo,"cpuidle: Quickly notice prediction failure for repeat mode The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. cpuidle menu governor has a method to predict the repeat pattern if there are 8 C-states residency which are continuous and the same or very close, so it will predict the next C-states residency will keep same residency time. There is a real case that turbostat utility (tools/power/x86/turbostat) at kernel 3.3 or early. turbostat utility will read 10 registers one by one at Sandybridge, so it will generate 10 IPIs to wake up idle CPUs. So cpuidle menu governor will predict it is repeat mode and there is another IPI wake up idle CPU soon, so it keeps idle CPU stay at C1 state even though CPU is totally idle. However, in the turbostat, following 10 registers reading is sleep 5 seconds by default, so the idle CPU will keep at C1 for a long time though it is idle until break event occurs. In a idle Sandybridge system, run ""./turbostat -v"", we will notice that deep C-state dangles between ""70% ~ 99%"". After patched the kernel, we will notice deep C-state stays at >99.98%. In the patch, a timer is added when menu governor detects a repeat mode and choose a shallow C-state. The timer is set to a time out value that greater than predicted time, and we conclude repeat mode prediction failure if timer is triggered. When repeat mode happens as expected, the timer is not triggered and CPU waken up from C-states and it will cancel the timer initiatively. When repeat mode does not happen, the timer will be time out and menu governor will quickly notice that the repeat mode prediction fails and then re-evaluates deeper C-states possibility. Below is another case which will clearly show the patch much benefit: volatile int * shutdown; volatile long * count; int delay = 20; int loop = 8; void usage(void) { fprintf(stderr, ""Usage: idle_predict [options]\n"" "" --help -h Print this help\n"" "" --thread -n Thread number\n"" "" --loop -l Loop times in shallow Cstate\n"" "" --delay -t Sleep time (uS)in shallow Cstate\n""); } void *simple_loop() { int idle_num = 1; while (!(*shutdown)) { *count = *count + 1; if (idle_num % loop) usleep(delay); else { /* sleep 1 second */ usleep(1000000); idle_num = 0; } idle_num++; } } static void sighand(int sig) { *shutdown = 1; } int main(int argc, char *argv[]) { sigset_t sigset; int signum = SIGALRM; int i, c, er = 0, thread_num = 8; pthread_t pt[1024]; static char optstr[] = ""n:l:t:h:""; while ((c = getopt(argc, argv, optstr)) != EOF) switch (c) { case 'n': thread_num = atoi(optarg); break; case 'l': loop = atoi(optarg); break; case 't': delay = atoi(optarg); break; case 'h': default: usage(); exit(1); } printf(""thread=%d,loop=%d,delay=%d\n"",thread_num,loop,delay); count = malloc(sizeof(long)); shutdown = malloc(sizeof(int)); *count = 0; *shutdown = 0; sigemptyset(&sigset); sigaddset(&sigset, signum); sigprocmask (SIG_BLOCK, &sigset, NULL); signal(SIGINT, sighand); signal(SIGTERM, sighand); for(i = 0; i < thread_num ; i++) pthread_create(&pt[i], NULL, simple_loop, NULL); for (i = 0; i < thread_num; i++) pthread_join(pt[i], NULL); exit(0); } Get powertop V2 from git://github.com/fenrus75/powertop, build powertop. After build the above test application, then run it. Test plaform can be Intel Sandybridge or other recent platforms. We will find that deep C-state will dangle between 40%~100% and much time spent on C1 state. It is because menu governor wrongly predict that repeat mode is kept, so it will choose the C1 shallow C-state even though it has chance to sleep 1 second in deep C-state. While after patched the kernel, we find that deep C-state will keep >99.6%. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/time/tick-sched.c Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",30/12/2013 02:14:38,,NOT-FOUND,https://github.com/AOSPAL/android_kernel_asus_flo/commit/7941e36bb0a247059df341ca406b86743486d028,,,,[SOFT-DUPLICATE] [VERIFY] https://github.com/cphelps76/DEMENTED_kernel_jf/commit/070cb90c5c327f483cc4074be366acf7501f3d8e] [original:OK],,[VERIFY] [ https://github.com/cphelps76/DEMENTED_kernel_jf/commit/070cb90c5c327f483cc4074be366acf7501f3d8e] [original:OK],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_kernel_asus_flo,,,,,
AOSPAL,android_kernel_asus_flo,"cpuidle: Quickly notice prediction failure in general case The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. The patch extends to general case that prediction logic get a small predicted residency, so it choose a shallow C-state though the expected residency is large . Once the prediction will be fail, the CPU will keep staying at shallow C-state for a long time. Acutally, the CPU has change enter into deep C-state. So when the expected residency is long enough but governor choose a shallow C-state, an timer will be added in order to monitor if the prediction failure. When C-state is waken up prior to the adding timer, the timer will be cancelled initiatively. When the timer is triggered and menu governor will quickly notice prediction failure and re-evaluates deeper C-states possibility. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",30/12/2013 02:14:45,,NOT-FOUND,https://github.com/AOSPAL/android_kernel_asus_flo/commit/4d590a8a2e3b2c4ed1be9e25913c4ed2266e6d82,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_kernel_asus_flo,,,,,
zwliew,android_kernel_samsung_smdk4412,"Revert ""sched: Set power savings to POWERSAVINGS_BALANCE_WAKEUP"" This reverts commit 27fb190bbdf928052c7340e303dfb58f43fadf05.",31/12/2013 16:33:47,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_smdk4412/commit/c8138e526cf1a706159486ebeb70bfecb16d896e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_smdk4412,,,,,
enix,home,included actual power consumption in the broadcast message,01/01/2014 17:13:20,,FALSE-POSITIVE,https://github.com/enix/home/commit/cbdd2f20002045cb17dd57a0b8f56fc22822d490,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,enix/home,enix,,,enix,
theapi,CctvBlindfoldBundle,"Two pir sensors with power save to 0.25mah on idle, 18mah on transmit",01/01/2014 19:05:51,,OK,https://github.com/theapi/CctvBlindfoldBundle/commit/818a8896d2e8497e067bd8622c943e68572ec45a,,,[DO NOT ANALYZE],[?],[?] [OK] [Enable Sleep Mode],[OK] [Enable Sleep Mode],EXISTS,,,[Configure sleep] [Enable sleep],[Go to low power],[Disable device],,Certain,Arduino,No,Application,Ino,"Two pir sensors with power save to 0.25mah on idle, 18mah on transmit",theapi/CctvBlindfoldBundle,theapi,[Low power idling],,theapi,Arduino application
hialin,hialin,"moved to objects almost everywhere, added energy saving features",02/01/2014 17:04:30,,OK,https://github.com/emanueldima/hialin/commit/128c3afefa4a7eac96ed9922c6ca8b9312aa827d,https://github.com/hialin/hialin/commit/128c3afefa4a7eac96ed9922c6ca8b9312aa827d,,[OK][JS][SET INTERVAL][?],[OK] [UNABLE-TO-CATEGORIZE] [App specific],[OK] [UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE] [App specific] [JS] [SET INTERVAL] [?],EXISTS,[Cancel animation on intervals],[energy saving],[Stop animation after timeout],[Add timeout] [Sub1: Stop animation],,,Certain,Go,No,Application,Javascript,"moved to objects almost everywhere, added energy saving features",hialin/hialin,,[Timing out],,,Application
theapi,CctvBlindfoldBundle,Make all pins inputs with resistors to minimize power consumption,02/01/2014 17:13:51,,OK,https://github.com/theapi/CctvBlindfoldBundle/commit/781b3e3f45943c8ab96c2fca6be0dff3ca3df0bd,,,[DO NOT ANALYZE],[OK] [Set pin] [Set pin to input],[OK] [UNABLE-TO-CATEGORIZE],[Set pin] [Set pin to input] [UNABLE-TO-CATEGORIZE],EXISTS,[Set all pins to input and hight],[minimize power consumption],[Set pin modes] [Set pins to input] [Set pull-up on ports],[Pin configuration],,,Certain,Arduino,No,Application,Ino,Make all pins inputs with resistors to minimize power consumption,theapi/CctvBlindfoldBundle,theapi,[Pin management],,theapi,Arduino application
Grarak,grakernel-tuna,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",02/01/2014 20:33:01,,DUPLICATE,https://github.com/Grarak/grakernel-tuna/commit/c857f5c085cdfb04c47ec64889148291056a7f9a,,,,,,,EXISTS,,,,,,,,,,,,,Grarak/grakernel-tuna,faux123,,,Grarak,
Grarak,grakernel-n1,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",02/01/2014 22:35:22,,DUPLICATE,https://github.com/Grarak/grakernel-n1/commit/6126cd0e58efc7b15027a9ee55d9240b513bdba2,,,,,,,EXISTS,,,,,,,,,,,,,Grarak/grakernel-n1,longman88,,,Grarak,
patjak,drm-gma500,"Revert ""mac80211: allow disable power save in mesh"" This reverts commit ee1f668136b2fb6640ee2d54c2a525ea41f98211. The aformentioned commit added a check to allow 'iw wlan0 set power_save off' to work for mesh interfaces. However, this is problematic because it also allows 'iw wlan0 set power_save on', which will crash in short order because all of the subsequent code manipulates sdata->u.mgd. The power-saving states for mesh interfaces can be manipulated through the mesh config, e.g: 'iw wlan0 set mesh_param mesh_power_save=active' (which, despite the name, actualy disables power saving since the setting refers to the type of sleep the interface undergoes). Cc: stable@vger.kernel.org Fixes: ee1f668136b2 (""mac80211: allow disable power save in mesh"") Signed-off-by: Bob Copeland <me@bobcopeland.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>",03/01/2014 01:03:54,,DUPLICATE,https://github.com/patjak/drm-gma500/commit/2d3db210860f1df099a35b1dd54cca35454e0361,,,,,,,EXISTS,,,,,,,,,,,,,patjak/drm-gma500,bcopeland,,,jmberg,
arsradu,samsung-kernel-msm7x30,"kernel: Prevent unnecessary rfkill event generation. Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Change-Id: I3ac4e141fbdf1315b74d3bad6aa96f34b00c3f92 CRs-fixed: 398283 Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Deepthi Gowri <deepthi@codeaurora.org> Patch-mainline: v3.7 Git-commit: eab48345c2b2d791159aaac4a77000baa8dbc1ae Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>",03/01/2014 21:42:49,,DUPLICATE,https://github.com/arsradu/samsung-kernel-msm7x30/commit/0cd2ab34ea09edd5b5fdd3210d3dc060b9468f86,,,,[VERIFIED] [https://github.com/androidarmv6/android_kernel_lge_msm7x27/commit/a6ef72fddaf6a04daf6b0adc0da8d9c77aaadedd],,[https://github.com/androidarmv6/android_kernel_lge_msm7x27/commit/a6ef72fddaf6a04daf6b0adc0da8d9c77aaadedd],EXISTS,,,,,,,,,,,,,arsradu/samsung-kernel-msm7x30,,,,arsradu,
lucize,android_kernel_motorola_omap4-common,"ARM: omap4: cpuidle: configure MPU C4 state to CSWR For enabling dynamic dependency btn MPUSS <-> EMIF, device is unstable at with MPUSS configured to OSWR. By disabling static dep btn MPUSS <->EMIF, there is significant power saving seen on during active use-cases. So hence preventing MPUSS power domain to CSWR. Change-Id: I63902a501997e2e9f8b7539f2f17067af0b417f1 Signed-off-by: Ambresh K <ambresh@ti.com>",03/01/2014 22:15:39,,UNABLE-TO-CATEGORIZE,https://github.com/lucize/android_kernel_motorola_omap4-common/commit/7f4a658615a0afea0a38c131b9343613fcd7b743,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE] [Change power domain],[UNABLE-TO-CATEGORIZE],[Change power domain],EXISTS,,,,,,,,,,,,,lucize/android_kernel_motorola_omap4-common,lucize,,,lucize,
sblommers,rtl8812au,Update to readme and build script. Disabled power savings.,05/01/2014 10:33:48,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/sblommers/rtl8812au/commit/c51bb0454662df7b8ae7733f3ef3c95747e05c17,,,[DO NOT ANALYZE],[RELATED] [Disable power saving],[RELATED] [Disable power saving],[Disable power saving],EXISTS,,,,,,,,,,,,,sblommers/rtl8812au,sblommers,,,sblommers,
Manawyrm,HomeControl,now with power saving,05/01/2014 22:15:44,,OK,https://github.com/Manawyrm/HomeControl/commit/3a39664390e5c8226bb9e1fe64f525a053f89b62,,,[DO NOT ANALYZE],[OK] [Go to idle] [There might be other things involved] [TV:DA:MTCM],[OK] [Go to Idle],[Go to idle] [There might be other things involved] [TV:DA:MTCM],EXISTS,,,[Enable sleep mode] [Go to sleep] [Configure sleep mode],[Go to low power],,,Certain,Arduino,No,Application,Ino,now with power saving,Manawyrm/HomeControl,Manawyrm,[Low power idling],,Manawyrm,Arduino application
Hellybean,android_kernel_lge_hammerhead,cpufreq: Add Many Governors * Look below to see everything I added :) Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: InteractiveX CPU governor Modified version of interactive with sleep+wake code Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: OnDemandX CPU governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Lionheart CPU governor A brave and agile conservative-based governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: SmartAssV2 CPU governor A smart optimized governor based on OnDemand Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: LulzActive CPU governor A new interactive governor developed by Tegrak. For more information please visit: http://tegrak2x.blogspot.com/2011/11/lulzactive-governor-v2.html Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Adaptive CPU governor This driver adds a dynamic cpufreq policy governor designed for latency-sensitive workloads and also for demanding performance. This governor attempts to reduce the latency of clock increases so that the system is more responsive to interactive workloads in loweset steady-state but to reduce power consumption in middle operation level up will be done in step by step to prohibit system from going to max operation level. Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Hyper CPU governor A tweaked OnDemand based smart and smooth optimized governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: BrazilianWax CPU governor A slightly more agressive smart optimized governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Intellidemand CPU governor This is an 'ondemand' based CPU governor created by Faux123 (thanks to him for his awesome work) Signed-off-by: Chester Kener <Cl3Kener@gmail.com>,06/01/2014 01:41:45,,RELATED,https://github.com/Hellybean/android_kernel_lge_hammerhead/commit/eeb8b2073dafc5427601ab6ef962459c84681f33,,,[DO NOT ANALYZE],[RELATED] [Add governor] [Governor],[RELATED] [Governor] [Giga Commit],[Add governor] [Governor] [Giga Commit],EXISTS,,,,,,,,,,,,,Hellybean/android_kernel_lge_hammerhead,Cl3Kener,,,Cl3Kener,
Hellybean,android_kernel_lge_hammerhead,cpufreq: Add Many Governors * Look below to see everything I added :) Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: InteractiveX CPU governor Modified version of interactive with sleep+wake code Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: OnDemandX CPU governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Lionheart CPU governor A brave and agile conservative-based governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: SmartAssV2 CPU governor A smart optimized governor based on OnDemand Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: LulzActive CPU governor A new interactive governor developed by Tegrak. For more information please visit: http://tegrak2x.blogspot.com/2011/11/lulzactive-governor-v2.html Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Adaptive CPU governor This driver adds a dynamic cpufreq policy governor designed for latency-sensitive workloads and also for demanding performance. This governor attempts to reduce the latency of clock increases so that the system is more responsive to interactive workloads in loweset steady-state but to reduce power consumption in middle operation level up will be done in step by step to prohibit system from going to max operation level. Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Hyper CPU governor A tweaked OnDemand based smart and smooth optimized governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: BrazilianWax CPU governor A slightly more agressive smart optimized governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Intellidemand CPU governor This is an 'ondemand' based CPU governor created by Faux123 (thanks to him for his awesome work) Signed-off-by: Chester Kener <Cl3Kener@gmail.com> Fix Signed-off-by: Chester Kener <Cl3Kener@gmail.com>,06/01/2014 01:46:34,,DUPLICATE,https://github.com/Hellybean/android_kernel_lge_hammerhead/commit/10f79cf86ae77cc9d21c887f870179c14a00d7c1,,,,[SOFT-DUPLICATE] [VERIFY] [https://github.com/Hellybean/android_kernel_lge_hammerhead/commit/eeb8b2073dafc5427601ab6ef962459c84681f33] [original:RELATED],,[VERIFY] [https://github.com/Hellybean/android_kernel_lge_hammerhead/commit/eeb8b2073dafc5427601ab6ef962459c84681f33] [original:RELATED],EXISTS,,,,,,,,,,,,,Hellybean/android_kernel_lge_hammerhead,Cl3Kener,,,Cl3Kener,
cheaven,sunxi_rpaddon,updated the kernel config for cubieboardI to change cpu default power saving mode to high performance mode,06/01/2014 09:16:38,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/cheaven/sunxi_rpaddon/commit/b4cca615f89c3d4825140907d90cf99fb1ede05d,,,[DO NOT ANALYZE],[RELATED] [Change power saving mode to high performance],[RELATED] [Changing CPU Frequency] [Change power saving mode to high performance],[Change power saving mode to high performance] [Changing CPU Frequency],EXISTS,,,,,,,,,,,,,cheaven/sunxi_rpaddon,cheaven,,,cheaven,
NamelessRom,android_frameworks_av,"libstagefright: customize delay to post video events Calculate delay as a function of lateness rather than fixed 10ms. When video frames are decoded quite early, this change will delay the wake up of video events. We save some unwanted wake up of video events which save power. Change-Id: I12839b9df62d453f394894b499491e2cac3a0c8a CRs-Fixed: 578988",06/01/2014 10:48:41,,OK,https://github.com/NamelessRom/android_frameworks_av/commit/af28bf840136c61008b5b8af9f3719da95d760a2,,,[DO NOT ANALYZE],[OK] [Android] [Delay event] [Delay wakeup],[OK] [Android] [Delay event] [Delay wakeup],[Android] [Delay event] [Delay wakeup],EXISTS,[compute delay to post video events instead of using fixed delay],[save some unwanted wake up of video events],[Delay event] [Delay wakeup],[Delay wake up event],,,Certain,Android,CRs-Fixed: 578988,OS,C++,"libstagefright: customize delay to post video events Calculate delay as a function of lateness rather than fixed 10ms. When video frames are decoded quite early, this change will delay the wake up of video events. We save some unwanted wake up of video events which save power.",NamelessRom/android_frameworks_av,,[Energy bug],,Evisceration,Software stack framework
0rph3us,puppet-conf,add udev stuff for power saving,06/01/2014 19:39:20,,OK,https://github.com/0rph3us/puppet-conf/commit/cbd7005010e435cee422605dd06f819dac33a24e,,,[DO NOT ANALYZE],[OK] [Add udev power saving rules] [Enable power saving],[OK] [Add udev power saving rules] [Enable power saving],[Add udev power saving rules] [Enable power saving],EXISTS,[enable pci power control],[power saving],[Add udev power saving rule] [Enable PCI power saving],[Enable device power saving],,,Certain,Puppet?,No,Libraries and Utilities,Script udev,add udev stuff for power saving,0rph3us/puppet-conf,0rph3us,[Disabling feature/devices],,0rph3us,Script udev
Grarak,grakernel-msm8930,"cpuidle: Quickly notice prediction failure for repeat mode The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. cpuidle menu governor has a method to predict the repeat pattern if there are 8 C-states residency which are continuous and the same or very close, so it will predict the next C-states residency will keep same residency time. There is a real case that turbostat utility (tools/power/x86/turbostat) at kernel 3.3 or early. turbostat utility will read 10 registers one by one at Sandybridge, so it will generate 10 IPIs to wake up idle CPUs. So cpuidle menu governor will predict it is repeat mode and there is another IPI wake up idle CPU soon, so it keeps idle CPU stay at C1 state even though CPU is totally idle. However, in the turbostat, following 10 registers reading is sleep 5 seconds by default, so the idle CPU will keep at C1 for a long time though it is idle until break event occurs. In a idle Sandybridge system, run ""./turbostat -v"", we will notice that deep C-state dangles between ""70% ~ 99%"". After patched the kernel, we will notice deep C-state stays at >99.98%. In the patch, a timer is added when menu governor detects a repeat mode and choose a shallow C-state. The timer is set to a time out value that greater than predicted time, and we conclude repeat mode prediction failure if timer is triggered. When repeat mode happens as expected, the timer is not triggered and CPU waken up from C-states and it will cancel the timer initiatively. When repeat mode does not happen, the timer will be time out and menu governor will quickly notice that the repeat mode prediction fails and then re-evaluates deeper C-states possibility. Below is another case which will clearly show the patch much benefit: volatile int * shutdown; volatile long * count; int delay = 20; int loop = 8; void usage(void) { fprintf(stderr, ""Usage: idle_predict [options]\n"" "" --help -h Print this help\n"" "" --thread -n Thread number\n"" "" --loop -l Loop times in shallow Cstate\n"" "" --delay -t Sleep time (uS)in shallow Cstate\n""); } void *simple_loop() { int idle_num = 1; while (!(*shutdown)) { *count = *count + 1; if (idle_num % loop) usleep(delay); else { /* sleep 1 second */ usleep(1000000); idle_num = 0; } idle_num++; } } static void sighand(int sig) { *shutdown = 1; } int main(int argc, char *argv[]) { sigset_t sigset; int signum = SIGALRM; int i, c, er = 0, thread_num = 8; pthread_t pt[1024]; static char optstr[] = ""n:l:t:h:""; while ((c = getopt(argc, argv, optstr)) != EOF) switch (c) { case 'n': thread_num = atoi(optarg); break; case 'l': loop = atoi(optarg); break; case 't': delay = atoi(optarg); break; case 'h': default: usage(); exit(1); } printf(""thread=%d,loop=%d,delay=%d\n"",thread_num,loop,delay); count = malloc(sizeof(long)); shutdown = malloc(sizeof(int)); *count = 0; *shutdown = 0; sigemptyset(&sigset); sigaddset(&sigset, signum); sigprocmask (SIG_BLOCK, &sigset, NULL); signal(SIGINT, sighand); signal(SIGTERM, sighand); for(i = 0; i < thread_num ; i++) pthread_create(&pt[i], NULL, simple_loop, NULL); for (i = 0; i < thread_num; i++) pthread_join(pt[i], NULL); exit(0); } Get powertop V2 from git://github.com/fenrus75/powertop, build powertop. After build the above test application, then run it. Test plaform can be Intel Sandybridge or other recent platforms. We will find that deep C-state will dangle between 40%~100% and much time spent on C1 state. It is because menu governor wrongly predict that repeat mode is kept, so it will choose the C1 shallow C-state even though it has chance to sleep 1 second in deep C-state. While after patched the kernel, we find that deep C-state will keep >99.6%. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Willi Ye <williye97@gmail.com> Conflicts: kernel/time/tick-sched.c Conflicts: kernel/time/tick-sched.c",06/01/2014 20:09:14,,DUPLICATE,https://github.com/Grarak/grakernel-msm8930/commit/900160592a7105756b02121121b369f9cb36830f,,,,[VERIFIED] [https://github.com/cphelps76/DEMENTED_kernel_jf/commit/070cb90c5c327f483cc4074be366acf7501f3d8e],,[https://github.com/cphelps76/DEMENTED_kernel_jf/commit/070cb90c5c327f483cc4074be366acf7501f3d8e],EXISTS,,,,,,,,,,,,,Grarak/grakernel-msm8930,,,,Grarak,
nemomobile-packages,telepathy-mission-control,Merge pull request #3 from special/master [telepathy-mission-control] Prevent assert for offline accounts with power saving,07/01/2014 21:02:47,,FALSE-POSITIVE,https://github.com/nemomobile-packages/telepathy-mission-control/commit/b58f51aaad320ec38c83030c52c0d737d9583c99,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,nemomobile-packages/telepathy-mission-control,special,,,special,
PAC-man,android_frameworks_av,"libstagefright: customize delay to post video events Calculate delay as a function of lateness rather than fixed 10ms. When video frames are decoded quite early, this change will delay the wake up of video events. We save some unwanted wake up of video events which save power. Change-Id: I12839b9df62d453f394894b499491e2cac3a0c8a CRs-Fixed: 578988",08/01/2014 06:45:37,,NOT-FOUND,https://github.com/PAC-man/android_frameworks_av/commit/97d55b3c63c1c3a76febf5fff36f0a473eee4747,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,PAC-man/android_frameworks_av,,,,,
franciscofranco,hammerhead,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",08/01/2014 16:27:11,,DUPLICATE,https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314,,,[DO NOT ANALYZE],[OK] [Set power saving mode] [Reverted],[OK] [Set power saving mode],[Set power saving mode] [Reverted],EXISTS,[Set multicore power savings to POWERSAVINGS_BALANCE_WAKEUP],"[this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer]",[Set scheduler multicore power savings to POWERSAVINGS_BALANCE_WAKEUP],[Enable power saving feature],,,Certain,Android,No,OS,C,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life.",franciscofranco/hammerhead,franciscofranco,[Use power efficient library/device],,franciscofranco,Kernel
Xluco,kernel_hammerhead,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",08/01/2014 18:43:06,,NOT-FOUND,https://github.com/Xluco/kernel_hammerhead/commit/bc4339a303a4c13e4d181579f1417dad2c6f5734,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Xluco/kernel_hammerhead,,,,,
major91,Zeta-Chromium-N5,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images",09/01/2014 01:42:40,,DUPLICATE,https://github.com/major91/Zeta-Chromium-N5/commit/ea977eb0fb556f7015d420a762db1506f054e392,,,,[VERIFIED] [https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],,[https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],EXISTS,,,,,,,,,,,,,major91/Zeta-Chromium-N5,major91,,,major91,
dougt,MozStumbler,Add a way to disable power saving mode,09/01/2014 06:44:52,,RELATED,https://github.com/dougt/MozStumbler/commit/6ea026894de111a0e8c374c69a5521ac15d1179e,,,[DO NOT ANALYZE],[RELATED] [Allow disabling power saving mode] [Android],[RELATED] [Allow disabling power saving mode],[Allow disabling power saving mode] [Android],EXISTS,,,,,,,,,,,,,dougt/MozStumbler,dougt,,,dougt,
LorDClockaN,android_kernel_hammerhead,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",09/01/2014 14:38:34,,DUPLICATE,https://github.com/LorDClockaN/android_kernel_hammerhead/commit/d52de4ea70c036383bce47fd892a54f2975b7cca,,,,,,,EXISTS,,,,,,,,,,,,,LorDClockaN/android_kernel_hammerhead,franciscofranco,,,LorDClockaN,
krialix,Aurora,"mutex: dynamically disable mutex spinning at high load DateThu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",09/01/2014 18:13:06,,NOT-FOUND,https://github.com/krialix/Aurora/commit/23b8bc5c5bbbea548dd1845e720745c5725bf21e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Aurora,,,,,
krialix,Aurora,"mutex: restrict mutex spinning to only one task per mutex DateThu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",09/01/2014 18:19:43,,NOT-FOUND,https://github.com/krialix/Aurora/commit/d2d9ea6e55e7e3e7b0c562a9ae790a266160fcf6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Aurora,,,,,
CyanogenMod,android_hardware_qcom_audio,"hal: Use deep buffer output as primary - The audio content in video clips, YouTube content, etc are being rendered through low latency path as it was set as default output profile. This results more power consumption for video playback. - Fix this using deep buffer path as default one and use low latency path only for those audio tracks that request with AUDIO_OUTPUT_FLAG_FAST. Change-Id: I52fafa0ec2a312bc4383c813497830e6ded071bc CRs-Fixed: 570389 hal: Avoid duplicate primary outputs open_output_stream API expects the default usecase to be returned if other usecases are unavailable or unusable. However, the output returned in this default case must be the default primary if it exists. * cyanogen: This behavior is off by default. Change-Id: Ie5cc53f077358d7039d62b09b29edb58c213bc08",09/01/2014 20:47:33,,OK,https://github.com/CyanogenMod/android_hardware_qcom_audio/commit/456e5361335f2ac69417ad10ded7c4532a391c80,,,[DO NOT ANALYZE],[OK] [Use slower path] [Android],[OK] [BUG FIX],[Use slower path] [Android] [BUG FIX],EXISTS,[Disable low latency audio by default],[power saving],[Trade latency for power saving] [Disable low latency audio by default] [Bug fix],[Disable feature] [Sub1: By default],,,Certain,Android,CRs-Fixed: 570389,OS,C,"hal: Use deep buffer output as primary - The audio content in video clips, YouTube content, etc are being rendered through low latency path as it was set as default output profile. This results more power consumption for video playback.",CyanogenMod/android_hardware_qcom_audio,,[Energy bug],,cyanogen,HAL
judezhu,Ubuntu_in_Practice,improve power consumption issue if you use nvidia graphical card.,10/01/2014 00:15:31,,FALSE-POSITIVE,https://github.com/judezhu/Create-Personal-Ubuntu-Laptop/commit/78e4e77e97543c51d50df9298b70aee60eeeec23,https://github.com/judezhu/Ubuntu_in_Practice/commit/78e4e77e97543c51d50df9298b70aee60eeeec23,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,judezhu/Ubuntu_in_Practice,,,,,
RAZR-K-Devs,android_kernel_motorola_omap4-common,drivers: cpufreq: ktoonservative: tune for being more balanced and save power,10/01/2014 15:09:06,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/e25e040cfe71ae99bb6d66dec37d4ad118da920d,,,[DO NOT ANALYZE],[OK] [Scale frequency] [Scale CPU frequency] [Android],[OK] [Scale frequency] [Scale CPU frequency],[Scale frequency] [Scale CPU frequency] [Android],EXISTS,[Config governor],[power saving],[Configure governor] [Scale CPU frequency],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,OS,C,drivers: cpufreq: ktoonservative: tune for being more balanced and save power,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,[Frequency and voltage scaling],,dtrail,Driver cpufreq
neobuddy89,hammerhead_kernel,"sched: set sched_mc_power_savings to 2 This is highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>",10/01/2014 20:19:46,,NOT-FOUND,https://github.com/neobuddy89/hammerhead_kernel/commit/9025ac72e25a29ce218bedc93a291f197fbc4a81,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,neobuddy89/hammerhead_kernel,,,,,
lion0738,android_hardware_qcom_audio,"hal: Use deep buffer output as primary - The audio content in video clips, YouTube content, etc are being rendered through low latency path as it was set as default output profile. This results more power consumption for video playback. - Fix this using deep buffer path as default one and use low latency path only for those audio tracks that request with AUDIO_OUTPUT_FLAG_FAST. Change-Id: I52fafa0ec2a312bc4383c813497830e6ded071bc CRs-Fixed: 570389 hal: Avoid duplicate primary outputs open_output_stream API expects the default usecase to be returned if other usecases are unavailable or unusable. However, the output returned in this default case must be the default primary if it exists. * cyanogen: This behavior is off by default. Change-Id: Ie5cc53f077358d7039d62b09b29edb58c213bc08",11/01/2014 06:00:13,,NOT-FOUND,https://github.com/lion0738/android_hardware_qcom_audio/commit/456e5361335f2ac69417ad10ded7c4532a391c80,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,lion0738/android_hardware_qcom_audio,,,,,
OmniKang,android_packages_apps_Settings,[2/2] Settings: Wireless Power Saver Settings component for Wireless Power Saver Change-Id: Ib94080c77587b4ed42849d759d6f2ea4721869fa,11/01/2014 22:01:08,,RELATED,https://github.com/OmniKang/android_packages_apps_Settings/commit/06922d4ef1ea6b7a09c1ba3086cbea174a119b35,,,[DO NOT ANALYZE],[RELATED] [Add power saving option] [Android] [Partial commit] [d120836b0add12f6d4d81707a483f11d3e53cb2b],[RELATED] [Add power saving option],[Add power saving option] [Android] [Partial commit] [d120836b0add12f6d4d81707a483f11d3e53cb2b],EXISTS,,,,,,,,,,,,,OmniKang/android_packages_apps_Settings,kevdliu,,,Der-Schubi,
OmniKang,android_frameworks_base,"[1/2] Base: Wireless Power Saver - When screen has been off for 5 minutes, wifi is not connected, and with no heavy data traffic, turn off 3G/LTE - When screen is turned back on reset to original network type Based on commit https://gerrit.paranoidandroid.co/#/c/456/ by Curtis Mayers. Moved from telephony service to system_server so feature doesn't get overriden by google's dialer and telephony service PS2: - If data traffic is too heavy, delay check by 5 minutes - Clean up white spaces Change-Id: I0bb6990b6334eeacfd9ee24b77f2d240949e101b",11/01/2014 22:01:09,,OK,https://github.com/OmniKang/android_frameworks_base/commit/d120836b0add12f6d4d81707a483f11d3e53cb2b,,,[DO NOT ANALYZE],[OK] [Disable component] [Disable feature] [Reverted],[OK] [DISABLE COMPONENT],[Disable component] [Disable feature] [Reverted],EXISTS,"[Disable data connection when screen off for 5 min, wifi is disconnected and no heavy traffic]",[power saving],[Change to power efficient network type] [Power saving action on user inactivity] [Reverted],"[Use more power efficient network] [Condition: screen off, wifi disabled, music not playing]",,,Certain,Android,No,OS,Java,"[1/2] Base: Wireless Power Saver - When screen has been off for 5 minutes, wifi is not connected, and with no heavy data traffic, turn off 3G/LTE - When screen is turned back on reset to original network type",OmniKang/android_frameworks_base,kevdliu,[Use power efficient library/device],"[ screen off, wifi disabled, music not playing]",Der-Schubi,Framework
IharpI,bricked-sanity-hammerhead,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",12/01/2014 09:26:49,,DUPLICATE,https://github.com/IharpI/bricked-sanity-hammerhead/commit/af02f983d4d3349f21d11f6ac2311f21b3e25963,,,,,,,EXISTS,,,,,,,,,,,,,IharpI/bricked-sanity-hammerhead,franciscofranco,,,IharpI,
pluxd,environment-plux,power saving script was added,12/01/2014 12:24:15,,OK,https://github.com/pluxd/environment-plux/commit/d393493de92795d9c9030916e5102e9e1bc2018b,,,[DO NOT ANALYZE],[OK] [Many changes] [Enable power saving] [Power saving script],[RELATED],[Many changes] [Enable power saving] [Power saving script],EXISTS,[increase dirty data check frequency] [increase max/decrease min memory size (pct) for storing dirty process data] [Enable laptop mode] [turn on intel sound card power saving] [power save mode for SATA devices] [cpu profile: ondemand - fast increase cpu frequency on load] [PCI Express power saving mechanism on] [set brightness down] [dirty data check frequency] ,[power saving],[increase dirty data check frequency] [increase max/decrease min memory size for storing dirty process data] [Enable laptop mode] [Enable intel sound card power saving mode] [Enable SATA power saving mode] [Use powersave governor] [Enable PCI Express power saving mode] [Reduce brightness] [dirty data check frequency]  [Script],[OUTLIER],,Multiple changes,Certain,Personal config files?,No,Libraries and Utilities,Shell,power saving script was added,pluxd/environment-plux,pluxd,[OUTLIER],,pluxd,Script
poondog,joey-m7-GPE,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: poondog <markj338@gmail.com>",12/01/2014 12:49:11,,DUPLICATE,https://github.com/poondog/joey-m7-GPE/commit/030e892450cc508e668945e319d4e20852434811,,,,[VERIFIED] [https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],,[https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],EXISTS,,,,,,,,,,,,,poondog/joey-m7-GPE,franciscofranco,,,poondog,
OmniKang,android_packages_apps_Settings,[2/2] Settings: Wireless Power Saver Settings component for Wireless Power Saver Change-Id: Ib94080c77587b4ed42849d759d6f2ea4721869fa,12/01/2014 17:59:55,,DUPLICATE,https://github.com/OmniKang/android_packages_apps_Settings/commit/27bb81e718e12c79749a9a66ae08f0983c48d6ff,,,,,,,EXISTS,,,,,,,,,,,,,OmniKang/android_packages_apps_Settings,kevdliu,,,Der-Schubi,
enix,home,power consumption update,12/01/2014 20:37:50,,FALSE-POSITIVE,https://github.com/enix/home/commit/4a5dcf38b0353968eaf119009932695a76ba56d8,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,enix/home,enix,,,enix,
dorimanx,Dorimanx-LG-G2-D802-Kernel,mmc: sdhci-msm: Enable controller power save feature Enable power save feature within controller by setting bit 1 in vendor specific register (0x10C). This allows controller to disable SD clock when bus is idle to save power. https://www.codeaurora.org/cgit/quic/la/kernel/msm/commit/drivers/mmc?id=efad7a79d65e9fe73e28efd96392a6e48ab26529 Bug: 10796623 Change-Id: I916a5a414adb3f21dc3a75f3f86c3a81d6956dc8 Signed-off-by: Sahitya Tummala <stummala@codeaurora.org> Signed-off-by: Asutosh Das <asutoshd@codeaurora.org> Signed-off-by: Devin Kim <dojip.kim@lge.com>,12/01/2014 21:53:40,,NOT-FOUND,https://github.com/dorimanx/Dorimanx-LG-G2-D802-Kernel/commit/3189ab26e30751e98edbea9c0d0d48586348f63c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dorimanx/Dorimanx-LG-G2-D802-Kernel,,,,,
Old-Droid,platform_frameworks_base,"Wireless Power Saver (1/2) - When screen has been off for 5 minutes, wifi is not connected, and with no heavy data traffic, turn off 3G/LTE - When screen is turned back on reset to original network type Based on commit https://gerrit.paranoidandroid.co/#/c/456/ by Curtis Mayers. Moved from telephony service to system_server so feature doesn't get overriden by google's dialer and telephony service PS2: - If data traffic is too heavy, delay check by 5 minutes - Clean up white spaces Change-Id: I0bb6990b6334eeacfd9ee24b77f2d240949e101b",12/01/2014 23:04:00,,DUPLICATE,https://github.com/Old-Droid/platform_frameworks_base/commit/454bcf5b7cbc1c032d80b9d1da8a5554fbbc1460,,,,[VERIFIED] [https://github.com/OmniKang/android_frameworks_base/commit/d120836b0add12f6d4d81707a483f11d3e53cb2b],,[https://github.com/OmniKang/android_frameworks_base/commit/d120836b0add12f6d4d81707a483f11d3e53cb2b],EXISTS,,,,,,,,,,,,,Old-Droid/platform_frameworks_base,kevdliu,,,OldDroid,
Old-Droid,platform_frameworks_base,"Revert ""Wireless Power Saver (1/2)"" This reverts commit 454bcf5b7cbc1c032d80b9d1da8a5554fbbc1460.",13/01/2014 00:46:47,,REVERT,https://github.com/Old-Droid/platform_frameworks_base/commit/c1ff64be3a1dbea0530e1ae5f426206bfce7cf17,,,[DO NOT ANALYZE],[REVERT] [454bcf5b7cbc1c032d80b9d1da8a5554fbbc1460],[REVERT] [454bcf5b7cbc1c032d80b9d1da8a5554fbbc1460],[454bcf5b7cbc1c032d80b9d1da8a5554fbbc1460],EXISTS,"Revert ""Wireless Power Saver (1/2)""",,,,,,,,,,,,Old-Droid/platform_frameworks_base,OldDroid,,,OldDroid,
MagicDevTeam,android_hardware_qcom_audio,"hal: Use deep buffer output as primary - The audio content in video clips, YouTube content, etc are being rendered through low latency path as it was set as default output profile. This results more power consumption for video playback. - Fix this using deep buffer path as default one and use low latency path only for those audio tracks that request with AUDIO_OUTPUT_FLAG_FAST. Change-Id: I52fafa0ec2a312bc4383c813497830e6ded071bc CRs-Fixed: 570389 hal: Avoid duplicate primary outputs open_output_stream API expects the default usecase to be returned if other usecases are unavailable or unusable. However, the output returned in this default case must be the default primary if it exists. * cyanogen: This behavior is off by default. Change-Id: Ie5cc53f077358d7039d62b09b29edb58c213bc08",13/01/2014 11:43:11,,DUPLICATE,https://github.com/MagicDevTeam/android_hardware_qcom_audio/commit/b07dcd28443c8fe718124c9112cf2234e41b0f05,,,,,,,EXISTS,,,,,,,,,,,,,MagicDevTeam/android_hardware_qcom_audio,,,,wanggjghost,
kula1922,ralph_pricing,Merge pull request #1 from mkurek/feature/kula-create-plugin-to-custom-fields-assets fix unit tests; remove power consumption and warehouse from dailydevice;...,14/01/2014 09:48:28,,FALSE-POSITIVE,https://github.com/kula1922/ralph_pricing/commit/16c39cb75bcbdd8f0f75bd67ed2232d8a3aaa94a,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,kula1922/ralph_pricing,kula1922,,,kula1922,
CyanogenMod,android_kernel_samsung_msm8930-common,msm: bam_dmux: tune downlink polling parameters This change disables the BAM DMUX adaptive timer - this is to address concerns about drops in TCP throughput for some use cases with the timer enabled. It also sets the aggregation to 3ms to save power while not compromising performance. Power tests show a savings of 3-4% (compared to having the timer poll the BAM pipe every 1 ms) for LTE (40Mbps downlink and 25Mbps uplink) and HSPA (7Mbps downlink and 384Kbps uplink) with no degradation in performance. Change-Id: Ia51eae773723e60d8b051766ad80bfb0a16f5f6d Signed-off-by: Anurag Singh <anursing@codeaurora.org>,14/01/2014 17:12:20,,UNABLE-TO-CATEGORIZE,https://github.com/CyanogenMod/android_kernel_samsung_msm8930-common/commit/f417001dedfc514f966e7203be88d7dc457cfab4,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE] [Android],[UNABLE-TO-CATEGORIZE],[Android],EXISTS,,,,,,,,,,,,,CyanogenMod/android_kernel_samsung_msm8930-common,,,,arco,
Slaid480,Android-Universal-Fly-On-Mod,Governor tweaks:Improve...a lot -Optimise Ondemand and Ondemandx governors for performance. -Optimise conservative for more power saving. -Add support for Quad core CPUs. -Delete SmartassV2 tweaks since it's freqency dependent.,14/01/2014 20:36:11,,OK,https://github.com/Slaid480/Android-Universal-Fly-On-Mod/commit/8c661c54af1ea8b26af71311ec67ff8e5f0d9f62,,,[DO NOT ANALYZE],[OK] [Governor] [Improve governor],[OK] [Governor] [Improve governor],[Governor] [Improve governor],EXISTS,[Config governor],[power saving],[Configure governor] [Scale CPU frequency] [Script],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,Libraries and Utilities,Shell,Governor tweaks:Improve a lot -Optimise Ondemand and Ondemandx governors for performance. -Optimise conservative for more power saving. -Add support for Quad core CPUs. -Delete SmartassV2 tweaks since it's freqency dependent,Slaid480/Android-Universal-Fly-On-Mod,Slaid480,[Frequency and voltage scaling],,Slaid480,Script
oVirt,ovirt-engine,"engine: Update Power Saving policy with power management Add the logic that controls the automatic power management to PowerSavingBalancePolicyUnit. The unit got two new parameters: - HostsInReserve - the amount of hosts with no VMs that should be kept running - EnableAutomaticHostPowerManagement - the feature enable flag When there are too many hosts with no VMs, the algorithm will select a host and put it first to maintenance and then down. If we need more hosts, it will start them up. http://www.ovirt.org/Features/HostPowerManagementPolicy Change-Id: I2da9f4e019c3dd006caefbaa9baf9a533ce41f3d Bug-Url: https://bugzilla.redhat.com/show_bug.cgi?id=1035238 Signed-off-by: Martin Sivak <msivak@redhat.com>",14/01/2014 22:03:15,,OK,https://github.com/oVirt/ovirt-engine/commit/169b97aa49be0f814be46eb3d80ff61564c22121,,,[DO NOT ANALYZE],[RELATED] [Improve power saving policy],[OK] [Scaling],[Improve power saving policy] [Scaling],EXISTS,"Add the logic that controls the automatic power management to PowerSavingBalancePolicyUnit. When there are too many hosts with no VMs, the algorithm will select a host and put it first to maintenance and then down.",Update Power Saving policy with power management,,[Disable unused device],,,Certain,?,No,Application,Java,,oVirt/ovirt-engine,Martin Sivak,[Disabling feature/devices],,,
milaq,android,include screenoff power savings,14/01/2014 22:40:28,,FALSE-POSITIVE,https://github.com/milaq/android/commit/b05405740c6c8d35b4a8075d862e4c30cbca14a1,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,milaq/android,milaq,,,milaq,
vasanth89,HAPAlgo,Automation of HAP algorithm Automated the Heterogeneous Assignment with Probability (HAP) model for optimizing the power consumption in a DSP application using C++. This solution is for a generalized case where there can be 'n' number of nodes(entries) and each entry can in turn have 'm' number of manufacturers,15/01/2014 03:47:13,,FALSE-POSITIVE,https://github.com/vasanth89/HAPAlgo/commit/2dc209ec8dd671d6f765d48517d68549daca96b0,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,vasanth89/HAPAlgo,vasanth89,,,vasanth89,
xboxfanj,kernel_msm,"cpuidle: Quickly notice prediction failure for repeat mode The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. cpuidle menu governor has a method to predict the repeat pattern if there are 8 C-states residency which are continuous and the same or very close, so it will predict the next C-states residency will keep same residency time. There is a real case that turbostat utility (tools/power/x86/turbostat) at kernel 3.3 or early. turbostat utility will read 10 registers one by one at Sandybridge, so it will generate 10 IPIs to wake up idle CPUs. So cpuidle menu governor will predict it is repeat mode and there is another IPI wake up idle CPU soon, so it keeps idle CPU stay at C1 state even though CPU is totally idle. However, in the turbostat, following 10 registers reading is sleep 5 seconds by default, so the idle CPU will keep at C1 for a long time though it is idle until break event occurs. In a idle Sandybridge system, run ""./turbostat -v"", we will notice that deep C-state dangles between ""70% ~ 99%"". After patched the kernel, we will notice deep C-state stays at >99.98%. In the patch, a timer is added when menu governor detects a repeat mode and choose a shallow C-state. The timer is set to a time out value that greater than predicted time, and we conclude repeat mode prediction failure if timer is triggered. When repeat mode happens as expected, the timer is not triggered and CPU waken up from C-states and it will cancel the timer initiatively. When repeat mode does not happen, the timer will be time out and menu governor will quickly notice that the repeat mode prediction fails and then re-evaluates deeper C-states possibility. Below is another case which will clearly show the patch much benefit: volatile int * shutdown; volatile long * count; int delay = 20; int loop = 8; void usage(void) { fprintf(stderr, ""Usage: idle_predict [options]\n"" "" --help -h Print this help\n"" "" --thread -n Thread number\n"" "" --loop -l Loop times in shallow Cstate\n"" "" --delay -t Sleep time (uS)in shallow Cstate\n""); } void *simple_loop() { int idle_num = 1; while (!(*shutdown)) { *count = *count + 1; if (idle_num % loop) usleep(delay); else { /* sleep 1 second */ usleep(1000000); idle_num = 0; } idle_num++; } } static void sighand(int sig) { *shutdown = 1; } int main(int argc, char *argv[]) { sigset_t sigset; int signum = SIGALRM; int i, c, er = 0, thread_num = 8; pthread_t pt[1024]; static char optstr[] = ""n:l:t:h:""; while ((c = getopt(argc, argv, optstr)) != EOF) switch (c) { case 'n': thread_num = atoi(optarg); break; case 'l': loop = atoi(optarg); break; case 't': delay = atoi(optarg); break; case 'h': default: usage(); exit(1); } printf(""thread=%d,loop=%d,delay=%d\n"",thread_num,loop,delay); count = malloc(sizeof(long)); shutdown = malloc(sizeof(int)); *count = 0; *shutdown = 0; sigemptyset(&sigset); sigaddset(&sigset, signum); sigprocmask (SIG_BLOCK, &sigset, NULL); signal(SIGINT, sighand); signal(SIGTERM, sighand); for(i = 0; i < thread_num ; i++) pthread_create(&pt[i], NULL, simple_loop, NULL); for (i = 0; i < thread_num; i++) pthread_join(pt[i], NULL); exit(0); } Get powertop V2 from git://github.com/fenrus75/powertop, build powertop. After build the above test application, then run it. Test plaform can be Intel Sandybridge or other recent platforms. We will find that deep C-state will dangle between 40%~100% and much time spent on C1 state. It is because menu governor wrongly predict that repeat mode is kept, so it will choose the C1 shallow C-state even though it has chance to sleep 1 second in deep C-state. While after patched the kernel, we find that deep C-state will keep >99.6%. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: flar2 <asegaert@gmail.com>",16/01/2014 00:46:03,,DUPLICATE,https://github.com/xboxfanj/kernel_msm/commit/a15bc891719c12e3ca6e730cfeac9ff5008a99ba,,,,[VERIFIED] [https://github.com/AOSPAL/android_kernel_asus_flo/commit/7941e36bb0a247059df341ca406b86743486d028],,[https://github.com/AOSPAL/android_kernel_asus_flo/commit/7941e36bb0a247059df341ca406b86743486d028],EXISTS,,,,,,,,,,,,,xboxfanj/kernel_msm,,,,xboxfanj,
xboxfanj,kernel_msm,"defconfigs: no more media tuners, cpufreq limiter from faux, sched mc, sched smt, cpupower from Linaro, Allow CPU alignment, DVFS Monitor from Samsung, Neon kernel mode from Linaro, Power Efficient Work Queues from Linaro, Frandom from Eli Billauer, QCOM crypto, ARCH Random, generic STRNLEN and STRNCPY",16/01/2014 03:10:44,,OK,https://github.com/xboxfanj/kernel_msm/commit/b04f4396ce6b1ea4515553e31ebe03e2e1fd9997,,,[DO NOT ANALYZE],[OK] [DISCUSS] [Use power efficient work queue],[OK] [Changing CPU Frequency],[DISCUSS] [Use power efficient work queue] [Changing CPU Frequency],EXISTS,[enable power efficient work queue by default],[power saving],[Use power efficient work queue],[Use power efficient work queue],,,Certain,Android,No,OS,Defconfig,"defconfigs: no more media tuners, cpufreq limiter from faux, sched mc, sched smt,cpupower from Linaro, Allow CPU alignment, DVFS Monitor from Samsung, Neon kernel mode from Linaro, Power Efficient Work Queues from Linaro, Frandom from Eli Billauer, QCOM crypto, ARCH Random, generic STRNLEN and STRNCPY",xboxfanj/kernel_msm,xboxfanj,[Use power efficient library/device],,xboxfanj,Kernel arch
martindevans,SpaceGame,"Update ShipMovement.cs Moved all logic for power consumption out from ShipMovement.cs and into separate components. More generally why is ship-wide power management done in ShipMovement.cs? This class really has bugger all to do with movement, I'd suggest renaming it to ShipPower.cs Now that the logic for handling all components is the same, you could implement something like the comment I inserted at the bottom of update.",16/01/2014 17:02:34,,FALSE-POSITIVE,https://github.com/martindevans/SpaceGame/commit/2e83d2436daa0ca376f4ef6dcb29556f631c10f1,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,martindevans/SpaceGame,martindevans,,,martindevans,
cbuchner1,CudaMiner,Radical simplification of memory access patterns in write/read/read_xoe_keys_direct functions in Dave Andersen's kernels. This should lower power consumption.,16/01/2014 18:58:53,,OK,https://github.com/cbuchner1/CudaMiner/commit/c4c67b51ce90eed09384031654b771587c1b0295,,,[DO NOT ANALYZE],[OK] [DISCUSS] [Improve memory access pattern],"[OK] [Improve memory access pattern] [""This should lower power consumption""]","[DISCUSS] [Improve memory access pattern] [""This should lower power consumption""]",EXISTS,[simplification of memory access patterns in write/read/read_xoe_keys_direct functions],[power saving],[Improve memory access pattern],[Improve memory access pattern],,Cool,Uncertain,CUDA,No,Application,CU,Radical simplification of memory access patterns in write/read/read_xoe_keys_direct functions in Dave Andersen's kernels. This should lower power consumption.,cbuchner1/CudaMiner,cbuchner1,[Miscellaneous],,cbuchner1,Application
MagicDevTeam,android_hardware_qcom_audio,"hal: Use deep buffer output as primary - The audio content in video clips, YouTube content, etc are being rendered through low latency path as it was set as default output profile. This results more power consumption for video playback. - Fix this using deep buffer path as default one and use low latency path only for those audio tracks that request with AUDIO_OUTPUT_FLAG_FAST. Change-Id: I52fafa0ec2a312bc4383c813497830e6ded071bc CRs-Fixed: 570389 hal: Avoid duplicate primary outputs open_output_stream API expects the default usecase to be returned if other usecases are unavailable or unusable. However, the output returned in this default case must be the default primary if it exists. * cyanogen: This behavior is off by default. Change-Id: Ie5cc53f077358d7039d62b09b29edb58c213bc08",17/01/2014 15:01:35,,DUPLICATE,https://github.com/MagicDevTeam/android_hardware_qcom_audio/commit/8f7bd2484a2e8ccce750f8a1eb5031fdc511b04a,,,,,,,EXISTS,,,,,,,,,,,,,MagicDevTeam/android_hardware_qcom_audio,,,,wanggjghost,
JochenB,gtkwattmon,"Reading the power consumption from /sys directly Read the power consumption directly from /sys, why even bother reading from 'sensors' when there's a direct way.",18/01/2014 11:46:58,,NOT-FOUND,https://github.com/JochenB/gtkwattmon/commit/9e2dafe03f449487256b0237ddc37f67735705fd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JochenB/gtkwattmon,,,,,
JochenB,gtkcpumon,Slight touch-ups 1. Read the power consumption directly from /sys (no more invoking a commandline command) 2. Changed representation of the CPU temperature,18/01/2014 11:50:26,,NOT-FOUND,https://github.com/JochenB/gtkcpumon/commit/a500bb08f4cdac7cdd7c5f71064c107200648be3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JochenB/gtkcpumon,,,,,
dorimanx,LG-G2-D802-Ramdisk,Enable by default power_suspend_mode! This will save power on screen OFF and block logcat writes on suspend. Also protected from modding by APP.,18/01/2014 11:58:54,,OK,https://github.com/dorimanx/LG-G2-D802-Ramdisk/commit/23cd984dd6cf6f356685896d2cc6c7c4b1205506,,,[DO NOT ANALYZE],[OK] [Enable power suspend mode],[OK] [Enable power suspend mode],[Enable power suspend mode],EXISTS,[Enable power suspend mode by default],[will save power on screen OFF and block logcat writes on suspend],[Enable power_suspend mode] [Script],[Enable power_suspend mode],,Clueless programmer,Certain,Android,No,Libraries and Utilities,Shell,Enable by default power_suspend_mode! This will save power on screen OFF and block logcat writes on suspend. Also protected from modding by APP.,dorimanx/LG-G2-D802-Ramdisk,dorimanx,[Use power efficient library/device],,dorimanx,Script
Redmaner,MiCore_kernel_aries,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org>",18/01/2014 16:58:47,,DUPLICATE,https://github.com/Redmaner/MiCore_kernel_aries/commit/392679a84b7c46c5e4e9fd98a78d96bdec17d9eb,,,,,,,EXISTS,,,,,,,,,,,,,Redmaner/MiCore_kernel_aries,,,,Redmaner,
Redmaner,MiCore_kernel_aries,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org>",18/01/2014 22:44:07,,DUPLICATE,https://github.com/Redmaner/MiCore_kernel_aries/commit/392679a84b7c46c5e4e9fd98a78d96bdec17d9eb,,,,,,,EXISTS,,,,,,,,,,,,,Redmaner/MiCore_kernel_aries,,,,Redmaner,
Gpad2Gpe,android_kernel_lge_v500,"mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. Change-Id: Iac064221199f69d162d91f5311becd735c15700a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",18/01/2014 23:26:43,,DUPLICATE,https://github.com/Gpad2Gpe/android_kernel_lge_v500/commit/771458b4936569920999aa39cdcc2a7ee45a1398,,,,,,,EXISTS,,,,,,,,,,,,,Gpad2Gpe/android_kernel_lge_v500,,,,Ntemis,
Gpad2Gpe,android_kernel_lge_v500,"mmc: core: Add load based clock scaling support The SD3.0/eMMC4.5/SDIO3.0 cards can support clock rates upto 200MHz (SDR104 or HS200 bus speed modes). For some workloads like video playback it isn't necessary for these cards to run at such high speed. Running at lower frequency, say 50MHz, in such cases can still meet the deadlines for data transfers. Scaling down the clock frequency dynamically has huge power savings not only because the bus is running at lower frequency but also has an advantage of scaling down the system core voltage, if supported. Provide an ondemand clock scaling support similar to cpufreq ondemand governor having two thresholds, up_threshold and down_threshold to decide whether to increase the frequency or scale it down respectively. The sampling interval is in the order of milliseconds and should be chosen by host drivers that enable MMC_CAP2_CLK_SCALE capability to take advantage of clock scaling. The sampling interval mainly depends on the the clock switching delays and hence a host driver decision. If sampling interval is too low frequent switching of frequencies can lead to high power consumption and if sampling interval is too high, the clock scaling logic would take long time to realize that the underlying hardware (controller and card) is busy and scale up the clocks. Change-Id: I22a5054beec41b0b66b3bf030ddfcf284de448b3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",18/01/2014 23:44:43,,DUPLICATE,https://github.com/Gpad2Gpe/android_kernel_lge_v500/commit/e0d761091289aa0098bd2a275384081c51b03d9e,,,,,,,EXISTS,,,,,,,,,,,,,Gpad2Gpe/android_kernel_lge_v500,,,,Ntemis,
Gpad2Gpe,android_kernel_lge_v500,mmc: core: Log MMC clock frequency transitions Use kernel's ftrace support to capture MMC clock frequency transitions which can be useful for debugging issues related to power consumption. Usage: mount -t debugfs none /sys/kernel/debug echo 1 > /sys/kernel/debug/tracing/events/mmc/mmc_clk/enable cat /sys/kernel/debug/tracing/trace_pipe Change-Id: I25c4ee39dcbe30e7665902a9f723a5a421b55ca3 Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>,18/01/2014 23:48:03,,FALSE-POSITIVE,https://github.com/Gpad2Gpe/android_kernel_lge_v500/commit/5bbabc94b11a883c9b29a0bc112d265b62819f2f,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE] [interesting...],[interesting...],EXISTS,,,,,,,,,,,,,Gpad2Gpe/android_kernel_lge_v500,,,,Ntemis,
Gpad2Gpe,android_kernel_lge_v500,"mmc: core: Add support for notifying host driver while scaling clocks Host drivers can participate in clock scaling by registering ->notify_load host operation, which allows host driver to carry out platform specific operations for further power savings or increasing throughput based on whether load is LOW or HIGH respectively. This can be applicable to non-ultra high speed cards as well so remove the check for ultra high speed cards to initialize clock scaling. Change-Id: Icaab9520135e384f5470db68b2f25c5cdce5663a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",18/01/2014 23:48:53,,DUPLICATE,https://github.com/Gpad2Gpe/android_kernel_lge_v500/commit/2b08df0678dd46783a6456e5b9ccb7d65e50eee8,,,,,,,EXISTS,,,,,,,,,,,,,Gpad2Gpe/android_kernel_lge_v500,,,,Ntemis,
Gpad2Gpe,android_kernel_lge_v500,"mmc: msm_sdcc: Add support for dynamic bus clock vote SDCC controller on some targets like 8660, 8960, 8064 and their variants connects with Daytona Fabric (DFAB). To achieve max. possible performance the DFAB clock is voted to 64MHz at the cost of some power consumption. Since we now have dynamic clock scaling for SD/eMMC clock we can also scale the DFAB clock accordingly without impact on performance but have some power savings in low throughput cases. Change-Id: Ic26541d6845b65803aa813d672ccabdfc4658d9c Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",18/01/2014 23:49:16,,DUPLICATE,https://github.com/Gpad2Gpe/android_kernel_lge_v500/commit/5b578a89e0f0ec812ce5d088ff565c89ef1d9382,,,,,,,EXISTS,,,,,,,,,,,,,Gpad2Gpe/android_kernel_lge_v500,,,,Ntemis,
Gpad2Gpe,android_kernel_lge_v500,"mmc: msm_sdcc: Enable clock scaling capability Enable capability, MMC_CAP2_CLK_SCALE to allow mmc core to scale the clocks at runtime based on load on card. Clock scaling in MSM platforms also allow voltage scaling between NOMINAL and SVS levels, thus allowing additional power savings. Change-Id: Id1995ffea7a6c06a2e8b29b43da70894f35f6c0b Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",18/01/2014 23:50:04,,DUPLICATE,https://github.com/Gpad2Gpe/android_kernel_lge_v500/commit/c2a78562a1af4ad0475689efffdeb9dac6d2a149,,,,,,,EXISTS,,,,,,,,,,,,,Gpad2Gpe/android_kernel_lge_v500,,,,Ntemis,
sealemar,BinaryClock,"arduino/binary_clock.ino: introduced update intervals, one for interacting with the clock and the other for displaying the data on the screen. The intervals are supposed to save power consumption",19/01/2014 22:05:43,,OK,https://github.com/sealemar/BinaryClock/commit/555dba3b529268b579256ccce8ef5524e89d38c3,,,[DO NOT ANALYZE],[OK] [Introduce update interval] [Skip updates] [Cool],"[OK] [Introduce update interval] [""The intervals are supposed to save power consumption""]","[Introduce update interval] [Skip updates] [Cool] [""The intervals are supposed to save power consumption""]",EXISTS,[introduced update intervals for interacting with clock and updating data on screen],[power saving],[Introduce update interval] [Skip updates],[Use power efficient work queue],,,Uncertain,Arduino,No,Application,Ino,"arduino/binary_clock.ino: introduced update intervals, one for interacting with the clock and the other for displaying the data on the screen. The intervals are supposed to save power consumption",sealemar/BinaryClock,sealemar,[Use power efficient library/device],,sealemar,Arduino application
volumio,Volumio-WebUI,"Disabled Wireless Power Saving mode and webradio app fix Disabled Wireless Power Saving mode, and fixed autoconfiguration with android sound@home",19/01/2014 23:53:55,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/volumio/Volumio-WebUI/commit/e8b4a44458e1eaa26dc9b7beb0b53db52fcb5a20,,,[DO NOT ANALYZE],[RELATED] [Disable power saving],[RELATED] [Disable power saving],[Disable power saving],EXISTS,,,,,,,,,,,,,volumio/Volumio-WebUI,volumio,,,volumio,
scotthartbti,android_kernel_lge_hammerhead,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",20/01/2014 06:58:33,,DUPLICATE,https://github.com/scotthartbti/android_kernel_lge_hammerhead/commit/9c2b3452beaed660b8fbbb61bda35ed321f5d534,,,,,,,EXISTS,,,,,,,,,,,,,scotthartbti/android_kernel_lge_hammerhead,franciscofranco,,,,
chikoski,data,"added a stats of power consumption in some stores. This data is generated one, not actual.",20/01/2014 07:52:19,,BINARIES,https://github.com/chikoski/data/commit/ee0ed8e225426e514d16aa38f16f803a4da821ab,,,,,,,EXISTS,,,,,,,,,,,,,chikoski/data,chikoski,,,chikoski,
fs0,linux,"Revert ""mac80211: allow disable power save in mesh"" This reverts commit ee1f668136b2fb6640ee2d54c2a525ea41f98211. The aformentioned commit added a check to allow 'iw wlan0 set power_save off' to work for mesh interfaces. However, this is problematic because it also allows 'iw wlan0 set power_save on', which will crash in short order because all of the subsequent code manipulates sdata->u.mgd. The power-saving states for mesh interfaces can be manipulated through the mesh config, e.g: 'iw wlan0 set mesh_param mesh_power_save=active' (which, despite the name, actualy disables power saving since the setting refers to the type of sleep the interface undergoes). Cc: stable@vger.kernel.org Fixes: ee1f668136b2 (""mac80211: allow disable power save in mesh"") Signed-off-by: Bob Copeland <me@bobcopeland.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>",20/01/2014 13:16:50,,DUPLICATE,https://github.com/fs0/linux/commit/2d3db210860f1df099a35b1dd54cca35454e0361,,,,,,,EXISTS,,,,,,,,,,,,,fs0/linux,bcopeland,,,jmberg,
F4k,f4ktion_kernel,cfg80211: export regulatory_hint_user() API This is to help the hardware configured in world roaming mode to save power when not connected to any AP. CRs-Fixed: 542802 Change-Id: Ia643d0e9848dcd486832973bd6dd186edd7bd4ea Signed-off-by: Mihir Shete <smihir@codeaurora.org>,20/01/2014 15:40:50,,FALSE-POSITIVE,https://github.com/F4k/f4ktion_kernel/commit/8e89f82343f13400567a2ae95c94edd8d4448612,,,[DO NOT ANALYZE],[?] [DISCUSS] [FALSE-POSITIVE],[FALSE-POSITIVE],[DISCUSS] [FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,F4k/f4ktion_kernel,,,,F4k,
nodiscc,rxtx-linux,power saving: increase VM dirty writeback time to 1500,20/01/2014 21:16:02,,NOT-FOUND,https://github.com/nodiscc/rxtx-linux/commit/5dc261a4f443faee88536583d43d5fa66e39090e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,nodiscc/rxtx-linux,,,,,
alex-lawson,sb-automation,"Added energy consumption to conveyorbelt, jumppad, levitationpad, pump, and reformatted some of the code",21/01/2014 17:08:42,,FALSE-POSITIVE,https://github.com/alex-lawson/sb-automation/commit/d86d0472f2194b5833c48c5a4dcdc7897538a061,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,alex-lawson/sb-automation,PenguinToast,,,PenguinToast,
FrodeSolheim,fs-uae,inhibit screensaver / power saving mode on OS X when FS-UAE is running,21/01/2014 21:12:49,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/FrodeSolheim/fs-uae/commit/209b089048c4bffd11b23ac6c2a9a3b3c8de39b1,,,[DO NOT ANALYZE],[TRADEOFF-UNABLE-TO-CATEGORIZE] [Prevent power saving],[TRADEOFF-UNABLE-TO-CATEGORIZE],[Prevent power saving],EXISTS,,,,,,,,,,,,,FrodeSolheim/fs-uae,FrodeSolheim,,,FrodeSolheim,
Rxpert83,rxhammerhead,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",21/01/2014 21:20:04,,DUPLICATE,https://github.com/Rxpert83/rxhammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314,,,,,,,EXISTS,,,,,,,,,,,,,Rxpert83/rxhammerhead,franciscofranco,,,franciscofranco,
aznrice,Evita_UL_422-JB,workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. tj: updated comments a bit. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit 0668106ca3865ba945e155097fb042bf66d364d3) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com>,21/01/2014 23:42:53,,DUPLICATE,https://github.com/aznrice/Evita_UL_422-JB/commit/3c787ae3f05fdac4f52a868cff68ee1690160056,,,[DO NOT ANALYZE],[RELATED] [Add power efficient work queue] [power efficient work queue],[RELATED] [Add power efficient work queue] [power efficient work queue],[Add power efficient work queue] [power efficient work queue],EXISTS,,,,,,,,,,,,,aznrice/Evita_UL_422-JB,,,,aznrice,
GravityBox,GravityBox,Smart Radio revamped - based on ConnectivityManager events - doesn't affect manual network mode switching as long as connection states are unchanged - allows switching to power saving mode when screen turns off regardless if mobile data is enabled or disabled,22/01/2014 12:23:20,,RELATED,https://github.com/GravityBox/GravityBox/commit/68d6bccb99e1762bfad981a9eb58beb982c4208e,,,[DO NOT ANALYZE],[RELATED] [Enable forced power saving mode],[RELATED] [Enable forced power saving mode],[Enable forced power saving mode],EXISTS,,,,,,,,,,,,,GravityBox/GravityBox,C3C0,,,C3C0,
GravityBox,GravityBox,Smart Radio revamped - based on ConnectivityManager events - doesn't affect manual network mode switching as long as connection states are unchanged - allows switching to power saving mode when screen turns off regardless if mobile data is enabled or disabled,22/01/2014 12:28:53,,DUPLICATE,https://github.com/GravityBox/GravityBox/commit/70cb67978830ac65369e8e252f297558426ff7cc,,,,,,,EXISTS,,,,,,,,,,,,,GravityBox/GravityBox,C3C0,,,C3C0,
FrodeSolheim,fs-uae,inhibit screensaver / power saving mode on OS X when FS-UAE is running Conflicts: ChangeLog,22/01/2014 19:22:39,,DUPLICATE,https://github.com/FrodeSolheim/fs-uae/commit/20e229bbfb8cf32dd3bc76061041b97885313c27,,,[DO NOT ANALYZE],[DUPLICATE] [209b089048c4bffd11b23ac6c2a9a3b3c8de39b1],[DUPLICATE] [209b089048c4bffd11b23ac6c2a9a3b3c8de39b1],[209b089048c4bffd11b23ac6c2a9a3b3c8de39b1],EXISTS,,,,,,,,,,,,,FrodeSolheim/fs-uae,FrodeSolheim,,,FrodeSolheim,
mrg666,android_kernel_mako,"rcu: Add callback-free CPUs RCU callback execution can add significant OS jitter and also can degrade both scheduling latency and, in asymmetric multiprocessors, energy efficiency. This commit therefore adds the ability for selected CPUs (""rcu_nocbs="" boot parameter) to have their callbacks offloaded to kthreads. If the ""rcu_nocb_poll"" boot parameter is also specified, these kthreads will do polling, removing the need for the offloaded CPUs to do wakeups. At least one CPU must be doing normal callback processing: currently CPU 0 cannot be selected as a no-CBs CPU. In addition, attempts to offline the last normal-CBs CPU will fail. This feature was inspired by Jim Houston's and Joe Korty's JRCU, and this commit includes fixes to problems located by Fengguang Wu's kbuild test robot. [ paulmck: Added gfp.h include file as suggested by Fengguang Wu. ] Signed-off-by: Paul E. McKenney <paul.mckenney@linaro.org> Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>",24/01/2014 19:59:09,,RELATED,https://github.com/mrg666/android_kernel_mako/commit/edb9945b7600d132c65a1495876a40aaaa5f5ae9,,,[OK][CALL BACK FREE CPUS],[OK] [Offload callbacks to different thread] [Offload callbacks to different cpu] [Android] [Kernel],[OK] [IMPROVING RCU CALLBACKS],[Offload callbacks to different thread] [Offload callbacks to different cpu] [Android] [Kernel] [CALL BACK FREE CPUS] [IMPROVING RCU CALLBACKS],EXISTS,,,[REVIEW] [Offload callbacks to different cpu] [Allow RCU no callbacks cpus],,,,Certain,Android,No,Kernel,C,"rcu: Add callback-free CPUs RCU callback execution can add significant OS jitter and also can degrade both scheduling latency and, in asymmetric multiprocessors, energy efficiency.  This commit therefore adds the ability for selected CPUs (""rcu_nocbs="" boot parameter) to have their callbacks offloaded to kthreads.  If the ""rcu_nocb_poll"" boot parameter is also specified,these kthreads will do polling, removing the need for the offloaded CPUs to do wakeups.  At least one CPU must be doing normal callback processing: currently CPU 0 cannot be selected as a no-CBs CPU. In addition, attempts to offline the last normal-CBs CPU will fail.",mrg666/android_kernel_mako,mrg666,,,mrg666,Kernel
cm-11,android_kernel_samsung_jf,"sched: set sched_mc_power_savings to 2, which is the highest is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: poondog <markj338@gmail.com>",24/01/2014 23:11:21,,DUPLICATE,https://github.com/cm-11/android_kernel_samsung_jf/commit/999c4487fe5bc6f7c0e1f421483086f08d39e1cd,,,,[VERIFIED] [https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],,[https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],EXISTS,,,,,,,,,,,,,cm-11/android_kernel_samsung_jf,Rillero,,,Rillero,
TeamHellfire,android_kernel_samsung_d2,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org>",25/01/2014 00:25:40,,DUPLICATE,https://github.com/TeamHellfire/android_kernel_samsung_d2/commit/967969b6d02d5b5a2bbc0494c6fe4d3114321159,,,,,,,EXISTS,,,,,,,,,,,,,TeamHellfire/android_kernel_samsung_d2,,,,x0xhellx0x,
AOSPAL,android_kernel_asus_flo,"cpuidle: Quickly notice prediction failure for repeat mode The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. cpuidle menu governor has a method to predict the repeat pattern if there are 8 C-states residency which are continuous and the same or very close, so it will predict the next C-states residency will keep same residency time. There is a real case that turbostat utility (tools/power/x86/turbostat) at kernel 3.3 or early. turbostat utility will read 10 registers one by one at Sandybridge, so it will generate 10 IPIs to wake up idle CPUs. So cpuidle menu governor will predict it is repeat mode and there is another IPI wake up idle CPU soon, so it keeps idle CPU stay at C1 state even though CPU is totally idle. However, in the turbostat, following 10 registers reading is sleep 5 seconds by default, so the idle CPU will keep at C1 for a long time though it is idle until break event occurs. In a idle Sandybridge system, run ""./turbostat -v"", we will notice that deep C-state dangles between ""70% ~ 99%"". After patched the kernel, we will notice deep C-state stays at >99.98%. In the patch, a timer is added when menu governor detects a repeat mode and choose a shallow C-state. The timer is set to a time out value that greater than predicted time, and we conclude repeat mode prediction failure if timer is triggered. When repeat mode happens as expected, the timer is not triggered and CPU waken up from C-states and it will cancel the timer initiatively. When repeat mode does not happen, the timer will be time out and menu governor will quickly notice that the repeat mode prediction fails and then re-evaluates deeper C-states possibility. Below is another case which will clearly show the patch much benefit: volatile int * shutdown; volatile long * count; int delay = 20; int loop = 8; void usage(void) { fprintf(stderr, ""Usage: idle_predict [options]\n"" "" --help -h Print this help\n"" "" --thread -n Thread number\n"" "" --loop -l Loop times in shallow Cstate\n"" "" --delay -t Sleep time (uS)in shallow Cstate\n""); } void *simple_loop() { int idle_num = 1; while (!(*shutdown)) { *count = *count + 1; if (idle_num % loop) usleep(delay); else { /* sleep 1 second */ usleep(1000000); idle_num = 0; } idle_num++; } } static void sighand(int sig) { *shutdown = 1; } int main(int argc, char *argv[]) { sigset_t sigset; int signum = SIGALRM; int i, c, er = 0, thread_num = 8; pthread_t pt[1024]; static char optstr[] = ""n:l:t:h:""; while ((c = getopt(argc, argv, optstr)) != EOF) switch (c) { case 'n': thread_num = atoi(optarg); break; case 'l': loop = atoi(optarg); break; case 't': delay = atoi(optarg); break; case 'h': default: usage(); exit(1); } printf(""thread=%d,loop=%d,delay=%d\n"",thread_num,loop,delay); count = malloc(sizeof(long)); shutdown = malloc(sizeof(int)); *count = 0; *shutdown = 0; sigemptyset(&sigset); sigaddset(&sigset, signum); sigprocmask (SIG_BLOCK, &sigset, NULL); signal(SIGINT, sighand); signal(SIGTERM, sighand); for(i = 0; i < thread_num ; i++) pthread_create(&pt[i], NULL, simple_loop, NULL); for (i = 0; i < thread_num; i++) pthread_join(pt[i], NULL); exit(0); } Get powertop V2 from git://github.com/fenrus75/powertop, build powertop. After build the above test application, then run it. Test plaform can be Intel Sandybridge or other recent platforms. We will find that deep C-state will dangle between 40%~100% and much time spent on C1 state. It is because menu governor wrongly predict that repeat mode is kept, so it will choose the C1 shallow C-state even though it has chance to sleep 1 second in deep C-state. While after patched the kernel, we find that deep C-state will keep >99.6%. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/time/tick-sched.c Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",25/01/2014 07:26:44,,NOT-FOUND,https://github.com/AOSPAL/android_kernel_asus_flo/commit/50c32321e7cc3582ef22dcf291cab25667518319,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_kernel_asus_flo,,,,,
AOSPAL,android_kernel_asus_flo,"cpuidle: Quickly notice prediction failure in general case The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. The patch extends to general case that prediction logic get a small predicted residency, so it choose a shallow C-state though the expected residency is large . Once the prediction will be fail, the CPU will keep staying at shallow C-state for a long time. Acutally, the CPU has change enter into deep C-state. So when the expected residency is long enough but governor choose a shallow C-state, an timer will be added in order to monitor if the prediction failure. When C-state is waken up prior to the adding timer, the timer will be cancelled initiatively. When the timer is triggered and menu governor will quickly notice prediction failure and re-evaluates deeper C-states possibility. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",25/01/2014 07:26:50,,NOT-FOUND,https://github.com/AOSPAL/android_kernel_asus_flo/commit/0bba5cc0dec383fe8bbb62e5f039fb08a61a50bc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_kernel_asus_flo,,,,,
hellsgod,hells-Core-N5,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s >From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/power/suspend.c",25/01/2014 16:09:48,,DUPLICATE,https://github.com/hellsgod/hells-Core-N5/commit/3339efef7498c2e4b249dc2bfe99a00beaf9c848,,,,[VERIFIED] [https://github.com/proxuser/kartal/commit/67d6dfc3c071501e8f6df335afbea216bee25543],,[https://github.com/proxuser/kartal/commit/67d6dfc3c071501e8f6df335afbea216bee25543],EXISTS,,,,,,,,,,,,,hellsgod/hells-Core-N5,hellsgod,,,hellsgod,
josheschulz,TourDeFatBikeOrgan,"Power Saving: Down to 8mA, doesn't work.",25/01/2014 19:33:26,,OK,https://github.com/josheschulz/TourDeFatBikeOrgan/commit/93dae63a33d55357f6f05535ff3068f32e6c03a5,,,[DO NOT ANALYZE],[OK] [Disable component] [Increase transmit interval],[OK] [SCALE FREQUENCY],[Disable component] [Increase transmit interval] [SCALE FREQUENCY],EXISTS,"[increase packet transmission period] [disable adc, timers and serial interfaces on idle]",[power saving],[Increase transmit interval] [Go to sleep],[OUTLIER],,Multiple changes,Certain,Arduino,No,Application,Ino,"Power Saving: Down to 8mA, doesn't work.",josheschulz/TourDeFatBikeOrgan,josheschulz,[OUTLIER],,josheschulz,Arduino application
OpenMote,openwsn-fw,"Several fixes to the CC2538 bsp. Summarizing: a) Added code to initialize and select the internal and external antennas via GPIOs b) Added code to initilize the clocks appropriately (System = 32 MHz, Peripherals = 16 MHz) c) Added code to initialize the appropriate sleep mode, right now it only goes to PM0 (WFI) d) Added code to initialize the GPIOs for low power consumptions e) Added code to initialize the peripherals according to the sleep mode f) Fixed a bug in the radio that caused to read two more bytes from the receive FIFO g) Removed a comment from the startup code to ensure that it works with the J-Link h) Fixed the UART driver to ensure that it is configured appropriately and remove a bug related to the interrupts. All the fixes have been tested and seem to be working fine.",25/01/2014 20:40:54,,UNABLE-TO-CATEGORIZE,https://github.com/peretuset/openwsn-fw/commit/82669091ff457607ca1b1612e608e86347b933af,https://github.com/OpenMote/openwsn-fw/commit/82669091ff457607ca1b1612e608e86347b933af,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,OpenMote/openwsn-fw,,,,,
OpenMote,openwsn-fw,"Several fixes to the CC2538 bsp. Summarizing: a) Added code to initialize and select the internal and external antennas via GPIOs b) Added code to initilize the clocks appropriately (System = 32 MHz, Peripherals = 16 MHz) c) Added code to initialize the appropriate sleep mode, right now it only goes to PM0 (WFI) d) Added code to initialize the GPIOs for low power consumptions e) Added code to initialize the peripherals according to the sleep mode f) Fixed a bug in the radio that caused to read two more bytes from the receive FIFO g) Removed a comment from the startup code to ensure that it works with the J-Link h) Fixed the UART driver to ensure that it is configured appropriately and remove a bug related to the interrupts. All the fixes have been tested and seem to be working fine.",26/01/2014 11:07:51,,DUPLICATE,https://github.com/peretuset/openwsn-fw/commit/5e0783bfeb2e4159a32f1bfefa5651f979ae5aad,https://github.com/OpenMote/openwsn-fw/commit/5e0783bfeb2e4159a32f1bfefa5651f979ae5aad,,,,,,EXISTS,,,,,,,,,,,,,OpenMote/openwsn-fw,,,,,
milaq,android,"Revert ""include screenoff power savings"" This reverts commit b05405740c6c8d35b4a8075d862e4c30cbca14a1. Conflicts: cherry-picks.sh",27/01/2014 03:01:32,,FALSE-POSITIVE,https://github.com/milaq/android/commit/5d16775592e2bf96ec4d86256fe0977cf1305efa,,,[DO NOT ANALYZE],[?] [REVERT] [FALSE-POSITIVE] [b05405740c6c8d35b4a8075d862e4c30cbca14a1],[REVERT] [b05405740c6c8d35b4a8075d862e4c30cbca14a1],[REVERT] [FALSE-POSITIVE] [b05405740c6c8d35b4a8075d862e4c30cbca14a1],EXISTS,,,,,,,,,,,,,milaq/android,milaq,,,milaq,
DrLoewe,PebbleRouteApp,LocationManager refactoring - use the CLLocationManager.distanceFilter to minimize the location update events generated (and save power in background),27/01/2014 09:00:04,,OK,https://github.com/DrLoewe/PebbleRouteApp/commit/7407f87d1e3088c909d7e85cec51487d9b7da5d4,,,[DO NOT ANALYZE],[OK] [Reduce update event],[OK] [Reduce update event],[Reduce update event],EXISTS,[minimize the location update events generated],[save power in background],[Reduce update event] [Reduce location update],[Reduce location update] [Condition: distance],,,Certain,iOS,No,Application,ObjectiveC,LocationManager refactoring - use the CLLocationManager.distanceFilter to minimize the location update events generated (and save power in background),DrLoewe/PebbleRouteApp,DrLoewe,[Avoid unnecessary work],[distance],DrLoewe,Application
lluisYasT,dwmStatus,Added power consumption,27/01/2014 18:52:35,,FALSE-POSITIVE,https://github.com/lluisYasT/dwmStatus/commit/5e209de50efe44239a620b0d8bcdbde957945f5e,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,lluisYasT/dwmStatus,lluisYasT,,,lluisYasT,
artagnon,linux,"net: stmmac: fix power management suspend-resume case The driver PM resume assumes that the IP is still powered up and the all the register contents are not disturbed when it comes out of low power suspend case. This assumption is wrong, basically the driver should not consider any state of registers after it comes out of low power. However driver can keep the part of the IP powered up if its a wake up source. But it can not assume the register state of the IP. Also its possible that SOC glue layer can take the power off the IP if its not wake-up source to reduce the power consumption. This patch re initializes hardware by calling stmmac_hw_setup function in resume case. Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@st.com> Acked-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>",27/01/2014 21:11:17,,FALSE-POSITIVE,https://github.com/artagnon/linux/commit/623997fb90eab7a135c2c68a332c8450a488baca,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,artagnon/linux,,,,davem330,
EthanJ99,kernel_htc_msm8960,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",27/01/2014 22:55:16,,NOT-FOUND,https://github.com/EthanJ99/kernel_htc_msm8960/commit/fd620953f5fe7df9314001826486f2140e910de6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EthanJ99/kernel_htc_msm8960,,,,,
Gpad2Gpe,android_kernel_lge_v500,"msm: sps: enable BAM DMA client to control BAM DMA clock For power saving reason, SPS driver will turn off the clock of BAM DMA after the initial configuration. A new API is provided to BAM DMA clients to vote for or relinquish BAM DMA clock when they start/stop using BAM DMA. Change-Id: I03f8a6cfa19c1722ca4e92e0785ca309fdd10ba2 Signed-off-by: Yan He <yanhe@codeaurora.org>",27/01/2014 23:48:25,,DUPLICATE,https://github.com/Gpad2Gpe/android_kernel_lge_v500/commit/18e683e141f8cd5d0bbde306b1fbb86a5ee052f5,,,,,,,EXISTS,,,,,,,,,,,,,Gpad2Gpe/android_kernel_lge_v500,,,,Ntemis,
Gpad2Gpe,android_kernel_lge_v500,"msm: sps: turn off BAM DMA clock after initial config For power saving, SPS driver will turn off BAM DMA clock after the initial configuration of BAM DMA. The clients of BAM DMA will vote for the clock when BAM DMA is used. Change-Id: I388a21cff3c619ef49705a064d7d5ef760fa9ef8 Signed-off-by: Yan He <yanhe@codeaurora.org>",27/01/2014 23:48:37,,DUPLICATE,https://github.com/Gpad2Gpe/android_kernel_lge_v500/commit/a7dee4ac55b47c0bca8b17bb27e0db1ba09a838c,,,,,,,EXISTS,,,,,,,,,,,,,Gpad2Gpe/android_kernel_lge_v500,,,,Ntemis,
EthanJ99,kernel_htc_msm8960,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",28/01/2014 02:51:23,,NOT-FOUND,https://github.com/EthanJ99/kernel_htc_msm8960/commit/38a3c0aad1b136f813ea00159fa269f8eb07c205,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EthanJ99/kernel_htc_msm8960,,,,,
linrunner,TLP,Issue #61: sound power save depending on power source ac/bat.,28/01/2014 18:35:07,,FALSE-POSITIVE,https://github.com/linrunner/TLP/commit/bea34ef5bc9999a5e1cc55b56220b5e95bad90fc,,,[DO NOT ANALYZE],[RELATED] [Configure power save mode depending on power source],[RELATED] [Disable Component],[Configure power save mode depending on power source] [Disable Component],EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
GravityBox,GravityBox,Smart Radio: take tethering via mobile network into account when making decision about switching to power saving mode when screen is off,29/01/2014 10:06:06,,FALSE-POSITIVE,https://github.com/GravityBox/GravityBox/commit/73e7d572a7a0a29feab87bd00359f21831de1e88,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,GravityBox/GravityBox,C3C0,,,C3C0,
GravityBox,GravityBox,Smart Radio: option to delay power saving mode after screen turns off Useful when user needs to turn screen on/off frequently to check for something. Power saving mode will be activated after defined delay expires. Since it's possible to set rather large delay (e.g. 30 minutes) we use AlarmManager to schedule switch which will work even when device sleeps.,29/01/2014 13:04:40,,FALSE-POSITIVE,https://github.com/GravityBox/GravityBox/commit/c9f4d232ae880b717a2d710bd0223792ef29aeaf,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,GravityBox/GravityBox,C3C0,,,C3C0,
Grarak,grakernel-tuna,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",29/01/2014 14:31:10,,DUPLICATE,https://github.com/Grarak/grakernel-tuna/commit/08febd372bc36866df9f19afb5771a6e3462afa1,,,,,,,EXISTS,,,,,,,,,,,,,Grarak/grakernel-tuna,faux123,,,Grarak,
Grarak,grakernel-tuna,cpufreq: add ondemand two-phase scheduling two phase scheduling will provide further power savings to ondemand scheduler Conflicts: arch/arm/mach-omap2/board-tuna.c drivers/cpufreq/cpufreq_ondemand.c,29/01/2014 15:14:38,,OK,https://github.com/Grarak/grakernel-tuna/commit/b976407d31eb4d91b7243e4002877305395e9116,,,[DO NOT ANALYZE],[OK] [Governor] [Add two phase scaling],[OK][SCALE CPU FREQUENCY][GOVERNOR],[Governor] [Add two phase scaling] [SCALE CPU FREQUENCY],EXISTS,[save power in background],[power saving],[Add two phase scaling] [Improve Governor] [Scale CPU frequency],[DVFS] [Sub1: Governor tuning],,,Certain,Android,No,OS,C,cpufreq: add ondemand two-phase scheduling two phase scheduling will provide further power savings to ondemand scheduler,Grarak/grakernel-tuna,faux123,[Frequency and voltage scaling],,Grarak,Driver cpufreq
Grarak,grakernel-tuna,cpufreq: add ondemand two-phase scheduling two phase scheduling will provide further power savings to ondemand scheduler Signed-off-by: Willi Ye <williye97@gmail.com> Conflicts: arch/arm/mach-omap2/board-tuna.c drivers/cpufreq/cpufreq_ondemand.c,29/01/2014 15:19:23,,DUPLICATE,https://github.com/Grarak/grakernel-tuna/commit/8aa703b20d612ba25fe78c1a0e883a677d5f8323,,,,[VERIFY] [https://github.com/Grarak/grakernel-tuna/commit/b976407d31eb4d91b7243e4002877305395e9116],,[https://github.com/Grarak/grakernel-tuna/commit/b976407d31eb4d91b7243e4002877305395e9116],EXISTS,,,,,,,,,,,,,Grarak/grakernel-tuna,faux123,,,Grarak,
Grarak,grakernel-tuna,cpufreq: add ondemand two-phase scheduling two phase scheduling will provide further power savings to ondemand scheduler Signed-off-by: Willi Ye <williye97@gmail.com> Conflicts: arch/arm/mach-omap2/board-tuna.c drivers/cpufreq/cpufreq_ondemand.c,29/01/2014 18:35:58,,DUPLICATE,https://github.com/Grarak/grakernel-tuna/commit/c276b0c1352f95ddce1e7bb2c3f5384255b27478,,,,,,,EXISTS,,,,,,,,,,,,,Grarak/grakernel-tuna,faux123,,,Grarak,
ch-vox,GravityBox,Updated French translation [KK] Smart Radio: option to delay power saving mode after screen turns off,29/01/2014 20:27:56,,FALSE-POSITIVE,https://github.com/ch-vox/GravityBox/commit/bc5b6fd0fa8a221341337add943dd73f6ff09d91,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,ch-vox/GravityBox,ch-vox,,,ch-vox,
MatthewHeun,Dynamic-IO-Modeling,Deleted old version of US Auto industry energy consumption table.,30/01/2014 14:53:42,,FALSE-POSITIVE,https://github.com/MatthewHeun/Dynamic-IO-Modeling/commit/0ae20b030c8c56a8c0edfda35e1b06831ae5c8ef,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,MatthewHeun/Dynamic-IO-Modeling,MatthewHeun,,,MatthewHeun,
sanojian,galacticOutlaw,tweaking part power consumption,30/01/2014 15:14:32,,FALSE-POSITIVE,https://github.com/sanojian/galacticOutlaw/commit/838b35e33378f95d0ea3dc99a97a68ca4ce26f52,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE] [GAME],[Game],EXISTS,,,,,,,,,,,,,sanojian/galacticOutlaw,sanojian,,,sanojian,
sanojian,galacticOutlaw,tweaking part power consumption,30/01/2014 15:14:58,,DUPLICATE,https://github.com/sanojian/galacticOutlaw/commit/838b35e33378f95d0ea3dc99a97a68ca4ce26f52,,,,,,,EXISTS,,,,,,,,,,,,,sanojian/galacticOutlaw,sanojian,,,sanojian,
KitKatPurity,platform_frameworks_base,"SystemUI: disable statusbar time refresh when screen off When screen is off, don't refresh the status bar to save power. When screen is on, refresh immediately for user experience. Change-Id: Ie250e20bab57c096a16886680a53263c635bf6f4 Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/policy/Clock.java",30/01/2014 16:08:03,,OK,https://github.com/KitKatPurity/platform_frameworks_base/commit/9e7324ec59acd7812b02b173c9c7bea47c43061d,,,[DO NOT ANALYZE],[OK] [Do not refresh statusbar when screen is off] [Power saving action on screen off] [Android],[OK] [DISABLE COMPONENT],[Do not refresh statusbar when screen is off] [Power saving action on screen off] [Android] [DISABLE COMPONENT],EXISTS,[disable statusbar time refresh when screen off],[power saving],[Do not refresh statusbar when screen off] [Power saving action on screen off] ,[Do not update UI] [Condition: screen off],,,Certain,Android,No,OS,Java,"SystemUI: disable statusbar time refresh when screen off When screen is off, don't refresh the status bar to save power. When screen is on, refresh immediately for user experience.",KitKatPurity/platform_frameworks_base,,[Display and UI tuning],[screen off],AndroidRul3z,Framework
kisler,platform_frameworks_base,"SystemUI: disable statusbar time refresh when screen off When screen is off, don't refresh the status bar to save power. When screen is on, refresh immediately for user experience. Change-Id: Ie250e20bab57c096a16886680a53263c635bf6f4 Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/policy/Clock.java",30/01/2014 16:59:29,,DUPLICATE,https://github.com/kisler/platform_frameworks_base/commit/4c32eae65bcf496e3623718030f8a1a8e8fd078b,,,,,,,EXISTS,,,,,,,,,,,,,kisler/platform_frameworks_base,,,,kisler,
tommytarts,QuantumKernelS3,"usb: hsic: suspend hsic until really activated by the gadget driver Hsic can enter to low power mode only after bus suspend when connected to host. Since there is no disconnect state in hsic, hsic remaines resumed even not activated by the gadget driver. Therefore hsic still votes for some resources, such as clocks, that prevent from power save modes to occur, as Vdd minimization. This fix suspends the hsic by default, right after hsic udc driver Initializations take place, and only on activation by the gadget driver,aka pullup, resume the hsic device. Change-Id: I22ecbbd66e76e28161428287e6a8b44cf42a1325 CRs-Fixed: 400263 Signed-off-by: Ido Shayevitz <idos@codeaurora.org>",31/01/2014 18:05:41,,DUPLICATE,https://github.com/tommytarts/quantumkernel/commit/8b1a05098a5780eda57243f16d501a454209f63f,https://github.com/tommytarts/QuantumKernelS3/commit/8b1a05098a5780eda57243f16d501a454209f63f,,,,,,EXISTS,,,,,,,,,,,,,tommytarts/QuantumKernelS3,,,,tommytarts,
NamelessRom,android_kernel_lge_msm8974,"ARM: add support for bit sliced AES using NEON instructions Bit sliced AES gives around 45% speedup on Cortex-A15 for encryption and around 25% for decryption. This implementation of the AES algorithm does not rely on any lookup tables so it is believed to be invulnerable to cache timing attacks. This algorithm processes up to 8 blocks in parallel in constant time. This means that it is not usable by chaining modes that are strictly sequential in nature, such as CBC encryption. CBC decryption, however, can benefit from this implementation and runs about 25% faster. The other chaining modes implemented in this module, XTS and CTR, can execute fully in parallel in both directions. The core code has been adopted from the OpenSSL project (in collaboration with the original author, on cc). For ease of maintenance, this version is identical to the upstream OpenSSL code, i.e., all modifications that were required to make it suitable for inclusion into the kernel have been made upstream. The original can be found here: http://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=6f6a6130 Note to integrators: While this implementation is significantly faster than the existing table based ones (generic or ARM asm), especially in CTR mode, the effects on power efficiency are unclear as of yet. This code does fundamentally more work, by calculating values that the table based code obtains by a simple lookup; only by doing all of that work in a SIMD fashion, it manages to perform better. Cc: Andy Polyakov <appro@openssl.org> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>",31/01/2014 18:35:21,,NOT-FOUND,https://github.com/NamelessRom/android_kernel_lge_msm8974/commit/f641826cb146b1b98d29ce8a6b7d11685942089f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,NamelessRom/android_kernel_lge_msm8974,,,,,
No-GMO,Exploring,About Biomass Shows biomass energy efficiency.,31/01/2014 19:50:28,,FALSE-POSITIVE,https://github.com/No-GMO/Exploring/commit/6968b0e42ab1300037906e2372cec9e66967de9b,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,No-GMO/Exploring,No-GMO,,,No-GMO,
Androidsftw,android_kernel_samsung_d2,possible power saver change,01/02/2014 15:22:59,,NOT-FOUND,https://github.com/Androidsftw/android_kernel_samsung_d2/commit/460c98813ee152e26602674a0e223093d2766fb4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Androidsftw/android_kernel_samsung_d2,,,,,
filiph,spaceship_combat,"Add power consumption to fitness functions, improve starting positions.",01/02/2014 20:40:44,,FALSE-POSITIVE,https://github.com/filiph/spaceship_combat/commit/1dd10b5cf897a1809ffcb18b9a9ab91c6a43a05d,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,filiph/spaceship_combat,filiph,,,filiph,
GravityBox,GravityBox,Smart Radio: option to delay power saving mode after screen turns off Useful when user needs to turn screen on/off frequently to check for something. Power saving mode will be activated after defined delay expires. Since it's possible to set rather large delay (e.g. 30 minutes) we use AlarmManager to schedule switch which will work even when device sleeps.,01/02/2014 21:52:31,,DUPLICATE,https://github.com/GravityBox/GravityBox/commit/0fa80f65633e43672aa43f4f934f37c5034c69f5,,,,,,,EXISTS,,,,,,,,,,,,,GravityBox/GravityBox,C3C0,,,bgcngm,
ch-vox,GravityBox,Updated French translation [JB] Notification drawer style: custom carrier text support for MTK Added very basic backup/restore settings feature Let's do some monetizing Smart Radio: option to delay power saving mode after screen turns off Pie: option to disable system info slice Pie: added option for adjusting long-press delay GB Actions: added shortcut for opening launcher's app drawer Key actions: added action for opening launcher's app drawer,02/02/2014 00:01:54,,FALSE-POSITIVE,https://github.com/ch-vox/GravityBox/commit/60407e63baf466d0d8168e7381ec06f50dd61ee5,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,ch-vox/GravityBox,ch-vox,,,ch-vox,
horn3t,PerformanceControl,added multicore power saving,02/02/2014 15:17:14,,RELATED,https://github.com/horn3t/PerformanceControl/commit/0bd51a31f79d503824ae8cc9bf71e5bcd933353e,,,[DO NOT ANALYZE],[OK] [Enable multicore power saving] [Android],[OK] [Enable multicore power saving],[Enable multicore power saving] [Android],EXISTS,,,[REVIEW] [Enable multicore power saving],,,,Certain,Android,No,Application,Java,added multicore power saving,horn3t/PerformanceControl,horn3t,,,horn3t,Application
dorimanx,Dorimanx-LG-G2-D802-Kernel,"Enabled WIFI wakelocks, but reduced them + enabled powersuspend >>> To Save power on screen OFF. from dmesg on screen off <4>dhd_early_suspend: enter <4>dhd_set_suspend: force extra Suspend setting on screen on <4>dhd_late_resume: enter <4>dhd_set_suspend: Remove extra suspend setting using powersuspend code structure. This should save some more power when WIFI is ON and allow fast notifications from SYNC and apps.",02/02/2014 16:04:04,,OK,https://github.com/dorimanx/Dorimanx-LG-G2-D802-Kernel/commit/9db3e66105d824938bff4fddc999fc801ff42f7d,,,[DO NOT ANALYZE],[OK] [Enable power suspend] [Android],[OK],[Enable power suspend] [Android],EXISTS,[Use power_suspend instead of early_suspend],[save some more power when WIFI is ON and allow fast notifications from SYNC and apps],[Use power_suspend mode],[Enable power_suspend mode],,,Certain,Android,No,OS,C,"Enabled WIFI wakelocks, but reduced them + enabled powersuspend >>> To Save power on screen OFF.",dorimanx/Dorimanx-LG-G2-D802-Kernel,dorimanx,[Use power efficient library/device],,dorimanx,Driver
apdlv72,Frotect,Changed definition of power consumtion to cover more than 255W per strand,03/02/2014 10:14:52,,FALSE-POSITIVE,https://github.com/apdlv72/Frotect/commit/95a17bc79db02d5c6975a1b13f04f27886a1c7ea,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,apdlv72/Frotect,apdlv72,,,apdlv72,
NoesisEnergy,bootstrap,BZ-9958: fix issue while edit total energy savings ammount,03/02/2014 22:18:17,,NOT-FOUND,https://github.com/NoesisEnergy/bootstrap/commit/2627f23128228a30998ccd450e46b3c4efa8c687,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,NoesisEnergy/bootstrap,,,,,
NoesisEnergy,bootstrap,BZ-9958: fix issue while edit total energy savings ammount,03/02/2014 22:20:13,,NOT-FOUND,https://github.com/NoesisEnergy/bootstrap/commit/3423a8124e4e777150ace206717f2160ec3ae298,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,NoesisEnergy/bootstrap,,,,,
filiph,spaceship_combat,Decrease the influence of power consumption,04/02/2014 09:15:10,,FALSE-POSITIVE,https://github.com/filiph/spaceship_combat/commit/20de0ed8f7e7f240d0e416939bfc023ff9de86b8,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,filiph/spaceship_combat,filiph,,,filiph,
NamelessRom,android_kernel_samsung_jf,"Revert ""sched: set power savings to POWERSAVINGS_BALANCE_WAKEUP"" This reverts commit b3bb3e795614779946fe7590c51dfce0f49f38ed. Change-Id: I391bc3114cc02314bcf7dcf76b090a6d9601fd7f",04/02/2014 09:28:51,,REVERT,https://github.com/NamelessRom/android_kernel_samsung_jf/commit/09af2babe0a63022dead467f369d08ca2871a519,,,[DO NOT ANALYZE],[REVERT] [b3bb3e795614779946fe7590c51dfce0f49f38ed],[REVERT] [b3bb3e795614779946fe7590c51dfce0f49f38ed],[b3bb3e795614779946fe7590c51dfce0f49f38ed],EXISTS,"Revert ""sched: set power savings to POWERSAVINGS_BALANCE_WAKEUP""",,,,,,,,,,,,NamelessRom/android_kernel_samsung_jf,Evisceration,,,Evisceration,
RickyShi,BodySensorApp,PIN Number Check tasks are all done/Chest ACC Data Preprocessing 1. Modify New Activity and Layout. 2. Modify Whole Alarm Mechanism. 3. Discard first 11 second chest ACC data after the connection of chest sensor is established. 4. Still using the Average of 1 second data (25 samples) as output for now since the outliers are discarded. 5. Disable phone sensor data and APP data uploading to save power.,05/02/2014 04:53:40,,UNABLE-TO-CATEGORIZE,https://github.com/RickyShi/BodySensorApp/commit/bf3bcef3a49eb6f063deb97adddea0ae5351aa0d,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE] ,[UNABLE-TO-CATEGORIZE],[ ],EXISTS,,,,,,,,,,,,,RickyShi/BodySensorApp,RickyShi,,,RickyShi,
idnine,AudioSelector,"Code Done. Power Save Mode, Timer Blink, Audio Select Switch Done.",05/02/2014 05:36:34,,OK,https://github.com/idnine/AudioSelector/commit/f233bfa1df0b9dc6ea5af293555e1748ec3a29bf,,,[DO NOT ANALYZE],[OK] [Enable power saving mode] [Hardware],[OK] [Interrupt Enabled],[Enable power saving mode] [Hardware] [Interrupt Enabled],EXISTS,[Enable Global Interrupt and enter sleep mode],[power saving],[Enable interrupt and go to sleep],[Go to low power],,,Certain,MCU,No,Application,C,"Code Done. Power Save Mode, Timer Blink, Audio Select Switch Done.",idnine/AudioSelector,idnine,[Low power idling],,idnine,Embedded application ?
zwliew,android_kernel_samsung_codina,"sched: set sched_mc_power_savings to 2, this should help to increase power efficiency by maxing out the load on cpu0 before using cpu1 Change-Id: I4298cb50cebc6210509e186de6e68c5a62ff7c56 Signed-off-by: zwliew <zhaoweiliew@gmail.com>",05/02/2014 09:12:26,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_codina/commit/677310d47e93220520b415f21388c266d2dbb0d5,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_codina,,,,,
Tk-Glitch,Glitch_Flo_AOSP,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",05/02/2014 13:04:44,,DUPLICATE,https://github.com/Tk-Glitch/Glitch_Flo_AOSP/commit/2b27fa6b1b6d3ad520bc2c3ebee236b2d02de6b3,,,,,,,EXISTS,,,,,,,,,,,,,Tk-Glitch/Glitch_Flo_AOSP,Tk-Glitch,,,Tk-Glitch,
Tk-Glitch,Glitch_Flo_AOSP,"ARM: add support for bit sliced AES using NEON instructions Bit sliced AES gives around 45% speedup on Cortex-A15 for encryption and around 25% for decryption. This implementation of the AES algorithm does not rely on any lookup tables so it is believed to be invulnerable to cache timing attacks. This algorithm processes up to 8 blocks in parallel in constant time. This means that it is not usable by chaining modes that are strictly sequential in nature, such as CBC encryption. CBC decryption, however, can benefit from this implementation and runs about 25% faster. The other chaining modes implemented in this module, XTS and CTR, can execute fully in parallel in both directions. The core code has been adopted from the OpenSSL project (in collaboration with the original author, on cc). For ease of maintenance, this version is identical to the upstream OpenSSL code, i.e., all modifications that were required to make it suitable for inclusion into the kernel have been made upstream. The original can be found here: http://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=6f6a6130 Note to integrators: While this implementation is significantly faster than the existing table based ones (generic or ARM asm), especially in CTR mode, the effects on power efficiency are unclear as of yet. This code does fundamentally more work, by calculating values that the table based code obtains by a simple lookup; only by doing all of that work in a SIMD fashion, it manages to perform better. Cc: Andy Polyakov <appro@openssl.org> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>",05/02/2014 13:29:49,,DUPLICATE,https://github.com/Tk-Glitch/Glitch_Flo_AOSP/commit/f07e328c299673b7d36dffe959c0e46fb9b6395c,,,,,,,EXISTS,,,,,,,,,,,,,Tk-Glitch/Glitch_Flo_AOSP,Tk-Glitch,,,Tk-Glitch,
AICP,kernel_lge_hammerhead,"cpuidle: Quickly notice prediction failure for repeat mode The prediction for future is difficult and when the cpuidle governor prediction fails and govenor possibly choose the shallower C-state than it should. How to quickly notice and find the failure becomes important for power saving. cpuidle menu governor has a method to predict the repeat pattern if there are 8 C-states residency which are continuous and the same or very close, so it will predict the next C-states residency will keep same residency time. There is a real case that turbostat utility (tools/power/x86/turbostat) at kernel 3.3 or early. turbostat utility will read 10 registers one by one at Sandybridge, so it will generate 10 IPIs to wake up idle CPUs. So cpuidle menu governor will predict it is repeat mode and there is another IPI wake up idle CPU soon, so it keeps idle CPU stay at C1 state even though CPU is totally idle. However, in the turbostat, following 10 registers reading is sleep 5 seconds by default, so the idle CPU will keep at C1 for a long time though it is idle until break event occurs. In a idle Sandybridge system, run ""./turbostat -v"", we will notice that deep C-state dangles between ""70% ~ 99%"". After patched the kernel, we will notice deep C-state stays at >99.98%. In the patch, a timer is added when menu governor detects a repeat mode and choose a shallow C-state. The timer is set to a time out value that greater than predicted time, and we conclude repeat mode prediction failure if timer is triggered. When repeat mode happens as expected, the timer is not triggered and CPU waken up from C-states and it will cancel the timer initiatively. When repeat mode does not happen, the timer will be time out and menu governor will quickly notice that the repeat mode prediction fails and then re-evaluates deeper C-states possibility. Below is another case which will clearly show the patch much benefit: volatile int * shutdown; volatile long * count; int delay = 20; int loop = 8; void usage(void) { fprintf(stderr, ""Usage: idle_predict [options]\n"" "" --help -h Print this help\n"" "" --thread -n Thread number\n"" "" --loop -l Loop times in shallow Cstate\n"" "" --delay -t Sleep time (uS)in shallow Cstate\n""); } void *simple_loop() { int idle_num = 1; while (!(*shutdown)) { *count = *count + 1; if (idle_num % loop) usleep(delay); else { /* sleep 1 second */ usleep(1000000); idle_num = 0; } idle_num++; } } static void sighand(int sig) { *shutdown = 1; } int main(int argc, char *argv[]) { sigset_t sigset; int signum = SIGALRM; int i, c, er = 0, thread_num = 8; pthread_t pt[1024]; static char optstr[] = ""n:l:t:h:""; while ((c = getopt(argc, argv, optstr)) != EOF) switch (c) { case 'n': thread_num = atoi(optarg); break; case 'l': loop = atoi(optarg); break; case 't': delay = atoi(optarg); break; case 'h': default: usage(); exit(1); } printf(""thread=%d,loop=%d,delay=%d\n"",thread_num,loop,delay); count = malloc(sizeof(long)); shutdown = malloc(sizeof(int)); *count = 0; *shutdown = 0; sigemptyset(&sigset); sigaddset(&sigset, signum); sigprocmask (SIG_BLOCK, &sigset, NULL); signal(SIGINT, sighand); signal(SIGTERM, sighand); for(i = 0; i < thread_num ; i++) pthread_create(&pt[i], NULL, simple_loop, NULL); for (i = 0; i < thread_num; i++) pthread_join(pt[i], NULL); exit(0); } Get powertop V2 from git://github.com/fenrus75/powertop, build powertop. After build the above test application, then run it. Test plaform can be Intel Sandybridge or other recent platforms. We will find that deep C-state will dangle between 40%~100% and much time spent on C1 state. It is because menu governor wrongly predict that repeat mode is kept, so it will choose the C1 shallow C-state even though it has chance to sleep 1 second in deep C-state. While after patched the kernel, we find that deep C-state will keep >99.6%. Signed-off-by: Rik van Riel <riel@redhat.com> Signed-off-by: Youquan Song <youquan.song@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com> Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com> Conflicts: kernel/time/tick-sched.c Change-Id: I7e6721f06572b0620572690779ae2414c41b036d Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>",05/02/2014 13:30:59,,DUPLICATE,https://github.com/AICP/kernel_lge_hammerhead/commit/112d4f9b25ba79114478aca79a09f4ad6eb68c57,,,,[VERIFIED] [https://github.com/AOSPAL/android_kernel_asus_flo/commit/7941e36bb0a247059df341ca406b86743486d028],,[https://github.com/AOSPAL/android_kernel_asus_flo/commit/7941e36bb0a247059df341ca406b86743486d028],EXISTS,,,,,,,,,,,,,AICP/kernel_lge_hammerhead,,,,,
jimsth,vanir_hammerhead,ASoC: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit e6058aaadcd473e5827720dc143af56aabbeecc7) Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>,06/02/2014 07:06:41,,DUPLICATE,https://github.com/jimsth/vanir_hammerhead/commit/1bb414c6c875632b9180a5d2f07a5d4953bd29ba,,,,[VERIFIED] [https://github.com/poondog/joey-m7-GPE/commit/f678a6e40f44f4640067f6f595ef9b33d4cd9c96],,[https://github.com/poondog/joey-m7-GPE/commit/f678a6e40f44f4640067f6f595ef9b33d4cd9c96],EXISTS,,,,,,,,,,,,,jimsth/vanir_hammerhead,SyNtheticNightmar3,,,jimsth,
jimsth,vanir_hammerhead,ASoC: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit e6058aaadcd473e5827720dc143af56aabbeecc7) Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>,06/02/2014 08:58:36,,DUPLICATE,https://github.com/jimsth/vanir_hammerhead/commit/6ccecee58e8e687610075c6049cef93b010dfdee,,,,,,,EXISTS,,,,,,,,,,,,,jimsth/vanir_hammerhead,SyNtheticNightmar3,,,jimsth,
zwliew,android_kernel_samsung_codina,"sched: set scheduler multi-core power-savings to 2: this option tries to pack as much load as possible to cpu0 before using cpu1, as this is a dual-core device, this is exactly applicable to our device; from what i've seen, this does bring about some power savings, despite not actually hotplugging cpu1 Change-Id: I20e56d549783b37e70c23dae4ef1cf74741379c6 Signed-off-by: zwliew <zhaoweiliew@gmail.com>",06/02/2014 15:05:22,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_codina/commit/e001a44622667d395658dddea76b41aa697fdc0e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_codina,,,,,
jied83,android_kernel_pantech_p9070,"cpufreq: boost the sampling rate on touch event For better Ux responsiveness ondemand sampling rate needs to be 20ms. But, a 20ms sampling rate increases power consumption. So, boost the sampling rate to 20ms on every touch event for 2.5 ms and later reset to default rate. Also, change sampling down factor proportional to the sampling rate. Change-Id: I111b1cf3b8ed133347149afc34d329d0384ecfcb Signed-off-by: Narayanan Gopalakrishnan <nargop@codeaurora.org> Conflicts: drivers/cpufreq/cpufreq_ondemand.c",07/02/2014 12:51:58,,NOT-FOUND,https://github.com/jied83/android_kernel_pantech_p9070/commit/57e1bdc85038fc6a4b4088800befc52337937f04,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jied83/android_kernel_pantech_p9070,,,,,
ShockGensMOD,frameworks_base,ADD power saver,07/02/2014 21:02:02,,NOT-FOUND,https://github.com/ShockGensMOD/frameworks_base/commit/5837c3f0c8731d47c2333f6a272fe6842a89e036,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ShockGensMOD/frameworks_base,xperiafan13-rom,,,xperiafan13-rom,
ShockGensMOD,frameworks_base,ADD power saver,07/02/2014 21:07:05,,NOT-FOUND,https://github.com/ShockGensMOD/frameworks_base/commit/bcd43b36c68d9548d79049f0bafe10971a69c464,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ShockGensMOD/frameworks_base,xperiafan13-rom,,,xperiafan13-rom,
zwliew,android_kernel_samsung_codina,"sched: set sched_smt_power_savings to 2 The smt in the name of the sched_smt_power_savings parameter represents simultaneous multithreading. This scheduler power saving feature corresponds to the /sys/devices/system/cpu/sched_smt_power_savings file. The default value of this parameter is 0, which does nothing When it is set to 1, the scheduler tries to schedule processes on the least number of hyper-threads on a core as possible. In other words, the process load is distributed such that all the hyper-threads in a core and all the cores within the same processor are busy before the load is distributed to other hyper-threads and cores in another processor. As with the sched_mc_power_savings parameter, power is saved by reducing the number of active hyper-threads while allowing the idle processors to go into a deeper C-state.",08/02/2014 06:01:58,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_codina/commit/c0862535b5d637ca833b7f1afce7a7004aadfec6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_codina,,,,,
zwliew,android_kernel_samsung_codina,"x86, sched: Fix sched_smt_power_savings totally broken sched_smt_power_savings is totally broken at lastest linux and -tip tree. sched_smt_power_savings is set to 1, the scheduler tries to schedule processes on the least number of hyper-threads on a core as possible. In other words, the process load is distributed such that all the hyper-threads in a core and all the cores within the same processor are busy before the load is distributed to other hyper-threads and cores in another processor. Test On Intel Xeon machine with 2 physical CPUs and each CPU has 8 cores / 16 threads. physical CPU 0 includes cpu[0~7] and cpu[16~23]; while physical CPU 1 includes cpu[8~15] and cpu[24~31]. At latest -tip tree: echo 1 > /sys/devices/system/cpu/sched_smt_power_savings ./ebizzy -t 16 -S 100 & sleep 10 ; cat /proc/sched_debug | grep -A 1 cpu# > tmp.log cpu#0, 2693.564 MHz .nr_running : 0 -- cpu#1, 2693.564 MHz .nr_running : 1 -- cpu#2, 2693.564 MHz .nr_running : 0 -- cpu#3, 2693.564 MHz .nr_running : 1 -- cpu#4, 2693.564 MHz .nr_running : 1 -- cpu#5, 2693.564 MHz .nr_running : 1 -- cpu#6, 2693.564 MHz .nr_running : 1 -- cpu#7, 2693.564 MHz .nr_running : 1 -- cpu#8, 2693.564 MHz .nr_running : 1 -- cpu#9, 2693.564 MHz .nr_running : 1 -- cpu#10, 2693.564 MHz .nr_running : 1 -- cpu#11, 2693.564 MHz .nr_running : 0 -- cpu#12, 2693.564 MHz .nr_running : 1 -- cpu#13, 2693.564 MHz .nr_running : 1 -- cpu#14, 2693.564 MHz .nr_running : 0 -- cpu#15, 2693.564 MHz .nr_running : 0 -- cpu#16, 2693.564 MHz .nr_running : 0 -- cpu#17, 2693.564 MHz .nr_running : 0 -- cpu#18, 2693.564 MHz .nr_running : 1 -- cpu#19, 2693.564 MHz .nr_running : 0 -- cpu#20, 2693.564 MHz .nr_running : 0 -- cpu#21, 2693.564 MHz .nr_running : 0 -- cpu#22, 2693.564 MHz .nr_running : 0 -- cpu#23, 2693.564 MHz .nr_running : 0 -- cpu#24, 2693.564 MHz .nr_running : 0 -- cpu#25, 2693.564 MHz .nr_running : 1 -- cpu#26, 2693.564 MHz .nr_running : 1 -- cpu#27, 2693.564 MHz .nr_running : 1 -- cpu#28, 2693.564 MHz .nr_running : 0 -- cpu#29, 2693.564 MHz .nr_running : 0 -- cpu#30, 2693.564 MHz .nr_running : 1 -- cpu#31, 2693.564 MHz .nr_running : 1 From above, we notice 16 threads are distributed among 2 physical CPUs. After apply the patch, 16 threads are only distributed at one physical CPU. In this case, we can notice 30% power saving. Following are the result after apply the patch: cpu#0, 2693.384 MHz .nr_running : 1 -- cpu#1, 2693.384 MHz .nr_running : 1 -- cpu#2, 2693.384 MHz .nr_running : 1 -- cpu#3, 2693.384 MHz .nr_running : 1 -- cpu#4, 2693.384 MHz .nr_running : 1 -- cpu#5, 2693.384 MHz .nr_running : 1 -- cpu#6, 2693.384 MHz .nr_running : 1 -- cpu#7, 2693.384 MHz .nr_running : 1 -- cpu#8, 2693.384 MHz .nr_running : 0 -- cpu#9, 2693.384 MHz .nr_running : 0 -- cpu#10, 2693.384 MHz .nr_running : 0 -- cpu#11, 2693.384 MHz .nr_running : 0 -- cpu#12, 2693.384 MHz .nr_running : 0 -- cpu#13, 2693.384 MHz .nr_running : 0 -- cpu#14, 2693.384 MHz .nr_running : 0 -- cpu#15, 2693.384 MHz .nr_running : 0 -- cpu#16, 2693.384 MHz .nr_running : 1 -- cpu#17, 2693.384 MHz .nr_running : 1 -- cpu#18, 2693.384 MHz .nr_running : 1 -- cpu#19, 2693.384 MHz .nr_running : 1 -- cpu#20, 2693.384 MHz .nr_running : 1 -- cpu#21, 2693.384 MHz .nr_running : 1 -- cpu#22, 2693.384 MHz .nr_running : 1 -- cpu#23, 2693.384 MHz .nr_running : 1 -- cpu#24, 2693.384 MHz .nr_running : 0 -- cpu#25, 2693.384 MHz .nr_running : 0 -- cpu#26, 2693.384 MHz .nr_running : 0 -- cpu#27, 2693.384 MHz .nr_running : 0 -- cpu#28, 2693.384 MHz .nr_running : 0 -- cpu#29, 2693.384 MHz .nr_running : 0 -- cpu#30, 2693.384 MHz .nr_running : 0 -- cpu#31, 2693.384 MHz .nr_running : 1 This patch will set SMT sibling power capability to SCHED_POWER_SCALE (1024) when sched_smt_power_savings set. So when there is possible do power saving during scheduling, scheduler will truly schedule processes as sched_smt_power_savings should do. Signed-off-by: Youquan Song <youquan.song@intel.com> Tested-by: Anhua Xu <anhua.xu@intel.com> Signed-off-by: zwliew <zhaoweiliew@gmail.com>",08/02/2014 06:04:19,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_codina/commit/9fdd40dc2122293e5541d2e515e63efd9cd5800c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_codina,,,,,
zwliew,android_kernel_samsung_codina,"sched: set sched_mc_power_savings to 2 The mc in the name of the sched_mc_power_savings parameter represents multi-core. This scheduler power saving feature corresponds to the /sys/devices/system/cpu/sched_mc_power_savings file. The default value of this parameter is 0, which does nothing. When it is set to 1, the scheduler tries to schedule processes on the least possible number of processors. In other words, the process load is distributed such that all the cores in a processor are busy before the load is distributed to the core of another processor. This saves energy by reducing the number of active processors and allowing the idle processors to go into a deeper C-state. Of course, setting it to 2 allows for more aggressive battery savings, albeit at the cost of a little more performance. As our device is always using both cores while screen is on, this will actually help to achieve battery savings similar to hotplugging, by not using the 2nd core as much. Change-Id: I3fcd8c5f79e81bb658fe3339b8e3611f4de634fa Signed-off-by: zwliew <zhaoweiliew@gmail.com>",08/02/2014 14:45:33,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_codina/commit/3cad9c560827825b560057a9fff434dbc83603ab,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_codina,,,,,
zwliew,android_kernel_samsung_codina,"sched: set sched_mc_power_savings to 2 The mc in the name of the sched_mc_power_savings parameter represents multi-core. This scheduler power saving feature corresponds to the /sys/devices/system/cpu/sched_mc_power_savings file. The default value of this parameter is 0, which does nothing. When it is set to 1, the scheduler tries to schedule processes on the least possible number of processors. In other words, the process load is distributed such that all the cores in a processor are busy before the load is distributed to the core of another processor. This saves energy by reducing the number of active processors and allowing the idle processors to go into a deeper C-state. Of course, setting it to 2 allows for more aggressive battery savings, albeit at the cost of a little more performance. As our device is always using both cores while screen is on, this will actually help to achieve battery savings similar to hotplugging, by not using the 2nd core as much. Change-Id: I3fcd8c5f79e81bb658fe3339b8e3611f4de634fa Signed-off-by: zwliew <zhaoweiliew@gmail.com>",08/02/2014 14:47:08,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_codina/commit/3cad9c560827825b560057a9fff434dbc83603ab,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_codina,,,,,
SyNtheticNightmar3,android_kernel_samsung_d2,sec_jack: Use power effecient workqueue The SEC jack detection power up work does not seem to be performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Luis Cruz <ljc2491@gmail.com>,08/02/2014 20:22:04,,DUPLICATE,https://github.com/SyNtheticNightmar3/android_kernel_samsung_d2/commit/3ff0621da152f6be32d9aee05fc4f905ef2500a5,,,,[VERIFY],,,EXISTS,,,,,,,,,,,,,SyNtheticNightmar3/android_kernel_samsung_d2,SyNtheticNightmar3,,,SyNtheticNightmar3,
pinkflozd,android_kernel_motorola_msm8226,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: poondog <markj338@gmail.com>",09/02/2014 01:37:48,,DUPLICATE,https://github.com/pinkflozd/android_kernel_motorola_msm8226/commit/e63ccc22f285044afdfd636ded00be4b5716696c,,,,,,,EXISTS,,,,,,,,,,,,,pinkflozd/android_kernel_motorola_msm8226,franciscofranco,,,pinkflozd,
TeamHorizon,platform_frameworks_base,"SystemUI: disable statusbar time refresh when screen off When screen is off, don't refresh the status bar to save power. When screen is on, refresh immediately for user experience. Change-Id: Ie250e20bab57c096a16886680a53263c635bf6f4",09/02/2014 02:42:59,,DUPLICATE,https://github.com/TeamHorizon/platform_frameworks_base/commit/87465567c4bff3e94395b0ece1e9b46608726509,,,,[VERIFY] [https://github.com/KitKatPurity/platform_frameworks_base/commit/9e7324ec59acd7812b02b173c9c7bea47c43061d],,[https://github.com/KitKatPurity/platform_frameworks_base/commit/9e7324ec59acd7812b02b173c9c7bea47c43061d],EXISTS,,,,,,,,,,,,,TeamHorizon/platform_frameworks_base,,,,pcarenza,
ForrestErickson,Railduino,Add Documentation for Bridge output Enable Next step is to turn off motor during exposure to save power.,09/02/2014 04:38:45,,FALSE-POSITIVE,https://github.com/ForrestErickson/Railduino/commit/3afd68a74484660e307eb8ab2a5ca36196659a8b,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,ForrestErickson/Railduino,ForrestErickson,,,ForrestErickson,
DerRomtester,android_kernel_samsung_aries,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",09/02/2014 16:39:24,,DUPLICATE,https://github.com/DerRomtester/android_kernel_samsung_aries/commit/8f0f9aaf39ae1560fa12f900780650d7e4a7ead2,,,,,,,EXISTS,,,,,,,,,,,,,DerRomtester/android_kernel_samsung_aries,Christopher83,,,DerRomtester,
OmniKang,android_packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. move preference settings into settings => battery settings Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04",09/02/2014 20:27:43,,RELATED,https://github.com/OmniKang/android_packages_apps_Settings/commit/099bba16ebe155bbcd99cb7edf6e2d0df98d390a,,,[DO NOT ANALYZE],[RELATED] [Add power saving option] [Partial commit] [Android] [DISCUSS][7d4d9cd7db68c429a527512b87ce92cd2fe5ff49] [bf8c01b9f4675a4b6e4d7e34ec6697e50f3d709c],[RELATED] [Add power saving option],[Add power saving option] [Partial commit] [Android] [DISCUSS] [7d4d9cd7db68c429a527512b87ce92cd2fe5ff49] [bf8c01b9f4675a4b6e4d7e34ec6697e50f3d709c],EXISTS,,,,,,,,,,,,,OmniKang/android_packages_apps_Settings,Squadzone,,,Der-Schubi,
OmniKang,android_frameworks_base,"[1/3] Base: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",09/02/2014 20:27:44,,RELATED,https://github.com/OmniKang/android_frameworks_base/commit/7d4d9cd7db68c429a527512b87ce92cd2fe5ff49,,,[DO NOT ANALYZE],[RELATED] [Add power saving option] [Partial commit] [Android] [099bba16ebe155bbcd99cb7edf6e2d0df98d390a] [DISCUSS] [bf8c01b9f4675a4b6e4d7e34ec6697e50f3d709c],[RELATED] [Add power saving option],[Add power saving option] [Partial commit] [Android] [099bba16ebe155bbcd99cb7edf6e2d0df98d390a] [DISCUSS] [bf8c01b9f4675a4b6e4d7e34ec6697e50f3d709c],EXISTS,,,,,,,,,,,,,OmniKang/android_frameworks_base,Squadzone,,,Der-Schubi,
OmniKang,android_packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6",09/02/2014 20:27:44,,RELATED,https://github.com/OmniKang/android_packages_apps_OmniGears/commit/bf8c01b9f4675a4b6e4d7e34ec6697e50f3d709c,,,[DO NOT ANALYZE],[RELATED] [Add power saving option] [Partial commit] [Android] [7d4d9cd7db68c429a527512b87ce92cd2fe5ff49] [DISCUSS]  [099bba16ebe155bbcd99cb7edf6e2d0df98d390a],[RELATED] [Add power saving option],[Add power saving option] [Partial commit] [Android] [7d4d9cd7db68c429a527512b87ce92cd2fe5ff49] [DISCUSS] [099bba16ebe155bbcd99cb7edf6e2d0df98d390a],EXISTS,,,,,,,,,,,,,OmniKang/android_packages_apps_OmniGears,Squadzone,,,Der-Schubi,
westhouseproject,models,Abstracted the creation of a new energy consumer model.,10/02/2014 03:05:44,,FALSE-POSITIVE,https://github.com/westhouseproject/models/commit/2af3ff57632195d17ebfe11f76ed89d0f9d777ab,,,[FALSE-POSITIVE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,westhouseproject/models,shovon,,,shovon,
zwliew,android_kernel_samsung_codina,"ARM: add support for bit sliced AES using NEON instructions Bit sliced AES gives around 45% speedup on Cortex-A15 for encryption and around 25% for decryption. This implementation of the AES algorithm does not rely on any lookup tables so it is believed to be invulnerable to cache timing attacks. This algorithm processes up to 8 blocks in parallel in constant time. This means that it is not usable by chaining modes that are strictly sequential in nature, such as CBC encryption. CBC decryption, however, can benefit from this implementation and runs about 25% faster. The other chaining modes implemented in this module, XTS and CTR, can execute fully in parallel in both directions. The core code has been adopted from the OpenSSL project (in collaboration with the original author, on cc). For ease of maintenance, this version is identical to the upstream OpenSSL code, i.e., all modifications that were required to make it suitable for inclusion into the kernel have been made upstream. The original can be found here: http://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=6f6a6130 Note to integrators: While this implementation is significantly faster than the existing table based ones (generic or ARM asm), especially in CTR mode, the effects on power efficiency are unclear as of yet. This code does fundamentally more work, by calculating values that the table based code obtains by a simple lookup; only by doing all of that work in a SIMD fashion, it manages to perform better. Cc: Andy Polyakov <appro@openssl.org> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org> Change-Id: I21fbd18886db67bf5c421c965ab86715e94398f4 Signed-off-by: zwliew <zhaoweiliew@gmail.com>",10/02/2014 12:34:54,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_codina/commit/fb7f4a2d3c3f3a8de6d6e041383b9482e8b219ae,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_codina,,,,,
gerolab,gerolab-android-sdk,Update gero-lab-android-sdk-manual.md power consumption section addon,10/02/2014 17:18:01,,FALSE-POSITIVE,https://github.com/gerolab/gerolab-android-sdk/commit/cf87f7e49deca653045a4245e22b9090e6ce6302,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,gerolab/gerolab-android-sdk,dlukashev,,,dlukashev,
DerRomtester,android_kernel_samsung_aries,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",10/02/2014 20:36:45,,DUPLICATE,https://github.com/DerRomtester/android_kernel_samsung_aries/commit/e96f16b89f75ae72a5f17e7a09bcf00025d5353b,,,,,,,EXISTS,,,,,,,,,,,,,DerRomtester/android_kernel_samsung_aries,Christopher83,,,DerRomtester,
LSTS,dune,Config: lauv-xplore-1: Updated power consumption profiles.,11/02/2014 11:18:00,,FALSE-POSITIVE,https://github.com/LSTS/dune/commit/b27ab77d4d9d7add2dec7abc8ada9a5d94223a55,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,LSTS/dune,pdcalado,,,pdcalado,
zwliew,android_kernel_samsung_golden,"sched: set sched_mc_power_savings to 2 This tunable provides serious power saving improvements similar to the power savings of hotplugging cores. Since we are using interactive governor by default, we're always using 2 cores at any time. Thus, we can benefit from this as this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: zwliew <zhaoweiliew@gmail.com>",11/02/2014 14:06:21,,NOT-FOUND,https://github.com/zwliew/android_kernel_samsung_golden/commit/251ec8e29eeefb8af8353f2d5be13b2b9f81aed8,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_kernel_samsung_golden,,,,,
Ntemis,OptimusPlay,"time: RCU permitted to stop idle entry via softirq RCU needs to be able to use softirq to stop idle entry in order to be able to drain RCU callbacks from the current CPU, which in turn enables faster entry into dyntick-idle mode, which in turn reduces power consumption. This commit therefore silences the error message that is sometimes produced when the going-idle CPU suddenly finds that it has an RCU_SOFTIRQ to process. Signed-off-by: Paul E. McKenney <paul.mckenney@linaro.org> backported by faux123 from Linux 3.5+ to Linux 3.0",11/02/2014 18:26:01,,DUPLICATE,https://github.com/Ntemis/OptimusPlay/commit/e132f714e63e97486e8ce6f5202586765466907a,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/OptimusPlay,faux123,,,Ntemis,
Ntemis,OptimusPlay,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",11/02/2014 19:02:35,,DUPLICATE,https://github.com/Ntemis/OptimusPlay/commit/5dc0e006a98f9e411b3a29ee0d587a4a891956e0,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/OptimusPlay,longman88,,,Ntemis,
Ntemis,OptimusPlay,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for grouper kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",11/02/2014 19:02:52,,DUPLICATE,https://github.com/Ntemis/OptimusPlay/commit/432051a4530a4decc8d34c5402b62b28df1cca6e,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/OptimusPlay,faux123,,,Ntemis,
jaketesler,TheSenseBot,"added EEPROM infrastructure, changed variable configurations, added debug for global variables in setup, modified power save exchange, added macros, adjusted battery, fixed battery comments, cleaned up code for IMU sensor data output, moved code for debug if statements to identify debug ifs versus actual ifs, fixed more variable types, optimized led-lux brightness map (+added flag to retest with actual hardware later), fixed warning screen variables.",12/02/2014 09:13:46,,UNABLE-TO-CATEGORIZE,https://github.com/jaketesler/TheSenseBot/commit/a8f17a63986429e33ac6d7c35db68f5a5989e26e,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,jaketesler/TheSenseBot,jaketesler,,,jaketesler,
jaketesler,TheSenseBot,"added EEPROM infrastructure, changed variable configurations, added debug for global variables in setup, modified power save exchange, added macros, adjusted battery, fixed battery comments, cleaned up code for IMU sensor data output, moved code for debug if statements to identify debug ifs versus actual ifs, fixed more variable types, optimized led-lux brightness map (+added flag to retest with actual hardware later), fixed warning screen variables.",12/02/2014 09:14:37,,DUPLICATE,https://github.com/jaketesler/TheSenseBot/commit/b594f0c5a7a2faa2df129cf08d5b529159d68142,,,,,,,EXISTS,,,,,,,,,,,,,jaketesler/TheSenseBot,jaketesler,,,jaketesler,
jaketesler,TheSenseBot,"added EEPROM infrastructure, changed variable configurations, added debug for global variables in setup, modified power save exchange, added macros, adjusted battery, fixed battery comments, cleaned up code for IMU sensor data output, moved code for debug if statements to identify debug ifs versus actual ifs, fixed more variable types, optimized led-lux brightness map (+added flag to retest with actual hardware later), fixed warning screen variables.",12/02/2014 09:19:50,,DUPLICATE,https://github.com/jaketesler/TheSenseBot/commit/e23f63191cd07fadce21d68268c687434432da4d,,,,,,,EXISTS,,,,,,,,,,,,,jaketesler/TheSenseBot,jaketesler,,,jaketesler,
zwliew,Samsung_STE_Kernel,"sched: set sched_mc_power_savings to 2 The mc in the name of the sched_mc_power_savings parameter represents multi-core. This scheduler power saving feature corresponds to the /sys/devices/system/cpu/sched_mc_power_savings file. The default value of this parameter is 0, which does nothing. When it is set to 1, the scheduler tries to schedule processes on the least possible number of processors. In other words, the process load is distributed such that all the cores in a processor are busy before the load is distributed to the core of another processor. This saves energy by reducing the number of active processors and allowing the idle processors to go into a deeper C-state. Of course, setting it to 2 allows for more aggressive battery savings, albeit at the cost of a little more performance. As our device is always using both cores while screen is on, this will actually help to achieve battery savings similar to hotplugging, by not using the 2nd core as much. Change-Id: I4887f83ed4f63758e44ffd4d68d969dc9374123d Signed-off-by: zwliew <zhaoweiliew@gmail.com>",12/02/2014 10:04:09,,NOT-FOUND,https://github.com/zwliew/Samsung_STE_Kernel/commit/7b9e16ce1d209d792ab3176b294101edbae06d11,,,,[VERIFY] [NOT-FOUND],,[NOT-FOUND],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/Samsung_STE_Kernel,,,,,
camcory,platform_frameworks_base,"[1/3] Base: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationController.java",12/02/2014 22:32:31,,DUPLICATE,https://github.com/camcory/platform_frameworks_base/commit/d81f4b8040e92d3713b79c4a44f2273f385e04b8,,,,[VERIFY] [https://github.com/OmniKang/android_frameworks_base/commit/7d4d9cd7db68c429a527512b87ce92cd2fe5ff49],,[https://github.com/OmniKang/android_frameworks_base/commit/7d4d9cd7db68c429a527512b87ce92cd2fe5ff49],EXISTS,,,,,,,,,,,,,camcory/platform_frameworks_base,Squadzone,,,camcory,
camcory,packages_apps_androidx_settings,"[3/3] OmniGears: Battery Saver Mode Author: Yanuar Harry introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated",12/02/2014 23:41:12,,DUPLICATE,https://github.com/camcory/packages_apps_androidx_settings/commit/0af0a14dd1b3fce1a1b0314bef3e3aa2a4474863,,,,[VERIFY] [https://github.com/OmniKang/android_packages_apps_OmniGears/commit/bf8c01b9f4675a4b6e4d7e34ec6697e50f3d709c],,[https://github.com/OmniKang/android_packages_apps_OmniGears/commit/bf8c01b9f4675a4b6e4d7e34ec6697e50f3d709c],EXISTS,,,,,,,,,,,,,camcory/packages_apps_androidx_settings,camcory,,,camcory,
pinkflozd,android_kernel_motorola_msm8226,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary. Conflicts: include/linux/swap.h mm/swapfile.c",12/02/2014 23:48:07,,TRADEOFF,https://github.com/pinkflozd/android_kernel_motorola_msm8226/commit/de3c3b955f78e97ee0b1800ac0f5b271aff56934,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,[Increase default frequency],[Improve latency] [Improve responsiveness],,,,,Certain,Android,No,Kernel,KConfig,,pinkflozd/android_kernel_motorola_msm8226,Christopher83,Responsiveness,,pinkflozd,Kernel
lepisma,magpie,Adds sample chart for power consumption,13/02/2014 03:21:31,,FALSE-POSITIVE,https://github.com/lepisma/magpie/commit/0640e21c2bc38b5cbcf8a7d25d4abd28bacbad2d,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,lepisma/magpie,abhikandoi2000,,,abhikandoi2000,
lepisma,magpie,Working graph for power consumption,13/02/2014 03:50:12,,FALSE-POSITIVE,https://github.com/lepisma/magpie/commit/783be2c90df2eab5c0a6df801d788516d018ced3,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,lepisma/magpie,abhikandoi2000,,,abhikandoi2000,
spascal20,marsbot,Notion of energy added to the model. A simple and naive implementation provides a PoC and a demonstration of the way the energy consumption mecanism can work.,13/02/2014 03:55:12,,FALSE-POSITIVE,https://github.com/spascal20/marsbot/commit/6b464363dbd5eb1804567b68d2fb7ae130f09731,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Hardware energy] [Bots],[FALSE-POSITIVE],[Hardware energy] [Bots],EXISTS,,,,,,,,,,,,,spascal20/marsbot,,,,,
lepisma,magpie,Implements warning line for power consumption,13/02/2014 04:09:46,,FALSE-POSITIVE,https://github.com/lepisma/magpie/commit/8260bfac992eb48e76e61985240e027d055ddf3f,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,lepisma/magpie,abhikandoi2000,,,abhikandoi2000,
horn3t,PerformanceControl,"added agressive to multicore power saving, added hotplug control, gpu max. freq.",13/02/2014 22:22:55,,RELATED,https://github.com/horn3t/PerformanceControl/commit/cb3080e450973b1bd0d48adea9a20406fb0ecaf0,,,[DO NOT ANALYZE],[RELATED] [Too many potential changes] [DISCUSS],[?],[Too many potential changes] [DISCUSS],EXISTS,,,,,,,,,,,,,horn3t/PerformanceControl,horn3t,,,horn3t,
Insane-Coders,AdvancedDistributedSystems,Initial Proposal for AGILE Agile and CloudScale Integration to build a power efficient elastic resource scaling in Distributes Systems,14/02/2014 00:52:01,,FALSE-POSITIVE,https://github.com/Insane-Coders/AdvancedDistributedSystems/commit/3e79fdcd7ae493e984957076d0b26661a649895d,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,Insane-Coders/AdvancedDistributedSystems,bharathv-ncsu,,,bharathv-ncsu,
PowerCraft,API,added something to the energy consumer & producer,14/02/2014 13:38:54,,FALSE-POSITIVE,https://github.com/PowerCraft/API/commit/25de9156b9d6f8e3bb49f0e7bb73f1a200eeecf3,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game] [Minecraft],[FALSE-POSITIVE],[Game] [Minecraft],EXISTS,,,,,,,,,,,,,PowerCraft/API,XOR19,,,XOR19,
DerRomtester,android_kernel_samsung_aries,Add power saving state DEEP IDLE version 2. Conflicts: arch/arm/mach-s5pv210/Makefile drivers/misc/Makefile drivers/serial/samsung.c,14/02/2014 14:54:58,,SOFT-DUPLICATE,https://github.com/DerRomtester/android_kernel_samsung_aries/commit/959d1375c744e21bd853c8f51491889319cfc2d9,,,[DO NOT ANALYZE],[OK] [Add C-state] [Add deep idle state] [DUPLICATE] [Reverted],[?],[Add C-state] [Add deep idle state] [DUPLICATE] [Reverted],EXISTS,,,,,,[162],,,,,,,DerRomtester/android_kernel_samsung_aries,Ezekeel,,,DerRomtester,
pinkflozd,android_kernel_motorola_msm8226,arm/dt: 8610: Enable support for vdd min without phy retention Add device tree entry for enabling support for allowing vdd minimization without putting phy into retention. This will avoid power consumption due to leakage current seen on 8610 platform. CRs-Fixed: 585073 Change-Id: Ib593dcd0a94f3854535913118f5ef11948653283 Signed-off-by: Saket Saurabh <ssaurabh@codeaurora.org>,14/02/2014 20:35:43,,UNABLE-TO-CATEGORIZE,https://github.com/pinkflozd/android_kernel_motorola_msm8226/commit/37bec6454215cfab4b970b2128ae48b9e08ba64f,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,pinkflozd/android_kernel_motorola_msm8226,,,,pinkflozd,
LeroViten,PerformanceControl,"added agressive to multicore power saving, added hotplug control, gpu max. freq.",14/02/2014 23:01:31,,DUPLICATE,https://github.com/LeroViten/PerformanceControl/commit/cb3080e450973b1bd0d48adea9a20406fb0ecaf0,,,,,,,EXISTS,,,,,,,,,,,,,LeroViten/PerformanceControl,horn3t,,,horn3t,
GravityBox,GravityBox,"Smart Radio: don't take ""ignore while locked"" into account when ""power save when screen off"" is disabled",16/02/2014 08:06:01,,FALSE-POSITIVE,https://github.com/GravityBox/GravityBox/commit/48275329eaa3904400cf857dd4bb71dc2c398a43,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,GravityBox/GravityBox,C3C0,,,C3C0,
LinaroDroid,linaro_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/config.xml core/res/res/values/symbols.xml Signed-off-by: Marin Spajic <omgitzspajky@gmail.com>,16/02/2014 09:28:33,,NOT-FOUND,https://github.com/LinaroDroid/linaro_frameworks_base/commit/c001feb857c12f5a802f1fa8c923beef72e8083b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LinaroDroid/linaro_frameworks_base,,,,galaxyfreak,
burstlam,leanKernel,ondemandplus governor: remove adaptive timer_rate logic It is unlikely this gives any power savings and only add some ugly code :) Signed-off-by: Dan Trifan <jimsth@gmail.com>,16/02/2014 09:51:49,,TRADEOFF,https://github.com/burstlam/leanKernel/commit/4bfcac6cd2be96ef489aabee96301efe0789e111,,,[DO NOT ANALYZE],[TRADEOFF] [Remove ugly code],[TRADEOFF] [Remove ugly code],[Remove ugly code],EXISTS,[Remove adaptive timer logic] [Remove governor complex scaling logic],[Ugly code] [No power saving],,,,,Uncertain,Android,No,Driver,C,,burstlam/leanKernel,,No power saving,,burstlam,Driver cpufreq
Grarak,grakernel-tuna,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>",16/02/2014 10:44:30,,DUPLICATE,https://github.com/Grarak/grakernel-tuna/commit/fb756376880d6610e8d872aed1281dd954f04d8c,,,,[VERIFIED] [https://github.com/riverzhou/otter-omap-3/commit/8ef6b3c00b0bc811e9aae548e90e56902818efbe],,[https://github.com/riverzhou/otter-omap-3/commit/8ef6b3c00b0bc811e9aae548e90e56902818efbe],EXISTS,,,,,,,,,,,,,Grarak/grakernel-tuna,grygoriyS,,,Grarak,
ilya-v,grasp,"basic on/off functionality, no power consumption control",17/02/2014 00:12:20,,FALSE-POSITIVE,https://github.com/ilya-v/grasp/commit/dd7a0d8d13086f8bdda96fed327c81754bef3cff,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,ilya-v/grasp,ilya-v,,,ilya-v,
j1nx,Openlinux.Amlogic.M3,Disable wifi power saving,17/02/2014 09:31:35,,SOFT-DUPLICATE,https://github.com/j1nx/Openlinux.Amlogic.M3/commit/4de088821ed55652627d5168ec228b08306aa2af,,,[DO NOT ANALYZE],[RELATED] [Disable wifi power saving] [Disable power saving],[RELATED] [Disable wifi power saving] [Disable power saving],[Disable wifi power saving] [Disable power saving],EXISTS,,,,,,,,,,,,,j1nx/Openlinux.Amlogic.M3,,,,,
yseras,SGS4-3.13,TEST: WCD9310: Use power efficient workqueue Convert our WCD9310 codec to use the new power efficient workqueue offered by newer kernels.,17/02/2014 13:00:59,,OK,https://github.com/yseras/SGS4-3.13/commit/7618d681692c6ae1508bd981c7bc837b8f2bc334,,,[DO NOT ANALYZE],[OK] [User power efficient work queue] [Work queue] [Kernel],[OK] [User power efficient work queue],[User power efficient work queue] [Work queue] [Kernel],EXISTS,[Convert our WCD9310 codec to use the new power efficient workqueue],[power saving],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,TEST: WCD9310: Use power efficient workqueue Convert our WCD9310 codec to use the new power efficient workqueue offered by newer kernels.,yseras/SGS4-3.13,yseras,[Use power efficient library/device],,yseras,Kernel sound
haavardlian,UbiSolar,"@T73 @T71 Basic device and energy consumption database, wrapped in a ContentProvider.",17/02/2014 19:54:49,,FALSE-POSITIVE,https://github.com/haavardlian/UbiSolar/commit/cf371b0e1bceeb6369b4c7c9cbc9f81709318a73,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Android] [Expose energy throught provider],[FALSE-POSITIVE],[Android] [Expose energy throught provider],EXISTS,,,,,,,,,,,,,haavardlian/UbiSolar,perok,,,perok,
pinkflozd,android_kernel_motorola_msm8226,"mm: use up free swap space before reaching OOM kill Recently, Luigi reported there are lots of free swap space when OOM happens. It's easily reproduced on zram-over-swap, where many instance of memory hogs are running and laptop_mode is enabled. He said there was no problem when he disabled laptop_mode. The problem when I investigate problem is following as. Assumption for easy explanation: There are no page cache page in system because they all are already reclaimed. 1. try_to_free_pages disable may_writepage when laptop_mode is enabled. 2. shrink_inactive_list isolates victim pages from inactive anon lru list. 3. shrink_page_list adds them to swapcache via add_to_swap but it doesn't pageout because sc->may_writepage is 0 so the page is rotated back into inactive anon lru list. The add_to_swap made the page Dirty by SetPageDirty. 4. 3 couldn't reclaim any pages so do_try_to_free_pages increase priority and retry reclaim with higher priority. 5. shrink_inactlive_list try to isolate victim pages from inactive anon lru list but got failed because it try to isolate pages with ISOLATE_CLEAN mode but inactive anon lru list is full of dirty pages by 3 so it just returns without any reclaim progress. 6. do_try_to_free_pages doesn't set may_writepage due to zero total_scanned. Because sc->nr_scanned is increased by shrink_page_list but we don't call shrink_page_list in 5 due to short of isolated pages. Above loop is continued until OOM happens. The problem didn't happen before [1] was merged because old logic's isolatation in shrink_inactive_list was successful and tried to call shrink_page_list to pageout them but it still ends up failed to page out by may_writepage. But important point is that sc->nr_scanned was increased although we couldn't swap out them so do_try_to_free_pages could set may_writepages. Since commit f80c0673610e (""mm: zone_reclaim: make isolate_lru_page() filter-aware"") was introduced, it's not a good idea any more to depends on only the number of scanned pages for setting may_writepage. So this patch adds new trigger point of setting may_writepage as below DEF_PRIOIRTY - 2 which is used to show the significant memory pressure in VM so it's good fit for our purpose which would be better to lose power saving or clickety rather than OOM killing.",17/02/2014 23:35:15,,FALSE-POSITIVE,https://github.com/pinkflozd/android_kernel_motorola_msm8226/commit/cfab9e8d715b8f135200b779fa98ac32869da412,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,pinkflozd/android_kernel_motorola_msm8226,pinkflozd,,,pinkflozd,
NamelessRom,android_kernel_samsung_jf,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. tj: Updated config description and comments. Renamed CONFIG_WQ_POWER_EFFICIENT to CONFIG_WQ_POWER_EFFICIENT_DEFAULT. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit cee22a15052faa817e3ec8985a28154d3fabc7aa) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com> Change-Id: I30a41d04c69badc2ca2fa4dff98ddf88a2be36fd",18/02/2014 07:32:41,,RELATED,https://github.com/NamelessRom/android_kernel_samsung_jf/commit/c6701c95b8284ac74028a6fbd4e5a564397a2c03,,,[DO NOT ANALYZE],[RELATED] [Enable using power efficient work queue] [Android],[RELATED] [Enable using power efficient work queue],[Enable using power efficient work queue] [Android],EXISTS,,,,,,,,,,,,,NamelessRom/android_kernel_samsung_jf,Evisceration,,,Evisceration,
NamelessRom,android_kernel_samsung_jf,"block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Cc: Jens Axboe <axboe@kernel.dk> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit 695588f9454bdbc7c1a2fbb8a6bfdcfba6183348) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com> Change-Id: Ie1a34e614b70f04a83f3c7e8784625d26565b958",18/02/2014 07:34:54,,OK,https://github.com/NamelessRom/android_kernel_samsung_jf/commit/fb215502ab114ff7c1f1bac15d24feaf62bf3bf4,,,[DO NOT ANALYZE],[OK] [User power efficient work queue] [Work queue] [Kernel] [Android],[OK] [User power efficient work queue],[User power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,[Replace normal queues with power efficient workqueues],"[On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one.]",[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,"block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions.",NamelessRom/android_kernel_samsung_jf,,[Use power efficient library/device],,Evisceration,Kernel block
NamelessRom,android_kernel_samsung_jf,regulator: core: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Acked-by: Liam Girdwood <liam.r.girdwood@intel.com> (cherry picked from commit 070260f07c7daec311f2466eb9d1df475d5a46f8) Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com> Change-Id: I89069b83f6fb49382dbe0abeae0ed2a25d6ee1c0,18/02/2014 07:35:23,,OK,https://github.com/NamelessRom/android_kernel_samsung_jf/commit/01331255a8d9cd7ca884b5d58e2bce547cd9002d,,,[DO NOT ANALYZE],[OK] [User power efficient work queue] [Work queue] [Kernel] [Android],[OK] [User power efficient work queue],[User power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,[Use the power efficient workqueue for delayed powerdown],[delayed power downs are not timing or performance critical and waking up a core for them would defeat some of the point.],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,regulator: core: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point.,NamelessRom/android_kernel_samsung_jf,SyNtheticNightmar3,[Use power efficient library/device],,Evisceration,Driver
Hellybean,android_kernel_lge_hammerhead,cpufreq: Add Many Governors * Look below to see everything I added :) Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: InteractiveX CPU governor Modified version of interactive with sleep+wake code Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: OnDemandX CPU governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Lionheart CPU governor A brave and agile conservative-based governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: SmartAssV2 CPU governor A smart optimized governor based on OnDemand Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: LulzActive CPU governor A new interactive governor developed by Tegrak. For more information please visit: http://tegrak2x.blogspot.com/2011/11/lulzactive-governor-v2.html Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Adaptive CPU governor This driver adds a dynamic cpufreq policy governor designed for latency-sensitive workloads and also for demanding performance. This governor attempts to reduce the latency of clock increases so that the system is more responsive to interactive workloads in loweset steady-state but to reduce power consumption in middle operation level up will be done in step by step to prohibit system from going to max operation level. Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Hyper CPU governor A tweaked OnDemand based smart and smooth optimized governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: BrazilianWax CPU governor A slightly more agressive smart optimized governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Intellidemand CPU governor This is an 'ondemand' based CPU governor created by Faux123 (thanks to him for his awesome work) Signed-off-by: Chester Kener <Cl3Kener@gmail.com> Fix Signed-off-by: Chester Kener <Cl3Kener@gmail.com> Conflicts: drivers/cpufreq/cpufreq_intellidemand.c,18/02/2014 11:57:51,,DUPLICATE,https://github.com/Hellybean/android_kernel_lge_hammerhead/commit/7011e5fbdf22504c73e767cb6c23449c17d4ba9e,,,[DO NOT ANALYZE],[DUPLICATE] [eeb8b2073dafc5427601ab6ef962459c84681f33],[DUPLICATE],[eeb8b2073dafc5427601ab6ef962459c84681f33],EXISTS,,,,,,,,,,,,,Hellybean/android_kernel_lge_hammerhead,Cl3Kener,,,Cl3Kener,
anarkia1976,AK-xGenesis,"[LINARO] block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Cc: Jens Axboe <axboe@kernel.dk> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit 695588f9454bdbc7c1a2fbb8a6bfdcfba6183348) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com>",18/02/2014 14:08:37,,DUPLICATE,https://github.com/anarkia1976/AK-xGenesis/commit/672e8971525d4a1636eac8220370cc6be3af6981,,,,[VERIFIED] [https://github.com/NamelessRom/android_kernel_samsung_jf/commit/fb215502ab114ff7c1f1bac15d24feaf62bf3bf4],,[https://github.com/NamelessRom/android_kernel_samsung_jf/commit/fb215502ab114ff7c1f1bac15d24feaf62bf3bf4],EXISTS,,,,,,,,,,,,,anarkia1976/AK-xGenesis,,,,anarkia1976,
jakew02,android_kernel_lge_msm8974,"ARM: dts: msm: i2c: change clock rate to 19.2 MHz For standard requirement, I2C source speed of 50MHz causes high power usage, hence this patch change the clock rate to 19.2 MHz to save power. CRs-Fixed: 552956 Change-Id: Ifb17fb79062a390a19881d247a2ac0ca5cc55d80 Signed-off-by: Sana Venkat Raju <c_vsana@codeaurora.org>",18/02/2014 15:00:06,,NOT-FOUND,https://github.com/jakew02/android_kernel_lge_msm8974/commit/c7b1f62c69093ef9725f3b3ab5c61fdd2f844f83,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jakew02/android_kernel_lge_msm8974,,,,,
KitKatPurity,platform_frameworks_base,"SystemUI: disable statusbar time refresh when screen off When screen is off, don't refresh the status bar to save power. When screen is on, refresh immediately for user experience. Change-Id: Ie250e20bab57c096a16886680a53263c635bf6f4",19/02/2014 00:03:32,,DUPLICATE,https://github.com/KitKatPurity/platform_frameworks_base/commit/8705c8fb2b03e4a6d6296ab86ea97f5ce0eba54f,,,,,,,EXISTS,,,,,,,,,,,,,KitKatPurity/platform_frameworks_base,,,,AndroidRul3z,
KitKatPurity,platform_frameworks_base,"SystemUI: disable statusbar time refresh when screen off When screen is off, don't refresh the status bar to save power. When screen is on, refresh immediately for user experience. Change-Id: Ie250e20bab57c096a16886680a53263c635bf6f4",19/02/2014 14:50:44,,DUPLICATE,https://github.com/KitKatPurity/platform_frameworks_base/commit/b62b3a1a0099adeb9ca3aa039f981e677d0a5f3d,,,,,,,EXISTS,,,,,,,,,,,,,KitKatPurity/platform_frameworks_base,,,,AndroidRul3z,
1fish2,BBQTimer,"Battery power savings * When the timer is paused, stop the app widget's Chronometer in case a not-displayed Chronometer still runs a timer. * Check if there are any app widgets before updating them all (on start/stop/reset). * Add implementation notes to README.md.",19/02/2014 20:01:13,,OK,https://github.com/1fish2/BBQTimer/commit/a840b3bc597c59a8983af8384699624f93c24959,,,[DO NOT ANALYZE],[OK] [Disable component not visible] [Disable component] [Only update if visible] [Android],[OK] [Disable component],[Disable component not visible] [Disable component] [Only update if visible] [Android],EXISTS,[Stop the Chronometer in case it'd use battery power even when not displayed.] [Check if there are any app widgets before updating them all],[power saving],[Only update UI element if visible] [Disable component not visible],[Disable UI] [Condition: not visible],,,Certain,Android,No,Application,Java,"Battery power savings * When the timer is paused, stop the app widget's Chronometer in case a not-displayed Chronometer still runs a timer. * Check if there are any app widgets before updating them all (on start/stop/reset).",1fish2/BBQTimer,1fish2,[Display and UI tuning],[not visible],1fish2,Application
jfbs,samsung-kernel-msm7x30,"block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Cc: Jens Axboe <axboe@kernel.dk> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit 695588f9454bdbc7c1a2fbb8a6bfdcfba6183348) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com>",19/02/2014 20:18:18,,NOT-FOUND,https://github.com/jfbs/samsung-kernel-msm7x30/commit/63006962023da4b1bf88985d9b3908ff29ac8a80,,,,[VERIFY] [NOT-FOUND],,[NOT-FOUND],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jfbs/samsung-kernel-msm7x30,,,,,
tace,jolla2gether,Power consumption handling for Harbour acceptance,20/02/2014 21:26:33,,FALSE-POSITIVE,https://github.com/tace/jolla2gether/commit/f7f26843a56dcb058fd71b0706c64222a3d4b393,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,tace/jolla2gether,tace,,,tace,
metalspring,android_frameworks_base,"[1/3] Base: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",20/02/2014 21:45:33,,DUPLICATE,https://github.com/metalspring/android_frameworks_base/commit/97b3c2258bffdf1bacb6c6f0347a4fc6f445c9a4,,,,,,,EXISTS,,,,,,,,,,,,,metalspring/android_frameworks_base,Squadzone,,,metalspring,
metalspring,android_frameworks_base,"[1/3] Base: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",20/02/2014 22:00:23,,DUPLICATE,https://github.com/metalspring/android_frameworks_base/commit/cd296b6318de7dc4b297f959320b9ae7bac8da05,,,,[VERIFY] [https://github.com/OmniKang/android_frameworks_base/commit/7d4d9cd7db68c429a527512b87ce92cd2fe5ff49],,[https://github.com/OmniKang/android_frameworks_base/commit/7d4d9cd7db68c429a527512b87ce92cd2fe5ff49],EXISTS,,,,,,,,,,,,,metalspring/android_frameworks_base,Squadzone,,,metalspring,
metalspring,android_packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. move preference settings into settings => battery settings Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04",20/02/2014 22:08:07,,DUPLICATE,https://github.com/metalspring/android_packages_apps_Settings/commit/0f4040795f0acaece53078b30c16e6fc4b1c5a21,,,,,,,EXISTS,,,,,,,,,,,,,metalspring/android_packages_apps_Settings,Squadzone,,,metalspring,
metalspring,android_packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. move preference settings into settings => battery settings Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04",20/02/2014 22:14:54,,DUPLICATE,https://github.com/metalspring/android_packages_apps_Settings/commit/d1d61a5dbac7202bdd9551b403cb86dc0aadd8bb,,,,[VERIFY] [https://github.com/OmniKang/android_packages_apps_Settings/commit/099bba16ebe155bbcd99cb7edf6e2d0df98d390a],,[https://github.com/OmniKang/android_packages_apps_Settings/commit/099bba16ebe155bbcd99cb7edf6e2d0df98d390a],EXISTS,,,,,,,,,,,,,metalspring/android_packages_apps_Settings,Squadzone,,,metalspring,
metalspring,android_packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml",20/02/2014 22:15:30,,NOT-FOUND,https://github.com/metalspring/android_packages_apps_OmniGears/commit/b6febc2a875ebd2030ede8dad364d1bb603063f4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,metalspring/android_packages_apps_OmniGears,,,,,
metalspring,android_packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build 16. add support more Network Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6",20/02/2014 22:37:10,,NOT-FOUND,https://github.com/metalspring/android_packages_apps_OmniGears/commit/efb344489bc905185faa0301c486b1ab6ac9ca8b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,metalspring/android_packages_apps_OmniGears,,,,,
CyanogenMod,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67,21/02/2014 02:39:39,,DUPLICATE,https://github.com/CyanogenMod/android_frameworks_base/commit/71421b15237644fa538365a184a07ad1a83fee22,,,,[VERIFY] [Original not found],,[Original not found],EXISTS,,,,,,,,,,,,,CyanogenMod/android_frameworks_base,,,,cyanogen,
CarbonDev,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67,21/02/2014 03:24:46,,DUPLICATE,https://github.com/CarbonDev/android_frameworks_base/commit/7e2175d8d3f26328b8728b31e2c7c500367a75d8,,,,,,,EXISTS,,,,,,,,,,,,,CarbonDev/android_frameworks_base,,,,winner00,
gpestana,thesis,On understanding the Energy Consumption of ARM-based Multicore Servers edit,21/02/2014 08:26:53,,FALSE-POSITIVE,https://github.com/gpestana/articles-digests/commit/3fff0f823bb090a5d8de5053c7f59f2dd509629c,https://github.com/gpestana/thesis/commit/3fff0f823bb090a5d8de5053c7f59f2dd509629c,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,gpestana/thesis,,,,,
mkurek,ralph_pricing,plugin based on class fixed; power consumpion tests updated,21/02/2014 08:33:53,,FALSE-POSITIVE,https://github.com/mkurek/ralph_pricing/commit/00fa49641f38163949b293e6a4f62994cc44cf5b,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,mkurek/ralph_pricing,mkurek,,,mkurek,
PAC-man,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67,21/02/2014 08:55:08,,NOT-FOUND,https://github.com/PAC-man/android_frameworks_base/commit/b5d18ccf8ac27ef882d8220487c73c6986982d8f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,PAC-man/android_frameworks_base,,,,,
KylinMod,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67,21/02/2014 10:41:11,,DUPLICATE,https://github.com/KylinMod/android_frameworks_base/commit/71421b15237644fa538365a184a07ad1a83fee22,,,,,,,EXISTS,,,,,,,,,,,,,KylinMod/android_frameworks_base,,,,cyanogen,
thogoh,light-sensity-morse-throwie,Update FireFly-V0.3 adding Power Consumption Sleep Time (4.5uA / and active with LED on ~7.1mA),21/02/2014 12:48:23,,FALSE-POSITIVE,https://github.com/thogoh/light-sensity-morse-throwie/commit/6ecc0678d77759476a244009261d6028c375c2fa,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,thogoh/light-sensity-morse-throwie,thogoh,,,thogoh,
thogoh,light-sensity-morse-throwie,Update and rename FireFly-V0.3 to FireFly-V0.4 some power consumption stuff and edit some typos,21/02/2014 13:23:57,,FALSE-POSITIVE,https://github.com/thogoh/light-sensity-morse-throwie/commit/c40664bca9aa0d739522f7cd364a124164fbda0d,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,thogoh/light-sensity-morse-throwie,thogoh,,,thogoh,
invisiblek,caf_kernel_msm,"msm: cpr-regulator: add support for virtual corner based quotient scaling The current cpr-regulator driver implementation uses the same CPR target quotient, which is read from a fuse, for all CPU frequencies handled by a given voltage corner. This results in unnecessary additional power consumption when operating the CPU at one of the lower frequencies handled by one voltage corner. Hence change the driver to adjust the CPR quotient value according to the virtual corner corresponding to the CPU frequency. CRs-Fixed: 583719 Change-Id: Ia95688b8c6e88d14da1ac9311d73148802105d0a Signed-off-by: Ke Liu <keliu@codeaurora.org>",21/02/2014 14:03:15,,UNABLE-TO-CATEGORIZE,https://github.com/invisiblek/caf_kernel_msm/commit/43ed5863f41464f6ec6513d0165b359742654147,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,invisiblek/caf_kernel_msm,,,,,
NamelessRom,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67,21/02/2014 16:16:13,,DUPLICATE,https://github.com/NamelessRom/android_frameworks_base/commit/bcf3f3261ac99571add653a66acc84dc838ed1d5,,,,,,,EXISTS,,,,,,,,,,,,,NamelessRom/android_frameworks_base,,,,,
metalspring,android_frameworks_base,"[1/3] Base: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode Need suggestion: Do i need to add CPU changing mode? xD Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",21/02/2014 17:17:48,,DUPLICATE,https://github.com/metalspring/android_frameworks_base/commit/5d875d238912ad85c8f51e162d3f3f6f409ca66f,,,,[VERIFY] [https://github.com/OmniKang/android_frameworks_base/commit/7d4d9cd7db68c429a527512b87ce92cd2fe5ff49],,[https://github.com/OmniKang/android_frameworks_base/commit/7d4d9cd7db68c429a527512b87ce92cd2fe5ff49],EXISTS,,,,,,,,,,,,,metalspring/android_frameworks_base,Squadzone,,,metalspring,
metalspring,android_packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. move preference settings into settings => battery settings Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04",21/02/2014 17:18:42,,DUPLICATE,https://github.com/metalspring/android_packages_apps_Settings/commit/4824b1d064e697d3c60b14e5b67507df47a0863c,,,,,,,EXISTS,,,,,,,,,,,,,metalspring/android_packages_apps_Settings,Squadzone,,,metalspring,
metalspring,android_packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build 16. add support more Network Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/values/custom_strings.xml",21/02/2014 17:26:37,,NOT-FOUND,https://github.com/metalspring/android_packages_apps_OmniGears/commit/1fefffc5914a599f0959751c4fbb4c1975f37a61,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,metalspring/android_packages_apps_OmniGears,,,,,
AICP,frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67,21/02/2014 17:40:01,,DUPLICATE,https://github.com/AICP/frameworks_base/commit/2abbeb820de8d729e9f0c85ce3c7d5c27cc4232a,,,,,,,EXISTS,,,,,,,,,,,,,AICP/frameworks_base,,,,LorDClockaN,
mdmower,proprietary_vendor_htc,"s4-common: update WCNSS_qcom_cfg.ini - Enable 5GH channel bonding - Support early beacon termination, allowing radio to be turned off after TIM IE to save power - Specify longer data inactivity timeout when in power save - Use OLPC - Small cache for scan results Change-Id: I427de4c4e5fa54c8f5914d262b4ab3ba96c0bc26",21/02/2014 18:06:00,,OK,https://github.com/mdmower/proprietary_vendor_htc/commit/f5c78128d7d654a68701f612aa70d857f205ad97,,,[DO NOT ANALYZE],[RELATED] [Add inactivity timeout] [Add timeout],[RELATED] [Disable Component],[Add inactivity timeout] [Add timeout] [Disable Component],EXISTS,"Support early beacon termination, allowing radio to be turned off after TIM IE to save power",save power,,[Enable power saving feature],,,Certain,?,No,OS,ini,,mdmower/proprietary_vendor_htc,mdmower,[Use power efficient library/device],,mdmower,Firmware
mdmower,proprietary_vendor_htc,"s4-common: update WCNSS_qcom_cfg.ini - Enable 5GHz channel bonding - Support early beacon termination, allowing radio to be turned off after TIM IE to save power - Specify longer data inactivity timeout when in power save - Use OLPC - Small cache for scan results Change-Id: I427de4c4e5fa54c8f5914d262b4ab3ba96c0bc26",21/02/2014 18:06:35,,DUPLICATE,https://github.com/mdmower/proprietary_vendor_htc/commit/e716c8d0d4f62b0d0cee121b01c7a077cfa7462f,,,,[VERIFIED] [https://github.com/mdmower/proprietary_vendor_htc/commit/f5c78128d7d654a68701f612aa70d857f205ad97],,[https://github.com/mdmower/proprietary_vendor_htc/commit/f5c78128d7d654a68701f612aa70d857f205ad97],EXISTS,,,,,,,,,,,,,mdmower/proprietary_vendor_htc,mdmower,,,mdmower,
mdmower,proprietary_vendor_htc,"s4-common: update WCNSS_qcom_cfg.ini - Enable 5GHz channel bonding - Support early beacon termination, allowing radio to be turned off after TIM IE to save power - Specify longer data inactivity timeout when in power save - Use CLPC/SCPC - Small cache for scan results Change-Id: I427de4c4e5fa54c8f5914d262b4ab3ba96c0bc26",21/02/2014 18:07:19,,DUPLICATE,https://github.com/mdmower/proprietary_vendor_htc/commit/d5ba1b1d946aab10d664abc1424bf23bbe23214a,,,,[VERIFY] [https://github.com/mdmower/proprietary_vendor_htc/commit/f5c78128d7d654a68701f612aa70d857f205ad97],,[https://github.com/mdmower/proprietary_vendor_htc/commit/f5c78128d7d654a68701f612aa70d857f205ad97],EXISTS,,,,,,,,,,,,,mdmower/proprietary_vendor_htc,mdmower,,,mdmower,
Grarak,grakernel-n1,synapse: add multicore power saving and intelliplug Signed-off-by: Willi Ye <williye97@gmail.com>,21/02/2014 19:36:23,,FALSE-POSITIVE,https://github.com/Grarak/grakernel-n1/commit/65069913e82bbca3a48e79f6e4ea99c31812aae1,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,Grarak/grakernel-n1,Grarak,,,Grarak,
AOSPAL,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/config.xml core/res/res/values/symbols.xml,21/02/2014 23:24:00,,NOT-FOUND,https://github.com/AOSPAL/android_frameworks_base/commit/a93243f55958af19cd52d83ace81aaa8e5480e63,,,,[VERIFY] [Original not found],,[Original not found],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_frameworks_base,,,,,
finger563,vac2014,updated readme for power saving,22/02/2014 05:49:40,,FALSE-POSITIVE,https://github.com/finger563/vac2014/commit/394057eab2d5a80f097ea8fd129557567c4a72b3,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,finger563/vac2014,finger563,,,finger563,
temasek,android_kernel_samsung_hlte,"sched: set sched_mc_power_savings to 2, which is the highest power sa��� ���ving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",22/02/2014 08:04:34,,DUPLICATE,https://github.com/temasek/android_kernel_samsung_hlte/commit/0afd4ab4b2fd34dcb2610fcb67d1a71c3f8d5f6c,,,,[VERIFIED] [https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],,[https://github.com/franciscofranco/hammerhead/commit/ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],EXISTS,,,,,,,,,,,,,temasek/android_kernel_samsung_hlte,franciscofranco,,,temasek,
ResurrectionRemix,frameworks_base_jellybean,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/symbols.xml,22/02/2014 09:12:42,,DUPLICATE,https://github.com/ResurrectionRemix/frameworks_base/commit/3844c2c47e3295ce6889c39bdb5d53eca6837cbe,https://github.com/ResurrectionRemix/frameworks_base_jellybean/commit/3844c2c47e3295ce6889c39bdb5d53eca6837cbe,,[DUPLICATE],[OK] [DUPLICATE] [c001feb857c12f5a802f1fa8c923beef72e8083b] [Usage motion accelerometer instead of generic] [Use specific sensor] [Use more efficient component],[OK] [DUPLICATE],[DUPLICATE] [c001feb857c12f5a802f1fa8c923beef72e8083b] [Usage motion accelerometer instead of generic] [Use specific sensor] [Use more efficient component],EXISTS,,,,,,,,,,,,,ResurrectionRemix/frameworks_base_jellybean,,,,,
Lens-F,Lemur_kernel,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: poondog <markj338@gmail.com>",22/02/2014 10:26:43,,DUPLICATE,https://github.com/Lens-F/Lemur_kernel/commit/2e745e37f714c95b95b4834fb154c3c5219d28d5,https://github.com/talnoah/Lemur_kernel/commit/2e745e37f714c95b95b4834fb154c3c5219d28d5,,,,,,EXISTS,,,,,,,,,,,,,Lens-F/Lemur_kernel,franciscofranco,,,Lens-F,
KitKatPurity,platform_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67,22/02/2014 10:26:47,,DUPLICATE,https://github.com/KitKatPurity/platform_frameworks_base/commit/6b92a7b80925dd9927aea288e3b8ddb34e765e5a,,,,,,,EXISTS,,,,,,,,,,,,,KitKatPurity/platform_frameworks_base,,,,AndroidRul3z,
KitKatPurity,platform_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Missed conf,22/02/2014 10:27:57,,DUPLICATE,https://github.com/KitKatPurity/platform_frameworks_base/commit/efae6f76c7fdd26892d03ee96e3a65d4927e8db3,,,,[VERIFIED] [https://github.com/CyanogenMod/android_frameworks_base/commit/71421b15237644fa538365a184a07ad1a83fee22],,[https://github.com/CyanogenMod/android_frameworks_base/commit/71421b15237644fa538365a184a07ad1a83fee22],EXISTS,,,,,,,,,,,,,KitKatPurity/platform_frameworks_base,,,,AndroidRul3z,
RAZR-K-Devs,android_kernel_motorola_omap4-common,omap: dpll: spyder: disable by default This is for testing the power consumption w/o dpll enabked,22/02/2014 10:34:29,,FALSE-POSITIVE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/343d79c9f52122cebd1097e9378a0a466f36d4e1,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Android],[FALSE-POSITIVE],[Android],EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,,,dtrail,
RemixPA,kk_android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/config.xml core/res/res/values/symbols.xml,22/02/2014 11:28:44,,DUPLICATE,https://github.com/RemixPA/kk_android_frameworks_base/commit/fcd95f3b45e0d69e12959e3158134d2cc8c50f00,,,,,,,EXISTS,,,,,,,,,,,,,RemixPA/kk_android_frameworks_base,,,,houst0nn,
Lens-F,Lemur_kernel,lemur_defconfig: enable power efficient workques by default,22/02/2014 22:22:18,,OK,https://github.com/Lens-F/Lemur_kernel/commit/89d347503ddf2c73c1ec6f3fbbd25bfa26368443,https://github.com/talnoah/Lemur_kernel/commit/89d347503ddf2c73c1ec6f3fbbd25bfa26368443,,[DO NOT ANALYZE],[?] [Investigate duplicate] [OK] [User power efficient work queue] [Work queue] [Kernel],[OK] [User power efficient work queue],[Investigate duplicate] [OK] [User power efficient work queue] [Work queue] [Kernel],EXISTS,[enable power efficient workques by default],[power saving],[User power efficient work queue by default] [Use power efficient work queue] [Work queue],[Use power efficient work queue] [Sub1: By default],,,Certain,Linux?,No,OS,Defconfig,lemur_defconfig: enable power efficient workques by default,Lens-F/Lemur_kernel,Lens-F,[Use power efficient library/device],,Lens-F,Kernel arch
Lens-F,Lemur_kernel,ASoC: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit e6058aaadcd473e5827720dc143af56aabbeecc7) Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com>,22/02/2014 22:24:59,,DUPLICATE,https://github.com/Lens-F/Lemur_kernel/commit/5c53544f0cf35a7d4e7d468278d2b5b89fd7f15e,https://github.com/talnoah/Lemur_kernel/commit/5c53544f0cf35a7d4e7d468278d2b5b89fd7f15e,,,,,,EXISTS,,,,,,,,,,,,,Lens-F/Lemur_kernel,SyNtheticNightmar3,,,Lens-F,
okko,node-sensortag-to-keen-io,"Get readings at specified intervals, disable sensor in between for power saving",23/02/2014 11:58:05,,OK,https://github.com/okko/node-sensortag-to-keen-io/commit/42826b8e6811535a15ca10c9a4efb7bf8dd763ce,,,[DO NOT ANALYZE],[OK] [Update on intervals] [Disable component] ,[OK] [Disable component] ,[Update on intervals] [Disable component] [ ],EXISTS,[disable sensor between reading intervals],[power saving],[Disable device] [Disable sensor between readings],[Disable device],,,Certain,Embedded,No,Application,Javascript,"Get readings at specified intervals, disable sensor in between for power saving",okko/node-sensortag-to-keen-io,okko,[Disabling feature/devices],,okko,Application
Lens-F,Lemur_kernel,"Revert ""sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life."" This reverts commit 2e745e37f714c95b95b4834fb154c3c5219d28d5.",23/02/2014 13:54:36,,REVERT,https://github.com/Lens-F/Lemur_kernel/commit/92511d3fd17c1dc6444c1b334f60c2999d9cbcc2,https://github.com/talnoah/Lemur_kernel/commit/92511d3fd17c1dc6444c1b334f60c2999d9cbcc2,,[DO NOT ANALYZE],[REVERT] [2e745e37f714c95b95b4834fb154c3c5219d28d5],[REVERT] [2e745e37f714c95b95b4834fb154c3c5219d28d5],[2e745e37f714c95b95b4834fb154c3c5219d28d5],EXISTS,"Revert ""sched: set sched_mc_power_savings to 2",,,,,,,,,,,,Lens-F/Lemur_kernel,Lens-F,,,Lens-F,
cristianomatos,android_frameworks_base,"[1/2] Base: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if Smart Radio disabled 9. Add Time Range to start Smart Radio 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java",23/02/2014 14:00:56,,DUPLICATE,https://github.com/cristianomatos/android_frameworks_base/commit/777b52fa3e76fb7f9e4d2fcb70ac467e6ac4b913,,,,[VERIFY],,,EXISTS,,,,,,,,,,,,,cristianomatos/android_frameworks_base,Squadzone,,,cristianomatos,
linuxmint,cinnamon-control-center,Added display power saving (turning off the screen) to power module,23/02/2014 17:51:15,,RELATED,https://github.com/linuxmint/cinnamon-control-center/commit/b1a3f3ff78ed6be63517c5ba06e5e22f91c415d7,,,[DO NOT ANALYZE],[RELATED] [Add power saving option],[RELATED] [Add power saving option],[Add power saving option],EXISTS,,,,,,,,,,,,,linuxmint/cinnamon-control-center,clefebvre,,,clefebvre,
Ntemis,android_kernel_bn_acclaim,"OMAP4: PM: Handle LPDDR CLK IO errata during suspend/idle There is a HW bug in CMD PHY which gives ISO signals as same for both PADn and PADp on differential IO pad, because of which IO leaks higher as pull controls are differential internally and pull value does not match A value. Though there is no functionality impact due to this bug, it is seen that by disabling the pulls there is a savings ~500uA in OSWR, but draws ~300uA more during OFF mode. To save power during both idle/suspend following approach taken: 1) Enable WA during boot-up. 2) Disable WA while attempting suspend and enable during resume. CDDS no: OMAP4460-1.0BUG00291 (OMAP official errata ID yet to be available). Change-Id: Ic39f17be50ff602c71e714b05af3811b35c1a67f Reported-by: Logan Lee <hklee@ti.com> Signed-off-by: Shashi Shekar B.S. <shashi.shekar@ti.com> Signed-off-by: Ambresh K <ambresh@ti.com>",23/02/2014 18:33:51,,DUPLICATE,https://github.com/Ntemis/android_kernel_bn_acclaim/commit/b4fe2392551dd266c61997931981425d5092dfda,,,,,,,EXISTS,,,,,,,,,,,,,Ntemis/android_kernel_bn_acclaim,Ambresh,,,Ntemis,
nims11xda,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/config.xml core/res/res/values/symbols.xml,24/02/2014 13:05:20,,DUPLICATE,https://github.com/nims11xda/android_frameworks_base/commit/fcd95f3b45e0d69e12959e3158134d2cc8c50f00,,,,,,,EXISTS,,,,,,,,,,,,,nims11xda/android_frameworks_base,,,,houst0nn,
g-oikonomou,contiki,cc2538: spi: Add enable and disable functions This makes it possible to reduce the power consumption when the SPI is unused. Signed-off-by: Beno��t Th��baudeau <benoit.thebaudeau@advansee.com>,24/02/2014 13:26:09,,DUPLICATE,https://github.com/g-oikonomou/contiki/commit/e8a8870d1dce4d5c978098715786802f586edf58,,,,,,,EXISTS,,,,,,,,,,,,,g-oikonomou/contiki,bthebaudeau,,,bthebaudeau,
mifl,android_kernel_qcom_msm,"msm: cpr-regulator: add support for virtual corner based quotient scaling The current cpr-regulator driver implementation uses the same CPR target quotient, which is read from a fuse, for all CPU frequencies handled by a given voltage corner. This results in unnecessary additional power consumption when operating the CPU at one of the lower frequencies handled by one voltage corner. Hence change the driver to adjust the CPR quotient value according to the virtual corner corresponding to the CPU frequency. CRs-Fixed: 583719 Change-Id: Ia95688b8c6e88d14da1ac9311d73148802105d0a Signed-off-by: Ke Liu <keliu@codeaurora.org>",24/02/2014 20:32:30,,DUPLICATE,https://github.com/mifl/android_kernel_qcom_msm/commit/43ed5863f41464f6ec6513d0165b359742654147,,,,,,,EXISTS,,,,,,,,,,,,,mifl/android_kernel_qcom_msm,,,,,
mifl,android_kernel_qcom_msm,msm: mdss: Unvote for axi bw and detach iommu for static screen. Unvote for AXI bandwidth and do iommu detach for DMA during static screen on command mode panels. Also make sure that dsi interrupts are disabled during this time. This is to make sure xo shutdown happens to save power. Change-Id: I9db00e1111a3581e9388f7042d491ab1ba7dffad Signed-off-by: Shivaraj Shetty <shivaraj@codeaurora.org>,24/02/2014 20:34:36,,UNABLE-TO-CATEGORIZE,https://github.com/mifl/android_kernel_qcom_msm/commit/0be30a2d10b2ce6d49226ea5c28ba84e8ad6f531,,,[DO NOT ANALYZE],[?],[?] [OK] [Bus Scaling],[OK] [Bus Scaling],EXISTS,,,,,,,Certain,Android,No,Driver,C,Unvote for AXI bandwidth and do iommu detach for DMA during static screen on command mode panels. Also make sure that dsi interrupts are disabled during this time. This is to make sure xo shutdown happens to save power.,mifl/android_kernel_qcom_msm,,,,,Driver
maxfu,android_kernel_samsung_exynos5410,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. tj: Updated config description and comments. Renamed CONFIG_WQ_POWER_EFFICIENT to CONFIG_WQ_POWER_EFFICIENT_DEFAULT.",25/02/2014 05:43:14,,DUPLICATE,https://github.com/maxfu/android_kernel_samsung_galaxy_s4/commit/afebae9a77948cecb15c977466e41b11ec947d27,https://github.com/maxfu/android_kernel_samsung_exynos5410/commit/afebae9a77948cecb15c977466e41b11ec947d27,,[DUPLICATE],[DUPLICATE] [c6701c95b8284ac74028a6fbd4e5a564397a2c03],[DUPLICATE],[c6701c95b8284ac74028a6fbd4e5a564397a2c03],EXISTS,,,,,,,,,,,,,maxfu/android_kernel_samsung_exynos5410,,,,,
codefireXperiment,proprietary_vendor_htc,"s4-common: update WCNSS_qcom_cfg.ini - Enable 5GHz channel bonding - Support early beacon termination, allowing radio to be turned off after TIM IE to save power - Specify longer data inactivity timeout when in power save - Use CLPC/SCPC - Small cache for scan results Change-Id: I427de4c4e5fa54c8f5914d262b4ab3ba96c0bc26",26/02/2014 03:09:47,,NOT-FOUND,https://github.com/codefireXperiment/proprietary_vendor_htc/commit/e4b60f62fd0cb24ba3e6a4e1512a2dce954918e1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,codefireXperiment/proprietary_vendor_htc,mdmower,,,jrior001,
LordOfNothing10,Power-Score-Save,Create power save score.sma,26/02/2014 08:34:49,,NOT-FOUND,https://github.com/LordOfNothing10/Power-Score-Save/commit/3da26c1580983dc6e03be5c79b6472d8fbed070b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LordOfNothing10/Power-Score-Save,,,,,
ron064,APP_MSG,"Added the SNIFF_INTERVAL_REDUCED SNIFF_INTERVAL_REDUCED reduces the error significantly, but increase power consumption",26/02/2014 13:33:39,,TRADEOFF,https://github.com/ron064/APP_MSG/commit/c17d1cea262fbd953c6601d8ebfe88e02414b92c,,,[DO NOT ANALYZE],[TRADEOFF] [Reduce errors],[TRADEOFF] [Reduce errors],[Reduce errors],EXISTS,[Reduce low power mode interval],[Reduce errors],,,,,Certain,Pebble,Yes ?,Application,C,,ron064/APP_MSG,ron064,Correctness,,ron064,Application
NoesisEnergy,bootstrap,BZ-10898: Fix issue with recalculating tootal energy savings,26/02/2014 16:02:42,,NOT-FOUND,https://github.com/NoesisEnergy/bootstrap/commit/6ce8dbfddb75e7e2aed287e94f728754e9d33e02,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,NoesisEnergy/bootstrap,,,,,
LSTS,dune,Programs: dune-fetch-fuel.py: New script for fetching power consumption profiles from Google spreadsheet.,26/02/2014 16:21:01,,FALSE-POSITIVE,https://github.com/LSTS/dune/commit/f8127d8f9afa547a87a1befac28b974e38abe3f4,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,LSTS/dune,pdcalado,,,pdcalado,
mrg666,android_kernel_mako,"qseecom: Add clk gating Curerntly the CE clk is enabled during the probe function and left enabled, resulting in high power consumption when there is no crypto operation in progress. To reduce power, CE clk is only enabled on a need basis. Remove clk enabling from probe function. Added support to enable/disable clk on need basis only (on client's request) and when loading images. Change-Id: I4d56f783903c0875c4ad305a6cebc42e8db8147f Signed-off-by: Mona Hossain <mhossain@codeaurora.org>",26/02/2014 16:58:52,,OK,https://github.com/mrg666/android_kernel_mako/commit/b7329d54526868ee2ca917dad81a9720c369d41d,,,[DO NOT ANALYZE],[OK] [Disable CE clk] [Disable component] [Android],[OK] [Disable component],[Disable CE clk] [Disable component] [Android],EXISTS,[Only enable CE clock on a need basis],[CE clk is enabled by default and left on even when no crypto operation is in progress],[Disable CE clock] [Disable component] [Disable clock],[Disable device] [Sub1: By default],,,Certain,Android,Yes,OS,C,"qseecom: Add clk gating Curerntly the CE clk is enabled during the probe function and left enabled, resulting in high power consumption when there is no crypto operation in progress. To reduce power, CE clk is only enabled on a need basis. Remove clk enabling from probe function. Added support to enable/disable clk on need basis only (on client's request) and when loading images.",mrg666/android_kernel_mako,mrg666,[Energy bug],,mrg666,Driver
ValidusAOSP,frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/symbols.xml,27/02/2014 01:51:47,,NOT-FOUND,https://github.com/ValidusAOSP/frameworks_base/commit/26ce7cec10886a0d713a0fce5037018c1385286f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ValidusAOSP/frameworks_base,,,,Somber73,
Techix18,Project_Engine_Kernel,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",27/02/2014 12:14:45,,NOT-FOUND,https://github.com/Techix18/Project_Engine_Kernel/commit/00372fe17e3abb5d7b5320e5e964938845383843,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Techix18/Project_Engine_Kernel,,,,,
Krabappel2548,android_kernel_sony_msm8974,"driver: staging: prima: WLAN Driver Release 3.2.3.172 (0300ca8) 259e8f0 wlan: Vos asserts due to assoc rej in concurrency e47ea3e wlan: adding a new ini parameter to disable/enable AMSDU in AMPDU 4e447bf wlan: MIC attack detection failure fix ae07f19 Fix for STA does not pick the best Reg domain in 11d 99a614d Fix for Transmitted data rate not in supported rates 6e59cc9 Fix for Scan end request sent after Finish scan issue 2014909 wlan: Fix for Multicast filtering failure when NSoffload is enabled 8e360d3 wlan: Revert back changes setting the gLimRspReqd for stats requests 8e7fe9e Wlan: Revision 3.2.3.172 e2e09da wlan: Add feature capability check to the features using debugfs 6a0ad45 Non-zero dialog token of ADDBA req frame 20c9d40 wlan: PNO mode ssid kmsg printout unreadable bd7c00e wlan: Do not close host driver if debugfs initialization fails 0bc970b wlan: Static source code analysis fixes for HDD c6562df wlan : wmm : Enable UAPSD properly for all ACs with UAPSD mask 5fe1bd4 wlan: PMF connection state not initialized correctly 29cbe57 Fix for STA sends data packets only at 1Mbps 124e57e wlan : 11r : Reassoc Request with zero medium time in Tspec 17ef2a6 wlan: Enter download mode upon unexpected WDI response message. 5fd8371 wlan : To remove PAL memory wrapper in PE(5) 8f3583f SCAN-OFFLOAD: Adding separate SME queue for scan commands. da9c9bc wlan:Updated SAP-ACS algo to consider 4 interference channels b77d288 wlan: Add set MC rate IOCTL 6250ab1 Wlan: Enable/Disable dynamic split scan cbf6f38 Wlan: Revision 3.2.3.171 1e01a13 wlan: Fix for watchdog timer bark issue. 0271f9a TDLS : Enhance Link Establish Message to pass off channel info. b42ab18 wlan: Add traffic monitor on SAP/P2P-GO mode ini change 44536dd wlan: Add GO LINK MONITOR TIMEOUT config param. b0f066e Wlan: Revision 3.2.3.170 7f79f46 wlan: Remove support for deprecated api get/set countryrev 0833aa8 feature: Implement embedded template in NV 2994d70 Wlan: Revision 3.2.3.169 4e8f00b wlan: FTM 2nd time start fail fix 4a931d2 wlan : wmm : Reflect the params of AddTspec response in HDD/SME 4ece93e wlan: enable Low Power Heart Beat feature 2bf7b4f wlan: Fix for IBSS Peer coalescing if returns before HB timeout bbd7540 Convert the operating DFS channel to passive 6eec46e wlan: Add SNR monitoring support(2) a9a5c70 wlan: Return success even if timer not runnning cdaf972 wlan: Add more debug log for NS offload feature d5889fa wlan: In SoftAP mode, deauth a STA only if previous deauth is not pending 0827c8e wlan: update sched_scan_results after cfg80211 resumed 2492683 wlan: Reduce log level in TL when TID is invalid and default is used b18a97f wlan: Return success while stoping sched scan. 69254d6 Wlan: Revision 3.2.3.168 0417700 wlan: Update APIs for 3.10 kernel a51e484 MAC:No need to set the gLimRspReqd for stats requests. a12de96 CLD: No need to check for gLimRspReqd while sending scan complete. 39f5e0b wlan: gFixedRate range extended for HT40 6ed07b7 wlan: panic on receiving a BIG data packet ed2f713 wlan: Revision 3.2.3.167 5d396d4 wlan : wmm : Enabling UAPSD when service interval is set to 0 298ce08 wlan: restore filter setting on resume aaa3cff wlan: Dump WCNSS registers upon SSR timer expiry f0b863c Wlan: Revision 3.2.3.166 7e5dbec wlan: Add missed feature enable flag f042e47 wlan: Correcting timeout value for event driver_crda_req. fe270a1 wlan: Add SNR monitoring support dd7d8da wlan: Add debugfs interface support for WoWL feature 65aeb68 Wlan: Revision 3.2.3.165 1a7c73d wlan: Fix a bug in deleting WoWL patterns 365933a wlan: Add Periodic TX Packet Offload feature through debugfs cf955c4 wlan: Add HAL API for Periodic TX Packet Offload feature 5571644 wlan : wmm : Remove undesired VOS ASSERT in Add Tspec Response 117b2c6 wlan: Regulatory Domain Update for AUSTRALIA. 936663c Enable log to get host & firmware capability 9622ae2 wlan: Revision 3.2.3.164 1c763b2 wlan: Fix RX low resource recovery mechanism 1328907 Fix the issue with active probe request packet on DFS channel c1d2ba5 wlan: Revision 3.2.3.163 b19f463 wlan:11r:country code setting during roaming 1819073 wlan: Don't send RSO START-REASON_CONNECT when FW already has one 0d4ac3d wlan: Revision 3.2.3.162 8a2e5da wlan: Remove ""isMcAddrListFilter"" INI param f96ce95 wlan:Dump Rx/Tx management frames 6e4ec6e wlan: Add debugfs interface support for WoWL feature 5ce9ec8 wlan: Fix check for whether PMF (802.11w) is enabled 744d01c wlan:CCX:DUT TPC value is above AP's Max Tx power 01935e5 wlan: Updating dwelltime in run time. 013be4f Wlan: Revison 3.2.3.161 54cb1b1 wlan:Delete STA entry from LIM hash table b3e1dbd wlan: Make FW rssi monitoring config independent of roaming 1777183 wlan: Updating dwelltime in run time. 61a8e89 wlan: Add ini param to control antenna diversity 86d50bf wlan: POSTASSOC link set after successful Reassociation a605fd9 Wlan: Revision 3.2.3.160 99884f6 Feature request for create logging for Join,auth, and assoc failure 921f24f wlan: Check for adapter magic in soft ap callback 93d3b5f wlan: dump DXE registers on ERR interrupt 2a74fd0 Wlan: Revision 3.2.3.159 9a3ec57 TDLS frames include vhtCap IE only if hardware supports 11ac 8b26369 Fix for the assert in hdd_rx_packet_cbk 1ed5a13 wlan : Remove unwanted duplicate call to limSetLinkState ca5f2c0 wlan : wmm : Add support to clear WMM status with adapter 6cf6720 Wlan: Revision 3.2.3.158 6a9d291 wlan:Drop duplicate association request at LIM d4a4376 Fix for making TDLS max peer count independent of IBSS 3ef397d SCAN-OFFLOAD: Allow the scan request in power save mode. 0cb4026 wlan : rrm : Set Max TX power value in Link Measurement report 1c65590 wlan : rrm : Passive Scan with Beacon Report Request a34aa7e wlan: Enable enhanced ptt_socket_app feature 96d7734 wlan: IBSS HeartBeat offload. 7b98420 wlan: Integration of IBSS HeartBeat offload changes from WCNSS (RIVA) 0e49608 Wlan: Revision 3.2.3.157B b2fcae2 wlan : To remove PAL memory wrapper in PE(8) 0dea29e wlan : To remove PAL timer wrapper in SME 8a78822 wlan: give correct BSSID for set max TX power command 2d24a3c wlan : Featurising pal mem and timer API's 00bc913 wlan: Low Power Heartbeat feature 9a0e805 wlan: Revision 3.2.3.157A 115a30c wlan: Fixed the compilation errors when enabling BUILD_DIAG_VERSION 4433e88 wlan: Revision 3.2.3.157 f2171b4 wlan : To remove PAL memory wrapper in PE(3) 9765ef3 wlan : To remove PAL memory wrapper in PE(2) 35ae3ea wlan: Add a new parameter for the new FlexConnect feature 4861675 wlan: Add a new parameter in Hal API for the new FlexConnect feature fe1d994 wlan : To remove PAL memory wrapper in PE(6) 08d550c wlan : To remove PAL memory wrapper in PE(7) e9b0b11 wlan: Enable MAS by default aa1f134 wlan : To remove PAL memory API's 45bc5d3 wlan : To remove PAL memory wrapper in PE(4) 3bdb38d wlan : To remove PAL memory wrapper in PE(1) 3b1964a wlan: Revision 3.2.3.156 bbb3971 wlan: Add data stall DIAG LOG report 6ceac3b wlan: Enable diag version of driver 4b4be13 wlan: Fix for spectrum management bit in AddBss for SM disabled AP a047e75 wlan: fix for memory leak. 1aec2fc wlan: IBSS Peer Supported VHT channel width configuration (11AC) ab988d5 Fix for Invalid Channel list in RoamOffload Scan 64a3c5c wlan:SoftAP auto channel selection 0dd211d Removing unwanted flag from one of the structure in host driver b9e1eee wlan: Built-in in pronto WLAN driver support changes d0d30e9 wlan: Revision 3.2.3.155 17683bc Fix VOS ASSERT while unloading the driver. abe9efe Advertising proprietary IE (IBSS only) 029b043 Destroy the TDLS peer specific timers on a disconnect. c95d2e8 Enable log to get host & firmware capability 1586239 wlan: Revision 3.2.3.154 b979bf8 wlan: support active/passive scan selection via DRIVER command c48af4d WLAN: Fix for auth failure 867e986 wlan: Enable WLAN_NS_OFFLOAD feature flag in Kbuild f218a43 wlan:Removal of redundant code in SME dfdcd74 wlan: Avoid soft lockup crash 53e7559 wlan: Default to 11N mode if Fw doesn't support 11AC. 561e21d wlan: Revision 3.2.3.153 9e367d3 Setting HAL_LOG_DUMP_CMD_END value to 299. 181a663 wlan: Free pAddIEAssoc before rewrite it fb216a3 wrong roam scan state (wlan_sm.c) 21a2602 wlan: Fix Magic packet and pattern matching for Wowl 00d0c62 wlan: Revision 3.2.3.152 872d314 Initialize TDLS only for the STA or P2P_CLIENT mode. 1f58aae wlan: Increase limit on IE size to 255 bytes. 1d1134e wlan: supported rates generated based on the configured mode c9b8e26 Fix the memory leaks observed in static source code analysis f6859d4 wlan: False SSR and RIVA crash fix b48bc3c Add DS param IE in probe request frame for 2.4 GHz channel. c9071c2 Wlan: Revision 3.2.3.151 b705ea0 wlan: Protect cfg APIs during uninitialized access dd70ca8 wlan: Fix compilation error when BUILD_DIAG_VERSION is enabled. 3c46b8f WLAN : Extended iwpriv command 'getHostStates' df813dd wlan: Update Reg Domain for AUSTRALIA 0b37360 Crash due to mismatch of datatype of bssidx between host and firmware e8d4daf wlan: Error when using private wlan ioctls 'setMaxTxPower' e575169 wlan: ptt_socket_app enhance 56dfbbd wlan: Private IOCTL ""dataSnapshot"" for Data Path Dump State 1e3c8dc wlan: Reduce DXE dump log size 80d1e67 wlan: Revision 3.2.3.150 f7702fa Session was invalid which was causing the pointer dereferencing. 7565bf3 wlan: Removed unused cfg variables 99228d5 wlan: bss index field is introduced in rssi notification dbc4c6d Wlan: Revision 3.2.3.149 31f11ee wlan: Add private ioctl ""setTxMaxPower"" for STA 3e7d622 wlan: remove duplicate IF condition variable checks 32a3877 wlan: DTIM3 changed to DTIM1 after roaming 421d536 wlan: low throughput regression fix e8510fe Wlan: Revision 3.2.3.148 811a2f9 Implementation of FR-878 362304d wlan: don't allow get/set okc/ccx,if ccx/okc/11r all supported 9920000 Wlan: Revision 3.2.3.147 bf60ac2 Wlan: Configuration Knob to enable/disable adaptive rx drain d8bf8bf Wlan: Configuration Knob to enable/disable adaptive rx drain 33b0c3f wlan: Vacate DFS channel if there is no acivity within 10 sec. a97bf5b wlan: Fi ...",27/02/2014 13:59:17,,NOT-FOUND,https://github.com/Krabappel2548/android_kernel_sony_msm8974/commit/8df38a1ba3ca3918175bb674cc7cb44735a08924,,,,[NOT-FOUND],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Krabappel2548/android_kernel_sony_msm8974,Kali-,,,Krabappel2548,
linux4kix,linux-linaro-stable-mx6,arm: imx6qdl: Allow sdma to use iram add a phandle to the iram node so sdma can use iram to save power and reduce latency when playing back audio.,28/02/2014 08:37:43,,UNABLE-TO-CATEGORIZE,https://github.com/linux4kix/linux-linaro-stable-mx6/commit/a305f2d8f6b8c8125333e6f143508ea143758b89,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE] [Add phandle],[UNABLE-TO-CATEGORIZE],[Add phandle],EXISTS,,,,,,,,,,,,,linux4kix/linux-linaro-stable-mx6,linux4kix,,,linux4kix,
vrybas,dotfiles,"tmux: Don't update status line every second Changed to 60 second for energy saving, especially on Mavericks http://arstechnica.com/apple/2013/06/how-os-x-mavericks-works-its-power-saving-magic/",01/03/2014 04:06:38,,OK,https://github.com/vrybas/dotfiles/commit/05c8fe53829d6512ef25ae7ba4c9612be194ec5c,,,[OK] [Reduce update interval],[OK] [Reduce update interval],[OK] [REDUCE UPDATE INTERVAL],[Reduce update interval],EXISTS,[Increase status update interval],[power saving],[increase update interval],[Decrease UI refresh rate],,Trade accuracy for power,Certain,Personal config files?,No,Libraries and Utilities,Symlink,"tmux: Don't update status line every second Changed to 60 second for energy saving, especially on Mavericks",vrybas/dotfiles,vrybas,[Display and UI tuning],,vrybas,Script symlink
dzon4xx,Automatic-Home-projesct,NEW part of code to measure energy consumption Aded code that simulates energy counsumption counter. This is counterd by arduino and pushed into data base,01/03/2014 15:00:16,,FALSE-POSITIVE,https://github.com/dzon4xx/Automatic-Home-projesct/commit/1dbc71a7b155cd5b435729f5bbc1f1d218396fe9,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Hardware consumption],[FALSE-POSITIVE],[Hardware consumption],EXISTS,,,,,,,,,,,,,dzon4xx/Automatic-Home-projesct,dzon4xx,,,dzon4xx,
CyanogenMod,android_device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,01/03/2014 16:03:37,,FALSE-POSITIVE,https://github.com/CyanogenMod/android_device_htc_m7-common/commit/f4c6bbd80f3502f37c95bc18765f9ee7661dbe2e,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_htc_m7-common,mdmower,,,mdmower,
pattyboi,kernel_tuna,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>",01/03/2014 16:16:24,,NOT-FOUND,https://github.com/pattyboi/kernel_tuna/commit/52b4b394edb7f4435021374bbc9b1e4b6316cf75,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,pattyboi/kernel_tuna,,,,,
Wootever,kernel_samsung_hlte,ASoC: pcm: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,01/03/2014 22:36:07,,DUPLICATE,https://github.com/Wootever/kernel_samsung_hlte/commit/8e94fd95d2f3b3d05dae05b5f8e7843d84e77664,https://github.com/Wootever/android_kernel_samsung_hlte_deprecated/commit/8e94fd95d2f3b3d05dae05b5f8e7843d84e77664,,,[VERIFY] [https://github.com/NamelessRom/android_kernel_samsung_jf/commit/01331255a8d9cd7ca884b5d58e2bce547cd9002d],,[https://github.com/NamelessRom/android_kernel_samsung_jf/commit/01331255a8d9cd7ca884b5d58e2bce547cd9002d],EXISTS,,,,,,,,,,,,,Wootever/kernel_samsung_hlte,broonie,,,Wootever,
CarbonDev,android_device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,02/03/2014 06:53:38,,DUPLICATE,https://github.com/CarbonDev/android_device_htc_m7-common/commit/0111ea64be74e2cfce3f6ff2c21a95ae85078325,,,,,,,EXISTS,,,,,,,,,,,,,CarbonDev/android_device_htc_m7-common,mdmower,,,daxxmax,
Dx511,kernel_msm,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",02/03/2014 09:18:29,,DUPLICATE,https://github.com/Dx511/kernel_msm/commit/0634a35d994a7500fac48d8ff6d4124223971cf6,,,,,,,EXISTS,,,,,,,,,,,,,Dx511/kernel_msm,franciscofranco,,,Dx511,
codefireXperiment,device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,02/03/2014 09:54:55,,NOT-FOUND,https://github.com/codefireXperiment/device_htc_m7-common/commit/3fff504d0f5a6bfe8bdafb8ec5e84c59b59256d7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,codefireXperiment/device_htc_m7-common,mdmower,,,bigrushdog,
kbc-developers,android_device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,02/03/2014 13:25:37,,DUPLICATE,https://github.com/kbc-developers/android_device_htc_m7-common/commit/b4014252f5dbc72235ff96ef77d68f72a75d192d,,,,,,,EXISTS,,,,,,,,,,,,,kbc-developers/android_device_htc_m7-common,mdmower,,,tako0910,
HeinrichHartmann,MORA,Replaced the custom implementation that utilizes a 100ms Thread sleep with a java.concurrent implementation relying on blocking. Reduced energy consumption for idle,02/03/2014 14:11:14,,OK,https://github.com/HeinrichHartmann/LiveGovWP1/commit/45bc0458a5886083cb64a439c27ef7d5ab0da005,https://github.com/HeinrichHartmann/MORA/commit/45bc0458a5886083cb64a439c27ef7d5ab0da005,,[OK][CONCURRENT PROGRAMMING TECHNIQUES],[OK] [Use blocking instead of sleeping] [Concurrency] [Concurrency technique],[OK] [IMPROVE IDLE STATE CONSUMPTION],[Use blocking instead of sleeping] [Concurrency] [Concurrency technique] [CONCURRENT PROGRAMMING TECHNIQUES] [IMPROVE IDLE STATE CONSUMPTION],EXISTS,[Replace Thread sleeping implementation with concurrent blocking one],[Reduced energy consumption for idle],[Use blocking instead of sleeping] [Concurrency] [Concurrency technique],[Avoid sleeping busy wait],,,Certain,Android,No,Application,Java,Replaced the custom implementation that utilizes a 100ms Thread sleep with a java.concurrent implementation relying on blocking. Reduced energy consumption for idle,HeinrichHartmann/MORA,,[Polling avoidance],,,Application
cafecongnghe,android_kernel_qcom_msm,"mmc: msm_sdcc: Add support for dynamic bus clock vote SDCC controller on some targets like 8660, 8960, 8064 and their variants connects with Daytona Fabric (DFAB). To achieve max. possible performance the DFAB clock is voted to 64MHz at the cost of some power consumption. Since we now have dynamic clock scaling for SD/eMMC clock we can also scale the DFAB clock accordingly without impact on performance but have some power savings in low throughput cases. Change-Id: Ic26541d6845b65803aa813d672ccabdfc4658d9c Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",02/03/2014 16:13:56,,DUPLICATE,https://github.com/cafecongnghe/android_kernel_qcom_msm/commit/2170231318203ad56a2154e843bd07ea5f8e857f,,,,,,,EXISTS,,,,,,,,,,,,,cafecongnghe/android_kernel_qcom_msm,,,,mifl,
TEAM-Gummy,android_device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,02/03/2014 22:02:58,,DUPLICATE,https://github.com/TEAM-Gummy/android_device_htc_m7-common/commit/c6c2bd4d3fd75f5d73777aa5c187b0507d5ad0bf,,,,,,,EXISTS,,,,,,,,,,,,,TEAM-Gummy/android_device_htc_m7-common,mdmower,,,papi92,
ronasimi,kernel_lge_geeb,[LINARO] ASoC: pcm: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit d4e1a73acd4e894f8332f2093bceaef585cfab67) Signed-off-by: Luis Cruz <ljc2491@gmail.com>,03/03/2014 01:13:17,,DUPLICATE,https://github.com/ronasimi/kernel_lge_geeb/commit/01d796b98444e340a9ef2ed68f26d23dfa704c26,,,,[VERIFY],,,EXISTS,,,,,,,,,,,,,ronasimi/kernel_lge_geeb,broonie,,,ronasimi,
ufjschool,ob-s14,"Bakr Muhammad So the final goal here would be to add more appliances with more detail (i���m thinking of framing them all inside a house?). A sidebar on how your monthly energy bill is calculated. Also, I would like to talk to more people about cutting down on energy consumption. Sorry for the lateness of this assignment, took a little longer than expected.",03/03/2014 02:07:54,,FALSE-POSITIVE,https://github.com/ufjschool/ob-s14/commit/3adf7cdbeeaff3465f1f6307b32b08faaf01443f,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,ufjschool/ob-s14,bakrmuhammad,,,bakrmuhammad,
CyanogenMod,android_device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,03/03/2014 17:14:03,,DUPLICATE,https://github.com/CyanogenMod/android_device_htc_m7-common/commit/5d5388d58715d511a6f66cd649d53b544b8ca705,,,,,,,EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_htc_m7-common,mdmower,,,mdmower,
BrateloSlava,SaveEnergy-3,ver-015 - 03.03.2014 + workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/81c04de498f9739297a7434b6380735a937f81fb) + workqueue: Add system wide power_efficient workqueues. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/19868c58c8c6e29b3b80b28ac431265e886b7650) + block: queue work on power efficient wq. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/7f1e0efb5da76e4294b6792588633a7907d50b17) + xsched: Optimize build_sched_domains() for saving first SD node for a cpu. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/874f92583c8162d5fbf238d88acbb746b137df2e) + PHYLIB: queue work on system_power_efficient_wq. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/a0fd34a6444d09c2b66c724c360097a0157c0094) + ASoC: pcm: Use the power efficient workqueue for delayed powerdown. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/1165e99c732e9d9fb5a2509f6c4c097bdbe179dd) + ASoC: jack: Use power efficient workqueue. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/e08da126a557701e1b3b449f541ab4b2ad7f7f87) + regulator: core: Use the power efficient workqueue for delayed powerdown. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/7eddbde5f9d91f4a4b112f873c2b59da384ef214) + sleepy_plug: boots on sudden request and some clean. ported from (https://github.com/rmbq/android_kernel_htc_msm8960/commit/72173adf4aa1499c7f34e0b5122c6408428afef0),04/03/2014 06:37:33,,NOT-FOUND,https://github.com/BrateloSlava/SaveEnergy-3/commit/a7d14eff91e7c1757e6b708728e14811248249af,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,BrateloSlava/SaveEnergy-3,,,,,
TeamBAKED,frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Signed-off-by: baked <travp624@gmail.com>,04/03/2014 07:58:06,,DUPLICATE,https://github.com/TeamBAKED/frameworks_base/commit/2012c31a2ff95ebd3e735371fb3efced1e224ced,,,,[VERIFY] [Original not found],,[Original not found],EXISTS,,,,,,,,,,,,,TeamBAKED/frameworks_base,travp624,,,travp624,
MakakLabs,buildroot-linux-kernel-m3,rtl8xxx_CU: disable power saving,04/03/2014 19:01:28,,NOT-FOUND,https://github.com/MakakLabs/buildroot-linux-kernel-m3/commit/b7f69163b6820293db00645b9f99140f7d0341a0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,MakakLabs/buildroot-linux-kernel-m3,,,,,
jeky82,nexus5_kernel,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",04/03/2014 22:46:06,,DUPLICATE,https://github.com/jeky82/nexus5_kernel/commit/56bf9340532a9c31d15ecf4ba65bebfa2eaaf2e9,,,,,,,EXISTS,,,,,,,,,,,,,jeky82/nexus5_kernel,franciscofranco,,,ggambard,
dorimanx,Dorimanx-LG-G2-D802-Kernel,"Revert ""sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life."" This reverts commit fa86d2b7d10c35b6a35891ad727a4cf36ffe6958.",04/03/2014 23:51:45,,REVERT,https://github.com/dorimanx/Dorimanx-LG-G2-D802-Kernel/commit/0aa6b3cbf3f467009c819627f3b968f0fc26ec4d,,,[DO NOT ANALYZE],[REVERT] [fa86d2b7d10c35b6a35891ad727a4cf36ffe6958],[REVERT] [fa86d2b7d10c35b6a35891ad727a4cf36ffe6958],[fa86d2b7d10c35b6a35891ad727a4cf36ffe6958],EXISTS,"Revert ""sched: set sched_mc_power_savings to 2",,,,,,,,,,,,dorimanx/Dorimanx-LG-G2-D802-Kernel,dorimanx,,,dorimanx,
NoesisEnergy,bootstrap,BZ-10906: sharing of energy savings estimates right from the analyst console,05/03/2014 03:55:15,,NOT-FOUND,https://github.com/NoesisEnergy/bootstrap/commit/0c89e9c23493cd3e57625f752fea1ef5cd7f6544,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,NoesisEnergy/bootstrap,,,,,
Carmol,powercalc,"Various changes Finally, the labels are all updated at the same time. Instead of a title, the power consumed is shown. I'm not happy with the layout, though.",05/03/2014 22:15:36,,FALSE-POSITIVE,https://github.com/Carmol/powercalc/commit/7778a002025a058342253c60771cea24ffbc93b2,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,Carmol/powercalc,Carmol,,,Carmol,
special,telepathy-mission-control,Merge pull request #3 from special/master [telepathy-mission-control] Prevent assert for offline accounts with power saving,06/03/2014 01:42:44,,DUPLICATE,https://github.com/special/telepathy-mission-control/commit/b58f51aaad320ec38c83030c52c0d737d9583c99,,,,,,,EXISTS,,,,,,,,,,,,,special/telepathy-mission-control,special,,,special,
mrg666,android_kernel_mako,[LINARO] workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. tj: updated comments a bit. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit 0668106) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com>,06/03/2014 02:14:50,,DUPLICATE,https://github.com/mrg666/android_kernel_mako/commit/4e819c5da25b834ba3caadbcd8169db13c8c0d62,,,,[VERIFY] [https://github.com/aznrice/Evita_UL_422-JB/commit/3c787ae3f05fdac4f52a868cff68ee1690160056],,[https://github.com/aznrice/Evita_UL_422-JB/commit/3c787ae3f05fdac4f52a868cff68ee1690160056],EXISTS,,,,,,,,,,,,,mrg666/android_kernel_mako,mrg666,,,mrg666,
mrg666,android_kernel_mako,[LINARO] workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. tj: updated comments a bit. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit 0668106) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com>,06/03/2014 02:17:54,,DUPLICATE,https://github.com/mrg666/android_kernel_mako/commit/96895b453f2407417b9aa84b30802adaf28c1a39,,,,,,,EXISTS,,,,,,,,,,,,,mrg666/android_kernel_mako,mrg666,,,mrg666,
Starstrider42,RemoteTech2,"Incorrect information on omni vs. dish antennas The most power-hungry omni, the Communotron 32, consumes 0.6 energy per second. The least power-hungry dishes, the three short-range ones, consume 0.82 energy per second. Therefore no omni has a higher power consumption than any dish.",06/03/2014 02:19:29,,NOT-FOUND,https://github.com/Starstrider42/RemoteTech2/commit/fa1297f0a31de716351fda5f176033fada76a2fd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Starstrider42/RemoteTech2,,,,,
mrg666,android_kernel_mako,[LINARO] workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. tj: updated comments a bit. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit 0668106) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com>,06/03/2014 02:20:01,,DUPLICATE,https://github.com/mrg666/android_kernel_mako/commit/7c27938edbd5f0252ccdf26a1b19d2d3c6020c01,,,,,,,EXISTS,,,,,,,,,,,,,mrg666/android_kernel_mako,mrg666,,,mrg666,
mrg666,android_kernel_mako,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit e6058aaadcd473e5827720dc143af56aabbeecc7) Signed-off-by: Luis Cruz <ljc2491@gmail.com>,06/03/2014 02:39:35,,DUPLICATE,https://github.com/mrg666/android_kernel_mako/commit/1f3ef24738de26622f30dbd30a6de70197399a4b,,,,[VERIFIED] [https://github.com/poondog/joey-m7-GPE/commit/f678a6e40f44f4640067f6f595ef9b33d4cd9c96],,[https://github.com/poondog/joey-m7-GPE/commit/f678a6e40f44f4640067f6f595ef9b33d4cd9c96],EXISTS,,,,,,,,,,,,,mrg666/android_kernel_mako,broonie,,,mrg666,
mrg666,android_kernel_mako,"net/neighbour: queue work on power efficient wq Workqueue used in neighbour layer have no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that an idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. This doesn't change existing behavior of code unless CONFIG_WQ_POWER_EFFICIENT is enabled. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: David S. Miller <davem@davemloft.net>",06/03/2014 02:59:45,,OK,https://github.com/mrg666/android_kernel_mako/commit/199de5b852d3dedd5b503be0a28217032cd05eed,,,[DO NOT ANALYZE],[OK] [User power efficient work queue] [Work queue] [Kernel] [Android],[OK] [User power efficient work queue],[User power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,[Replace normal queues with power efficient workqueues],[Workqueue used in neighbour layer have no real dependency of scheduling these on the cpu which scheduled them],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,"On a idle system, it is observed that an idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. This doesn't change existing behavior of code unless CONFIG_WQ_POWER_EFFICIENT is enabled.",mrg666/android_kernel_mako,mrg666,[Use power efficient library/device],,mrg666,Kernel net
tako0910,android_device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,06/03/2014 08:57:17,,DUPLICATE,https://github.com/tako0910/android_device_htc_m7-common/commit/45ea86bd98f496552f92dd3794ca5123c2391b37,,,,,,,EXISTS,,,,,,,,,,,,,tako0910/android_device_htc_m7-common,mdmower,,,tako0910,
tako0910,android_device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,06/03/2014 08:57:17,,DUPLICATE,https://github.com/tako0910/android_device_htc_m7-common/commit/b4014252f5dbc72235ff96ef77d68f72a75d192d,,,,,,,EXISTS,,,,,,,,,,,,,tako0910/android_device_htc_m7-common,mdmower,,,tako0910,
kbc-developers,android_device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,06/03/2014 08:57:29,,DUPLICATE,https://github.com/kbc-developers/android_device_htc_m7-common/commit/45ea86bd98f496552f92dd3794ca5123c2391b37,,,,,,,EXISTS,,,,,,,,,,,,,kbc-developers/android_device_htc_m7-common,mdmower,,,tako0910,
DerRomtester,android_kernel_samsung_aries,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",06/03/2014 13:02:57,,DUPLICATE,https://github.com/DerRomtester/android_kernel_samsung_aries/commit/c56234d2e698d07162ada342de8d5550d64e11e4,,,,,,,EXISTS,,,,,,,,,,,,,DerRomtester/android_kernel_samsung_aries,faux123,,,DerRomtester,
haiku,haiku,"Sentence casing ""Low latency"" and ""Power saving"".",06/03/2014 16:38:06,,FALSE-POSITIVE,https://github.com/haiku/haiku/commit/15791c196f3ce5c0b95311e2343f5d6ee50d1c1e,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,haiku/haiku,humdingerb,,,humdingerb,
chuck-lee,gaia,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held.,07/03/2014 08:49:08,,OK,https://github.com/chuck-lee/gaia/commit/6fe69f12673f6c9be07dbe98d121f4b8e625552f,,,[DO NOT ANALYZE],[OK] [Bug fix] [Release wake lock] [Go to power saving mode],[OK] [Bug Fix] [Turn Wifi into power save mode],[Bug fix] [Release wake lock] [Go to power saving mode] [Turn Wifi into power save mode],EXISTS,[Turn Wifi into power save mode while screen off with wifi lock held],[power saving],[Bug fix] [Enable wifi power save mode when screen off and wifi lock held],[Enble device power saving mode] [Condition: screen off],,,Certain,Firefox Gaia,Bug 907028,Application,Javascript,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held.,chuck-lee/gaia,chuck-lee,[Miscellaneous],[screen off],chuck-lee,Application browser
chuck-lee,gaia,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held.,07/03/2014 08:55:54,,DUPLICATE,https://github.com/chuck-lee/gaia/commit/33461169fd751b8f702be53a1fbf43a858e21d0b,,,,,,,EXISTS,,,,,,,,,,,,,chuck-lee/gaia,chuck-lee,,,chuck-lee,
chuck-lee,gaia,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held.,07/03/2014 09:35:12,,DUPLICATE,https://github.com/chuck-lee/gaia/commit/41ba951998b24b23cfb440827a29405ed4e7b7bb,,,,,,,EXISTS,,,,,,,,,,,,,chuck-lee/gaia,chuck-lee,,,chuck-lee,
marco9333,android_device_samsung_smdk4412-common,"smdk-4412-common: enabled epen power saving mode by default, enabled cabc",07/03/2014 19:56:42,,NOT-FOUND,https://github.com/marco9333/android_device_samsung_smdk4412-common/commit/beaba4adf5d9e23faec8358f445037d9c02730bb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,marco9333/android_device_samsung_smdk4412-common,marco9333,,,marco9333,
marco9333,android_device_samsung_smdk4412-common,"smdk-4412-common: enabled epen power saving mode by default, enabled cabc",07/03/2014 19:58:21,,NOT-FOUND,https://github.com/marco9333/android_device_samsung_smdk4412-common/commit/656547721195ac90375d59b8dd8e94049fb415a2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,marco9333/android_device_samsung_smdk4412-common,marco9333,,,marco9333,
marco9333,android_device_samsung_smdk4412-common,"smdk-4412-common: enabled epen power saving mode by default, enabled cabc",07/03/2014 20:01:44,,NOT-FOUND,https://github.com/marco9333/android_device_samsung_smdk4412-common/commit/a07fcd35cee6215ca484bbb63820be2b732ff692,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,marco9333/android_device_samsung_smdk4412-common,marco9333,,,marco9333,
dhiltonp,hexbright,updated note on power consumption,07/03/2014 20:24:01,,FALSE-POSITIVE,https://github.com/dhiltonp/hexbright/commit/211620fbd966606e31cc81264287b57b6c0e22c5,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[FALSE-POSITIVE],[Documentation],EXISTS,,,,,,,,,,,,,dhiltonp/hexbright,dhiltonp,,,dhiltonp,
Root-StylE,kernel_caf,"Revert ""Revert ""ASoC: pcm: Use the power efficient workqueue for delayed powerdown"""" This reverts commit d763f67833422307522cfc3cdb55fec48467045c.",08/03/2014 12:31:54,,OK,https://github.com/Root-StylE/kernel_caf/commit/cd3ca57b5b7bf327cca3f377d475a8a76346b3f0,,,[DO NOT ANALYZE],[OK] [Cool] [Revert-of-revert] [01331255a8d9cd7ca884b5d58e2bce547cd9002d] [Android],[OK] [Cool] [Revert-of-revert] [01331255a8d9cd7ca884b5d58e2bce547cd9002d],[Cool] [Revert-of-revert] [01331255a8d9cd7ca884b5d58e2bce547cd9002d] [Android],EXISTS,[Use the power efficient workqueue for delayed powerdown],[power saving],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,SoC: pcm: Use the power efficient workqueue for delayed powerdown,Root-StylE/kernel_caf,AuxXxilium,[Use power efficient library/device],,AuxXxilium,Kernel sound
neobuddy89,hammerhead_kernel_caf,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>,08/03/2014 13:05:35,,NOT-FOUND,https://github.com/neobuddy89/hammerhead_kernel_caf/commit/5669a6371989cf12d56b80484febabbc29288427,,,,[VERIFY] [NOT-FOUND],,[NOT-FOUND],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,neobuddy89/hammerhead_kernel_caf,broonie,,,neobuddy89,
ksooo,xbmc,"Revert ""Feature: Inhibit shutdown if PVR is not idle. Can be switched on/off via PVR energy saving settings."" This reverts commit 8d88a75f8405f6c988968ea9632fba30b87f98d5.",08/03/2014 15:20:34,,NOT-FOUND,https://github.com/ksooo/xbmc/commit/84bad6db80cc08dd9f142d325a40764c9c75d571,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ksooo/xbmc,,,,,
CyanogenMod,android_device_htc_s4-common,"s4-common: update WCNSS_qcom_cfg.ini - Enable 5GHz channel bonding - Support early beacon termination, allowing radio to be turned off after TIM IE to save power - Specify longer data inactivity timeout when in power save - Use CLPC/SCPC - Small cache for scan results Change-Id: I35f281e14d7f36ed5d922a0f9f831e4ee8cac60d",08/03/2014 22:00:11,,DUPLICATE,https://github.com/CyanogenMod/android_device_htc_s4-common/commit/aeae674b57e56b0491deb8fa5e94e407a20d9f2b,,,[DO NOT ANALYZE],[DUPLICATE] [f5c78128d7d654a68701f612aa70d857f205ad97] [DISCUSS],[DUPLICATE],[f5c78128d7d654a68701f612aa70d857f205ad97] [DISCUSS],EXISTS,,,,,,,,,,,,,CyanogenMod/android_device_htc_s4-common,mdmower,,,intervigilium,
Arc-Team,android_device_htc_evita,"update WCNSS_qcom_cfg.ini - Enable 5GHz channel bonding - Support early beacon termination, allowing radio to be turned off after TIM IE to save power - Specify longer data inactivity timeout when in power save - Use CLPC/SCPC - Small cache for scan results",09/03/2014 00:45:08,,DUPLICATE,https://github.com/Arc-Team/android_device_htc_evita/commit/257ead2959ff144781871280ca798f464ec3ed5b,,,,[VERIFY] [https://github.com/mdmower/proprietary_vendor_htc/commit/d5ba1b1d946aab10d664abc1424bf23bbe23214a],,[https://github.com/mdmower/proprietary_vendor_htc/commit/d5ba1b1d946aab10d664abc1424bf23bbe23214a],EXISTS,,,,,,,,,,,,,Arc-Team/android_device_htc_evita,JoseGalRe,,,JoseGalRe,
sustainmack,opower-demo,"infographics for energy savings, active state for buttons, and padding for the button bar",09/03/2014 07:06:01,,NOT-FOUND,https://github.com/sustainmack/opower-demo/commit/35ce8eb833fe75d3838cb61c69017c61b16f3bc7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,sustainmack/opower-demo,,,,,
broodROM,platform_kernel_samsung_jf,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,09/03/2014 10:19:48,,DUPLICATE,https://github.com/broodROM/platform_kernel_samsung_jf/commit/e328daa8c85a188a703e42d56a50bfdbe74e9559,,,,[VERIFIED] [https://github.com/poondog/joey-m7-GPE/commit/f678a6e40f44f4640067f6f595ef9b33d4cd9c96],,[https://github.com/poondog/joey-m7-GPE/commit/f678a6e40f44f4640067f6f595ef9b33d4cd9c96],EXISTS,,,,,,,,,,,,,broodROM/platform_kernel_samsung_jf,broonie,,,broodplank,
SUNetlab,SensingServicePlatform,Mod: start service from boot up Mod: handle weather query exception Mod: use energy efficient location query,09/03/2014 11:14:42,,OK,https://github.com/seanxsheng/SensingServicePlatform/commit/747650861209fb17c3d60afb1fd201b0d81d9040,https://github.com/SUNetlab/SensingServicePlatform/commit/747650861209fb17c3d60afb1fd201b0d81d9040,,[OK][CACHE MANEGEMENT][ANDROID],[OK][CACHE MANEGEMENT][ANDROID],[OK][CACHE MANEGEMENT][ANDROID],[CACHE MANEGEMENT] [ANDROID],EXISTS,[Use lower energy location query],[power saving],[Use power efficient location query] [Increase cache expiration],,,Multiple changes,Certain,Android,No,Application,Java,Mod:  use energy efficient location query,SUNetlab/SensingServicePlatform,seanxsheng,[Use power efficient library/device],,seanxsheng,Application
mathiasose,eeds,wrote about energy efficiency in the discussion,09/03/2014 15:49:56,,FALSE-POSITIVE,https://github.com/mathiasose/eeds/commit/d4d0315f32d6d2f59f7d570f6098a3187e086bb9,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Document],[FALSE-POSITIVE],[Document],EXISTS,,,,,,,,,,,,,mathiasose/eeds,oyvindrobertsen,,,oyvindrobertsen,
Fantu,Unrealrpg,Small changes to the attacks without weapons - Slightly increased the damage caused by an attack with punches - Energy consumed by attacking with punches from 50 to 40 - Energy consumed by attacking with stones from 50 to 30,09/03/2014 17:30:14,,FALSE-POSITIVE,https://github.com/Fantu/Unrealrpg/commit/d36249ea10d26bd80c8e8428237bd183eb3f0d49,,,[FALSE-POSITIVE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,Fantu/Unrealrpg,,,,,
Alucard24,Alucard-Kernel-jfltexx,dvfs touch booster: Use the power efficient workqueue.,09/03/2014 22:37:28,,OK,https://github.com/Alucard24/Alucard-Kernel-jfltexx/commit/c2e799bf63e7e03a815f62fe6ca58063e2227295,,,[DO NOT ANALYZE],[OK] [User power efficient work queue] [Work queue] [Kernel] [Android],[OK] [User power efficient work queue],[User power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,[Use the power efficient workqueue],[power saving],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,dvfs touch booster: Use the power efficient workqueue.,Alucard24/Alucard-Kernel-jfltexx,Alucard24,[Use power efficient library/device],,Alucard24,Driver
FreedomBen,rtl8188ce-linux-driver,update_modprobe_conf: Don't prompt the user if the power save options are already disabled,09/03/2014 23:05:07,,FALSE-POSITIVE,https://github.com/FreedomBen/rtl8188ce-linux-driver/commit/92903aa254e6fcafffdaff0db7983937fac41dc3,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,FreedomBen/rtl8188ce-linux-driver,FreedomBen,,,FreedomBen,
33d,ledfade,Got the MCU power consumption down to 0.5 uA,10/03/2014 08:09:04,,OK,https://github.com/damien-hackadl/ledfade/commit/d56008c6bd1bcfb6ffee92a395f4a313ef0d1726,https://github.com/33d/ledfade/commit/d56008c6bd1bcfb6ffee92a395f4a313ef0d1726,,[OK][GO TO IDLE][DISABLE COMPONETS],[OK] [UNABLE-TO-CATEGORIZE] [Go to idle],[OK][GO TO IDLE][DISABLE COMPONETS],[UNABLE-TO-CATEGORIZE] [Go to idle] [DISABLE COMPONETS],EXISTS,[Disable IRQ] [Set port high] [Set port output] [Configure sleep mode] [Turn off brownout detection] [Go to sleep],[power saving],[Disable IRQ] [Set port high] [Set port output] [Go to sleep] [Configure sleep mode],[OUTLIER],,Multiple changes,Certain,MCU,No,Application,C++,Got the MCU power consumption down to 0.5 uA,33d/ledfade,,[OUTLIER],,,MCU
Techix18,android_kernel_samsung_baffin,"kernel: Prevent unnecessary rfkill event generation. Prevent unnecessary rfkill event generation when the state has not actually changed. These events have to be delivered to relevant userspace processes, causing these processes to wake up and do something while they could as well have slept. This obviously results in more CPU usage, longer time-to-sleep-again and therefore higher power consumption. Change-Id: I3ac4e141fbdf1315b74d3bad6aa96f34b00c3f92 CRs-fixed: 398283 Signed-off-by: Vitaly Wool <vitalywool@gmail.com> Signed-off-by: Mykyta Iziumtsev <nikita.izyumtsev@gmail.com> Signed-off-by: Deepthi Gowri <deepthi@codeaurora.org> Patch-mainline: v3.7 Git-commit: eab48345c2b2d791159aaac4a77000baa8dbc1ae Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>",10/03/2014 10:08:51,,NOT-FOUND,https://github.com/Techix18/android_kernel_samsung_baffin/commit/c79c9494484782da1c30bcf01b56cf453210a361,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Techix18/android_kernel_samsung_baffin,,,,,
chuck-lee,gaia,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held.,10/03/2014 11:53:33,,DUPLICATE,https://github.com/chuck-lee/gaia/commit/761d04484e527e358b9c56fd689540c5acbbee96,,,,,,,EXISTS,,,,,,,,,,,,,chuck-lee/gaia,chuck-lee,,,chuck-lee,
BeanStalkKang,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Signed-off-by: scott <scott@ubuntu> Conflicts: core/res/res/values/config.xml,10/03/2014 11:58:08,,DUPLICATE,https://github.com/BeanStalkKang/android_frameworks_base/commit/970b751802ccd8ad5528639c1d8380027c25fd2b,,,,[VERIFIED] [https://github.com/CyanogenMod/android_frameworks_base/commit/71421b15237644fa538365a184a07ad1a83fee22],,[https://github.com/CyanogenMod/android_frameworks_base/commit/71421b15237644fa538365a184a07ad1a83fee22],EXISTS,,,,,,,,,,,,,BeanStalkKang/android_frameworks_base,,,,aikons,
TomoakiYAMAGUCHI,MQTT-S,Add Power save mode to Arduino and ZBee.,10/03/2014 15:00:49,,NOT-FOUND,https://github.com/TomoakiYAMAGUCHI/MQTT-S/commit/3370c06ad9d053eb4bbfde0cb7dd331b93de8588,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TomoakiYAMAGUCHI/MQTT-S,,,,,
Alucard24,Alucard-Kernel-jfltexx,dvfs touch booster: Use the power efficient workqueue.,10/03/2014 21:42:32,,DUPLICATE,https://github.com/Alucard24/Alucard-Kernel-jfltexx/commit/5838de51b22b700158362e27614ae96fdd87bc2c,,,,,,,EXISTS,,,,,,,,,,,,,Alucard24/Alucard-Kernel-jfltexx,Alucard24,,,Alucard24,
OctoStash,platform_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/config.xml,10/03/2014 22:18:22,,DUPLICATE,https://github.com/OctoStash/platform_frameworks_base/commit/de4c4cc74744b830248ff34a38565d07d9b001b3,,,,[VERIFIED] [https://github.com/TeamBAKED/frameworks_base/commit/2012c31a2ff95ebd3e735371fb3efced1e224ced],,[https://github.com/TeamBAKED/frameworks_base/commit/2012c31a2ff95ebd3e735371fb3efced1e224ced],EXISTS,,,,,,,,,,,,,OctoStash/platform_frameworks_base,,,,MassStash,
TomoakiYAMAGUCHI,MQTT-S,Add Power save mode to Arduino Client,10/03/2014 23:32:00,,NOT-FOUND,https://github.com/TomoakiYAMAGUCHI/MQTT-S/commit/18e86b9353872de56cbbce681ca37caff4f17cf6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TomoakiYAMAGUCHI/MQTT-S,,,,,
chuck-lee,gaia,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held.,11/03/2014 02:26:29,,DUPLICATE,https://github.com/chuck-lee/gaia/commit/73fc904a4eeed17a8655d0ec8476b694bf34252a,,,,,,,EXISTS,,,,,,,,,,,,,chuck-lee/gaia,chuck-lee,,,chuck-lee,
chuck-lee,gaia,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held. r=alive,11/03/2014 02:38:46,,DUPLICATE,https://github.com/chuck-lee/gaia/commit/42536131ecf988080bd640cd5ba4b41130d9308b,,,[DO NOT ANALYZE],[DUPLICATE] [6fe69f12673f6c9be07dbe98d121f4b8e625552f] [DISCUSS],[DUPLICATE],[6fe69f12673f6c9be07dbe98d121f4b8e625552f] [DISCUSS],EXISTS,,,,,,,,,,,,,chuck-lee/gaia,chuck-lee,,,chuck-lee,
TJC,arduino,Updated with spincycle code from neobatt; fiddle with brightness to save power,11/03/2014 11:37:21,,OK,https://github.com/TJC/arduino/commit/4835f557e910ccc9d443d49fbcd4c12d56c1e29a,,,[DO NOT ANALYZE],[OK] [Adjust brightness],[OK] [Adjust brightness],[Adjust brightness],EXISTS,[fiddle with brightness],[power saving],[Adjust brightness],[Adjust display brightness],,,Certain,Arduino,No,Application,C++,fiddle with brightness to save power,TJC/arduino,TJC,[Display and UI tuning],,TJC,Arduino application
Root-StylE,kernel_msm,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",11/03/2014 19:20:51,,DUPLICATE,https://github.com/Root-StylE/kernel_msm/commit/7acc321fdbe3353e866e4293b1968bc484a6e3e2,,,,,,,EXISTS,,,,,,,,,,,,,Root-StylE/kernel_msm,franciscofranco,,,AuxXxilium,
P880-dev,android_device_lge_p880,Set cpu for balanced mode (1) If we want: Normal(0) Power Save(2),12/03/2014 16:25:56,,FALSE-POSITIVE,https://github.com/P880-dev/android_device_lge_p880/commit/5832afd7f45f1ba01923a12cc326f3718dd9c5ee,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,P880-dev/android_device_lge_p880,Ntemis,,,Ntemis,
stevekerrison,sw_swallow_xlinkboot,Provide power saving modes,13/03/2014 11:32:04,,RELATED,https://github.com/stevekerrison/sw_swallow_xlinkboot/commit/830367f9a3bc30f663991eb4a88034142d9d419b,,,[DO NOT ANALYZE],[RELATED] [Add power saving function],[RELATED] [Add power saving function],[Add power saving function],EXISTS,,,,,,,,,,,,,stevekerrison/sw_swallow_xlinkboot,,,,,
stevekerrison,sw_swallow_v13_example,Demonstrate use of power saving features,13/03/2014 11:33:27,,OK,https://github.com/stevekerrison/sw_swallow_v13_example/commit/12ff13fba03ba54fbd801f76d915225a20158211,,,[DO NOT ANALYZE],[OK] [Enable power saving] [Go to idle],[?] [OK] [Go to idle],[Enable power saving] [Go to idle] [OK],EXISTS,[Make all unused cores idle],[Demonstrate use of power saving features],[Disable core],[Disable device],,Example,Certain,Swallow/Embedded !,No,Application,Swallow,Demonstrate use of power saving features,stevekerrison/sw_swallow_v13_example,,[Disabling feature/devices],,,Application
revjunkie,hammerhead,workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,13/03/2014 15:30:15,,DUPLICATE,https://github.com/revjunkie/hammerhead/commit/02d08a241396436e6bdb6f47472b6046cbcf80fc,,,[DO NOT ANALYZE],[DUPLICATE] [3c787ae3f05fdac4f52a868cff68ee1690160056],[DUPLICATE],[3c787ae3f05fdac4f52a868cff68ee1690160056],EXISTS,,,,,,,,,,,,,revjunkie/hammerhead,,,,revjunkie,
revjunkie,hammerhead,genhd.c: use power efficient workqueue,13/03/2014 16:11:06,,OK,https://github.com/revjunkie/hammerhead/commit/4ddb323923ca28f217adcd0d87534cf8eda065a5,,,[DO NOT ANALYZE],[OK] [Use power efficient component] [User power efficient work queue],[OK] [Use power efficient component] [User power efficient work queue],[Use power efficient component] [User power efficient work queue],EXISTS,[genhd.c: use power efficient workqueue],[power saving],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,genhd.c: use power efficient workqueue,revjunkie/hammerhead,revjunkie,[Use power efficient library/device],,revjunkie,Kernel block
OmniHonami,android_frameworks_base,"[1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: core/java/android/provider/Settings.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/batterysaver/BatterySaverService.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java services/java/com/android/server/NotificationManagerService.java",13/03/2014 16:16:01,,SOFT-DUPLICATE,https://github.com/OmniHonami/android_frameworks_base/commit/f1a1a770367ce2719bec827a423eb8e33e9fea02,,,[DO NOT ANALYZE],[RELATED] [Add power saving mode],[?] [DUPLICATE],[Add power saving mode] [DUPLICATE],EXISTS,,,,,,,,,,,,,OmniHonami/android_frameworks_base,Squadzone,,,Androguide,
Ccomp5950,Baystation12,"APC-Rewrite AI fix. Before: AI's on new APC system would constantly add more and more power usage to the APC After: AI's no longer handle their power consumption, that has been pushed off to an /obj/machinery/ai_powersupply dummy object which will process the power usage. This is much cleaner because machinery objects are already processed properly for the new system and keeps us from having to rewrite a bunch of AI code to bring the AI in line with how the new APC system works.",14/03/2014 02:51:21,,FALSE-POSITIVE,https://github.com/Ccomp5950/Baystation12/commit/bd483cc07227b921368ffafdd6215e8a907b2236,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[?] [OK],[Game] [OK],EXISTS,,,,,,,,,,,,,Ccomp5950/Baystation12,Ccomp5950,,,Ccomp5950,
ZomgPonies,OldParadise,"APC-Rewrite AI fix. Before: AI's on new APC system would constantly add more and more power usage to the APC After: AI's no longer handle their power consumption, that has been pushed off to an /obj/machinery/ai_powersupply dummy object which will process the power usage. This is much cleaner because machinery objects are already processed properly for the new system and keeps us from having to rewrite a bunch of AI code to bring the AI in line with how the new APC system works. Conflicts: code/modules/mob/living/silicon/ai/ai.dm",14/03/2014 02:58:07,,DUPLICATE,https://github.com/ZomgPonies/Paradise/commit/93d229004ccd5e946a1ae9f58126a4280d1fee2e,https://github.com/ZomgPonies/OldParadise/commit/93d229004ccd5e946a1ae9f58126a4280d1fee2e,,[DO NOT ANALYZE],[DUPLICATE] [bd483cc07227b921368ffafdd6215e8a907b2236] [DISCUSS],[DUPLICATE],[bd483cc07227b921368ffafdd6215e8a907b2236] [DISCUSS],EXISTS,,,,,,,,,,,,,ZomgPonies/OldParadise,Ccomp5950,,,ZomgPonies,
JeyDroids,android_frameworks_base,"[1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png https://gerrit.omnirom.org/#/c/4835/",14/03/2014 04:08:47,,NOT-FOUND,https://github.com/JeyDroids/android_frameworks_base/commit/c3bb06859d5edf1a7a161b16920350a431e1c11f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_frameworks_base,,,,,
JeyDroids,android_packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led https://gerrit.omnirom.org/#/c/5386/",14/03/2014 04:09:16,,NOT-FOUND,https://github.com/JeyDroids/android_packages_apps_OmniGears/commit/3a2ba5557240d1105eeacd53bdc39668b50254f7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_packages_apps_OmniGears,,,,,
JeyDroids,android_packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync https://gerrit.omnirom.org/#/c/4836/",14/03/2014 04:09:50,,NOT-FOUND,https://github.com/JeyDroids/android_packages_apps_Settings/commit/ef68d8847104eeb94d9de64a11f71476d493d830,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_packages_apps_Settings,,,,,
chuck-lee,gaia,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held. r=alive,14/03/2014 08:50:00,,DUPLICATE,https://github.com/chuck-lee/gaia/commit/62bcabb119517ed43840a69477a9287f68555453,,,[DO NOT ANALYZE],[DUPLICATE] [6fe69f12673f6c9be07dbe98d121f4b8e625552f] [DISCUSS],[DUPLICATE],[6fe69f12673f6c9be07dbe98d121f4b8e625552f] [DISCUSS],EXISTS,,,,,,,,,,,,,chuck-lee/gaia,chuck-lee,,,chuck-lee,
Aronar,android_device_htc_s4-common,"s4-common: update WCNSS_qcom_cfg.ini - Enable 5GHz channel bonding - Support early beacon termination, allowing radio to be turned off after TIM IE to save power - Specify longer data inactivity timeout when in power save - Use CLPC/SCPC - Small cache for scan results Change-Id: I35f281e14d7f36ed5d922a0f9f831e4ee8cac60d",14/03/2014 10:07:46,,DUPLICATE,https://github.com/Aronar/android_device_htc_s4-common/commit/aeae674b57e56b0491deb8fa5e94e407a20d9f2b,,,[DO NOT ANALYZE],[DUPLICATE] [f5c78128d7d654a68701f612aa70d857f205ad97] [DISCUSS],[DUPLICATE],[f5c78128d7d654a68701f612aa70d857f205ad97] [DISCUSS],EXISTS,,,,,,,,,,,,,Aronar/android_device_htc_s4-common,mdmower,,,intervigilium,
pattyboi,kernel_tuna,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",14/03/2014 12:17:38,,NOT-FOUND,https://github.com/pattyboi/kernel_tuna/commit/eb70fe7c57d2f2155149695eb454d595ea7c193b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,pattyboi/kernel_tuna,,,,,
neilh10,arduino,Simple Tasker. Next stage is to add power savings. Works with libaries/sonde,14/03/2014 22:34:51,,FALSE-POSITIVE,https://github.com/neilh10/arduino/commit/8588a7fe4c4b29f221a23d564a0b2efb188743aa,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,neilh10/arduino,neilh10,,,neilh10,
stimpz0r,android_kernel_lge_gee,"defconfig: enable ARM crypto, CPUPower, NEON and more... taken from xboxfanj's commit (https://github.com/xboxfanj/kernel_msm/commit/fa35647efb36e4ef1205c8518a2201f00af379db) except for Power Efficient WQ which seems to be Linaro...",15/03/2014 02:30:05,,FALSE-POSITIVE,https://github.com/stimpz0r/android_kernel_lge_gee/commit/dec83c04fcf4ba09c629d922ea5dd729e589eabd,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,stimpz0r/android_kernel_lge_gee,stimpz0r,,,stimpz0r,
elitelinux,hack-space,"Racks plugin for GLPI V 1.4.1 glpi-racks-1.4.1.tar.gz GLPI 0.84 Bugfixes Martes, 18 de Febrero de 2014 14:36:48 +0100 This plugin allows you to create bays. Manage the placement of your materials in your bays. And so know the space and its power consumption and heat dissipation. Rack detail : height - width - depth - weight - number of U. Front and back management. Definition of model specifications and materials used (power consumption, numbre of power supply, calorific waste, flow Rate, size (U), weight, depth) GLPI > 0.84 : Can be used with Positions GLPI > 0.84 : Can be used with Tree View How to use (Need translation) Sitio web: http://www.infotel.com/services/expertise-technique/glpi/",15/03/2014 02:41:45,,FALSE-POSITIVE,https://github.com/elitelinux/hack-space/commit/e1ea7bde9ae811e8d861e930646b2fca2b7ae958,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Big commit],[FALSE-POSITIVE],[Big commit],EXISTS,,,,,,,,,,,,,elitelinux/hack-space,elitelinux,,,elitelinux,
revjunkie,hammerhead,"net/neighbour: queue work on power efficient wq Workqueue used in neighbour layer have no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that an idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. This doesn't change existing behavior of code unless CONFIG_WQ_POWER_EFFICIENT is enabled. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: revjunkie <gadgetjuan@gmail.com>",15/03/2014 03:24:49,,DUPLICATE,https://github.com/revjunkie/hammerhead/commit/09c6829ec977b97720afede1ec821c689129329f,,,[DO NOT ANALYZE],[DUPLICATE] [199de5b852d3dedd5b503be0a28217032cd05eed] [DISCUSS],[DUPLICATE],[199de5b852d3dedd5b503be0a28217032cd05eed] [DISCUSS],EXISTS,,,,,,,,,,,,,revjunkie/hammerhead,neobuddy89,,,revjunkie,
revjunkie,hammerhead,auto_hotplug: use power efficient workqueue,15/03/2014 03:48:44,,OK,https://github.com/revjunkie/hammerhead/commit/45a88ccd62bc11591289a8315b33e54ecf5c93ff,,,[DO NOT ANALYZE],[OK] [Kernel] [Workqueue] [Use efficient workqueue],[?],[Kernel] [Workqueue] [Use efficient workqueue],EXISTS,[auto_hotplug: use power efficient workqueue],[power saving],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,auto_hotplug: use power efficient workqueue,revjunkie/hammerhead,revjunkie,[Use power efficient library/device],,revjunkie,Kernel arch
ucxpresso,nano11uxx,uCXpresso.BLE update to v1.0.3 rc1 (2014/3/15): 1. Change BLE polling to interrupt method to speed up the BLE core. 2. BLE will become to a Weakup Source for Power Save Features.,15/03/2014 06:29:49,,FALSE-POSITIVE,https://github.com/ucxpresso/nano11uxx/commit/ef8fe8dbb5577b3499fcdc85e65916302cde4365,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,ucxpresso/nano11uxx,ucxpresso,,,ucxpresso,
ksooo,xbmc,[PVR] Feature: Confirm XBMC shutdown if PVR is not idle. Can be switched on/off via PVR energy saving settings. User now can decide to shutdown regardless PVR state (YesNoDialog). Refactored.,15/03/2014 08:02:27,,NOT-FOUND,https://github.com/ksooo/xbmc/commit/22824193c10a0bd5a64b1f8413c6e0ca36ad77e6,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ksooo/xbmc,,,,,
ksooo,xbmc,[PVR] Feature: Confirm XBMC shutdown if PVR is not idle. Can be switched on/off via PVR energy saving settings.,15/03/2014 10:20:27,,NOT-FOUND,https://github.com/ksooo/xbmc/commit/4a1a582580298e71207a2cb05362cd2718937cb7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ksooo/xbmc,,,,,
ksooo,xbmc,[PVR] Feature: Confirm XBMC shutdown if PVR is not idle. Can be switched on/off via PVR energy saving settings.,15/03/2014 14:10:00,,NOT-FOUND,https://github.com/ksooo/xbmc/commit/cc2f7041ea201aee2c14af06137d1c59c13a8588,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ksooo/xbmc,,,,,
xboxfanj,kernel_msm,"defconfigs: update for memutils, power efficient wq, etc",15/03/2014 18:45:35,,OK,https://github.com/xboxfanj/kernel_msm/commit/9470c792430fb3f5868eba0b5b45aa017dc7cbdb,,,[DO NOT ANALYZE],[OK] [Use power efficient component] [User power efficient work queue],[OK] [Use power efficient component] [User power efficient work queue],[Use power efficient component] [User power efficient work queue],EXISTS,[enable power efficient work queue by default],[power saving],[Use power efficient work queue] [Work queue] [Script],[Use power efficient work queue],,,Certain,Android,No,OS,Defconfig,"defconfigs: update for memutils, power efficient wq, etc",xboxfanj/kernel_msm,xboxfanj,[Use power efficient library/device],,xboxfanj,Kernel arch
xboxfanj,kernel_msm,"defconfigs: update for memutils, power efficient wq, etc",15/03/2014 19:38:24,,DUPLICATE,https://github.com/xboxfanj/kernel_msm/commit/9470c792430fb3f5868eba0b5b45aa017dc7cbdb,,,[DO NOT ANALYZE],[DUPLICATE] [9470c792430fb3f5868eba0b5b45aa017dc7cbdb],[DUPLICATE],[9470c792430fb3f5868eba0b5b45aa017dc7cbdb],EXISTS,,,,,,,,,,,,,xboxfanj/kernel_msm,xboxfanj,,,xboxfanj,
LonelyWolf,stm8,nRF24 lib bugfixes; main code - Active-Halt changed to Halt to lower power consumption,15/03/2014 23:04:40,,UNABLE-TO-CATEGORIZE,https://github.com/LonelyWolf/stm8/commit/5813d08d0e8584129bd69d3d1d0ef76071f9dd7e,,,[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[?] [OK] [Scale Frequency] [Disable Component],[OK] [Scale Frequency] [Disable Component],EXISTS,,,,,,,,,,,,,LonelyWolf/stm8,LonelyWolf,,,LonelyWolf,
s011208,color-filter,Add power saving mode,16/03/2014 08:46:20,,FALSE-POSITIVE,https://github.com/s011208/color-filter/commit/01861ed710929fedf43594576e0863ac099f38f2,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,s011208/color-filter,s011208,,,s011208,
DanieleDeSensi,Peafowl,Added experiments on energy consumption,16/03/2014 14:01:01,,FALSE-POSITIVE,https://github.com/DanieleDeSensi/Peafowl/commit/13dbe7b9b3df337b5c0b99f9a57b431126c766a6,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,DanieleDeSensi/Peafowl,DanieleDeSensi,,,DanieleDeSensi,
LiquidSmooth,android_kernel_samsung_jf,"Revert ""dvfs touch booster: Use the power efficient workqueue."" This reverts commit 2fe7aaf58e251164eabcbb1457af9cbc6c9229d2.",16/03/2014 14:44:33,,NOT-FOUND,https://github.com/LiquidSmooth/android_kernel_samsung_jf/commit/39bbca085cb7e10034318eb45279c264ffc93132,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LiquidSmooth/android_kernel_samsung_jf,,,,,
revjunkie,grouper,workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'.,16/03/2014 15:10:50,,NOT-FOUND,https://github.com/revjunkie/grouper/commit/e19032bfd1a4ac401dcf767a06df5747d46bd8d3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,revjunkie/grouper,,,,,
revjunkie,grouper,auto_hotplug: use power efficient workqueue Signed-off-by: revjunkie <gadgetjuan@gmail.com>,16/03/2014 15:13:53,,NOT-FOUND,https://github.com/revjunkie/grouper/commit/4df5458f9c87cc10fa5ac728b89b00259a78d2aa,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,revjunkie/grouper,,,,,
Cl3Kener,UBER-N5,"net/neighbour: queue work on power efficient wq Workqueue used in neighbour layer have no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that an idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. This doesn't change existing behavior of code unless CONFIG_WQ_POWER_EFFICIENT is enabled. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>",16/03/2014 21:36:55,,NOT-FOUND,https://github.com/Cl3Kener/UBER-N5/commit/a51686eac5d959f4659242657fbe818e6d7c8e33,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Cl3Kener/UBER-N5,neobuddy89,,,Cl3Kener,
Cl3Kener,UBER-N5,"Revert ""net/neighbour: queue work on power efficient wq"" This reverts commit a51686eac5d959f4659242657fbe818e6d7c8e33.",16/03/2014 21:42:41,,NOT-FOUND,https://github.com/Cl3Kener/UBER-N5/commit/98817ca478aab1d4d47b440089ac74d38362c0c1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Cl3Kener/UBER-N5,Cl3Kener,,,Cl3Kener,
Triprex,android_kernel_samsung_trebon,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",17/03/2014 11:32:24,,NOT-FOUND,https://github.com/Triprex/android_kernel_samsung_trebon/commit/8fdbf16ebf19cf5f9da79828529e8f072ee9396e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Triprex/android_kernel_samsung_trebon,,,,,
Triprex,android_kernel_samsung_trebon,Added Adaptive CPU Governor This driver adds a dynamic cpufreq policy governor designed for latency-sensitive workloads and also for demanding performance. This governor attempts to reduce the latency of clock increases so that the system is more responsive to interactive workloads in loweset steady-state but to reduce power consumption in middle operation level up will be done in step by step to prohibit system from going to max operation level. Conflicts: drivers/cpufreq/Kconfig,17/03/2014 12:11:07,,NOT-FOUND,https://github.com/Triprex/android_kernel_samsung_trebon/commit/8a8e68ed1efdd3eb737356a8add7a5420877f65a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Triprex/android_kernel_samsung_trebon,,,,,
chonix,android_kernel_samsung_tuna,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",17/03/2014 19:26:10,,DUPLICATE,https://github.com/chonix/android_kernel_samsung_tuna/commit/2569c50c2a14d5dcaf79aa3b1672d55e6a8bef5c,,,[DO NOT ANALYZE],[DUPLICATE] [de3c3b955f78e97ee0b1800ac0f5b271aff56934],[DUPLICATE],[de3c3b955f78e97ee0b1800ac0f5b271aff56934],EXISTS,,,,,,,,,,,,,chonix/android_kernel_samsung_tuna,Christopher83,,,chonix,
Regulusv7,android_hardware_libhardware,"libhardware: Add sound card status parameter Currently audiod monitoring sound card status instead of adsp status. This is a bug fix to monitor sound card. Audio HAL is going to use sound card key to check sound card to status. Change-Id: If2eba2aad2a70a414c8b258bba1ecd8f3a4b8df1 hwcomposer: Add HWC_BLIT compositiontype value - HWC_BLIT this layer will be handled in the HWC, using a blit engine - setting this will inform Surfaceflinger to flip FB_TARGET Change-Id: I25d19ec41b57863d451c3e390109c912faf1381c libhardware: Modify ifdefs for legacy DirectTrack Change-Id: Id3a8adc3bd3b8fe5973e359b5268671f6fd26cd4 libhardware: Add fix for offload playback. -Offload mode requires frame size to be unity. -Tunnel encode changes results in a invalid frame size being returned to audio flinger. -Add 24 bit PCM format as exception to linear pcm. Change-Id: I23d1960b0a493da20f48de788bb13e6f055ebe03 Bluetooth: HID: Add support for HID Device in HAL This patch adds support for HID Device Role in HAL so that jni layer can communicate wtih Bluedroid Stack when calling HID Device API's and callbacks. Change-Id: I591f477ee58924a9003d6e733dcbbc4e8a7d3202 CRs-Fixed: 573086 Bluetooth: HAL Changes for LPP and extended LE scan These changes include modifications for implementing Low power proximity features and extended LE scan based on UUID Filtering CRs-Fixed: 581289 Change-Id: I5ddbc8edffec0c6ca5eb8ed4dab12bf2e108bd55 Bluetooth: support for a2dp sink - support to check remote sep type - support to suspend streaming in a2dp sink CRs-Fixed: 580884 Change-Id: I9355056c663fb0cd685301cc76be6d1a700ee5f1 Bluetooth : HAL change for wake state change callback This change includes function declaration for the wake state change callback. This is to implement wake lock acquire/release machanism to ensure the power saving when the ACL is not active. Change-Id: I3205458e29521efd0d01a66a314fad499763cb87 CRs-fixed: 576239 Bluetooth: A2DP SINK changes for audiofocus - manage audio focus - send resume_sink from application CRs-Fixed: 584276 Change-Id: I0eeb06b70b9dbb8c2276b0accb6afbafcba65376 Bluetooth: Stack certification. Stack certification changes for L2CAP, SDP and RFCOMM Change-Id: If322fff2c5dcf915333574aaae0394f130498305 Bluetooth: Play ring tone on incoming call. Add callback to update app for incoming call. Change-Id: I4b6c655cc06b70538be9a3f07455a32b579dafb2 CRs-Fixed: 582486 Bluetooth: HID-C: Add error code parameter in report_error This patch adds error code as parameter to report_error API providing better flexibility to application layer to send appropriate error code for Set Report sent from HID Host. Change-Id: I703523cef109ea1999746f064b3d2dc0e13c5300 CRs-Fixed: 595139 Bluetooth: Added API to get Remote Supported feature Added new API to get the Remote supported features from bluedroid. CRs-fixed: 594652 Change-Id: I0ad3daf1756d6eae9e633b01b20b884f6c8e5bed lights: Add music light support (1/2) Change-Id: Ia2731f17f993bd0f4d61c69ee77fa74d77854396",18/03/2014 03:03:20,,NOT-FOUND,https://github.com/Regulusv7/android_hardware_libhardware/commit/4cb36fa4b1b4ae90c59db9eda84b0b2c44cad942,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Regulusv7/android_hardware_libhardware,Regulusv7,,,Regulusv7,
CrossTyreck,MJNAir,Starting implementing a score board to help track player's score based on position and to decrement energy usage based on the score boards traversal. Energy usage is consumed more by obstacles which contain a energy consumption multiplier.,18/03/2014 03:59:39,,FALSE-POSITIVE,https://github.com/CrossTyreck/MJNAir/commit/f828173a4b31cc99472b1b061d167a173db0b6d5,,,[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[FALSE-POSITIVE],[Game],EXISTS,,,,,,,,,,,,,CrossTyreck/MJNAir,CrossTyreck,,,CrossTyreck,
mporsch,open80211s,"mac80211: sync method beacon alignment This synchronization method aligns TBTTs in a narrow time frame to reduce wakeup overheads in light sleep mode. Nodes using this sync method will determine the TBTT offsets between each other. Depending on the own and peers' offsets the ""steady node"" is determined. The steady node is the node with the highest TBTT offset towards the next later TBTT. Subsequently, all nodes except the steady node will gradually delay their TBTT, thus shifting towards the next later TBTT. Once a predefined offset towards this TBTT is reached, it stops shifting any further. Finally, one or multiple aligned wakeup groups are formed. Light sleep nodes benefit from waking up less times to catch all peer beacons. Since the wakeup overhead of powering up receivers and waiting for the beacon is avoided, the power consumption is reduced. Signed-off-by: Marco Porsch <marco@cozybit.com>",18/03/2014 16:29:19,,OK,https://github.com/mporsch/open80211s/commit/bc750c9e9ade1026c0828a46c22e6c2ed049dff2,,,[DO NOT ANALYZE],[OK] [Avoid wakeup] [Batch request],[OK] [Avoid wakeup],[Avoid wakeup] [Batch request],EXISTS,[align TBTTs in a narrow time frame],[reduce wakeup overheads in light sleep mode],[Batch request] [Coalesce beacons] [Avoid wakeup],[Batching],,,Certain,Wifi OS,No,OS,C,"Light sleep nodes benefit from waking up less times to catch all peer beacons. Since the wakeup overhead of powering up receivers and waiting for the beacon is avoided, the power consumption is reduced.",mporsch/open80211s,,[Miscellaneous],,,Kernel net
maxfu,android_kernel_samsung_exynos5410,"cpufreq: Fake the IKS specific frequency table to stock values The table is implementation specfic and is used nowhere else, however Samsung's framework uses it for its power savings feature. The power- saving level is determined as a index offset from the maximum frequency. Discarding entries not in the stock frequency table ensures a correct power-savings mode.",19/03/2014 02:25:24,,DUPLICATE,https://github.com/maxfu/android_kernel_exynos5410/commit/1db617346e0a60f0ffa89af27096bde856274f57,https://github.com/maxfu/android_kernel_samsung_exynos5410/commit/1db617346e0a60f0ffa89af27096bde856274f57,,[DO NOT ANALYZE],[DUPLICATE] [1206bff50ee80761bf982257ba27eacf0be6f79e],[DUPLICATE],[1206bff50ee80761bf982257ba27eacf0be6f79e],EXISTS,,,,,,,,,,,,,maxfu/android_kernel_samsung_exynos5410,,,,,
gustavoss,android_kernel_samsung_smdk4412,bcmdhd: wifi_pm to save power while suspended and when proximity is detected,19/03/2014 05:54:29,,OK,https://github.com/gustavoss/android_kernel_samsung_smdk4412/commit/c6c530c67553e8c1bbe6ea2c6d95dbb3f48842a7,,,[DO NOT ANALYZE],[OK] [Enable power saving mode when proximity is clode] [Enable power saving mode] [Android],[OK] [Enable power saving mode],[Enable power saving mode when proximity is clode] [Enable power saving mode] [Android],EXISTS,[set wifi_pm to PM_FAST while suspended and when proximity is detected],[power saving],[Enable device power saving mode] [Enable wifi power saving when on suspend and on proximity],[Enable device power saving] [Condition: screen off and proximity close],,,Certain,Android,No,OS,C,bcmdhd: wifi_pm to save power while suspended and when proximity is detected,gustavoss/android_kernel_samsung_smdk4412,gustavoss,[Disabling feature/devices],[screen off and proximity close],gustavoss,Driver
zwliew,android_device_samsung_codina,"DeviceSettings: Add WIFI PM mode toggle Switch between PM_FAST AND PM_MAX, with PM_FAST being the default. When checkbox is ticked, it switches to PM_MAX mode. PM_FAST : faster internet speed, higher power consumption PM_MAX : slower internet speed, lower power consumption Needs https://github.com/TeamCanjica/Samsung_STE_Kernel/pull/5 to allow toggling of PM mode.",20/03/2014 05:23:46,,NOT-FOUND,https://github.com/zwliew/android_device_samsung_codina/commit/69f6fbfd38bc9f71c3fa40a9a9c395a20612cfe1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,zwliew/android_device_samsung_codina,,,,,
KitKatPurity,platform_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",20/03/2014 10:25:59,,OK,https://github.com/KitKatPurity/platform_frameworks_base/commit/9f3d5cf27c31216a197b1ef921b338cddea0e57a,,,[DO NOT ANALYZE],[OK] [Bug fix] [Android],[OK] [Bug Fix],[Bug fix] [Android],EXISTS,[Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON],[application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery],[Bug fix],[Energy bug],,,Certain,Android,Yes,OS,Java,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery.",KitKatPurity/platform_frameworks_base,,[Energy bug],,AndroidRul3z,Framework
SlimSaber,frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",20/03/2014 17:02:33,,DUPLICATE,https://github.com/SlimSaber/frameworks_base/commit/ddd23bf3a4eeceaa0d44110b3dd1a4f586162faa,,,[DO NOT ANALYZE],[DUPLICATE] [9f3d5cf27c31216a197b1ef921b338cddea0e57a] [Discuss],[DUPLICATE],[9f3d5cf27c31216a197b1ef921b338cddea0e57a] [Discuss],EXISTS,,,,,,,,,,,,,SlimSaber/frameworks_base,,,,fusionjack,
haavardlian,UbiSolar,Merge pull request #35 from haavardlian/powerSavingTips Power saving tips,20/03/2014 20:19:37,,FALSE-POSITIVE,https://github.com/haavardlian/UbiSolar/commit/f4c174d0eb7217f7a18829837d50b1056cec0348,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,haavardlian/UbiSolar,haavardlian,,,haavardlian,
mk74,locy,two more graphs: -bluetooth LE API -different energy efficiency among devices (normalization process here!),20/03/2014 20:34:18,,FALSE-POSITIVE,https://github.com/mk74/locy/commit/c55eaf754234a38dd2ac343a32ca140f2ccbb33f,,,[DO NOT ANALYZE],[FALSE-POSITIVE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,mk74/locy,mk74,,,mk74,
mdmower,twrp-htc-m7,"Set CPU performance parameters These are based on the cm-10.2 parameters. In testing there was no tangible benefit to using cpu2+cpu3, so they are disabled to save power.",21/03/2014 07:17:00,,OK,https://github.com/mdmower/twrp-htc-m7/commit/db39636689d2089ab7a66e0e30477d7d3127eae1,,,[DO NOT ANALYZE],[OK] [Set governor] [Set sampling rate] [Scale CPU frequency] [Android],[OK] [Set governor] [Scale CPU frequency],[Set governor] [Set sampling rate] [Scale CPU frequency] [Android],EXISTS,[Config governor],"[testing there was no tangible benefit to using cpu2+cpu3, so they are disabled to save power]",[Scale CPU frequency] [Configure governor] [Set governor] [Script] [Config],[DVFS] [Sub1: Governor tuning],,Multiple changes,Certain,Android,No,Libraries and Utilities,init.rc script,"Set CPU performance parameters These are based on the cm-10.2 parameters. In testing there was no tangible benefit to using cpu2+cpu3, so they are disabled to save power.",mdmower/twrp-htc-m7,mdmower,[Frequency and voltage scaling],,mdmower,Script init.rc
mdmower,twrp-htc-m7wls,"Set CPU performance parameters These are based on the cm-10.2 parameters. In testing there was no tangible benefit to using cpu2+cpu3, so they are disabled to save power.",21/03/2014 07:17:05,,DUPLICATE,https://github.com/mdmower/twrp-htc-m7wls/commit/40669291c1c542f8aa5b806f5b5679aaaa0cd29b,,,[DO NOT ANALYZE],[DUPLICATE] [db39636689d2089ab7a66e0e30477d7d3127eae1] [DISCUSS],[DUPLICATE],[db39636689d2089ab7a66e0e30477d7d3127eae1] [DISCUSS],EXISTS,,,,,,,,,,,,,mdmower/twrp-htc-m7wls,mdmower,,,mdmower,
mdmower,twrp-htc-m7wlv,"Set CPU performance parameters These are based on the cm-10.2 parameters. In testing there was no tangible benefit to using cpu2+cpu3, so they are disabled to save power.",21/03/2014 07:17:10,,DUPLICATE,https://github.com/mdmower/twrp-htc-m7wlv/commit/4dc08d56ef43885368c8d68663f6500fcc08cda9,,,[DO NOT ANALYZE],[DUPLICATE] [db39636689d2089ab7a66e0e30477d7d3127eae1] [DISCUSS],[DUPLICATE],[db39636689d2089ab7a66e0e30477d7d3127eae1] [DISCUSS],EXISTS,,,,,,,,,,,,,mdmower/twrp-htc-m7wlv,mdmower,,,mdmower,
PSX-PureSpeed,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/config.xml core/res/res/values/symbols.xml Conflicts: core/res/res/values/pa_symbols.xml,21/03/2014 11:59:47,,DUPLICATE,https://github.com/PSX-PureSpeed/android_frameworks_base/commit/b37764a0f6268bd74166117a2603e76547a4a31a,,,[DO NOT ANALYZE],[DUPLICATE] [c001feb857c12f5a802f1fa8c923beef72e8083b] [71421b15237644fa538365a184a07ad1a83fee22] [Original commit can not be found anymore] [DISCUSS],[DUPLICATE],[c001feb857c12f5a802f1fa8c923beef72e8083b] [71421b15237644fa538365a184a07ad1a83fee22] [Original commit can not be found anymore] [DISCUSS],EXISTS,,,,,,,,,,,,,PSX-PureSpeed/android_frameworks_base,,,,MartinRo,
PSX-PureSpeed,android_frameworks_base,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power. Change-Id: Iaeb3e5958d2ef7cc33080d7091ed8a5462695c67 Conflicts: core/res/res/values/config.xml core/res/res/values/symbols.xml Conflicts: core/res/res/values/pa_symbols.xml,21/03/2014 11:59:49,,OK,https://github.com/PSX-PureSpeed/android_frameworks_base/commit/b37764a0f6268bd74166117a2603e76547a4a31a,,,[OK][Change SCREEN accelerometer],[DO NOT ANALYZE],[OK] [Enable Power Saving] [Use Motion Accelerometer] [Android],[Change SCREEN accelerometer] [Enable Power Saving] [Use Motion Accelerometer] [Android],EXISTS,[use motion accelerometer for screen orientation change],[generic accelerometer constantly streams sensor data],[Use Motion Accelerometer] [Use power efficient sensor] [User power efficient component],[Use power efficient sensor],,,Certain,Android,No,OS,Java,Sensor: Enable the motion accelerometer for screen orientation change The screen orientation can be detected by the motion accelerometer instead of generic accelerometer to save power.,PSX-PureSpeed/android_frameworks_base,,[Use power efficient library/device],,MartinRo,Framework
mk74,locy,two graphs added: think through normalization process; came up with energy efficiency level;,21/03/2014 14:13:15,,FALSE-POSITIVE,https://github.com/mk74/locy/commit/146258d94648877bea5a9fe32c39cbf07fdde683,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Latex],[Latex],EXISTS,,,,,,,,,,,,,mk74/locy,mk74,,,mk74,
jjo,bin,several tweaks for energy saving,21/03/2014 14:38:42,,OK,https://github.com/jjo/bin/commit/d66a37ed48ebad64b72c3e4ab21226a1eee5ecd2,,,[OK][DVFS][System Conf],[DO NOT ANALYZE],[OK] [Improve power saving] [CPU Scaling] [Governor] [Shell script],[DVFS] [System Conf] [Improve power saving] [CPU Scaling] [Governor] [Shell script],EXISTS,[Set ondemand governor] [enable laptop mode] [increase dirty_writeback_centisecs] [enable snd_hda_intel power saving] [set link_power_management_policy to minimum power] [stop bluetooth service],[several tweaks for energy saving],[Use ondemand governor] [enable laptop mode] [increase dirty_writeback_centisecs] [enable snd_hda_intel power saving] [set link_power_management_policy to minimum power] [stop bluetooth service],[OUTLIER],,Multiple changes,Certain,Personal config files?,No,Libraries and Utilities,Shell,several tweaks for energy saving,jjo/bin,jjo,[OUTLIER],,jjo,Script
mk74,locy,energy efficiency levels: points + scheme for tables,21/03/2014 16:38:23,,FALSE-POSITIVE,https://github.com/mk74/locy/commit/cf8c662c919a0f04918f964455ae350b50f83fe7,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Latex],[Latex],EXISTS,,,,,,,,,,,,,mk74/locy,mk74,,,mk74,
chaosdorf,dorfmap,error handling for power consumption,21/03/2014 17:34:43,,FALSE-POSITIVE,https://github.com/chaosdorf/dorfmap/commit/4f8a46c95cab666c05a6d56fbf8c3905da2addce,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,chaosdorf/dorfmap,derf,,,derf,
nwaldispuehl,raspberry-pi-light-server,Added some hints for fixing wifi power save mode.,21/03/2014 21:21:58,,FALSE-POSITIVE,https://github.com/nwaldispuehl/raspberry-pi-light-server/commit/cdab59946429374097b986c54ddd937c39884790,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation] [Added some hints for fixing wifi power save mode],[Documentation] [Added some hints for fixing wifi power save mode],EXISTS,,,,,,,,,,,,,nwaldispuehl/raspberry-pi-light-server,nwaldispuehl,,,nwaldispuehl,
Grarak,grakernel-tuna,"OMAP4430/60: EMIF: errata: Prohibit usage of Power-Down mode A ZQ calibration long command is issued every time on exit from active power-down and precharge power-down modes when EMIF is configured to use Power-down mode (EMIF_PWR_MGMT_CTRL.REG_LP_MODE=0x4). Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. As result, the guideline is to not allow Power-down mode and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4. TI Errata i743; IMPACTED: OMAP4430/60 all revisions Change-Id: Ib82f28e6e0c6c046ea277b90a78dc82c1ee82417 Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com> Signed-off-by: Vitaly Chernooky <vitaly.chernooky@ti.com>",21/03/2014 21:50:29,,DUPLICATE,https://github.com/Grarak/grakernel-tuna/commit/fd59f0bc0736d5f49f865f48ecb01caaef834b5b,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [8ef6b3c00b0bc811e9aae548e90e56902818efbe],[8ef6b3c00b0bc811e9aae548e90e56902818efbe],EXISTS,,,,,,,,,,,,,Grarak/grakernel-tuna,grygoriyS,,,Grarak,
pinkflozd,android_kernel_motorola_msm8226,regulator: core: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Acked-by: Liam Girdwood <liam.r.girdwood@intel.com> (cherry picked from commit 070260f07c7daec311f2466eb9d1df475d5a46f8) Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: poondog <markj338@gmail.com>,22/03/2014 00:59:36,,SOFT-DUPLICATE,https://github.com/pinkflozd/android_kernel_motorola_msm8226/commit/d5eca9af5c29856c54f6a2654745789d3402e025,,1586,[OK][Efficient Working Queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Efficient Working Queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,,,,,,,,pinkflozd/android_kernel_motorola_msm8226,SyNtheticNightmar3,,,pinkflozd,
SyNtheticNightmar3,android_kernel_samsung_d2,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com>,22/03/2014 01:40:46,,DUPLICATE,https://github.com/SyNtheticNightmar3/android_kernel_samsung_d2/commit/780f00360908bceada9bdad4f15495488440d9f6,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [Use power efficient work queue] [Work queue] [Kernel] [780f00360908bceada9bdad4f15495488440d9f6],[Use power efficient work queue] [Work queue] [Kernel] [780f00360908bceada9bdad4f15495488440d9f6],EXISTS,,,,,,,,,,,,,SyNtheticNightmar3/android_kernel_samsung_d2,SyNtheticNightmar3,,,SyNtheticNightmar3,
shidlovsky,minerva,TV energy consumption data,22/03/2014 11:46:01,,FALSE-POSITIVE,https://github.com/shidlovsky/minerva/commit/b79d7cf827dfa8b3f803d125450e4f8aa8b2e451,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [xlsx],[xlsx],EXISTS,,,,,,,,,,,,,shidlovsky/minerva,elxnis,,,elxnis,
AICP,device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,22/03/2014 21:30:02,,FALSE-POSITIVE,https://github.com/AICP/device_htc_m7-common/commit/801e6762cc7d00975a3a525430e102dac88d9cdb,,,[RELATED][Fix wifi power consumption],[DO NOT ANALYZE],[FALSE-POSITIVE],[Fix wifi power consumption],EXISTS,,,,,,,,,,,,,AICP/device_htc_m7-common,mdmower,,,,
glukolog,bfgminer,"Fix chip detect, and goto low power consume",23/03/2014 07:13:31,,OK,https://github.com/glukolog/bfgminer/commit/c2bec7389d7b942cc416ca14221192dff179f1eb,,,[OK][GO low power consumption],[DO NOT ANALYZE],[OK][GO low power consumption],[GO low power consumption],EXISTS,[Fix chip detect and go to low power] [Reduce voltage],[power saving],[REVIEW] [Go low power consumption] [Reduce voltage],?,,Bitcoin miner,Certain,Embedded,No,OS,C,"Fix chip detect, and goto low power consume",glukolog/bfgminer,,[Frequency and voltage scaling],,,Driver
jimsth,vanir_hammerhead,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Dan Trifan <jimsth@gmail.com>,23/03/2014 08:18:15,,DUPLICATE,https://github.com/jimsth/vanir_hammerhead/commit/88d1107ed96fbd820bff88b23a97c5b4a92dd8c1,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [Use power efficient work queue] [Work queue] [Kernel] [780f00360908bceada9bdad4f15495488440d9f6] [780f00360908bceada9bdad4f15495488440d9f6],[Use power efficient work queue] [Work queue] [Kernel] [780f00360908bceada9bdad4f15495488440d9f6],EXISTS,,,,,,,,,,,,,jimsth/vanir_hammerhead,SyNtheticNightmar3,,,jimsth,
nmeum,parabola-bootstrap,Some more or less voodoo power saving methods See the arch linux wiki for more stuff on this topic https://wiki.archlinux.org/index.php/Power_saving,24/03/2014 00:30:17,,NOT-FOUND,https://github.com/nmeum/parabola-bootstrap/commit/f3544e75e4719d554120960a08f0d4059bbc773b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,nmeum/parabola-bootstrap,,,,,
LiquidSmooth,android_kernel_samsung_jf,New DVFS touch interface.. created by Alucard24 Conflicts: arch/arm/configs/alucard_defconfig Conflicts: arch/arm/configs/alucard_defconfig drivers/input/keyboard/gpio_keys.c drivers/input/touchscreen/synaptics_i2c_rmi.c Improved DVFS touchfreq interface forcing to get previous freq limit previously stored if atomic_get function fail! Fixed previous commit! dvfs touch booster: Use the power efficient workqueue. DVFS touch booster status! Removed dvfs status and implemented dvfs boost mode!,24/03/2014 14:08:02,,NOT-FOUND,https://github.com/LiquidSmooth/android_kernel_samsung_jf/commit/78b8154038e5c1505fdc336222aa145dc241cad7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,LiquidSmooth/android_kernel_samsung_jf,,,,,
zeerd,pebble_abs_plank,power saving,24/03/2014 14:47:15,,OK,https://github.com/zeerd/pebble_abs_plank/commit/02c07ba2433eabad4d055837238f76ca2f1b2610,,,"[OK][Short pulse, long pulse]",[DO NOT ANALYZE],[OK] [Enable Power saving] [App for SMART WATCH],"[Short pulse, long pulse] [Enable Power saving] [App for SMART WATCH]",EXISTS,[use short pulse],[power saving],[REVIEW] [Use short pulse],?,,May be related,Certain,Pebble,No,Application,C,power saving,zeerd/pebble_abs_plank,zeerd,[Miscellaneous],,zeerd,Application
bbarrefors,ucare,Added last schedule and theoretical power consumption,24/03/2014 18:32:30,,FALSE-POSITIVE,https://github.com/bbarrefors/ucare/commit/cabfeef0477f4dc619780a1ec0da7456f803d733,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Checking Power Consumption],[Checking Power Consumption],EXISTS,,,,,,,,,,,,,bbarrefors/ucare,bbarrefors,,,bbarrefors,
haavardlian,UbiSolar,Merge pull request #36 from haavardlian/powerSavingTips Power saving tips,24/03/2014 20:09:33,,FALSE-POSITIVE,https://github.com/haavardlian/UbiSolar/commit/db5266cb6bf430f8a833c59b2f50aeccca6bae5f,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,haavardlian/UbiSolar,haavardlian,,,haavardlian,
dorimanx,Dorimanx-LG-G2-D802-Kernel,Intelli Hot Plug v2.4 use power efficient wq!,25/03/2014 08:26:25,,OK,https://github.com/dorimanx/Dorimanx-LG-G2-D802-Kernel/commit/32a57ed2d5beeb3f1bc50dcaa3908c8c879e5652,,,[OK][Use power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Use power efficient work queue] [Work queue] [Kernel],EXISTS,[Intelli Hot Plug v2.4 use power efficient wq],[power saving],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,Intelli Hot Plug v2.4 use power efficient wq!,dorimanx/Dorimanx-LG-G2-D802-Kernel,dorimanx,[Use power efficient library/device],,dorimanx,Kernel arch
AICP,frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",25/03/2014 09:30:24,,DUPLICATE,https://github.com/AICP/frameworks_base/commit/7445e72e9479f374509ca1978062f9ca73800a6d,,,[OK][set pixel format to PixelFormat.OPAQUE ][Android],[DO NOT ANALYZE],[OK] [Bug Fix] [Set pixel format to opaque in Lockscreen],[set pixel format to PixelFormat.OPAQUE ] [Android] [Bug Fix] [Set pixel format to opaque in Lockscreen],EXISTS,,,,,,[1757],Certain,Android,Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78,OS software stack,Java,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag  FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery.",AICP/frameworks_base,,,,LorDClockaN,Framework
timcowlishaw,undercurrent,failing cuke for energy saving recommendations,25/03/2014 10:15:05,,FALSE-POSITIVE,https://github.com/timcowlishaw/undercurrent/commit/87185f95dc6b8cd9a736f5844b278a6680a43c77,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,timcowlishaw/undercurrent,timcowlishaw,,,timcowlishaw,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"Intelli-Plug: Add sysfs toggle for screen-on-hotplug enable/disable Multi-Core CPUs are meant for working with all cores and are optimized for balanced power consumption. Example: - A Dual-Core CPU running with both cores each at 400mhz needs less power than a Dual-Core CPU running only one core at 800mhz! - Turning the secondary cores constantly on/off alse needs more power than saving it. We only allow CPU1 to be turned off when device goes into suspend. This is better way than using 'Dynamic Hotplug' which doesn't handle big tasks requesting the CPU, so all tasks have to be handled by one cor This new function can be toggled by userspace entry 'int_hotplug'",25/03/2014 21:54:18,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/f669098b73ceaef7d2360bbdab56e1d542844f93,,,[OK][?],[DO NOT ANALYZE],[OK] [CPU Scaling] [Kernel] [Android],[?] [CPU Scaling] [Kernel] [Android],EXISTS,[only allow CPU1 to be turned off when device goes into suspend/screen off],"[A Dual-Core CPU running with both cores each at 400mhz needs less power than a Dual-Core CPU running only one core at 800mhz] [Turning the secondary cores constantly on/off alse needs more power than saving it] [better than using 'Dynamic Hotplug' which doesn't handle big tasks requesting the CPU, so all tasks have to be handled by one cor]",[Allow only one core to be turned off] [Disable dynamic hotplugging],[Core configuration],,,Certain,Android,No,OS,C,"Intelli-Plug: Add sysfs toggle for screen-on-hotplug enable/disable Multi-Core CPUs are meant for working with all cores and are optimized for balanced power consumption.          Example:                  - A Dual-Core CPU running with both cores each at 400mhz needs less power than a Dual-Core CPU running only one core at 800mhz!                 - Turning the secondary cores constantly on/off alse needs more power than saving it.                  We only allow CPU1 to be turned off when device goes into suspend. This is better way than using 'Dynamic Hotplug' which doesn't handle big tasks requesting the CPU, so all tasks have to be handled by one cor",RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,[Miscellaneous],,dtrail,Kernel arch
RAZR-K-Devs,android_kernel_motorola_omap4-common,"Intelli-Plug: Add sysfs toggle for screen-on-hotplug enable/disable Multi-Core CPUs are meant for working with all cores and are optimized for balanced power consumption. Example: - A Dual-Core CPU running with both cores each at 400mhz needs less power than a Dual-Core CPU running only one core at 800mhz! - Turning the secondary cores constantly on/off alse needs more power than saving it. We only allow CPU1 to be turned off when device goes into suspend. This is better way than using 'Dynamic Hotplug' which doesn't handle big tasks requesting the CPU, so all tasks have to be handled by one cor This new function can be toggled by userspace entry 'int_hotplug'",25/03/2014 22:16:15,,DUPLICATE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/f1e0d68acac456c8ab47446c0f47ff6d65352c23,,,[DUP][Above],[DO NOT ANALYZE],[DUPLICATE] [f669098b73ceaef7d2360bbdab56e1d542844f93],[Above] [f669098b73ceaef7d2360bbdab56e1d542844f93],EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,,,dtrail,
yuanwang1980,zenfone,update z6 power saving animation,26/03/2014 06:32:28,,NOT-FOUND,https://github.com/yuanwang1980/zenfone/commit/0a490d3242d76c381af81798b59418eda60ff476,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,yuanwang1980/zenfone,,,,,
chuck-lee,gaia,Bug 907028 - Turn Wifi into power save mode while screen off with wifi lock held. r=alive,26/03/2014 06:50:05,,SOFT-DUPLICATE,https://github.com/chuck-lee/gaia/commit/fa24852328f4728b42d30b8d75f24de229aba16c,,,[OK][Turn Wifi into power save mode while screen off],[DO NOT ANALYZE],[OK] [Bug Fix] [Turn Wifi into power save mode while screen off],[Turn Wifi into power save mode while screen off] [Bug Fix],EXISTS,,,,,,[1684],,,,,,,chuck-lee/gaia,chuck-lee,,,chuck-lee,
espmartin,frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",26/03/2014 16:14:09,,DUPLICATE,https://github.com/espmartin/frameworks_base/commit/b60862f5476edbcfd26498a999a9e1ef39339b94,,,[DUP],[DO NOT ANALYZE],[DUPLICATE [7445e72e9479f374509ca1978062f9ca73800a6d],,EXISTS,,,,,,,,,,,,,espmartin/frameworks_base,,,,espmartin,
haavardlian,UbiSolar,Merge pull request #44 from haavardlian/powerSavingTips Power saving tips,26/03/2014 19:44:37,,FALSE-POSITIVE,https://github.com/haavardlian/UbiSolar/commit/8ed775d92dfa9603bd69a23777e6490e5043c720,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,haavardlian/UbiSolar,haavardlian,,,haavardlian,
AOKP,device_htc_m7-common,m7-common: update wifi.active power profile Fix wifi.active power consumption value. This addresses CYAN-3560. Change-Id: I0ad54f21e8b2bfa0402cf600cba7aeea8619ed28,26/03/2014 19:46:29,,DUPLICATE,https://github.com/AOKP/device_htc_m7-common/commit/ef5b67b28ebcd6170b38eb84281160d051e4ca71,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [801e6762cc7d00975a3a525430e102dac88d9cdb],[801e6762cc7d00975a3a525430e102dac88d9cdb],EXISTS,,,,,,,,,,,,,AOKP/device_htc_m7-common,mdmower,,,BytecodeMe,
IllusionRom-deprecated,android_platform_packages_apps_Bluetooth,Bluetooth: Acquire wake lock to avoid power collapse This ensures that target wont go into power save mode when there is an acl is active and timer are running. Change-Id: I9789c8ae0781a1ca4d33d364efd583ea16e9ee21 CRs-fixed: 576239,26/03/2014 20:32:13,,TRADEOFF,https://github.com/IllusionRom/android_platform_packages_apps_Bluetooth/commit/2a9c5bdc90e621fb0bcb947c65ab0c02cb0ead76,https://github.com/IllusionRom-deprecated/android_platform_packages_apps_Bluetooth/commit/2a9c5bdc90e621fb0bcb947c65ab0c02cb0ead76,,[TRADEOFF][Don't go to power saving when ACL is active],[DO NOT ANALYZE],[TRADEOFF][Don't go to power saving when ACL is active],[Don't go to power saving when ACL is active],EXISTS,[Acquire wakelock] [Do not go into power saving mode],[Do not go into power saving when transmitting],,,,,Certain,Android,CRs-fixed: 576239,Application,"Java,C++",,IllusionRom-deprecated/android_platform_packages_apps_Bluetooth,,Correctness,,AdityaSureka,Application system
linrunner,TLP,README: audio power save depends on the power source since 0.5.,26/03/2014 20:40:49,,FALSE-POSITIVE,https://github.com/linrunner/TLP/commit/2fc989152079982e84acaa142dc81ff4fa9906c7,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,linrunner/TLP,,,,,
BigBrother1984,android_kernel_lge_mako,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",27/03/2014 01:30:00,,DUPLICATE,https://github.com/BigBrother1984/android_kernel_lge_mako/commit/ccce5ce5df3f676f6e9bc0cfe5a80dc0693864bf,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Android] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Android] [Kernel],EXISTS,,,,,,,,Android,No,,,,BigBrother1984/android_kernel_lge_mako,,,,franciscofranco,
scotthartbti,android_kernel_lge_hammerhead,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,27/03/2014 04:01:27,,DUPLICATE,https://github.com/scotthartbti/android_kernel_lge_hammerhead/commit/ceffbedba4049aee38f296701a91fd41820af785,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Android] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Android] [Kernel],EXISTS,,,,,,[1377],,,,,,,scotthartbti/android_kernel_lge_hammerhead,broonie,,,,
aznrice,android_kernel_lge_zee,ASoC: wcd9320: Set HPH bias currents to low power mode Setup the headphone path PA and DAC bias currents to low power mode to increase power consumption efficiency CRs-fixed: 485961 Change-Id: I9492e70f404f96502c7283b38f0d1f3738647d4c Signed-off-by: Bhalchandra Gajare <gajare@codeaurora.org>,27/03/2014 04:58:20,,OK,https://github.com/aznrice/android_kernel_lge_zee/commit/a1e1438dcfa4942a59b06624c1f76d8cd4a3e256,,,[OK] [Set HPH to low power mode],[DO NOT ANALYZE],[OK] [Enable power saving] [Android] [Kernel],[Set HPH to low power mode] [Enable power saving] [Android] [Kernel],EXISTS,[set headphone path PA and DAC bias currents to low power mode],[increase power consumption efficiency],[Set headphone current to low power mode] [Enable device power saving],[Enable device low power mode],,,Certain,Android,No,OS,C,ASoC: wcd9320: Set HPH bias currents to low power mode Setup the headphone path PA and DAC bias currents to low power mode to increase power consumption efficiency,aznrice/android_kernel_lge_zee,,[Disabling feature/devices],,aznrice,Kernel sound
mk74,locy,showing differences between mobile phones on energy efficiency levels -> not so readable,27/03/2014 15:56:42,,FALSE-POSITIVE,https://github.com/mk74/locy/commit/d1563679a037050e552fe5b4d86bcebd2177bcef,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,mk74/locy,mk74,,,mk74,
AragaoAnderson,n5x_frameworks_base,Base: Save power [1/2] Change-Id: I83e53a57f519372e156e7ff14b185d5881f4061b,27/03/2014 22:07:15,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_frameworks_base/commit/88792fd4f1dd580b3f498436012e69296f7edcb9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_frameworks_base,AragaoAnderson,,,AragaoAnderson,
AragaoAnderson,n5x_packages_apps_Settings,Settings: Save power [2/2] Change-Id: I288f0a4c3f65141d398020c5c9998c594edd0cab,27/03/2014 22:07:20,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_packages_apps_Settings/commit/d1efb8e2b787f19a029f719ff65a82f3597bd8a8,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_packages_apps_Settings,AragaoAnderson,,,AragaoAnderson,
AragaoAnderson,n5x_packages_apps_Settings,Settings: Save power [2/2] Change-Id: Id9d92d41f7bcf8b1ca9a184a71bd5a657815129f,28/03/2014 02:05:49,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_packages_apps_Settings/commit/197b9df8cf976a7f516ff0ef122c66cda1704e91,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_packages_apps_Settings,AragaoAnderson,,,AragaoAnderson,
kecinzer,francoKernel_mako,Version 204 * Introduce a new bunch of tunables for my Hotplug driver and squash all code improvements from Hammerhead's version * Uses a power efficient system workqueue to allow the cores to stay longer times on idle * Several key subsystems are now using a newer and more advanced kernel thread infrastructure to allow cores to allow for better power savings * Improved thermal throttle code * Merged all upstream 3.4.y patches * Merged misc patches Signed-off-by: kecinzer <kecinzer@gmail.com>,28/03/2014 06:52:58,,OK,https://github.com/kecinzer/francoKernel_mako/commit/4d91450cde8b859b61b579744980e3ef9911a1c9,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,[use power efficient system workqueue by default],[allow the cores to stay longer times on idle],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,Defconfig,Uses a power efficient system workqueue to allow the cores to stay longer times on idle,kecinzer/francoKernel_mako,kecinzer,[Use power efficient library/device],,kecinzer,Kernel arch
engstk,hammerhead,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,28/03/2014 10:45:45,,NOT-FOUND,https://github.com/engstk/hammerhead/commit/9e88ffc92dc1dfffe7eb5de38fcd5b53339dc84a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,engstk/hammerhead,,,,,
jakew02,android_kernel_lge_msm8974,msm: pil-venus: Decrease the proxy time out value A smaller value of proxy time out (2 sec) is good enough for venus driver to take over the control of the proxy voting resources. Making proxy time out smaller also has the advantage that the venus driver can do power collapse of the core sooner if needed to save power. Change-Id: I9bc1824de4817a565c908d5d7b8b61356d38d168 Signed-off-by: Tianyi Gou <tgou@codeaurora.org>,28/03/2014 20:36:53,,NOT-FOUND,https://github.com/jakew02/android_kernel_lge_msm8974/commit/4bd13a1bf16136a3adfe3ea2c61a91cd489c08ff,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jakew02/android_kernel_lge_msm8974,,,,,
Farrel7786729,HIC,Added energy saving section to report,29/03/2014 08:16:59,,NOT-FOUND,https://github.com/Farrel7786729/HIC/commit/77f1cf922fc6f3cf9287fbbf0918d039d2c90240,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Farrel7786729/HIC,,,,,
weiwangudel,EnergyAutoTuning,uploading speedup graph. The way to calculate energy savings are inconsistent (were) elo: T1/T2 where T1>T2 MIC: 1-T2/T1 where T1>T2 missing speedup graph over sequential,29/03/2014 16:01:06,,FALSE-POSITIVE,https://github.com/weiwangudel/EnergyAutoTuning/commit/afd61ef739e009314c9c6ea08d6ada5b318801fb,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,weiwangudel/EnergyAutoTuning,weiwangudel,,,weiwangudel,
IllusionRom-deprecated,android_kernel_lge_msm8974,msm: pil-venus: Decrease the proxy time out value A smaller value of proxy time out (2 sec) is good enough for venus driver to take over the control of the proxy voting resources. Making proxy time out smaller also has the advantage that the venus driver can do power collapse of the core sooner if needed to save power. Change-Id: I9bc1824de4817a565c908d5d7b8b61356d38d168 Signed-off-by: Tianyi Gou <tgou@codeaurora.org>,29/03/2014 18:05:50,,OK,https://github.com/IllusionRom/android_kernel_lge_msm8974/commit/4bd13a1bf16136a3adfe3ea2c61a91cd489c08ff,https://github.com/IllusionRom-deprecated/android_kernel_lge_msm8974/commit/4bd13a1bf16136a3adfe3ea2c61a91cd489c08ff,,[OK][Decrease the proxy time],[DO NOT ANALYZE],"[?] [RELATED] [""if needed to save power""]","[Decrease the proxy time] [RELATED] [""if needed to save power""]",EXISTS,[Decrease the proxy time out value],[the venus driver can do power collapse of the core sooner] [a smaller value is good enough],[Decrease proxy timeout] [Decrease timeout to idle],[Reduce timeout] [Sub1: go to low power],,,Certain,Android,No,OS,C,Making proxy time out smaller also has the advantage that the venus driver can do power collapse of the core sooner if needed to save power.,IllusionRom-deprecated/android_kernel_lge_msm8974,,[Timing out],,jakew02,Kernel arch
mk74,locy,halfway through energy efficient phone sensing,29/03/2014 20:01:07,,FALSE-POSITIVE,https://github.com/mk74/locy/commit/a65ec76b7571b97ebc90c1b23f4a5954536750e0,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,mk74/locy,mk74,,,mk74,
Blechd0se,kernel-moto-g,defconfig: enable power efficient workqueue Signed-off-by: Blechd0se <alex.christ@hotmail.de>,29/03/2014 21:41:37,,OK,https://github.com/Blechd0se/kernel-moto-g/commit/3c909568c97072024115a05510ca2c78e6a6b9ab,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,[enable power efficient workqueue by default],[power saving],[Use power efficient work queue] [Work queue] [Script],[Use power efficient work queue],,,Certain,Android,No,OS,Defconfig,defconfig: enable power efficient workqueue,Blechd0se/kernel-moto-g,Blechd0se,[Use power efficient library/device],,Blechd0se,Kernel arch
etthomas2010,IBEX,added powerSaveMode Added a power save mode to keep the pumps from running all of the time while the exhibit doesn't need to be active.,29/03/2014 21:43:39,,RELATED,https://github.com/etthomas2010/IBEX/commit/ddae0ebb0f2212c0da280744a458a7cf7e92d5ab,,,[RELATED][Add power save mode],[DO NOT ANALYZE],[RELATED] [Added Power Save Mode],[Add power save mode] [Added Power Save Mode],EXISTS,,,,,,,,,,,,,etthomas2010/IBEX,etthomas2010,,,etthomas2010,
omnirom,android_kernel_samsung_aries,"p1: add more love to 7"" lcd lvds: reduce power consumption from 3.3mV to 3.0mV 3.0 can be used as well (source: lvds datasheet) increase lcd frequency from 60Hz to 67.2Hz main reason: saving battery life mdnie: increase mdnie clock freq from 2.8MHz to 3.0Mhz required for 7"" screensize main reason: bring back fast transitions and animations Signed-off-by: Humberto Borba <humberos@gmail.com> Change-Id: Ic79301f03f6ae798f20584e6b4a294901f3e67e9",29/03/2014 22:02:53,,OK,https://github.com/omnirom/android_kernel_samsung_aries/commit/95f10ae7ecffd96c943d1d2c94f12446cd3387ec,,,[OK][increase lcd frequency][Does not make sense],[DO NOT ANALYZE],[OK] [Increase LCD Frequency] [Kernel] [Android],[increase lcd frequency] [Does not make sense] [Kernel] [Android],EXISTS,[Reduce voltage] [Increase lcd frequency],[power saving],[Reduce voltage],[Reduce voltage],,,Certain,Android,No,OS,C,lvds: reduce power consumption from 3.3mV to 3.0mV 3.0 can be used as well (source: lvds datasheet) increase lcd frequency from 60Hz to 67.2Hz main reason: saving battery life,omnirom/android_kernel_samsung_aries,humberos,[Frequency and voltage scaling],,humberos,Kernel arch
pattyboi,kernel_tuna,net: wireless: bcmdhd: Enable IPv6 RA filter feature 1) We will block IPv6 Router Advertisement multicast packet in suspend mode to save power on device. Bug: 11638281 Signed-off-by: Ecco Park <eccopark@broadcom.com>,30/03/2014 02:14:01,,NOT-FOUND,https://github.com/pattyboi/kernel_tuna/commit/b0a4adea15fbdfbb12ba63bcc9063e8ac0c30617,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,pattyboi/kernel_tuna,,,,,
machinaut,kitepilot,"Safer better faster Emergency stop, power save, less debugging output",30/03/2014 03:50:35,,UNABLE-TO-CATEGORIZE,https://github.com/machinaut/kitepilot/commit/535cc940e18e517072239a28bc6e2618e4c0cb1a,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[OK] [?],[?],EXISTS,,,,,,,,,,,,,machinaut/kitepilot,PenguiNx42,,,PenguiNx42,
raelix,DomoticGpioGui,add energy consumption,30/03/2014 11:46:33,,NOT-FOUND,https://github.com/raelix/DomoticGpioGui/commit/50230338e67facf9a85c68e9159f5d54ab57d519,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Calculating Energy Consumption],[Calculating Energy Consumption],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,raelix/DomoticGpioGui,raelix,,,raelix,
EthanJ99,Hell_kernel_ville,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",30/03/2014 18:37:12,,NOT-FOUND,https://github.com/EthanJ99/Hell_kernel_ville/commit/1f95b412f76611e73fef9608ed9a38974d609ef8,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EthanJ99/Hell_kernel_ville,,,,,
dr87,android_kernel_lge_g2-4.4,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",30/03/2014 20:42:32,,NOT-FOUND,https://github.com/dr87/android_kernel_lge_g2-4.4/commit/011e39d4dfb5d106142623f05156478a1d88317b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,dr87/android_kernel_lge_g2-4.4,,,,,
EthanJ99,hell_kernel_AOSP,"ARM: add support for bit sliced AES using NEON instructions Bit sliced AES gives around 45% speedup on Cortex-A15 for encryption and around 25% for decryption. This implementation of the AES algorithm does not rely on any lookup tables so it is believed to be invulnerable to cache timing attacks. This algorithm processes up to 8 blocks in parallel in constant time. This means that it is not usable by chaining modes that are strictly sequential in nature, such as CBC encryption. CBC decryption, however, can benefit from this implementation and runs about 25% faster. The other chaining modes implemented in this module, XTS and CTR, can execute fully in parallel in both directions. The core code has been adopted from the OpenSSL project (in collaboration with the original author, on cc). For ease of maintenance, this version is identical to the upstream OpenSSL code, i.e., all modifications that were required to make it suitable for inclusion into the kernel have been made upstream. The original can be found here: http://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=6f6a6130 Note to integrators: While this implementation is significantly faster than the existing table based ones (generic or ARM asm), especially in CTR mode, the effects on power efficiency are unclear as of yet. This code does fundamentally more work, by calculating values that the table based code obtains by a simple lookup; only by doing all of that work in a SIMD fashion, it manages to perform better. Cc: Andy Polyakov <appro@openssl.org> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org> Conflicts: arch/arm/crypto/Makefile",31/03/2014 01:33:17,,NOT-FOUND,https://github.com/EthanJ99/hell_kernel_AOSP/commit/483579d7d5978463c26dbd2cc5426e5351582ebd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,EthanJ99/hell_kernel_AOSP,,,,,
qianwan,lpp-wmmse,relative power consumption,31/03/2014 07:26:36,,FALSE-POSITIVE,https://github.com/qianwan/lpp-wmmse/commit/7c996b28ba2e253e1a5d3e8ae38af9f8380253cb,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,qianwan/lpp-wmmse,qianwan,,,qianwan,
qianwan,extended-swmmse,add relative power consumption to wmmse,31/03/2014 07:43:49,,FALSE-POSITIVE,https://github.com/qianwan/extended-swmmse/commit/2989870ef258ccc361f865bc3bce34f33b241ad9,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,qianwan/extended-swmmse,qianwan,,,qianwan,
amurguzur,drain,Update README.md Added link to Energy Consumption Wiki Page,31/03/2014 09:20:12,,NOT-FOUND,https://github.com/amurguzur/drain/commit/555c0d86ec92ee33d3ee24b0f6dcc511833fa581,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,amurguzur/drain,,,,,
chaosdorf,dorfmap,coordinates: update tross power consumption,31/03/2014 15:22:58,,FALSE-POSITIVE,https://github.com/chaosdorf/dorfmap/commit/af781ddcf6857d892b1cdd893c98f36c9fa6a8e4,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,chaosdorf/dorfmap,derf,,,derf,
JeyDroids,android_packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led https://gerrit.omnirom.org/#/c/5386/",31/03/2014 16:46:15,,NOT-FOUND,https://github.com/JeyDroids/android_packages_apps_OmniGears/commit/b0954c0f1d213d6b8ce6ac7ef86110d65eb8a28d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_packages_apps_OmniGears,,,,,
JeyDroids,android_packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync https://gerrit.omnirom.org/#/c/4836/",31/03/2014 16:47:43,,NOT-FOUND,https://github.com/JeyDroids/android_packages_apps_Settings/commit/271ecb48e60906f2833e3c68d69f4a9fdcafbb26,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_packages_apps_Settings,,,,,
JeyDroids,android_frameworks_base,"[1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png https://gerrit.omnirom.org/#/c/4835/",31/03/2014 16:55:21,,NOT-FOUND,https://github.com/JeyDroids/android_frameworks_base/commit/bc6ead91b6175202731efa890945fe2f4da3b803,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_frameworks_base,,,,,
justvarshney,FrancoMako,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",01/04/2014 04:05:17,,DUPLICATE,https://github.com/justvarshney/FrancoMako/commit/ccce5ce5df3f676f6e9bc0cfe5a80dc0693864bf,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1795],,,,,,,justvarshney/FrancoMako,,,,franciscofranco,
RAZR-K-Devs,android_kernel_motorola_omap4-common,"defconfig: Enable hdmi_toggle, enable thermal_sys module, thermal_framework_hwmon Thermal Framework reduces heat by software feature (scaling frequency to lower limits, etc) The thermal_sys (tghermal management sysfs driver) is an addition taken from 3.4 kernel. Thermal Framework proiveds overall power savings and limits IC damage by thermal throttling",01/04/2014 06:37:49,,OK,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/3f2329812930888d37c55dc616f6a8356ff95852,,,[OK][DVFS][System CONF],[DO NOT ANALYZE],[OK] [Scale CPU frequency] [scaling frequency to lower limits] [Kernel] [Android],[DVFS] [System CONF] [Scale CPU frequency] [scaling frequency to lower limits] [Kernel] [Android],EXISTS,[Enable Thermal Framework by default],[Thermal Framework reduces heat by software feature (scaling frequency to lower limits) and provides power savings and limits IC damage by thermal throttling],[Enable power saving feature],[Enable power saving feature],,,Certain,Android,No,OS,Defconfig,"Thermal Framework reduces heat by software feature (scaling frequency to lower limits, etc) The thermal_sys (tghermal management sysfs driver) is an addition taken from 3.4 kernel. Thermal Framework proiveds overall power savings and limits IC damage by thermal throttling",RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,[Use power efficient library/device],,dtrail,Kernel arch
revjunkie,N7100,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: revjunkie <gadgetjuan@gmail.com>",01/04/2014 09:05:06,,NOT-FOUND,https://github.com/revjunkie/N7100/commit/5f19671093827b65948a7cbd6b8d1f72abc05d94,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel] [ccce5ce5df3f676f6e9bc0cfe5a80dc0693864bf],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel] [ccce5ce5df3f676f6e9bc0cfe5a80dc0693864bf],NOT-FOUND-SCRIPT-NOAPI,,,[NOT-FOUND],,,,,,,,,,revjunkie/N7100,,,,revjunkie,
revjunkie,N7100,workqueue:use power efficient,01/04/2014 09:08:22,,NOT-FOUND,https://github.com/revjunkie/N7100/commit/df17e86d89344688c703c5adff36bf63f0dbd512,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],NOT-FOUND-SCRIPT-NOAPI,,,[NOT-FOUND],,,,,,,,,,revjunkie/N7100,revjunkie,,,revjunkie,
revjunkie,N7100,workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. Signed-off-by: revjunkie <gadgetjuan@gmail.com>,01/04/2014 09:18:12,,NOT-FOUND,https://github.com/revjunkie/N7100/commit/75974b5090a08b50c49fc73de57b683e3783d0f4,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],NOT-FOUND-SCRIPT-NOAPI,,,[NOT-FOUND],,,,,,,,,,revjunkie/N7100,revjunkie,,,revjunkie,
nx111,android_kernel_motorola_omap4-common,"defconfig: Enable hdmi_toggle, enable thermal_sys module, thermal_framework_hwmon Thermal Framework reduces heat by software feature (scaling frequency to lower limits, etc) The thermal_sys (tghermal management sysfs driver) is an addition taken from 3.4 kernel. Thermal Framework proiveds overall power savings and limits IC damage by thermal throttling",01/04/2014 11:15:44,,DUPLICATE,https://github.com/nx111/android_kernel_motorola_omap4-common/commit/f3cdc256184030b82dbcbe881ecf0ccdcc6530df,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [3f2329812930888d37c55dc616f6a8356ff95852],[3f2329812930888d37c55dc616f6a8356ff95852],EXISTS,,,,,,,,,,,,,nx111/android_kernel_motorola_omap4-common,dtrail,,,,
barome,HD_mako,"time: RCU permitted to stop idle entry via softirq From: ""Paul E. McKenney"" <paul.mckenney@xxxxxxxxxx> The can_stop_idle_tick() function complains if a softirq vector is raised too late in the idle-entry process, presumably in order to prevent dangling softirq invocations from being delayed across the full idle period, which might be indefinitely long -- and if softirq was asserted any later than the call to this function, such a delay might well happen. However, RCU needs to be able to use softirq to stop idle entry in order to be able to drain RCU callbacks from the current CPU, which in turn enables faster entry into dyntick-idle mode, which in turn reduces power consumption. Because RCU takes this action at a well-defined point in the idle-entry path, it is safe for RCU to take this approach. This commit therefore silences the error message that is sometimes produced when the going-idle CPU suddenly finds that it has an RCU_SOFTIRQ to process. The error message will continue to be issued for other softirq vectors. Reported-by: Sedat Dilek <sedat.dilek@xxxxxxxxx> Signed-off-by: Paul E. McKenney <paul.mckenney@xxxxxxxxxx> Signed-off-by: Paul E. McKenney <paulmck@xxxxxxxxxxxxxxxxxx> Tested-by: Sedat Dilek <sedat.dilek@xxxxxxxxx>",01/04/2014 12:11:09,,FALSE-POSITIVE,https://github.com/barome/kernel_msm/commit/352e0ffe07f7ad26e4b99f5c69ec3ff7af8db833,https://github.com/barome/HD_mako/commit/352e0ffe07f7ad26e4b99f5c69ec3ff7af8db833,,[OK][uses RCU][RCU to be able to use softirq to stop idle entry],[DO NOT ANALYZE],[OK] [?],[uses RCU] [RCU to be able to use softirq to stop idle entry] [?],EXISTS,,,,,,,,,,,,,barome/HD_mako,anarkia1976,,,barome,
aatjitra,CM11,Push Initial Development/Tweak: 1. Swipe2wake 2. Doubletap2wake 3. Kernel hard kexec boot 4. Power Efficient WorkQueue 5. Fix for memory leak ext4 6. SELInux: fix kernel BUG on empty security contexts. 7. Silent most of kernel logs 8. Gradual backlight dimmer 9. jiffies conversions 10. F2FS support 11. SELinux: Fix memory leak upon loading policy 12. FIOPS scheduler for default 13. Addition SIO scheduler 14. Low latency PCM 15. many more,01/04/2014 14:27:00,,NOT-FOUND,https://github.com/aatjitra/CM11/commit/3d5ca0585d0049b36259e80d1cb4e38a669e7f38,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,aatjitra/CM11,,,,,
neobuddy89,hammerhead_kernel_caf,"Revert ""msm: bam_dmux: Use power efficient workqueues for"" This reverts commit ed613eec43b22e11d36d57c87f656de292c9d55e.",01/04/2014 17:01:03,,NOT-FOUND,https://github.com/neobuddy89/hammerhead_kernel_caf/commit/5cfbf00cf23666f9da681c4c7828c8e72619f564,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,neobuddy89/hammerhead_kernel_caf,neobuddy89,,,neobuddy89,
Plain-Andy,android_kernel_lge_msm8974,msm: pil-venus: Decrease the proxy time out value A smaller value of proxy time out (2 sec) is good enough for venus driver to take over the control of the proxy voting resources. Making proxy time out smaller also has the advantage that the venus driver can do power collapse of the core sooner if needed to save power. Change-Id: I9bc1824de4817a565c908d5d7b8b61356d38d168 Signed-off-by: Tianyi Gou <tgou@codeaurora.org>,01/04/2014 19:12:33,,DUPLICATE,https://github.com/Plain-Andy/android_kernel_lge_msm8974/commit/4bd13a1bf16136a3adfe3ea2c61a91cd489c08ff,,,[DUP][https://github.com/IllusionRom-deprecated/android_kernel_lge_msm8974/commit/4bd13a1bf16136a3adfe3ea2c61a91cd489c08ff],[DO NOT ANALYZE],[DUPLICATE] [4bd13a1bf16136a3adfe3ea2c61a91cd489c08ff],[https://github.com/IllusionRom-deprecated/android_kernel_lge_msm8974/commit/4bd13a1bf16136a3adfe3ea2c61a91cd489c08ff] [4bd13a1bf16136a3adfe3ea2c61a91cd489c08ff],EXISTS,,,,,,,,,,,,,Plain-Andy/android_kernel_lge_msm8974,,,,jakew02,
krialix,Aurora,"time: RCU permitted to stop idle entry via softirq From: ""Paul E. McKenney"" <paul.mckenney@xxxxxxxxxx> The can_stop_idle_tick() function complains if a softirq vector is raised too late in the idle-entry process, presumably in order to prevent dangling softirq invocations from being delayed across the full idle period, which might be indefinitely long -- and if softirq was asserted any later than the call to this function, such a delay might well happen. However, RCU needs to be able to use softirq to stop idle entry in order to be able to drain RCU callbacks from the current CPU, which in turn enables faster entry into dyntick-idle mode, which in turn reduces power consumption. Because RCU takes this action at a well-defined point in the idle-entry path, it is safe for RCU to take this approach. This commit therefore silences the error message that is sometimes produced when the going-idle CPU suddenly finds that it has an RCU_SOFTIRQ to process. The error message will continue to be issued for other softirq vectors. Reported-by: Sedat Dilek <sedat.dilek@xxxxxxxxx> Signed-off-by: Paul E. McKenney <paul.mckenney@xxxxxxxxxx> Signed-off-by: Paul E. McKenney <paulmck@xxxxxxxxxxxxxxxxxx> Tested-by: Sedat Dilek <sedat.dilek@xxxxxxxxx>",01/04/2014 22:28:38,,NOT-FOUND,https://github.com/krialix/Aurora/commit/20ff372b110faa069a8362938c7a5d92d8d6ed52,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Aurora,,,,,
NomeAutomation,NomeAutomation,Changed the power saving per KWH into an actual real world value,02/04/2014 05:02:08,,FALSE-POSITIVE,https://github.com/NomeAutomation/NomeAutomation/commit/af99cefb8bb4861eb0fabb18d874e0e5361732a9,,,[RELATED],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,NomeAutomation/NomeAutomation,remcou,,,remcou,
Cl3Kener,UBER-N5,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,02/04/2014 16:10:49,,NOT-FOUND,https://github.com/Cl3Kener/UBER-N5/commit/3605a53ad7fdee6f3c070f3c78fc6cf2f645675b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Cl3Kener/UBER-N5,SyNtheticNightmar3,,,Cl3Kener,
thomasyung,ws-webcam,Enable recorder to blank screen (to save energy).,02/04/2014 16:24:52,,RELATED,https://github.com/thomasyung/ws-webcam/commit/3cf95dfe08c3d897e031927f0420df0a4023dc66,,,[RELATED][Starts cam on blank screen],[DO NOT ANALYZE],[RELATED] [Enable recorder to blank screen],[Starts cam on blank screen] [Enable recorder to blank screen],EXISTS,,,,,,,,,,,,,thomasyung/ws-webcam,thomasyung,,,thomasyung,
Cl3Kener,UBER-N5,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,02/04/2014 16:29:31,,NOT-FOUND,https://github.com/Cl3Kener/UBER-N5/commit/d184d10e8b986b6a037c0d819b3244393586e1e0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Cl3Kener/UBER-N5,SyNtheticNightmar3,,,Cl3Kener,
krialix,Aurora,msm: bam_dmux: tune downlink polling parameters This change disables the BAM DMUX adaptive timer - this is to address concerns about drops in TCP throughput for some use cases with the timer enabled. It also sets the aggregation to 3ms to save power while not compromising performance. Power tests show a savings of 3-4% (compared to having the timer poll the BAM pipe every 1 ms) for LTE (40Mbps downlink and 25Mbps uplink) and HSPA (7Mbps downlink and 384Kbps uplink) with no degradation in performance. Change-Id: Ia51eae773723e60d8b051766ad80bfb0a16f5f6d Signed-off-by: Anurag Singh <anursing@codeaurora.org>,02/04/2014 18:52:05,,NOT-FOUND,https://github.com/krialix/Aurora/commit/56b4b041d5e2ff8f190608aeec0e849c5f1ce42b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Aurora,,,,,
krialix,Aurora,msm: bam_dmux: tune downlink polling parameters This change disables the BAM DMUX adaptive timer - this is to address concerns about drops in TCP throughput for some use cases with the timer enabled. It also sets the aggregation to 3ms to save power while not compromising performance. Power tests show a savings of 3-4% (compared to having the timer poll the BAM pipe every 1 ms) for LTE (40Mbps downlink and 25Mbps uplink) and HSPA (7Mbps downlink and 384Kbps uplink) with no degradation in performance. Change-Id: Ia51eae773723e60d8b051766ad80bfb0a16f5f6d Signed-off-by: Anurag Singh <anursing@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,02/04/2014 19:56:30,,NOT-FOUND,https://github.com/krialix/Aurora/commit/a7e02ae7dbbe51ec74e79636834ef03ed56e3b55,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Aurora,,,,,
jeky82,nexus5_kernel,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,02/04/2014 21:07:20,,OK,https://github.com/jeky82/nexus5_kernel/commit/268fbbf6882f2e8302a7730a2dba988197b591cb,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,[Use power efficient workqueues for delayed timeouts],[no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point.,jeky82/nexus5_kernel,SyNtheticNightmar3,[Use power efficient library/device],,ggambard,Kernel arch
jeky82,nexus5_kernel,"Revert ""msm: bam_dmux: Use power efficient workqueues for"" This reverts commit 5037e01a2d850e4e559d586eb027c81c2a39ca20.",02/04/2014 21:41:45,,REVERT,https://github.com/jeky82/nexus5_kernel/commit/8eba499a83a855648ddca9d5411f85c6e71e3e1b,,,[REVERT],[DO NOT ANALYZE],[REVERT] [5037e01a2d850e4e559d586eb027c81c2a39ca20],[5037e01a2d850e4e559d586eb027c81c2a39ca20],EXISTS,"Revert ""msm: bam_dmux: Use power efficient workqueues for""",,,,,,,,,,,,jeky82/nexus5_kernel,ggambard,,,ggambard,
Alucard24,Alucard-Kernel-jfltexx,alucard_governor: using power efficient wq. alucard_hotplug: cleaning during exit function.,02/04/2014 23:29:04,,OK,https://github.com/Alucard24/Alucard-Kernel-jfltexx/commit/a1e78bb98bb18152fe46a6134ba853de5e1e97fa,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,[using power efficient wq],[power saving],[Use power efficient work queue] [Work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,alucard_governor: using power efficient wq. alucard_hotplug: cleaning during exit function.,Alucard24/Alucard-Kernel-jfltexx,Alucard24,[Use power efficient library/device],,Alucard24,Kernel arch/Driver
Ccomp5950,Baystation12,"APC bugfix after someone messed with mah areas! This was probably bound to happen either way the previous version was based upon a faulty understanding of how the areas worked this is much more robust and only messes with the master areas and master areas needing power updates call power updates for the each of it's child areas. Also added where messing with SMESes called for an update on all areas power consumption, probably not required but doing so either way. We also rebuild the active_areas list every 5 minutes, if you get a engineer that wants to build a new area off of the station with APC's set rebuild_all_areas in the master controller and it will update instantly, otherwise wait 5 minutes. The only downside to this 5 minutes is you might get free energy until that area becomes active.",03/04/2014 02:09:16,,FALSE-POSITIVE,https://github.com/Ccomp5950/Baystation12/commit/6af132b83460589e082b55cd02c38ccb882678f1,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[?] [Bug Fix],[Bug Fix],EXISTS,,,,,,,,,,,,,Ccomp5950/Baystation12,Ccomp5950,,,Ccomp5950,
X-ROM,android_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",03/04/2014 07:12:57,,DUPLICATE,https://github.com/X-ROM/android_frameworks_base/commit/6d597008d63596182748351e298ae239a7d0aef0,,,[OK][Set pixel format to PixelFormat.OPAQUE][DUP?][Android],[DO NOT ANALYZE],[OK] [Set Pixel to Opaque] [Android],[Set pixel format to PixelFormat.OPAQUE] [DUP?] [Android] [Set Pixel to Opaque],EXISTS,,,,,,[1757],,,,,,,X-ROM/android_frameworks_base,,,,aways,
major91,Zeta-Chromium-N5,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,03/04/2014 09:08:04,,DUPLICATE,https://github.com/major91/Zeta-Chromium-N5/commit/93fc6b7fc5884b2bce96515389a93d85cef25298,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue],[Power efficient work queue] [Use power efficient work queue] [Work queue],EXISTS,,,,,,[1842],,,,,,,major91/Zeta-Chromium-N5,SyNtheticNightmar3,,,major91,
jhrr,dotfiles,add screen power saving aliases,03/04/2014 12:35:27,,NOT-FOUND,https://github.com/jhrr/dotfiles/commit/b58e984b89661902f949a71db7dec6ad569814a2,,,[RELATED][Power saving aliases],[DO NOT ANALYZE],[RELATED] [Add Screen Power Saving Aliases],[Power saving aliases] [Add Screen Power Saving Aliases],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,jhrr/dotfiles,jhrr,,,jhrr,
ResurrectionRemix,android_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78 Conflicts: packages/Keyguard/src/com/android/keyguard/KeyguardViewManager.java",03/04/2014 14:07:02,,FALSE-POSITIVE,https://github.com/ResurrectionRemix/android_frameworks_base/commit/679dc2f6db76d3132f5acbf628d57eee5e2d71de,,,[OK][Set pixel format to PixelFormat.OPAQUE][DUP?][Android],[DO NOT ANALYZE],[OK] [Set Pixel to Opaque] [Android],[Set pixel format to PixelFormat.OPAQUE] [DUP?] [Android] [Set Pixel to Opaque],EXISTS,,,,,,,,,,,,,ResurrectionRemix/android_frameworks_base,,,,westcripp,
usmcamgrimm,frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",03/04/2014 15:50:51,,DUPLICATE,https://github.com/usmcamgrimm/frameworks_base/commit/650aa885970480894b585bae9462b5d9266f3eb4,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [6d597008d63596182748351e298ae239a7d0aef0],[6d597008d63596182748351e298ae239a7d0aef0],EXISTS,,,,,,,,,,,,,usmcamgrimm/frameworks_base,,,,nuclearmistake,
TeamHorizon,android_kernel_lge_hammerhead,"Revert ""ASoC: pcm: Use the power efficient workqueue for delayed powerdown"" This reverts commit e9caf64d51ae5bc023315871c8f3519fc21e6368.",03/04/2014 16:07:35,,REVERT,https://github.com/TeamHorizon/android_kernel_lge_hammerhead/commit/2c3092e538af59446c26c9a3b21e69ba76e0172b,,,[REVERT][WHY???],[DO NOT ANALYZE],[REVERT] [e9caf64d51ae5bc023315871c8f3519fc21e6368],[WHY???] [e9caf64d51ae5bc023315871c8f3519fc21e6368],EXISTS,"Revert ""ASoC: pcm: Use the power efficient workqueue for delayed powerdown""",,,,,,,,,,,,TeamHorizon/android_kernel_lge_hammerhead,pcarenza,,,pcarenza,
Canonical-kernel,Ubuntu-kernel,"usb: musb: dsps: move try_idle to start hook BugLink: http://bugs.launchpad.net/bugs/1265614 commit 8b9fcce2d88586b9a120ff3e039d8f42413f0bb0 upstream. The timer is initialized right after musb is probed. There is actually no need to have this timer running because _nothing_ will happen until we have the gadget loaded. Also we need this timer only if we run in OTG mode _and_ we need it also after the gadget has been replaced with another one. I've been looking at am35x.c, da8xx.c, omap2430.c, tusb6010.c. da8xx seem to have the same problem as dsps and doing mostly the same thing. tusb6010 seem to do something different and do some actual ""idle / power saving"" work so I am not too comfortable to remove musb_platform_try_idle() from musb_gadget_setup(). Therefore this patch does not start the timer if there is no gadget active (which is at musb_gadget_setup() at time). In order to have the timer active after the gadget is loaded it will be triggered from dsps_musb_enable(). Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de> Signed-off-by: Felipe Balbi <balbi@ti.com> [ luis: backported to 3.11: adjusted context ] Signed-off-by: Luis Henriques <luis.henriques@canonical.com> Signed-off-by: Brad Figg <brad.figg@canonical.com>",03/04/2014 17:56:21,,FALSE-POSITIVE,https://github.com/Canonical-kernel/Ubuntu-kernel/commit/79982ff1fa70eff8b3dd9a904e66ee7ee4ffdc1c,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,Canonical-kernel/Ubuntu-kernel,,,,,
CyanogenMod,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 09:43:30,,OK,https://github.com/CyanogenMod/android_frameworks_base/commit/a9ff5a97e3c7de3438b19bbe0a43d28f53695edd,,,[OK][reduced signalling traffic],[DO NOT ANALYZE],[OK][reduced signalling traffic],[reduced signalling traffic],EXISTS,,,[REVIEW] [Use power saving component] [Reduce signalling traffic],[Enable power saving service],,,Certain,Android,No,OS,Java,"server: start cne serviceConnectivity Engine (CnE) provides advanced network selection per socket,reduced signalling traffic, and increased power savings.The service implements the interface defined by CNEManager which Androidapplications may use.",CyanogenMod/android_frameworks_base,,[Use power efficient library/device],,cyanogen,Framework
TeamTREX,android_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",04/04/2014 11:07:08,,NOT-FOUND,https://github.com/TeamTREX/android_frameworks_base/commit/8f82e648290bb59cd65e2429fe89a4ca7012726d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_frameworks_base,,,,,
PAC-man,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 13:34:19,,DUPLICATE,https://github.com/PAC-man/android_frameworks_base/commit/b4b6e8fd8410b9c43e709221526fe842449c26da,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,PAC-man/android_frameworks_base,,,,zyonee,
AOSPA-legacy,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 13:47:11,,DUPLICATE,https://github.com/AOSPA-legacy/android_frameworks_base/commit/ac8d6a139e312dbef208fe1cea5c0a95ec8b624b,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,AOSPA-legacy/android_frameworks_base,,,,houst0nn,
apascual89,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 13:49:21,,NOT-FOUND,https://github.com/apascual89/android_frameworks_base/commit/926c48ca2e3a57f53dade35c6b639b9b069a58cb,,,,[DO NOT ANALYZE],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,apascual89/android_frameworks_base,,,,apascual89,
temasek,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 14:04:15,,DUPLICATE,https://github.com/temasek/android_frameworks_base/commit/62492a3381318ac55f938abc7badcda35af942b6,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,temasek/android_frameworks_base,,,,temasek,
Team-OSE,frameworks_base,"[1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",04/04/2014 14:21:00,,NOT-FOUND,https://github.com/Team-OSE/frameworks_base/commit/216ea313cb2dd28971a86befce577264da90e77d,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/3] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/3] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/frameworks_base,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java",04/04/2014 14:30:36,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/7aac7779502fd845a06c8735245c32e9d9b5e6cf,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/3] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/3] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 14:50:26,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/9971e2b0e68cd1b6e1c59ebbf6c758fbf05235b3,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 3/3] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 3/3] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 14:52:13,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/7f9a7451be66c7e30c2f042b91c96ed35d98a788,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/3] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/3] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 15:03:02,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/4862bf07df8941951e7ebe8c292d3c04bf2902b0,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/3] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/3] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",04/04/2014 15:03:25,,NOT-FOUND,https://github.com/Team-OSE/frameworks_base/commit/faa2fb4d1efde9e8546e2e638929edd293a37233,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [216ea313cb2dd28971a86befce577264da90e77d] [* 1/2] [Battery Saver mode],[216ea313cb2dd28971a86befce577264da90e77d] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/frameworks_base,Squadzone,,,timpohladthomas,
cristianomatos,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 15:17:28,,DUPLICATE,https://github.com/cristianomatos/android_frameworks_base/commit/32f9ad2c6ca8737e10cc6e902166599bc70c7b19,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,cristianomatos/android_frameworks_base,,,,cristianomatos,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 15:21:37,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/1f62397d278664d9c872f3c5e60b1d2fc23930d2,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [4862bf07df8941951e7ebe8c292d3c04bf2902b0],[4862bf07df8941951e7ebe8c292d3c04bf2902b0],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
BigBrother1984,android_kernel_lge_mako,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",04/04/2014 15:26:19,,DUPLICATE,https://github.com/BigBrother1984/android_kernel_lge_mako/commit/ccce5ce5df3f676f6e9bc0cfe5a80dc0693864bf,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel] [Android],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,,,,,,[1795],,,,,,,BigBrother1984/android_kernel_lge_mako,,,,franciscofranco,
Team-OSE,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",04/04/2014 15:32:55,,NOT-FOUND,https://github.com/Team-OSE/frameworks_base/commit/475292137b08e39aee3e0810ac8e3f48f1212c17,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/frameworks_base,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 15:52:00,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/4cf4135b0f204a780a1d702c952a89cd9c5cd8d9,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",04/04/2014 15:52:01,,NOT-FOUND,https://github.com/Team-OSE/frameworks_base/commit/6e0b0ed7583a92d0c17db48461d307edd7c5db9c,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/frameworks_base,Squadzone,,,timpohladthomas,
Team-OSE,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",04/04/2014 16:15:13,,NOT-FOUND,https://github.com/Team-OSE/frameworks_base/commit/f18d88942943dc84046e831dc681829168eeb27b,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/frameworks_base,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 16:29:58,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/6884573f8c8c56b7c30ffcf7902d6e0a72fc0177,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 16:39:10,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/c15d1e58060dceb04748d26e6fea394426432db3,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",04/04/2014 16:44:35,,NOT-FOUND,https://github.com/Team-OSE/frameworks_base/commit/fb0feff6cb32cdbdc4964ae5e70f1fbab8efa94f,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [f18d88942943dc84046e831dc681829168eeb27b] [* 1/2] [Battery Saver mode],[f18d88942943dc84046e831dc681829168eeb27b] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/frameworks_base,Squadzone,,,timpohladthomas,
ResurrectionRemix,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347 Conflicts: services/java/com/android/server/SystemServer.java",04/04/2014 16:49:49,,DUPLICATE,https://github.com/ResurrectionRemix/android_frameworks_base/commit/c16580a8388cdc96303db783932e394c9205bb8d,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,ResurrectionRemix/android_frameworks_base,,,,westcripp,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 16:58:29,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/85e0239db52ef33377dfec6ab109c7f5a668f838,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [c15d1e58060dceb04748d26e6fea394426432db3] [* 2/2] [Battery Saver mode],[c15d1e58060dceb04748d26e6fea394426432db3] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",04/04/2014 17:05:12,,NOT-FOUND,https://github.com/Team-OSE/frameworks_base/commit/67008d3a29b38b9387ead563c858cbeb5d9f52f3,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/frameworks_base,Squadzone,,,timpohladthomas,
X-ROM,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 17:09:03,,DUPLICATE,https://github.com/X-ROM/android_frameworks_base/commit/074519771d54ca8b5ab9d51f8c380872f96fa299,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,X-ROM/android_frameworks_base,,,,aways,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 17:13:58,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/bae6cbbb72377d20e2d0f19b260391369c307c58,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 17:18:24,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/71d83dd795aaf37b77d0562bc1b11bf1de73bf5a,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 17:21:27,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/79aa6e872d8466952424d3a86991567758afc5e1,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [c15d1e58060dceb04748d26e6fea394426432db3] [* 2/2] [Battery Saver mode],[c15d1e58060dceb04748d26e6fea394426432db3] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 17:26:32,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/8b50188de9ff8eebb57cc67b1847faa0738f6002,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 17:37:08,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/c32fb6010232abfd9e59800e9599de355cdb631b,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 17:49:29,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/640e399d8810435be752f54157736a3447c0aafc,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
cj360,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 18:15:08,,NOT-FOUND,https://github.com/cj360/android_frameworks_base/commit/4098f8c6d1635caa4adcb2b45215fbf14a7bc8bf,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,cj360/android_frameworks_base,,,,cj360,
cj360,android_frameworks_base,"Rebase 10 updates from aospa-legacy into one commit GC: Improve the string parsing for GC parameter setting Improve the string parsing for GC parameter system property. Previously we only recoganize plain number for dalvik.vm.heapminfree and dalvik.vm.heapconcurrentstart, while users tend to use format as 2m. Improve the string parse to cover such cases. Change-Id: Iaf0152bc4d77e1caabc307a9a7b0e5b261f8e441 bootanim: Add continuous splash support * We may or may not want to have a very smooth transition from the bootloader into Android by way of a continuous splash feature. * Add a compile-time flag which disables the initial screen clearing so that we don't drop a frame during the transition. Change-Id: Ic453c901f1030ffebd9bdbeec59109bb5c585629 core: Add support for Luxembourgish Change-Id: Idd65417a08c5035a75e0d33617dc28c88757a293 Hang off call by power button while screen is on Enable power button end call and screen is off. User use power button to turn on screen will end call. Should turn on screen and not end call Change-Id: Idf34f7724dbf1796205332c5c7ef663102f8a30c Signed-off-by: shower <shower929@gmail.com> Do not show Home behind full screen activity When ensureActivitiesVisibleLocked goes through foreground activity stack and reaches non-fullscreen activity, it sets showHomeBehindStack variable to true. If there is a fullscreen activity behind, showHomeBehindStack remains unchanged, which causes Home application to be displayed anyway. In this case user will see a fullscreen activity and Home activity simultaneously. To fix the issue we set showHomeBehindStack to false when we reach fullscreen activity in the activity stack. This was made visible by the following commit: 446ef1de8d373c1b017df8d19ebf9a47811fb402 Change-Id: I535c1283a4e26f5cf606375b837d4b7195324af0 Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78 Conflicts: packages/Keyguard/src/com/android/keyguard/KeyguardViewManager.java Solve three memory leaks related to PatchCache A Patch can be fairly large, holding bitmap data, but is also frequently leaked which adds to the severity. The feature is used in many important processes such as Home, SystemUI and Chrome. The following leaks are solved: 1. The Patch itself was not always freed. PatchCache::removeDeferred() can mark patches to be cared for by PatchCache::clearGarbage(). But mCache.remove() would only destroy the container and the pointer, not the Patch object itself. 2. The vertices stored in the Patch at Patch::createMesh() would always leak. The empty/default destructor in Patch would not properly destroy ""vertices"" since it's just a pointer. 3. A BufferBlock that's added to the mFreeBlocks in PatchCache could leak. The leak happened when a patch later needed the entire free block, because the object was removed from the list but never deleted in PatchCache::setupMesh(). Change-Id: I41e60824479230b67426fc546d3dbff294c8891f MSimNetworkController: fix Quick Settings Proper values are sent based on the SIM set as the data SIM Change-Id: I2e70e52af54261d54b9527157ae69ae26bec97f1 msim: Add DC-HSPAP support Change-Id: I811af85ba163d57589cb60cd1bb0996b817ee186 server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",04/04/2014 18:16:58,,NOT-FOUND,https://github.com/cj360/android_frameworks_base/commit/46168a6658bd6089f404fea8b8ed6d5a21a817a0,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,cj360/android_frameworks_base,,,,cj360,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 19:00:00,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/91d93358d7d4fa1f3656c29c35348a8e5eb75974,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [640e399d8810435be752f54157736a3447c0aafc] [* 2/2] [Battery Saver mode],[640e399d8810435be752f54157736a3447c0aafc] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
Team-OSE,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",04/04/2014 19:34:09,,NOT-FOUND,https://github.com/Team-OSE/packages_apps_Settings/commit/542ec5b32015a8b85862a7fb134f082ec8868cf1,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [640e399d8810435be752f54157736a3447c0aafc] [* 2/2] [Battery Saver mode],[640e399d8810435be752f54157736a3447c0aafc] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/packages_apps_Settings,Squadzone,,,timpohladthomas,
ValidusAOSP,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led",04/04/2014 22:24:39,,NOT-FOUND,https://github.com/ValidusAOSP/packages_apps_Settings/commit/0b812d9280f9678b11d0ab5dff14d0f56b0f9b4a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ValidusAOSP/packages_apps_Settings,Somber73,,,Somber73,
Liquid-Stuff,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/ose_strings.xml services/java/com/android/server/NotificationManagerService.java",04/04/2014 22:38:41,,NOT-FOUND,https://github.com/Liquid-Stuff/android_frameworks_base/commit/b7b57a2f8c638cc296501c16099326d969003876,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Liquid-Stuff/android_frameworks_base,,,,,
Liquid-Stuff,android_packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Conflicts: AndroidManifest.xml res/values/liquid_arrays.xml res/values/liquid_strings.xml res/xml/ose_advanced_settings.xml",04/04/2014 23:00:32,,NOT-FOUND,https://github.com/Liquid-Stuff/android_packages_apps_Settings/commit/c612388d9454dd8b1703420bbee54a29de846185,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Liquid-Stuff/android_packages_apps_Settings,,,,,
Liquid-Stuff,android_packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Conflicts: AndroidManifest.xml res/values/liquid_arrays.xml res/values/liquid_strings.xml res/xml/ose_advanced_settings.xml",04/04/2014 23:41:11,,NOT-FOUND,https://github.com/Liquid-Stuff/android_packages_apps_Settings/commit/526393e1922f6d4215efb2beb64fbbeecdac1700,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Liquid-Stuff/android_packages_apps_Settings,,,,,
HyperionROM,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Conflicts: AndroidManifest.xml res/values/config.xml res/values/hyperion_strings.xml res/xml/hyperion_advanced_settings.xml",05/04/2014 00:04:51,,SOFT-DUPLICATE,https://github.com/HyperionROM/packages_apps_Settings/commit/0bf933b53b9c1403bc6e197309a9bc55b104d18e,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,HyperionROM/packages_apps_Settings,Squadzone,,,TheBr0ken,
HyperionROM,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Conflicts: AndroidManifest.xml res/values/config.xml res/values/hyperion_strings.xml res/xml/hyperion_advanced_settings.xml",05/04/2014 00:06:43,,SOFT-DUPLICATE,https://github.com/HyperionROM/packages_apps_Settings/commit/94d8ebedcfdca98a3ba149489056d27c7b0fcdc5,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [94d8ebedcfdca98a3ba149489056d27c7b0fcdc5] [* 2/2] [Battery Saver mode],[94d8ebedcfdca98a3ba149489056d27c7b0fcdc5] [* 2/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,HyperionROM/packages_apps_Settings,Squadzone,,,TheBr0ken,
apascual89,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",05/04/2014 02:07:32,,NOT-FOUND,https://github.com/apascual89/android_frameworks_base/commit/1e26ab704bc6d877f96ea320688517d1f4707efe,,,,[DO NOT ANALYZE],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,apascual89/android_frameworks_base,,,,apascual89,
ronasimi,android_kernel_google_msm,"[LINARO] block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Cc: Jens Axboe <axboe@kernel.dk> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> (cherry picked from commit 695588f9454bdbc7c1a2fbb8a6bfdcfba6183348) Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Luis Cruz <ljc2491@gmail.com>",05/04/2014 03:27:52,,DUPLICATE,https://github.com/ronasimi/android_kernel_google_msm/commit/7a8289908c61f1919e05af14ef1f67a81698f094,,,[OK][Use power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel] [Android],[Use power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,,,,,,[1585],,,,,,,ronasimi/android_kernel_google_msm,,,,ronasimi,
Nick0703,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/ose_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",05/04/2014 05:15:36,,NOT-FOUND,https://github.com/Nick0703/android_frameworks_base/commit/d304991ee2ad28ed11a2ee1f71f01117efd83816,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_frameworks_base,,,,,
Nick0703,android_packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Conflicts: AndroidManifest.xml res/values/config.xml res/values/ose_strings.xml res/values/pac_arrays.xml res/xml/ose_advanced_settings.xml res/xml/power_usage_summary.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java",05/04/2014 05:17:10,,NOT-FOUND,https://github.com/Nick0703/android_packages_apps_Settings/commit/4df879fc5550014f5dc602b5d791e68bb36ceb4d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_packages_apps_Settings,Squadzone,,,Nick0703,
tilaksidduram,frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",05/04/2014 05:20:15,,DUPLICATE,https://github.com/tilaksidduram/frameworks_base/commit/e7ed25d7e0d8c165b130cb811af84eca0ffd1634,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,tilaksidduram/frameworks_base,,,,houst0nn,
TeamTREX,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",05/04/2014 05:42:06,,NOT-FOUND,https://github.com/TeamTREX/android_frameworks_base/commit/767684824cbf7bd73fb5b79c3719a152994a2905,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_frameworks_base,,,,,
Nick0703,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/ose_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",05/04/2014 06:38:20,,NOT-FOUND,https://github.com/Nick0703/android_frameworks_base/commit/3ca9a4d677b93059fbd4158061efc6a01d3fe3f4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_frameworks_base,,,,,
Nick0703,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/ose_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",05/04/2014 07:33:52,,NOT-FOUND,https://github.com/Nick0703/android_frameworks_base/commit/53d2d18e856abf81ddb90034353fdfec5d57061d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_frameworks_base,,,,,
Nick0703,android_frameworks_base,"Revert ""show connected devices or name of single device on Bluetooth Tile"" This reverts commit cc344417ef4090bf2a4d969a4146c975d80d4329. Revert ""battery saver mode: updates (1/2)"" This reverts commit 2b604f5059be7c222dbbcb556df9cec4b5879be2. Revert ""battery saver mode: a bit of a revamp"" This reverts commit 475296b424f6acfdf48f34a14879bf7d66262c64. Revert ""battery saver mode: updates and LTE/4G fixes"" This reverts commit 07a3f439898510ad8dfa74e815860f45d8913ed4. Revert ""battery saver mode updates"" This reverts commit 85457e8e6d5168c5388a1fcd7759daef2fc836d9. Revert ""[1/3] Base: Battery Saver mode"" This reverts commit 11765549e98071bd9cec210c919e56fcebceff98. [1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/ose_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java",05/04/2014 07:37:13,,NOT-FOUND,https://github.com/Nick0703/android_frameworks_base/commit/46050635634fa00f57a4c9bd8d64ce0b2e54c1cd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_frameworks_base,,,,,
Nick0703,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java ======================================================================= Upload for PAC. Conflicts: core/java/android/content/Intent.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/ose_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Revert ""show connected devices or name of single device on Bluetooth Tile"" This reverts commit cc344417ef4090bf2a4d969a4146c975d80d4329. Revert ""battery saver mode: updates (1/2)"" This reverts commit 2b604f5059be7c222dbbcb556df9cec4b5879be2. Revert ""battery saver mode: a bit of a revamp"" This reverts commit 475296b424f6acfdf48f34a14879bf7d66262c64. Revert ""battery saver mode: updates and LTE/4G fixes"" This reverts commit 07a3f439898510ad8dfa74e815860f45d8913ed4. Revert ""battery saver mode updates"" This reverts commit 85457e8e6d5168c5388a1fcd7759daef2fc836d9. Revert ""[1/3] Base: Battery Saver mode"" This reverts commit 11765549e98071bd9cec210c919e56fcebceff98. Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",05/04/2014 07:41:40,,NOT-FOUND,https://github.com/Nick0703/android_frameworks_base/commit/602ed275539debd6d197dfd3bc67522c7fd9902b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_frameworks_base,,,,,
Nick0703,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java ======================================================================= Upload for PAC. Conflicts: core/java/android/content/Intent.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/ose_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Revert ""show connected devices or name of single device on Bluetooth Tile"" This reverts commit cc344417ef4090bf2a4d969a4146c975d80d4329. Revert ""battery saver mode: updates (1/2)"" This reverts commit 2b604f5059be7c222dbbcb556df9cec4b5879be2. Revert ""battery saver mode: a bit of a revamp"" This reverts commit 475296b424f6acfdf48f34a14879bf7d66262c64. Revert ""battery saver mode: updates and LTE/4G fixes"" This reverts commit 07a3f439898510ad8dfa74e815860f45d8913ed4. Revert ""battery saver mode updates"" This reverts commit 85457e8e6d5168c5388a1fcd7759daef2fc836d9. Revert ""[1/3] Base: Battery Saver mode"" This reverts commit 11765549e98071bd9cec210c919e56fcebceff98. Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",05/04/2014 07:44:35,,NOT-FOUND,https://github.com/Nick0703/android_frameworks_base/commit/1f1983198f92ccf731bca62d676c87f3a7f23ddc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_frameworks_base,,,,,
Nick0703,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 ======================================================================= Upload for PAC. Conflicts: core/java/android/content/Intent.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/ose_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Revert ""show connected devices or name of single device on Bluetooth Tile"" This reverts commit cc344417ef4090bf2a4d969a4146c975d80d4329. Revert ""battery saver mode: updates (1/2)"" This reverts commit 2b604f5059be7c222dbbcb556df9cec4b5879be2. Revert ""battery saver mode: a bit of a revamp"" This reverts commit 475296b424f6acfdf48f34a14879bf7d66262c64. Revert ""battery saver mode: updates and LTE/4G fixes"" This reverts commit 07a3f439898510ad8dfa74e815860f45d8913ed4. Revert ""battery saver mode updates"" This reverts commit 85457e8e6d5168c5388a1fcd7759daef2fc836d9. Revert ""[1/3] Base: Battery Saver mode"" This reverts commit 11765549e98071bd9cec210c919e56fcebceff98. Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",05/04/2014 07:46:04,,NOT-FOUND,https://github.com/Nick0703/android_frameworks_base/commit/0f151cbbe8d1bf42b10fb6955130acfccdb9b821,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_frameworks_base,,,,,
Dokdo-Project,platform_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery.",05/04/2014 07:47:32,,NOT-FOUND,https://github.com/Dokdo-Project/platform_frameworks_base/commit/494cd51055c7e3b8dd2692cc99b3ac77cd28feab,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Dokdo-Project/platform_frameworks_base,,,,,
Nick0703,android_packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java",05/04/2014 07:51:07,,NOT-FOUND,https://github.com/Nick0703/android_packages_apps_Settings/commit/08498f5ceba6d8ee7ed5f9e804da37c8c83526b1,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_packages_apps_Settings,Squadzone,,,Nick0703,
BuildCraft,BuildCraft,"finished resurection of item / energy consumption, fix #1503",05/04/2014 09:29:02,,FALSE-POSITIVE,https://github.com/BuildCraft/BuildCraft/commit/115a340e80eebdb0cea2ddb2ffdaca15b48c59ae,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[Game],EXISTS,,,,,,,,,,,,,BuildCraft/BuildCraft,SpaceToad,,,SpaceToad,
CM-i9300-builds,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347 (cherry picked from commit 62492a3381318ac55f938abc7badcda35af942b6)",05/04/2014 09:50:39,,NOT-FOUND,https://github.com/CM-i9300-builds/android_frameworks_base/commit/75391692b0a93745267a13310d0df839b5ad59f0,,,,[DO NOT ANALYZE],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,CM-i9300-builds/android_frameworks_base,,,,,
Dirty-Unicorns-Galaxysmtd,android_kernel_samsung_aries,"p1: add more love to 7"" lcd lvds: reduce power consumption from 3.3mV to 3.0mV 3.0 can be used as well (source: lvds datasheet) increase lcd frequency from 60Hz to 67.2Hz main reason: saving battery life mdnie: increase mdnie clock freq from 2.8MHz to 3.0Mhz required for 7"" screensize main reason: bring back fast transitions and animations Signed-off-by: Humberto Borba <humberos@gmail.com> Change-Id: Ic79301f03f6ae798f20584e6b4a294901f3e67e9",05/04/2014 10:14:33,,DUPLICATE,https://github.com/Dirty-Unicorns-Galaxysmtd/android_kernel_samsung_aries/commit/95f10ae7ecffd96c943d1d2c94f12446cd3387ec,,,[OK][increase lcd frequency],[DO NOT ANALYZE],[OK] [Scale CPU frequency] [Kernel] [Android],[increase lcd frequency] [Scale CPU frequency] [Kernel] [Android],EXISTS,,,,,,[1811],,,,,,,Dirty-Unicorns-Galaxysmtd/android_kernel_samsung_aries,humberos,,,humberos,
Triangles,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",05/04/2014 11:07:40,,DUPLICATE,https://github.com/Triangles/android_frameworks_base/commit/8f3fca08172fb9e0dfd8ece3837d68106c4bef98,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,Triangles/android_frameworks_base,,,,dnjsxo,
adammansfield,RealTimeHeartrateDetection,Added power consumption table.,05/04/2014 11:33:27,,FALSE-POSITIVE,https://github.com/adammansfield/RealTimeHeartrateDetection/commit/9029939682c07f28c6f2bb4a0347dd7cd6791776,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,adammansfield/RealTimeHeartrateDetection,adammansfield,,,adammansfield,
aatjitra,n5,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented ��� ���workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Cc: Jens Axboe <axboe@kernel.dk> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> PHYLIB: queue work on system_power_efficient_wq Adapted for 3.4 from lsk-v3.10 Phylib uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces system_wq with system_power_efficient_wq for PHYLIB. Cc: David S. Miller <davem@davemloft.net> Cc: netdev@vger.kernel.org Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> ASoC: pcm: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> regulator: core: Use the power efficient workqueue for delayed powerdown There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Acked-by: Liam Girdwood <liam.r.girdwood@intel.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",05/04/2014 13:57:00,,NOT-FOUND,https://github.com/aatjitra/n5/commit/3a548c381b43d7b8635a59ccad5c16f1287dc422,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,aatjitra/n5,,,,,
TEAM-Gummy,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4",05/04/2014 14:05:45,,DUPLICATE,https://github.com/TEAM-Gummy/android_frameworks_base/commit/34a0aa4f3434071dd0beeb0e71819f772e27c2f6,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,TEAM-Gummy/android_frameworks_base,,,,apascual89,
TeamCanjica,Samsung_STE_Kernel,"mutex: restrict mutex spinning to only one task per mutex Date Thu, 4 Apr 2013 10:54:17 -0400 The current mutex spinning code allow multiple tasks to spin on a single mutex concurrently. There are two major problems with this approach: 1. This is not very energy efficient as the spinning tasks are not doing useful work. The spinning tasks may also block other more important or useful tasks from running as preemption is disabled. Only one of the spinners will get the mutex at any time. The other spinners will have to wait for much longer to get it. 2. The mutex data structure on x86-64 should be 32 bytes. The spinning code spin on lock->owner which, in most cases, should be in the same 64-byte cache line as the lock->wait_lock spinlock. As a result, the mutex spinners are contending the same cacheline with other CPUs trying to get the spinlock leading to increased time spent on the spinlock as well as on the mutex spinning. These problems are worse on system with large number of CPUs. One way to reduce the effect of these two problems is to allow only one task to be spinning on a mutex at any time. This patch adds a new spinner field in the mutex.h to limit the number of spinner to only one task. That will increase the size of the mutex by 8 bytes in a 64-bit environment (4 bytes in a 32-bit environment). The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+2). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | -0.2% | -3.8% | -4.2% | | five_sec | -0.6% | -2.0% | -2.4% | | fserver | +2.2% | +16.2% | +2.2% | | high_systime | -0.3% | -4.3% | -3.0% | | new_fserver | +3.9% | +16.0% | +9.5% | | shared | -1.7% | -5.0% | -4.0% | | short | -7.7% | +0.2% | +1.3% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch improves performance for the fserver and new_fserver workloads while suffering some slight drop in performance for the other workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>",05/04/2014 14:43:56,,DUPLICATE,https://github.com/TeamCanjica/Samsung_STE_Kernel/commit/98dd3a415501b49e926ae22a192388db5961b53d,,,[OK][only one task to be spinning on a mutex at any time],[DO NOT ANALYZE],[DUPLICATE] [b6538d78ba84ff7a246acbbda3dc010db883e8b4],[only one task to be spinning on a mutex at any time] [b6538d78ba84ff7a246acbbda3dc010db883e8b4],EXISTS,,,,,,,,,,,,,TeamCanjica/Samsung_STE_Kernel,longman88,,,zwliew,
aatjitra,n5,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,05/04/2014 15:38:38,,NOT-FOUND,https://github.com/aatjitra/n5/commit/5660d68ef8695d0b59b2700886d53454888432aa,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,aatjitra/n5,,,,,
CROMBi-kk,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",05/04/2014 16:09:50,,NOT-FOUND,https://github.com/CROMBi-kk/android_frameworks_base/commit/a9ff5a97e3c7de3438b19bbe0a43d28f53695edd,,,,[DO NOT ANALYZE],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,CROMBi-kk/android_frameworks_base,,,,cyanogen,
ValidusAOSP,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led",05/04/2014 20:15:44,,NOT-FOUND,https://github.com/ValidusAOSP/packages_apps_Settings/commit/0b812d9280f9678b11d0ab5dff14d0f56b0f9b4a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,ValidusAOSP/packages_apps_Settings,Somber73,,,Somber73,
Nick0703,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 ======================================================================= Upload for PAC. Conflicts: core/java/android/content/Intent.java packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/ose_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Revert ""show connected devices or name of single device on Bluetooth Tile"" This reverts commit cc344417ef4090bf2a4d969a4146c975d80d4329. Revert ""battery saver mode: updates (1/2)"" This reverts commit 2b604f5059be7c222dbbcb556df9cec4b5879be2. Revert ""battery saver mode: a bit of a revamp"" This reverts commit 475296b424f6acfdf48f34a14879bf7d66262c64. Revert ""battery saver mode: updates and LTE/4G fixes"" This reverts commit 07a3f439898510ad8dfa74e815860f45d8913ed4. Revert ""battery saver mode updates"" This reverts commit 85457e8e6d5168c5388a1fcd7759daef2fc836d9. Revert ""[1/3] Base: Battery Saver mode"" This reverts commit 11765549e98071bd9cec210c919e56fcebceff98. Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",05/04/2014 20:34:21,,NOT-FOUND,https://github.com/Nick0703/android_frameworks_base/commit/0f151cbbe8d1bf42b10fb6955130acfccdb9b821,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Nick0703/android_frameworks_base,,,,,
PAC-man,android_packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6",05/04/2014 21:56:54,,SOFT-DUPLICATE,https://github.com/PAC-man/android_packages_apps_Settings/commit/d41f0e4e7f5c9ef9a6bbe5ee5d199abb24bf6171,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,PAC-man/android_packages_apps_Settings,,,,,
PAC-man,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",05/04/2014 21:57:36,,SOFT-DUPLICATE,https://github.com/PAC-man/android_frameworks_base/commit/25362760be2f1da128d05f5dbe9090c6fcef51a3,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,PAC-man/android_frameworks_base,Squadzone,,,Nick0703,
jeky82,nexus5_kernel,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,05/04/2014 22:46:18,,DUPLICATE,https://github.com/jeky82/nexus5_kernel/commit/89414fe72be36a7f587e00fcca78256ac33d750d,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1842],Certain,Android,No,Kernel,C,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point.,jeky82/nexus5_kernel,SyNtheticNightmar3,,,ggambard,Kernel arch
poondog,kangaroo-m7-mkIII,"ARM: add support for bit sliced AES using NEON instructions Bit sliced AES gives around 45% speedup on Cortex-A15 for encryption and around 25% for decryption. This implementation of the AES algorithm does not rely on any lookup tables so it is believed to be invulnerable to cache timing attacks. This algorithm processes up to 8 blocks in parallel in constant time. This means that it is not usable by chaining modes that are strictly sequential in nature, such as CBC encryption. CBC decryption, however, can benefit from this implementation and runs about 25% faster. The other chaining modes implemented in this module, XTS and CTR, can execute fully in parallel in both directions. The core code has been adopted from the OpenSSL project (in collaboration with the original author, on cc). For ease of maintenance, this version is identical to the upstream OpenSSL code, i.e., all modifications that were required to make it suitable for inclusion into the kernel have been made upstream. The original can be found here: http://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=6f6a6130 Note to integrators: While this implementation is significantly faster than the existing table based ones (generic or ARM asm), especially in CTR mode, the effects on power efficiency are unclear as of yet. This code does fundamentally more work, by calculating values that the table based code obtains by a simple lookup; only by doing all of that work in a SIMD fashion, it manages to perform better. Cc: Andy Polyakov <appro@openssl.org> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org> Signed-off-by: poondog <markj338@gmail.com>",06/04/2014 01:20:09,,FALSE-POSITIVE,https://github.com/poondog/kangaroo-m7-mkIII/commit/1f845766c399312293f4df7091f8b31caef5aa14,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],"[?] [Big commit] [Over 5k] [""the effects on power efficiency are unclear as of yet""]","[Big commit] [Over 5k] [""the effects on power efficiency are unclear as of yet""]",EXISTS,,,,,,,,,,,,,poondog/kangaroo-m7-mkIII,ardbiesheuvel,,,poondog,
apascual89,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4",06/04/2014 05:22:37,,NOT-FOUND,https://github.com/apascual89/android_frameworks_base/commit/096e03c27101c8fdf8b519931722fb96685f5043,,,,[DO NOT ANALYZE],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,apascual89/android_frameworks_base,,,,apascual89,
lichti1901,android_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery.",06/04/2014 06:49:07,,NOT-FOUND,https://github.com/lichti1901/android_frameworks_base/commit/12cd6aa2dd8676b09cd0d80dc04a9f60a2e6b3ae,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [6d597008d63596182748351e298ae239a7d0aef0],[6d597008d63596182748351e298ae239a7d0aef0],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,lichti1901/android_frameworks_base,,,,lichti1901,
major91,Zeta-Chromium-N5,"Revert ""msm: bam_dmux: Use power efficient workqueues for"" This reverts commit 93fc6b7fc5884b2bce96515389a93d85cef25298.",06/04/2014 12:13:13,,REVERT,https://github.com/major91/Zeta-Chromium-N5/commit/8109d5ce2aba0c96c17968ebe99f867f7479f070,,,[REVERT][Power efficient work queue],[DO NOT ANALYZE],[REVERT] [93fc6b7fc5884b2bce96515389a93d85cef25298],[Power efficient work queue] [93fc6b7fc5884b2bce96515389a93d85cef25298],EXISTS,"Revert ""msm: bam_dmux: Use power efficient workqueues for""",,,,,,,,,,,,major91/Zeta-Chromium-N5,major91,,,major91,
plaguedbypenguins,android_device_zte_v9,patches: save power by changing the wifi deep sleep timeout to 5mins from 15mins,06/04/2014 13:42:23,,OK,https://github.com/plaguedbypenguins/android_device_zte_v9/commit/f9c0b0ae36dede69da05f272454196fcac369eb7,,,[OK][Change WIFI sleep timeout][ANdroid],[DO NOT ANALYZE],[OK] [change the wifi deep sleep timeout] [Android],[Change WIFI sleep timeout] [ANdroid] [change the wifi deep sleep timeout],EXISTS,[reduce wifi deep sleep timeout to 5 mins],[power saving],[Reduce inactivity timeout] [Reduce WIFI sleep timeout],[Reduce timeout] [Sub1: go to low power],,,Certain,Android,No,OS,Java,patches: save power by changing the wifi deep sleep timeout to 5mins from 15mins,plaguedbypenguins/android_device_zte_v9,plaguedbypenguins,[Timing out],,plaguedbypenguins,Framework
mk74,locy,Loch reiterated + different energy efficiencies reiterated,06/04/2014 20:09:11,,FALSE-POSITIVE,https://github.com/mk74/locy/commit/76fca31f85038e57e425f472fb804ec746b2018f,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Latex],[Latex],EXISTS,,,,,,,,,,,,,mk74/locy,mk74,,,mk74,
mebubo,dotfiles,ansible: brioche: disable disk power saving,06/04/2014 20:21:47,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/mebubo/dotfiles/commit/4a4fa90fac6ff910bd70e81bf7728226f283f706,,,[TRADE-OFF][disable disk power saving][System Conf],[DO NOT ANALYZE],[TRADEOFF] [disable disk power saving],[disable disk power saving] [System Conf],EXISTS,[disable disk power saving],?,,,,,Certain,Personal config files?,No,Script,Yaml,,mebubo/dotfiles,mebubo,,,mebubo,Script yaml
labodj,Hammerhead-Linaro,"Revert ""msm: bam_dmux: Use power efficient workqueues for"" This reverts commit 5037e01a2d850e4e559d586eb027c81c2a39ca20.",06/04/2014 20:46:51,,REVERT,https://github.com/labodj/Hammerhead-Linaro/commit/a6a58197fa6f73d00fbbff8e808ed39bb85b3758,,,[REVERT][Power efficient work queue],[DO NOT ANALYZE],[REVERT] [5037e01a2d850e4e559d586eb027c81c2a39ca20],[Power efficient work queue] [5037e01a2d850e4e559d586eb027c81c2a39ca20],EXISTS,"Revert ""msm: bam_dmux: Use power efficient workqueues for""",,,,,,,,,,,,labodj/Hammerhead-Linaro,franciscofranco,,,labodj,
burstlam,android_packages_apps_Settings,"Port Battery Saver Mode from OmniRom (3/3) introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led",07/04/2014 07:17:02,,OK,https://github.com/burstlam/android_packages_apps_Settings/commit/334b7b15f7d8f23481d694c2d7ef23190d0bc8c3,,,[OK][Disabling devices][Delaying comunication],[DO NOT ANALYZE],[OK] [?],[Disabling devices] [Delaying comunication] [?],EXISTS,,,[REVIEW],[OUTLIER],,"Battery Saver Mode, Multiple changes",Certain,Android,No,Application,Java,,burstlam/android_packages_apps_Settings,burstlam,[OUTLIER],,burstlam,Application
burstlam,android_frameworks_base,"Port Battery Saver Mode from OmniRom (1/3) introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led",07/04/2014 07:18:23,,OK,https://github.com/burstlam/android_frameworks_base/commit/15a2ff851681c32baf226bfeac44de301ee0bc7b,,,[OK][Disabling devices][Delaying comunication],[DO NOT ANALYZE],[OK] [?],[Disabling devices] [Delaying comunication] [?],EXISTS,,,[REVIEW],[OUTLIER],,"Battery Saver Mode, Multiple changes",Certain,Android,No,Application,Java,,burstlam/android_frameworks_base,burstlam,[OUTLIER],,burstlam,Application
burstlam,android_frameworks_base,"Port Battery Saver Mode from OmniRom (1/3) introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync",07/04/2014 09:42:50,,DUPLICATE,https://github.com/burstlam/android_frameworks_base/commit/3270f02cf1051cf9ab83527d69d148b988057048,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [15a2ff851681c32baf226bfeac44de301ee0bc7b],[15a2ff851681c32baf226bfeac44de301ee0bc7b],EXISTS,,,,,,,,,,,,,burstlam/android_frameworks_base,burstlam,,,burstlam,
AOSPAL,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: core/java/android/content/Intent.java core/java/com/android/internal/util/omni/TaskUtils.java packages/SystemUI/res/values/pac_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java services/java/com/android/server/VibratorService.java telephony/java/android/telephony/TelephonyManager.java telephony/java/com/android/internal/telephony/ITelephony.aidl",07/04/2014 12:51:22,,NOT-FOUND,https://github.com/AOSPAL/android_frameworks_base/commit/6a76753f237bf409b1a78b8ac98b22d5a0081392,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_frameworks_base,Squadzone,,,,
AOSPAL,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: core/java/android/content/Intent.java core/java/com/android/internal/util/omni/TaskUtils.java packages/SystemUI/res/values/pac_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java services/java/com/android/server/VibratorService.java telephony/java/android/telephony/TelephonyManager.java telephony/java/com/android/internal/telephony/ITelephony.aidl",07/04/2014 12:53:07,,NOT-FOUND,https://github.com/AOSPAL/android_frameworks_base/commit/293c6045d632ddc048b93f8a0145f66d346802bb,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_frameworks_base,Squadzone,,,,
AOSPAL,android_packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/values/config.xml res/values/pac_arrays.xml res/values/pac_strings.xml res/xml/system_ui_settings.xml",07/04/2014 13:05:21,,NOT-FOUND,https://github.com/AOSPAL/android_packages_apps_Settings/commit/c88c1973c721908b2a64761c97feac5c84c872c6,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_packages_apps_Settings,Squadzone,,,,
JeyDroids,android_frameworks_base,"[Patch 46] [1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png",07/04/2014 16:34:12,,NOT-FOUND,https://github.com/JeyDroids/android_frameworks_base/commit/74afe39a1808c9629f4b5025f040bb36d4aadbea,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_frameworks_base,,,,,
AOSPAL,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png",07/04/2014 16:47:01,,NOT-FOUND,https://github.com/AOSPAL/android_frameworks_base/commit/0263bcf06772d180015e14d023a46cb12f1dbadd,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [6a76753f237bf409b1a78b8ac98b22d5a0081392] [* 1/2] [Battery Saver mode],[6a76753f237bf409b1a78b8ac98b22d5a0081392] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_frameworks_base,Squadzone,,,JescoWalker,
AOSPAL,android_packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/values/config.xml res/values/pac_arrays.xml res/values/pac_strings.xml res/xml/system_ui_settings.xml",07/04/2014 16:54:43,,NOT-FOUND,https://github.com/AOSPAL/android_packages_apps_Settings/commit/1aac177d43d8f7ba5a16e886828611d239703824,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_packages_apps_Settings,Squadzone,,,JescoWalker,
P880-dev,android_kernel_lge_x3,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for grouper kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",07/04/2014 17:29:38,,FALSE-POSITIVE,https://github.com/P880-dev/android_kernel_lge_x3/commit/8786ef98865fc2ec9c6fe58280b7bf09ece85ac1,,,[OK][disable mutex spinning if the current load is high],[DO NOT ANALYZE],[DUPLICATE] [3746af06c20762fc9eb21be42b48707c826a734a],[disable mutex spinning if the current load is high] [3746af06c20762fc9eb21be42b48707c826a734a],EXISTS,,,,,,,,,,,,,P880-dev/android_kernel_lge_x3,faux123,,,Ntemis,
P880-dev,android_kernel_lge_x3,"time: RCU permitted to stop idle entry via softirq RCU needs to be able to use softirq to stop idle entry in order to be able to drain RCU callbacks from the current CPU, which in turn enables faster entry into dyntick-idle mode, which in turn reduces power consumption. This commit therefore silences the error message that is sometimes produced when the going-idle CPU suddenly finds that it has an RCU_SOFTIRQ to process. Signed-off-by: Paul E. McKenney <paul.mckenney@linaro.org> backported by faux123 from Linux 3.5+ to Linux 3.0",07/04/2014 17:32:08,,SOFT-DUPLICATE,https://github.com/P880-dev/android_kernel_lge_x3/commit/49c60ce58af833f9a75d207f898c5496968cddc7,,,[OK][uses RCU][RCU to be able to use softirq to stop idle entry],[DO NOT ANALYZE],[OK] [?] [stop idle] [Kernel] [Android],[uses RCU] [RCU to be able to use softirq to stop idle entry] [?] [stop idle] [Kernel] [Android],EXISTS,,,,,,[1831],,,,,,,P880-dev/android_kernel_lge_x3,Ntemis,,,Ntemis,
tilaksidduram,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: core/java/android/content/Intent.java core/java/com/android/internal/util/omni/TaskUtils.java packages/SystemUI/res/values/pac_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java services/java/com/android/server/VibratorService.java telephony/java/android/telephony/TelephonyManager.java telephony/java/com/android/internal/telephony/ITelephony.aidl Conflicts: core/java/com/android/internal/util/omni/TaskUtils.java packages/SystemUI/res/values/pa_strings.xml services/java/com/android/server/NotificationManagerService.java services/java/com/android/server/VibratorService.java",07/04/2014 20:59:02,,SOFT-DUPLICATE,https://github.com/tilaksidduram/frameworks_base/commit/1703cd0e425e8e2c3270a93cccc63ed0c0ae4e02,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,tilaksidduram/frameworks_base,Squadzone,,,tilaksidduram,
tilaksidduram,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: core/java/android/content/Intent.java core/java/com/android/internal/util/omni/TaskUtils.java packages/SystemUI/res/values/pac_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java services/java/com/android/server/VibratorService.java telephony/java/android/telephony/TelephonyManager.java telephony/java/com/android/internal/telephony/ITelephony.aidl Conflicts: core/java/com/android/internal/util/omni/TaskUtils.java packages/SystemUI/res/values/pa_strings.xml services/java/com/android/server/NotificationManagerService.java services/java/com/android/server/VibratorService.java",07/04/2014 21:30:22,,SOFT-DUPLICATE,https://github.com/tilaksidduram/frameworks_base/commit/f26827237f535b2ea92b74955d5ee52d4cc3e6bc,,,[RELATED][Add power saving option],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,tilaksidduram/frameworks_base,Squadzone,,,tilaksidduram,
dr87,SimpleKernel,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,07/04/2014 21:36:06,,DUPLICATE,https://github.com/dr87/G2_Kitkat_Stock/commit/18dd49a34c5f860d6b4fa109cc86724b4c8d5a8f,https://github.com/dr87/SimpleKernel/commit/18dd49a34c5f860d6b4fa109cc86724b4c8d5a8f,,[OK][Use power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1377],,,,,,,dr87/SimpleKernel,,,,,
adammansfield,RealTimeHeartrateDetection,Split power consumption table into active mode and low power mode.,08/04/2014 00:12:16,,FALSE-POSITIVE,https://github.com/adammansfield/RealTimeHeartrateDetection/commit/34c0242dd1a6a90ce40345a750f8d6b975a087eb,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,adammansfield/RealTimeHeartrateDetection,adammansfield,,,adammansfield,
engstk,hammerhead,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Change-Id: I42ba7b6e315be9f7b3bf1daac423dc41f6c43591 Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,08/04/2014 12:16:59,,NOT-FOUND,https://github.com/engstk/hammerhead/commit/18e9de5a1ab341094233b71d95c82f96afe16584,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,engstk/hammerhead,,,,,
NamelessRom,android_packages_apps_DeviceControl,"DC: extras: add power efficient workqueue toggle we need to chmod it to 644 before as it is not writeable by default on some devices, depending on the kernel implementation. Change-Id: I45d27b18511b32a537f638863cdfb4d584b2174f",08/04/2014 13:47:09,,RELATED,https://github.com/NamelessRom/android_packages_apps_DeviceControl/commit/139f4c45217155483545d2455ea69dd2e6a1d467,https://github.com/Evisceration/android_packages_apps_DeviceControl/commit/139f4c45217155483545d2455ea69dd2e6a1d467,,[OK][Use power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Android],[Use power efficient work queue] [Work queue] [Android],EXISTS,,,,,,,,,,,,,NamelessRom/android_packages_apps_DeviceControl,Evisceration,,,Evisceration,
TEAM-Gummy,android_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",08/04/2014 14:00:29,,DUPLICATE,https://github.com/TEAM-Gummy/android_frameworks_base/commit/31b4e0d987caf2342b81c5e88e827e299d2c25af,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [6d597008d63596182748351e298ae239a7d0aef0],[6d597008d63596182748351e298ae239a7d0aef0],EXISTS,,,,,,,,,,,,,TEAM-Gummy/android_frameworks_base,,,,cphelps76,
CM-Shield,android_kernel_nvidia_roth,net: wireless: bcmdhd: update driver to version 1.88.58 Change list: -Enable TDLS for Nvidia. -RB:21080 JIRA:SWWLAN-41226 CSP:671392 Mobile Hotspot throughput performance is low -RB:20909 JIRA:SWWLAN-41211 Preventing a memory leakage -RB:20818 [Android-Kitkat] Change the logic which controls TDLS connection in Kitkat MR1 framework -RB:20877 [Android-kitkat] enable ipv6 router advertisement packet filter mode in suspend -RB:20654 CSP:730963 Adding AP isoloation code -RB:20808 [Android-Kitkat] change DTIM skip policy in suspend mode of device to solve link lost issue due to beacon lost -RB:17773 [Android-kitkat] Fixed a bug for negative padding -RB:20628 fix about handling BSS peer information -Fix wlu build error by r432432. -RB:19436 CSP:724180 JIRA:SWDHD-39 Roaming trigger value is always initialized to the default when associated to new AP. -RB:19729 [Android-Kitkat] Fixed the corner case of PNO issue -RB:13157 JIRA:SWDHD-39 Fix windows dongle driver hang from r432053 -JIRA:SWDHD-47 RB:19389 Ignore Power Save mode for AIBSS -RB:19106 JIRA:SWWLAN-39738 Fix compile err for r432982 -RB:19246 Fixing bugs about handling TX fail event Fixing bugs about handling TX fail event -RB:19106 JIRA:SWWLAN-39738 Refactoring sdiofifo overrun/underrun tuning code -RB:19163 [Android-Kitkat] Fixed country code setting issue on Nexus-5 -RB:19162 [Android-Kitkat] Fixed corner case of P2P issue in Google Nexus-5 Bug 1397433 Change-Id: I4675f91b512bcd8bd49a384b28a864c106fe372f Signed-off-by: Syed Asifful Dayyan Rafiuddeen <syedd@broadcom.com> Signed-off-by: Om Prakash Singh <omp@nvidia.com> Reviewed-on: http://git-master/r/364087 Reviewed-by: Narayan Reddy <narayanr@nvidia.com> Tested-by: Narayan Reddy <narayanr@nvidia.com> Reviewed-by: Bharat Nihalani <bnihalani@nvidia.com>,08/04/2014 16:21:29,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/CM-Shield/android_kernel_nvidia_roth/commit/1282e9ee337d735b3c66425230d48ebb8c6573a5,,,[TRADE-OFF?][Ignore power saving mode],[DO NOT ANALYZE],[FALSE-POSITIVE],[Ignore power saving mode],EXISTS,,,,,,,,,,,,,CM-Shield/android_kernel_nvidia_roth,,,,,
cm-kang,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",08/04/2014 17:22:34,,DUPLICATE,https://github.com/cm-kang/android_frameworks_base/commit/a9ff5a97e3c7de3438b19bbe0a43d28f53695edd,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,cm-kang/android_frameworks_base,,,,cyanogen,
X-ROM,android_packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6",08/04/2014 22:23:20,,SOFT-DUPLICATE,https://github.com/X-ROM/android_packages_apps_Settings/commit/f40b51b092f4f32f49782f301cab2b9e589ad68d,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,X-ROM/android_packages_apps_Settings,Squadzone,,,aways,
X-ROM,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",08/04/2014 22:23:38,,SOFT-DUPLICATE,https://github.com/X-ROM/android_frameworks_base/commit/0cfb2d7060e555322ac4a2a5ee132371ee9583cf,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,X-ROM/android_frameworks_base,Squadzone,,,aways,
X-ROM,android_frameworks_base,"FWBase: Battery Saver mode [1/4] Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java services/java/com/android/server/NotificationManagerService.java",09/04/2014 00:35:25,,SOFT-DUPLICATE,https://github.com/X-ROM/android_frameworks_base/commit/2f41704b603dc24dc7cee969730f6a57f2d9c757,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/4] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/4] [Battery Saver mode],EXISTS,,,,,,,,,,,,,X-ROM/android_frameworks_base,Squadzone,,,aways,
kecinzer,francoKernel_hammerhead,Version 42 * Couple fixes and reverts * Increased headphones audio quality and reduced power consumption while listening to music * Fixed bug that prevented to reboot to recovery/bootloader. Signed-off-by: kecinzer <kecinzer@gmail.com>,09/04/2014 12:01:07,,FALSE-POSITIVE,https://github.com/kecinzer/francoKernel_hammerhead/commit/691ed83a5207c80b365e4880ef58c77e69d0a0a0,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,kecinzer/francoKernel_hammerhead,kecinzer,,,kecinzer,
JeyDroids,android_frameworks_base,"[Patch 46] [1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D Link: https://gerrit.omnirom.org/#/c/4835/",09/04/2014 13:20:21,,NOT-FOUND,https://github.com/JeyDroids/android_frameworks_base/commit/41b577b67e0c55207fabf60f18ac3dca20ab9604,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_frameworks_base,,,,,
JeyDroids,android_packages_apps_OmniGears,"[Patch 31] [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Link: https://gerrit.omnirom.org/#/c/5386/",09/04/2014 14:20:55,,NOT-FOUND,https://github.com/JeyDroids/android_packages_apps_OmniGears/commit/296d48e9bf541942ad84788d72515798d68f42e4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_packages_apps_OmniGears,,,,,
PureKat,android_frameworks_base,"FWBase: Battery Saver mode [1/4] Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java services/java/com/android/server/NotificationManagerService.java",09/04/2014 14:25:02,,SOFT-DUPLICATE,https://github.com/PureKat/android_frameworks_base/commit/003257fee56b979ef32b606069ece6028c348bfd,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/4] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/4] [Battery Saver mode],EXISTS,,,,,,,,,,,,,PureKat/android_frameworks_base,Squadzone,,,marcomarinho,
Docker-J,Sail_GPROJ,"time: RCU permitted to stop idle entry via softirq From: ""Paul E. McKenney"" <paul.mckenney@xxxxxxxxxx> The can_stop_idle_tick() function complains if a softirq vector is raised too late in the idle-entry process, presumably in order to prevent dangling softirq invocations from being delayed across the full idle period, which might be indefinitely long -- and if softirq was asserted any later than the call to this function, such a delay might well happen. However, RCU needs to be able to use softirq to stop idle entry in order to be able to drain RCU callbacks from the current CPU, which in turn enables faster entry into dyntick-idle mode, which in turn reduces power consumption. Because RCU takes this action at a well-defined point in the idle-entry path, it is safe for RCU to take this approach. This commit therefore silences the error message that is sometimes produced when the going-idle CPU suddenly finds that it has an RCU_SOFTIRQ to process. The error message will continue to be issued for other softirq vectors. Reported-by: Sedat Dilek <sedat.dilek@xxxxxxxxx> Signed-off-by: Paul E. McKenney <paul.mckenney@xxxxxxxxxx> Signed-off-by: Paul E. McKenney <paulmck@xxxxxxxxxxxxxxxxxx> Tested-by: Sedat Dilek <sedat.dilek@xxxxxxxxx>",09/04/2014 14:49:08,,DUPLICATE,https://github.com/Docker-J/lge-kernel-gproj/commit/2dd41a649e83b7937adf4bf38fe8ab9d840b849e,https://github.com/Docker-J/Sail_GPROJ/commit/2dd41a649e83b7937adf4bf38fe8ab9d840b849e,,[OK][uses RCU][RCU to be able to use softirq to stop idle entry],[DO NOT ANALYZE],[OK] [stop idle] [Kernel] [Android],[uses RCU] [RCU to be able to use softirq to stop idle entry] [stop idle] [Kernel] [Android],EXISTS,,,,,,[1831],,,,,,,Docker-J/Sail_GPROJ,,,,,
thelegorom,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Signed-off-by: anerik <anerikgames@gmail.com> Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/slim_strings.xml services/java/com/android/server/NotificationManagerService.java",09/04/2014 19:19:07,,SOFT-DUPLICATE,https://github.com/thelegorom/frameworks_base/commit/25bb4d9580e46d7303235eeacd2dbeff212e075f,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,thelegorom/frameworks_base,Squadzone,,,anerikg,
jamiethemorris,dna-kernel,[LINARO] regulator: core: Use the power efficient workqueue for delayed powerdown There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Acked-by: Liam Girdwood <liam.r.girdwood@intel.com> (cherry picked from commit 070260f07c7daec311f2466eb9d1df475d5a46f8) Signed-off-by: Luis Cruz <ljc2491@gmail.com>,09/04/2014 23:38:13,,DUPLICATE,https://github.com/jamiethemorris/dna-kernel/commit/6dbb42c2068e3505d02377ebdfc144d2f35e89f0,,,[OK][Power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1586],,,,,,,jamiethemorris/dna-kernel,broonie,,,jamiethemorris,
Mahdi-Rom,android_frameworks_base,"[1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: core/java/android/content/Intent.java",10/04/2014 10:52:14,,SOFT-DUPLICATE,https://github.com/Mahdi-Rom/android_frameworks_base/commit/f05724855e0149afa860c87de219ad91a4773490,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/3] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/3] [Battery Saver mode],EXISTS,,,,,,,,,,,,,Mahdi-Rom/android_frameworks_base,Squadzone,,,Mahdi-Rom,
Mahdi-Rom,android_frameworks_base,"[1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: core/java/android/content/Intent.java",10/04/2014 10:52:23,,SOFT-DUPLICATE,https://github.com/Mahdi-Rom/android_frameworks_base/commit/69d7e12cb17fb42727e610119378595578e5cc7b,,,[DUP],[DO NOT ANALYZE],[SOFT-DUPLICATE] [f05724855e0149afa860c87de219ad91a4773490] [* 1/3] [Battery Saver mode],[f05724855e0149afa860c87de219ad91a4773490] [* 1/3] [Battery Saver mode],EXISTS,,,,,,,,,,,,,Mahdi-Rom/android_frameworks_base,Squadzone,,,Mahdi-Rom,
mozilla-b2g,gaia,Merge pull request #16893 from chuck-lee/bug-907028_Wifi_Wake_Lock Bug 979130 - Turn Wifi into power save mode while screen off with wifi lock held.,10/04/2014 13:55:10,,SOFT-DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/9e1b16f8a313bbdc2e9441ba07f620716e5fdd58,,,[OK][power save mode while screen off with wifi lock held],[DO NOT ANALYZE],[OK] [Turn Wifi Into Power Save Mode],[power save mode while screen off with wifi lock held] [Turn Wifi Into Power Save Mode],EXISTS,,,[Bug fix] [Turn Wifi into power save mode],,,[1684],Certain,Firefox Gaia,Bug 907028,Application browser,Javascript,,mozilla-b2g/gaia,rvandermeulen,,,rvandermeulen,Application browser
thelegorom,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Signed-off-by: anerik <anerikgames@gmail.com> Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/slim_strings.xml services/java/com/android/server/NotificationManagerService.java",10/04/2014 17:50:14,,SOFT-DUPLICATE,https://github.com/thelegorom/frameworks_base/commit/4a2db04824f619e769bac58feca74e09223d67de,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,thelegorom/frameworks_base,Squadzone,,,anerikg,
thelegorom,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Signed-off-by: anerik <anerikgames@gmail.com> Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/slim_strings.xml services/java/com/android/server/NotificationManagerService.java",10/04/2014 17:51:19,,SOFT-DUPLICATE,https://github.com/thelegorom/frameworks_base/commit/a99de20593b16d186362c3c5094c17f247d96106,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,thelegorom/frameworks_base,Squadzone,,,anerikg,
thelegorom,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Signed-off-by: anerik <anerikgames@gmail.com> Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Conflicts: AndroidManifest.xml res/values/config.xml res/values/slim_arrays.xml res/values/slim_strings.xml res/xml/slim_advanced_settings.xml",10/04/2014 18:23:50,,SOFT-DUPLICATE,https://github.com/thelegorom/packages_apps_Settings/commit/55880eb4dd451ed2b9939fe43b07bed82d97909a,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,thelegorom/packages_apps_Settings,Squadzone,,,anerikg,
AICP,kernel_samsung_exynos5410,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary. Change-Id: I01bc99c571497a3d849c2752bd439085e784f765 Signed-off-by: Cristoforo Cataldo <cristoforo.cataldo@gmail.com>",10/04/2014 21:41:05,,SOFT-DUPLICATE,https://github.com/AICP/kernel_samsung_exynos5410/commit/a21e169bab308d9ee036de829469394538e0d510,,,[TRADE-OFF][better latencies for miniscule amounts of extra power consumption],[DO NOT ANALYZE],[TRADE-OFF][better latencies for miniscule amounts of extra power consumption],[better latencies for miniscule amounts of extra power consumption],EXISTS,,,,,,,,,,,,,AICP/kernel_samsung_exynos5410,Christopher83,,,semdoc,
kristopolous,tools,Adding the laptop power saver,10/04/2014 23:27:53,,OK,https://github.com/kristopolous/tools/commit/3cdb301f064db5a4c78bb5e01528cac2e47b4faf,,,[RELATED][Laptop power saving][SYSTEM CONF],[DO NOT ANALYZE],[RELATED] [Scale CPU Frequency] [Turn off unneeded LEDS],[Laptop power saving] [SYSTEM CONF] [Scale CPU Frequency] [Turn off unneeded LEDS],EXISTS,Adding the laptop power saver,,,[Outlier],,,Certain,Unix,No,Libraries and Utilities,shell,,kristopolous/tools,kristopolous,[OUTLIER],,kristopolous,Shell script
JeyDroids,android_frameworks_base,"[Patch 46] [1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D Link: https://gerrit.omnirom.org/#/c/4835/",11/04/2014 04:43:00,,NOT-FOUND,https://github.com/JeyDroids/android_frameworks_base/commit/e34317cb0c0e56fde9a1d19a781a42d5c4f26933,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_frameworks_base,,,,,
gtorodelvalle,gaia,Merge pull request #16893 from chuck-lee/bug-907028_Wifi_Wake_Lock Bug 979130 - Turn Wifi into power save mode while screen off with wifi lock held.,11/04/2014 07:41:21,,DUPLICATE,https://github.com/gtorodelvalle/gaia/commit/9e1b16f8a313bbdc2e9441ba07f620716e5fdd58,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [9e1b16f8a313bbdc2e9441ba07f620716e5fdd58],[9e1b16f8a313bbdc2e9441ba07f620716e5fdd58],EXISTS,,,,,,,,,,,,,gtorodelvalle/gaia,rvandermeulen,,,rvandermeulen,
temasek,android_kernel_samsung_hlte,"ksm: Provide support to use deferred timers for scanner thread KSM thread to scan pages is getting schedule on definite timeout. That wakes up CPU from idle state and hence may affect the power consumption. Provide an optional support to use deferred timer which suites low-power use-cases. To enable deferred timers, $ echo 1 > /sys/kernel/mm/ksm/deferred_timer Signed-off-by: Chintan Pandya <cpandya@codeaurora.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>",11/04/2014 09:17:13,,RELATED,https://github.com/temasek/android_kernel_samsung_hlte/commit/9bb30fe03045508661604406b279252f6fe31617,,,[TRADE-OFF][ use deferred timers may affect power consumption],[DO NOT ANALYZE],[?],[ use deferred timers may affect power consumption],EXISTS,,,,,,,,,,,,,temasek/android_kernel_samsung_hlte,,,,temasek,
twolfhart,solar-nexus,Working on the Status>Admin>Power Save navigation,11/04/2014 11:34:33,,FALSE-POSITIVE,https://github.com/twolfhart/solar-nexus/commit/bd227ce363ef55bd95c6f1d5567445bc4b980710,,,[FASLE-POSITIVE][Navigation MENU],[DO NOT ANALYZE],[FALSE-POSITIVE],[Navigation MENU],EXISTS,,,,,,,,,,,,,twolfhart/solar-nexus,mattedj,,,mattedj,
major91,Zeta-Chromium-N5,"ARM: add support for bit sliced AES using NEON instructions Bit sliced AES gives around 45% speedup on Cortex-A15 for encryption and around 25% for decryption. This implementation of the AES algorithm does not rely on any lookup tables so it is believed to be invulnerable to cache timing attacks. This algorithm processes up to 8 blocks in parallel in constant time. This means that it is not usable by chaining modes that are strictly sequential in nature, such as CBC encryption. CBC decryption, however, can benefit from this implementation and runs about 25% faster. The other chaining modes implemented in this module, XTS and CTR, can execute fully in parallel in both directions. The core code has been adopted from the OpenSSL project (in collaboration with the original author, on cc). For ease of maintenance, this version is identical to the upstream OpenSSL code, i.e., all modifications that were required to make it suitable for inclusion into the kernel have been made upstream. The original can be found here: http://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=6f6a6130 Note to integrators: While this implementation is significantly faster than the existing table based ones (generic or ARM asm), especially in CTR mode, the effects on power efficiency are unclear as of yet. This code does fundamentally more work, by calculating values that the table based code obtains by a simple lookup; only by doing all of that work in a SIMD fashion, it manages to perform better. Cc: Andy Polyakov <appro@openssl.org> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>",11/04/2014 15:06:00,,SOFT-DUPLICATE,https://github.com/major91/Zeta-Chromium-N5/commit/5f138a1cfdd92ed873474ddcfc427416d62920ba,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],"[?] [Big commit] [Over 5k] [""the effects on power efficiency are unclear as of yet""] [1f845766c399312293f4df7091f8b31caef5aa14]","[Big commit] [Over 5k] [""the effects on power efficiency are unclear as of yet""] [1f845766c399312293f4df7091f8b31caef5aa14]",EXISTS,,,,,,,,,,,,,major91/Zeta-Chromium-N5,ardbiesheuvel,,,major91,
X-ROM,android_frameworks_base,"FWBase: Battery Saver mode [1/4] Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java services/java/com/android/server/NotificationManagerService.java",11/04/2014 18:01:26,,SOFT-DUPLICATE,https://github.com/X-ROM/android_frameworks_base/commit/d4ec192e6003bd20330e9af30c49b299ee331615,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/4] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/4] [Battery Saver mode],EXISTS,,,,,,,,,,,,,X-ROM/android_frameworks_base,Squadzone,,,aways,
X-ROM,android_frameworks_base,"base: Battery Saver mode [1/2] Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png",11/04/2014 22:21:01,,SOFT-DUPLICATE,https://github.com/X-ROM/android_frameworks_base/commit/d09f01e6bf4ecf67b4dd167e9f312facb502db11,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,X-ROM/android_frameworks_base,Squadzone,,,aways,
19cam92,Finnys_Kernel,SDIO: Enable power saving mode,12/04/2014 00:56:42,,NOT-FOUND,https://github.com/19cam92/Finnys_Kernel/commit/d7bcf20bac44b99b23abcc9b315ded491f6fbcdb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,19cam92/Finnys_Kernel,,,,,
ValeraSh,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",12/04/2014 08:39:50,,DUPLICATE,https://github.com/ValeraSh/android_frameworks_base/commit/62492a3381318ac55f938abc7badcda35af942b6,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,ValeraSh/android_frameworks_base,,,,temasek,
pinkflozd,android_kernel_motorola_msm8226,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: Blechd0se <alex.christ@hotmail.de> Conflicts: arch/arm/mach-msm/bam_dmux.c,12/04/2014 14:01:01,,SOFT-DUPLICATE,https://github.com/pinkflozd/android_kernel_motorola_msm8226/commit/e98f40188c3251db926185926509fb2dde6beafe,,,[OK][Use power efficient workqueues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel] [Android],[Use power efficient workqueues] [Use power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,,,[Use power efficient work queue] [Work queue],,,[1842],Certain,Android,No,Kernel,C,,pinkflozd/android_kernel_motorola_msm8226,SyNtheticNightmar3,,,pinkflozd,Kernel arch/Driver
ucb-bar,riscv-linux,Save power with long-latency stall in cpu_relax(),13/04/2014 00:11:51,,OK,https://github.com/ucb-bar/riscv-linux/commit/68e21e687fb9f587dc7361bab7b8df34c4337625,https://github.com/riscv/riscv-linux/commit/68e21e687fb9f587dc7361bab7b8df34c4337625,,[OK][Save power with long-latency stall],[DO NOT ANALYZE],[OK] [Go to idle] [Kernel],[Save power with long-latency stall] [Go to idle] [Kernel],EXISTS,[Peform long-latency stall in cpu_relax],[power saving],[Introduce long latency stall],[Stall CPU instead of halting],,,Certain,Linux riscv,No,OS,C,Save power with long-latency stall in cpu_relax(),ucb-bar/riscv-linux,aswaterman,[Miscellaneous],,aswaterman,Kernel arch
ktemkin,JD-beacon-board,"[BOARD_SOFT] Changes the unused inputs so they're ""pulled up"" to VDD. This change reduces the device's power consumption.",13/04/2014 05:14:58,,OK,https://github.com/ktemkin/JD-beacon-board/commit/b87d9ed85f864ddd9f7905176e6a65412f77d0fc,,,[OK][pull up unused Devices],[DO NOT ANALYZE],[OK] [?],[pull up unused Devices] [?],EXISTS,[Pull up unused pins],[power saving],[Set pull-up on pins] [Set pull-up on unused pins],[Pin configuration],,,Certain,Embedded,No,Application,C,"[BOARD_SOFT] Changes the unused inputs so they're ""pulled up"" to VDD. This change reduces the device's power consumption.",ktemkin/JD-beacon-board,ktemkin,[Pin management],,ktemkin,Embedded application
ktemkin,JD-beacon-board,"[BOARD_SOFT] Changes the unused inputs so they're ""pulled up"" to VDD. This change reduces the device's power consumption.",13/04/2014 05:18:41,,DUPLICATE,https://github.com/ktemkin/JD-beacon-board/commit/568ab25bb253074b767a08889ddf165eb33f51c0,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [b87d9ed85f864ddd9f7905176e6a65412f77d0fc],[b87d9ed85f864ddd9f7905176e6a65412f77d0fc],EXISTS,,,,,,,,,,,,,ktemkin/JD-beacon-board,ktemkin,,,ktemkin,
KylinMod,android_frameworks_base,base: Toggle Power Saver Notification (1/2) Change-Id: Id1805b218208187d92724bedd1fdce37cc833502,13/04/2014 06:07:47,,NOT-FOUND,https://github.com/KylinMod/android_frameworks_base/commit/0804343c43d28fc09f4ec39650e018abe05ec4ac,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,KylinMod/android_frameworks_base,,,,,
KylinMod,android_packages_apps_Settings,Settings: Fix power saver settings,13/04/2014 06:26:24,,NOT-FOUND,https://github.com/KylinMod/android_packages_apps_Settings/commit/03492d149ee5c72d6f94b356a890ba9ab5506bca,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,KylinMod/android_packages_apps_Settings,,,,,
KylinMod,android_packages_apps_Settings,Settings: Toggle Power Saver notification (2/2) Change-Id: I6a2a0b33007d2df5f6147c872c312d2987758e12,13/04/2014 06:28:13,,NOT-FOUND,https://github.com/KylinMod/android_packages_apps_Settings/commit/df4d74bcf7f926c30f4569912a0fa2ac1c014fdb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,KylinMod/android_packages_apps_Settings,,,,,
supersonicninja,kernel10c,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s >From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>",13/04/2014 13:01:03,,DUPLICATE,https://github.com/supersonicninja/kernel10c/commit/d2853fd41a1ff862dd4a456ce4cb79c12f7d0534,,,[DUP],[DO NOT ANALYZE],[?] [DUPLICATE] [73b2662548cfd5deaa26b20788923a41abad3972],[DUPLICATE] [73b2662548cfd5deaa26b20788923a41abad3972],EXISTS,,,,,,,,,,,,,supersonicninja/kernel10c,zhang-rui,,,supersonicninja,
TeamRevolution,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Signed-off-by: scott <scott@ubuntu> Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/ose_strings.xml services/java/com/android/server/NotificationManagerService.java Conflicts: services/java/com/android/server/NotificationManagerService.java Conflicts: packages/SystemUI/res/values/slim_strings.xml services/java/com/android/server/NotificationManagerService.java",13/04/2014 20:53:16,,SOFT-DUPLICATE,https://github.com/TeamRevolution/frameworks_base/commit/7efb25531adb496e14544899ae89c04fc721e3b7,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,TeamRevolution/frameworks_base,timpohladthomas,,,neophite31,
JustArchi,android_frameworks_base,"[1/3] Base: Battery Saver mode PS 46 Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java",13/04/2014 20:57:47,,NOT-FOUND,https://github.com/JustArchi/android_frameworks_base/commit/67e37f4150329d0cdce2047dfe045b352b912023,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JustArchi/android_frameworks_base,,,,,
JustArchi,android_packages_apps_Settings-old,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04",13/04/2014 20:58:05,,SOFT-DUPLICATE,https://github.com/JustArchi/android_packages_apps_Settings/commit/830d45062b17e7e18ae489e5858905a60e5da970,https://github.com/JustArchi/android_packages_apps_Settings-old/commit/830d45062b17e7e18ae489e5858905a60e5da970,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/3] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 2/3] [Battery Saver mode],EXISTS,,,,,,,,,,,,,JustArchi/android_packages_apps_Settings-old,,,,,
JustArchi,android_packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6",13/04/2014 20:58:58,,NOT-FOUND,https://github.com/JustArchi/android_packages_apps_OmniGears/commit/6d9eb06614f64f5947ab0290a6d1465f082a7b0c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JustArchi/android_packages_apps_OmniGears,,,,,
TeamRevolution,packages_apps_Settings,"[2/2] Squashed: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6 Conflicts: res/layout/separator_label.xml res/values/custom_arrays.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Conflicts: AndroidManifest.xml res/values/config.xml res/values/slim_arrays.xml res/values/slim_strings.xml res/xml/slim_advanced_settings.xml src/com/android/settings/util/CMDProcessor.java src/com/android/settings/util/Helpers.java",13/04/2014 21:28:46,,SOFT-DUPLICATE,https://github.com/TeamRevolution/packages_apps_Settings/commit/89a3a58924725c386adc315c28b972a85abce52a,,,[RELATED][Add power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Add power saving mode] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,TeamRevolution/packages_apps_Settings,Squadzone,,,neophite31,
Ntemis,android_kernel_bn_acclaim,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",14/04/2014 10:19:41,,DUPLICATE,https://github.com/Ntemis/android_kernel_bn_acclaim/commit/634c4d136df5bac67a6a6fb37b193fb66c8686be,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [8786ef98865fc2ec9c6fe58280b7bf09ece85ac1],[8786ef98865fc2ec9c6fe58280b7bf09ece85ac1],EXISTS,,,,,,,,,,,,,Ntemis/android_kernel_bn_acclaim,faux123,,,Ntemis,
TeamTREX,android_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",14/04/2014 19:22:21,,NOT-FOUND,https://github.com/TeamTREX/android_frameworks_base/commit/d6d532a4aae5c74995848736606395810ffe0356,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_frameworks_base,,,,,
TeamTREX,android_frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",14/04/2014 19:25:14,,NOT-FOUND,https://github.com/TeamTREX/android_frameworks_base/commit/fd357252aa4ab2b7fe60e97beb664aa78d16e152,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_frameworks_base,,,,,
JeyDroids,android_frameworks_base,"[Patch 46] [1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D Link: https://gerrit.omnirom.org/#/c/4835/",14/04/2014 21:12:48,,NOT-FOUND,https://github.com/JeyDroids/android_frameworks_base/commit/85c337ef2ce415695ffb1d6ed5a4d47be29d6309,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_frameworks_base,,,,,
JeyDroids,android_packages_apps_OmniGears,"[Patch 31] [3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Link: https://gerrit.omnirom.org/#/c/5386/",14/04/2014 21:14:05,,NOT-FOUND,https://github.com/JeyDroids/android_packages_apps_OmniGears/commit/b6373612951556a420ef508f2dfe1cb4e56fc7db,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/android_packages_apps_OmniGears,,,,,
engstk,hammerhead,ASoC: pcm: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Change-Id: Ieb0c2e8bfe6e002914f82240d2f5a00e27198f96 Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,15/04/2014 16:16:44,,NOT-FOUND,https://github.com/engstk/hammerhead/commit/d9b17b1cf17f61a6511ec33d51d9c6f03872002c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,engstk/hammerhead,,,,,
AragaoAnderson,kitkat_kernel_hammerhead,msm: vidc: Mask interrupts from venus after receiving IDLE message IDLE message from venus indicates that the venus is idle and its clocks are turned off. These clocks should not be turned on by any pending or spurious(interrupts without any message) interrupts to save power. Change-Id: I622212a7e8c51106fbf69c491d129f219eb6ce54 CRs-fixed: 583989 Signed-off-by: Vinay Kalia <vkalia@codeaurora.org> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,15/04/2014 21:15:55,,OK,https://github.com/AragaoAnderson/kernel_hammerhead/commit/3f489cfcbf8c224fbd0ebc4d131dee256f69ccde,https://github.com/AragaoAnderson/kitkat_kernel_hammerhead/commit/3f489cfcbf8c224fbd0ebc4d131dee256f69ccde,,[OK][?],[DO NOT ANALYZE],[OK][?],[?],EXISTS,[Mask interrupts from venus after receiving IDLE message],[IDLE message from venus indicates that the venus is idle and its clocks are turned off. These clocks should not be turned on by any interrupts],[Disable interrupt on idle] [Disable interrupt],[Disable interrupt],,,Certain,Android,CRs-fixed: 583989,OS,C,msm: vidc: Mask interrupts from venus after receiving IDLE message IDLE message from venus indicates that the venus is idle and its clocks are turned off. These clocks should not be turned on by any pending or spurious(interrupts without any message) interrupts to save power.,AragaoAnderson/kitkat_kernel_hammerhead,,[Disabling feature/devices],,AragaoAnderson,Driver media
RAZR-K-Devs,android_kernel_motorola_omap4-common,"--- BREAKING POINT --- I included some back- and 'forward-'ports, partly very old, but still effective. At this point we start the testing phase. Battery drain should be fixed and overall power consumption improved - hopefully. - add changes to defconfigs",15/04/2014 22:26:28,,UNABLE-TO-CATEGORIZE,https://github.com/RAZR-K-Devs/android_kernel_motorola_omap4-common/commit/fac4e374861cd15309db1ae0c5afb418e88f5f47,,,[OK][ADD BACK PORTS?],[DO NOT ANALYZE],[?] [OK] [Bug fix],[ADD BACK PORTS?] [OK] [Bug fix],EXISTS,,,,,,,,,,,,,RAZR-K-Devs/android_kernel_motorola_omap4-common,dtrail,,,dtrail,
Snowda,RFM22,renamed defined static values so they cannot conflict with other libraries. added power consumption variable. added operating mode functions. set frequency function.,16/04/2014 06:46:06,,NOT-FOUND,https://github.com/Snowda/RFM22/commit/4456abd74a1ec0c76aad0c6ce08906803786aa6c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Snowda/RFM22,,,,,
invisiblek,caf_kernel_msm,"msm: mdss: release mdp bandwidth voting for command mode when idle There is no bandwidth usage for command mode panel if no new commit comes, so mdp bandwidth request can be zero as soon as data transfer to panel is done. This could bring power savings for use cases of short transfer time relatively to long idle time (duty cycle) such as partial update, and slow fps. When video mode panel is present, this bandwidth cannot be released since the timing of this release is unpredictable. Change-Id: Ia67143aa421b7b8d8b1f359244dd397dab369b4a Signed-off-by: Huaibin Yang <huaibiny@codeaurora.org> Signed-off-by: Jayant Shekhar <jshekhar@codeaurora.org>",16/04/2014 09:12:02,,OK,https://github.com/invisiblek/caf_kernel_msm/commit/5af81eddd86f6f21af246d86fe616f1b47f01c0c,,,[OK][release mdp bandwidth voting for command mode when idle][APP SPECIFIC],[DO NOT ANALYZE],[OK] [Disable Component],[release mdp bandwidth voting for command mode when idle] [APP SPECIFIC] [Disable Component],EXISTS,[release mdp bandwidth voting for command mode when idle],"[There is no bandwidth usage for command mode panel if no new commit comes, so mdp bandwidth request can be zero as soon as data transfer to panel is done]",[Release resource] [Release resource when not needed] [release mdp bandwidth voting for command mode when idle] ,,,,Uncertain,CodeAurora,No,OS,C,"msm: mdss: release mdp bandwidth voting for command mode when idleThere is no bandwidth usage for command mode panel if no new commitcomes, so mdp bandwidth request can be zero as soon as data transferto panel is done. This could bring power savings for use cases ofshort transfer time relatively to long idle time (duty cycle) such aspartial update, and slow fps. When video mode panel is present, thisbandwidth cannot be released since the timing of this release isunpredictable.",invisiblek/caf_kernel_msm,,[Miscellaneous],,,Driver video
engstk,hammerhead,ASoC: pcm: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Change-Id: Ieb0c2e8bfe6e002914f82240d2f5a00e27198f96 Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,16/04/2014 12:27:02,,NOT-FOUND,https://github.com/engstk/hammerhead/commit/d9b17b1cf17f61a6511ec33d51d9c6f03872002c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,engstk/hammerhead,,,,,
temasek,android_kernel_samsung_hlte,"Revert ""msm: bam_dmux: Use power efficient workqueues for"" This reverts commit ed2133ae7da1b362c9c683f7b0f1f469dd1a161a.",16/04/2014 13:59:05,,REVERT,https://github.com/temasek/android_kernel_samsung_hlte/commit/781e327a5fbd00460951362a934517676c07844a,,,[REVERT][Power efficient work queue],[DO NOT ANALYZE],[REVERT] [ed2133ae7da1b362c9c683f7b0f1f469dd1a161a],[Power efficient work queue] [ed2133ae7da1b362c9c683f7b0f1f469dd1a161a],EXISTS,"Revert ""msm: bam_dmux: Use power efficient workqueues for""",,,,,,,,,,,,temasek/android_kernel_samsung_hlte,temasek,,,temasek,
Lens-F,Leaping_Lemur,Add smartmax_eps (extreme power saving) cpu governor,16/04/2014 16:21:03,,RELATED,https://github.com/Lens-F/Leaping_Lemur/commit/f7d8996460b8179a7bedaa39808dc54c257bbf7b,https://github.com/talnoah/Leaping_Lemur/commit/f7d8996460b8179a7bedaa39808dc54c257bbf7b,,[RELATED][ADD CPU GOVERNOR],[DO NOT ANALYZE],[RELATED] [Add Governor] [Governor] [Kernel],[ADD CPU GOVERNOR] [Add Governor] [Governor] [Kernel],EXISTS,,,,,,,,,,,,,Lens-F/Leaping_Lemur,Lens-F,,,Lens-F,
Pafcholini,Htc_One_M7_Kernel_KK,ASoC: pcm: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit d4e1a73) Signed-off-by: Luis Cruz <ljc2491@gmail.com>,16/04/2014 21:07:49,,NOT-FOUND,https://github.com/Pafcholini/Htc_One_M7_Kernel_KK/commit/f1592f7fd65ff1eb47d50d3693509f6c9aab653e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Pafcholini/Htc_One_M7_Kernel_KK,,,,,
Pafcholini,Htc_One_M7_Kernel_KK,regulator: core: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Acked-by: Liam Girdwood <liam.r.girdwood@intel.com> (cherry picked from commit 070260f) Signed-off-by: Luis Cruz <ljc2491@gmail.com>,16/04/2014 21:11:23,,NOT-FOUND,https://github.com/Pafcholini/Htc_One_M7_Kernel_KK/commit/0682dd9b5cc02f4ba7772901dc8e3241e6165fdd,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Pafcholini/Htc_One_M7_Kernel_KK,,,,,
Pafcholini,Htc_One_M7_Kernel_KK,ASoC: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit e6058aa) Signed-off-by: Luis Cruz <ljc2491@gmail.com>,16/04/2014 21:16:20,,NOT-FOUND,https://github.com/Pafcholini/Htc_One_M7_Kernel_KK/commit/d1a9bb11d9974a77a50024a4c2caa76257660369,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Pafcholini/Htc_One_M7_Kernel_KK,,,,,
Pafcholini,Htc_One_M7_Kernel_KK,"Revert ""regulator: core: Use the power efficient workqueue for delayed powerdown"" This reverts commit 0682dd9b5cc02f4ba7772901dc8e3241e6165fdd.",16/04/2014 21:47:21,,NOT-FOUND,https://github.com/Pafcholini/Htc_One_M7_Kernel_KK/commit/0fd719e53ad8507889fa438fbe1fc538423c8904,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Pafcholini/Htc_One_M7_Kernel_KK,,,,,
Pafcholini,Htc_One_M7_Kernel_KK,"Revert ""ASoC: jack: Use power efficient workqueue"" This reverts commit d1a9bb11d9974a77a50024a4c2caa76257660369.",16/04/2014 21:47:52,,NOT-FOUND,https://github.com/Pafcholini/Htc_One_M7_Kernel_KK/commit/4add980343d690383578cd0be7345a9d8c8be762,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Pafcholini/Htc_One_M7_Kernel_KK,,,,,
Pafcholini,Htc_One_M7_Kernel_KK,"Revert ""ASoC: pcm: Use the power efficient workqueue for delayed powerdown"" This reverts commit f1592f7fd65ff1eb47d50d3693509f6c9aab653e.",16/04/2014 21:49:02,,NOT-FOUND,https://github.com/Pafcholini/Htc_One_M7_Kernel_KK/commit/20de8ef7a927f4189818fb063a72982a09b885c4,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Pafcholini/Htc_One_M7_Kernel_KK,,,,,
El-Nath,biji-find5-kernel,ASoC: pcm: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>,17/04/2014 09:01:54,,DUPLICATE,https://github.com/El-Nath/biji-find5-kernel/commit/72769cbc54c21d11148bbe7c5e85173a158da95c,,,[OK][Using power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Using power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1691],,,,,,,El-Nath/biji-find5-kernel,El-Nath,,,El-Nath,
El-Nath,biji-find5-kernel,regulator: core: Use the power efficient workqueue for delayed powerdown There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Acked-by: Liam Girdwood <liam.r.girdwood@intel.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>,17/04/2014 09:06:43,,DUPLICATE,https://github.com/El-Nath/biji-find5-kernel/commit/9dd0c67a41063439363d2483c78957de9507e5a0,,,[OK][Using power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Using power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1586],,,,,,,El-Nath/biji-find5-kernel,El-Nath,,,El-Nath,
El-Nath,biji-find5-kernel,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueue Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>",17/04/2014 09:16:04,,DUPLICATE,https://github.com/El-Nath/biji-find5-kernel/commit/14da2c463655efa287b28fa3c918cb19995274b5,,,[OK][Using power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Using power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1584],,,,,,,El-Nath/biji-find5-kernel,El-Nath,,,El-Nath,
AndreaCorna,iBeaconOccupancy,add battery power save Signed-off-by: Andrea Corna <andrea.corna.ac.91@gmail.com>,17/04/2014 09:19:34,,SOFT-DUPLICATE,https://github.com/AndreaCorna/iBeaconOccupancy/commit/c5c2c6475c89c877b45658c6de97cadc2e3c373d,,,[RELATED][power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Android] [Battery Saver mode],[power saving mode] [Add power saving option] [Android] [Battery Saver mode],EXISTS,,,,,,,,,,,,,AndreaCorna/iBeaconOccupancy,AndreaCorna,,,AndreaCorna,
El-Nath,biji-find5-kernel,workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>,17/04/2014 09:21:22,,OK,https://github.com/El-Nath/biji-find5-kernel/commit/6b3de719fa3f1d8b42bf93ff141e9f33fe5b3700,,,[OK][Using power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Using power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,[Add system wide power_efficient workqueues],[power saving],[Use power efficient work queue],[Use power efficient work queue],,,Certain,Android,No,OS,C,This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'.,El-Nath/biji-find5-kernel,El-Nath,[Use power efficient library/device],,El-Nath,Kernel
AndreaCorna,iBeaconOccupancy,add power save code Signed-off-by: Andrea Corna <andrea.corna.ac.91@gmail.com>,17/04/2014 09:26:51,,OK,https://github.com/AndreaCorna/iBeaconOccupancy/commit/c5f0c299c6f4c75c88281222402b6d50a8174fbe,,,[RELATED][power saving mode],[DO NOT ANALYZE],[RELATED] [Add power saving code] [Android],[power saving mode] [Add power saving code] [Android],EXISTS,add power save code,,,[Enable power saving feature],,,Certain,Android,No,Application,Java,,AndreaCorna/iBeaconOccupancy,AndreaCorna,[Use power efficient library/device],,AndreaCorna,Android application
AndreaCorna,iBeaconOccupancy,add power save code Signed-off-by: Andrea Corna <andrea.corna.ac.91@gmail.com>,17/04/2014 09:29:22,,SOFT-DUPLICATE,https://github.com/AndreaCorna/iBeaconOccupancy/commit/e19b46ca97f8e4736ecfcad4f2cd29e51ed5ceb6,,,[RELATED][power saving mode],[DO NOT ANALYZE],[RELATED] [Add power saving code] [Android],[power saving mode] [Add power saving code] [Android],EXISTS,,,,,,,,,,,,,AndreaCorna/iBeaconOccupancy,AndreaCorna,,,AndreaCorna,
El-Nath,biji-find5-kernel,"block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Cc: Jens Axboe <axboe@kernel.dk> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>",17/04/2014 09:32:40,,DUPLICATE,https://github.com/El-Nath/biji-find5-kernel/commit/8323525762c047553c3457df3311e61e7a7d1d18,,,[OK][Using power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Using power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1585],,,,,,,El-Nath/biji-find5-kernel,El-Nath,,,El-Nath,
El-Nath,biji-find5-kernel,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>,17/04/2014 09:43:35,,DUPLICATE,https://github.com/El-Nath/biji-find5-kernel/commit/a706cb25d78f151d8f18eecf64e3d270bb398fe8,,,[OK][Using power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Using power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1377],,,,,,,El-Nath/biji-find5-kernel,El-Nath,,,El-Nath,
Team-OSE,frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347",17/04/2014 18:53:44,,NOT-FOUND,https://github.com/Team-OSE/frameworks_base/commit/345dc0fc23e6a59eae5845620d7c0feb6154d74e,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Team-OSE/frameworks_base,,,,timpohladthomas,
XPerience-x8,android_frameworks_base_kk,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",18/04/2014 00:00:03,,DUPLICATE,https://github.com/XPerience-x8/android_frameworks_base_kk/commit/3f3bde0fedb8f898507a08281ff711509d8d6b90,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [6d597008d63596182748351e298ae239a7d0aef0],[6d597008d63596182748351e298ae239a7d0aef0],EXISTS,,,,,,,,,,,,,XPerience-x8/android_frameworks_base_kk,,,,NeverGone-RU,
ajk1311,EECS494,Updated resources to work with combinaton and unit power consumption,18/04/2014 04:41:20,,FALSE-POSITIVE,https://github.com/ajk1311/EECS494/commit/052015773e9204f7dc7c2d920d4275f36388afc5,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[Game],EXISTS,,,,,,,,,,,,,ajk1311/EECS494,,,,,
psydev,OpenRA,"Increase PROC power consumption 30 -> 50 Refinery costs more energy, forcing player to build a 2nd power plant before second refinery (unless they built nothing else but their first refinery). This makes other build orders possible early game instead of building 2 refineries + barracks being the only sensible one.",18/04/2014 12:47:18,,FALSE-POSITIVE,https://github.com/psydev/OpenRA/commit/2c94615814081306012137da93788c88621b5541,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[Game],EXISTS,,,,,,,,,,,,,psydev/OpenRA,,,,,
engstk,hammerhead,"Revert ""msm: bam_dmux: Use power efficient workqueues for"" This reverts commit 5037e01a2d850e4e559d586eb027c81c2a39ca20.",18/04/2014 20:20:58,,NOT-FOUND,https://github.com/engstk/hammerhead/commit/c76dd8ec653abb2f472fdf6480a6ee3b9df1d943,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,engstk/hammerhead,,,,,
engstk,hammerhead,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,18/04/2014 22:30:36,,NOT-FOUND,https://github.com/engstk/hammerhead/commit/fa416f12f82f1e42a5ad2c49e722c5c2b79763a7,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,engstk/hammerhead,,,,,
engstk,hammerhead,"Revert ""msm: bam_dmux: Use power efficient workqueues for"" This reverts commit 5037e01a2d850e4e559d586eb027c81c2a39ca20.",18/04/2014 22:36:33,,NOT-FOUND,https://github.com/engstk/hammerhead/commit/385cd7bfb91f3bd8390e3fd56abe4a1266bd379e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,engstk/hammerhead,,,,,
Triprex,android_kernel_samsung_s2plus-common,"CK3 tweaks (Credits to Con Kolivas) * mm-enable_swaptoken_only_when_swap_full.patch: The swap token is only useful in conditions of swap thrash, and actually worsens the common case by causing more swapping. Make it only have an effect when swap is more than half full. * mm-drop_swap_cache_aggressively.patch: While it may be nice to have a copy of pages on swap once written there, the more garbage we leave in the swapspace the slower any further writes and reads to and from it are. Just free swapcache whenever we can. * mm-kswapd_inherit_prio-1.patch: When kswapd is awoken due to reclaim by a running task, set the priority of kswapd to that of the calling task thus making memory reclaim cpu activity affected by nice level. * hz-default_1000.patch: Set default HZ to 1000 which is what most desktop users should still be using. * hz-no_default_250.patch: Make 250HZ not be the default to discourage desktop users from choosing this option since 1000 will provide better latencies with only miniscule amounts of extra overhead and power consumption. * preempt-desktop-tune.patch: Enable preempt by default and make people steer away from voluntary.",19/04/2014 03:12:36,,NOT-FOUND,https://github.com/Triprex/android_kernel_samsung_s2plus-common/commit/4354f3cf90b92f294499eaf700bc59bbde6a097a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Triprex/android_kernel_samsung_s2plus-common,,,,,
Teslafly,emonTH,"semi working - sensors read out, but bad radio Quashed compile bug and redid some documentation, but radio does not transmit proper values - it probably can't handle the array in the typedef struct. will have to fix that. the sensors scan fine and write correctly to the array (varified by serial output) - also, the power saving delay has the ability to corrupt serial transmissions. changing these to regular delays fixes this. - getting there!",19/04/2014 05:35:02,,TRADEOFF,https://github.com/Teslafly/emonTH/commit/659afda362c0e0a23dc36d6f56fa0aab83812c91,,,[OK][?],[DO NOT ANALYZE],[OK] [Go To Idle],[?] [Go To Idle],EXISTS,[Change power saving delay to normal delay],[Fix transmission corruption],,,,,Certain,Arduino,Yes,Embedded application,Ino,,Teslafly/emonTH,Teslafly,Correctness,,Teslafly,Arduino application
intelfx,power-management,udev: add some rules for enabling power saving for various devices and subsystems. * PCI: enable runtime power management * USB: enable autosuspend * WLAN: enable power saving,19/04/2014 06:43:46,,OK,https://github.com/intelfx/power-management/commit/b2885284d5cbeef945296307eafdbcd59810b56a,,,[RELATED][Power saving mode],[DO NOT ANALYZE],[RELATED] [Add power saving option],[Power saving mode] [Add power saving option],EXISTS,add some rules for enabling power saving for various devices and subsystems,Power saving,,[Enable device power saving],,,Certain,?,No,Libraries and Utilities,udev rules,,intelfx/power-management,intelfx,[Disabling feature/devices],,intelfx,
AlternativeMods,AlternativeEnergy,Started power consumer traits and added an example consuming tile (TileEntityPowerConsumer),19/04/2014 07:11:58,,FALSE-POSITIVE,https://github.com/AlternativeMods/AlternativeEnergy/commit/68af4a6d1f478737476c370c51db3dd13d94b05a,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[?] [FALSE-POSITIVE] [Game],[FALSE-POSITIVE] [Game],EXISTS,,,,,,,,,,,,,AlternativeMods/AlternativeEnergy,jk-5,,,jk-5,
Teslafly,emonTH,added defined array size and cleaned up some code Defined the array size with max number of sensors and cleaned up power saving delay code. Also improved documentation throughout the program.,19/04/2014 16:57:35,,FALSE-POSITIVE,https://github.com/Teslafly/emonTH/commit/10983e38f3aa8f853f2118025ae713c7747c3014,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,Teslafly/emonTH,Teslafly,,,Teslafly,
engstk,hammerhead,defconfig: enable wq power efficient,20/04/2014 00:57:41,,NOT-FOUND,https://github.com/engstk/hammerhead/commit/8b8135e3e1a165c4e7303e526e529af2fdae7d42,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,engstk/hammerhead,,,,,
psydev,OpenRA,"Increase Barracks cost from $300 -> $500 I've been trying to increase the diversity of available early-game build order choices. To do this, I've increased the cost of early-game buildings like Power Plant and Barracks, while increasing the power consumption of the Refinery. This forces players to make choices with more significant consequences. The cost (money=time spent building) of power and barracks are so low right now that the time you spend building them is totally inconsequential to the build order. This leaves very few options, and most people simply pick Barracks, Refinery, Refinery. Giving some non-trivial time cost to Power and Barracks will allow people to have more possibilities for different openings.",20/04/2014 05:28:05,,FALSE-POSITIVE,https://github.com/psydev/OpenRA/commit/5e9f9c1792e1648f84a4e148eb58af154da4d8b2,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[Game],EXISTS,,,,,,,,,,,,,psydev/OpenRA,,,,,
Mahdi-Rom,android_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",20/04/2014 15:21:19,,DUPLICATE,https://github.com/Mahdi-Rom/android_frameworks_base/commit/555ab3826e0c422bb97d292102d4589db9f796cf,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [6d597008d63596182748351e298ae239a7d0aef0],[6d597008d63596182748351e298ae239a7d0aef0],EXISTS,,,,,,,,,,,,,Mahdi-Rom/android_frameworks_base,,,,Mahdi-Rom,
TeamTREX,android_frameworks_base,"FWBase: Battery Saver mode [1/4] Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java services/java/com/android/server/NotificationManagerService.java Change-Id: I89f7885f303bf236a7af9a4700fa81cce0cffebb Signed-off-by: STELIX <ssspinni@gmail.com>",20/04/2014 16:02:00,,NOT-FOUND,https://github.com/TeamTREX/android_frameworks_base/commit/fe2dfc4f8a549ae3963132364a3e8ef4e87c83ba,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_frameworks_base,,,,,
TeamTREX,android_packages_apps_Settings,"Settings: Battery Saver mode [2/4] introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Conflicts: res/values/custom_strings.xml src/com/android/settings/fuelgauge/PowerUsageSummary.java Change-Id: I634dc24c23302d4aeac2604aca936cf2675ac2a1 Signed-off-by: STELIX <ssspinni@gmail.com>",20/04/2014 16:18:50,,NOT-FOUND,https://github.com/TeamTREX/android_packages_apps_Settings/commit/8317c081680b7b17085dd828e8fe4dad8a274f05,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_packages_apps_Settings,,,,,
TeamTREX,android_packages_apps_CarbonFibers,"CarbonFibers: Battery Saver Mode [3/4] introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Conflicts: res/values/custom_arrays.xml res/values/custom_attrs.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Signed-off-by: STELIX <ssspinni@gmail.com> Change-Id: I0cd36b081f965aeba922f0cbff8f9b786d1e1365",20/04/2014 16:22:13,,NOT-FOUND,https://github.com/TeamTREX/android_packages_apps_CarbonFibers/commit/d9b3ff9425814dcb556b87628806d18eec61271b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_packages_apps_CarbonFibers,,,,,
slothspot,perbacklog,Add note about power saving for radeon in env,20/04/2014 17:50:06,,FALSE-POSITIVE,https://github.com/slothspot/perbacklog/commit/39b70425487d55c8248542f1d7242495243531a6,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,slothspot/perbacklog,slothspot,,,slothspot,
slothspot,slothspot.github.io,Add note about power saving for radeon in env,20/04/2014 17:50:21,,DUPLICATE,https://github.com/slothspot/slothspot.github.io/commit/39b70425487d55c8248542f1d7242495243531a6,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [39b70425487d55c8248542f1d7242495243531a6],[39b70425487d55c8248542f1d7242495243531a6],EXISTS,,,,,,,,,,,,,slothspot/slothspot.github.io,slothspot,,,slothspot,
jcrussell,dotfiles,Some small tweaks. Most important tweak is to put monitors into power saving mode when screensaver is active.,20/04/2014 19:17:56,,OK,https://github.com/jcrussell/dotfiles/commit/bb6e4dedc4fe2062803a329c07b028fb486c8951,,,[OK][put monitors into power saving mode when screensaver is active],[DO NOT ANALYZE],[OK] [Enable power saving mode],[put monitors into power saving mode when screensaver is active] [Enable power saving mode],EXISTS,[put monitors into power saving mode when screensaver is active],[power saving],[Enable power saving mode] [Enable monitor power saving mode when screensaver is active],[Enable device low power mode] [Condition: screensaver on],,,Certain,Personal config files?,No,Libraries and Utilities,Symlink,Some small tweaks. Most important tweak is to put monitors into power saving mode when screensaver is active.,jcrussell/dotfiles,jcrussell,[Disabling feature/devices],[screensaver on],jcrussell,Script symlink
thelegorom,frameworks_base,"server: start cne service Connectivity Engine (CnE) provides advanced network selection per socket, reduced signalling traffic, and increased power savings. The service implements the interface defined by CNEManager which Android applications may use. Change-Id: I9ffd1f5d60f5e9e185ab482a35b3b07f29a4124c (cherry picked from commit 3a4e3ba1bc67c460ec3c2fd4ef169ae25e3e69b1) (cherry picked from commit 1bb0036652318ac8bbecf3e6c810bbc779387c61) (cherry picked from commit 3c8af4a2546d9b71d113072d680107cb56651e71) (cherry picked from commit 861a4b062196020bf24a5b3731c717b5b95a7d77) (cherry picked from commit e3dba9799892f13c5bc2376b81cf5dceae17492c) Add Connectivity Engine (CnE) WQE support Enhanced connectivity features viz. Wifi Quality Estimation. Supports dual network mode - wifi & mobile simultaneously. Use QcConnectivityService when CnE is enabled for all CnE features. Change-Id: I14b02e21515bfc1b5fd2fc4f28e5190fa80f83f8 server: Initialize ConnectivityService on low memory device Skip initialization of QcConnectivityService and use ConnectivityService.java for a low memory device CRs-Fixed: 531430 Change-Id: I2111ec32f6e40ca79b7fc91ec4cef97ac27f3b3a Update CNE feature values. Start QcConnectivityServices for the new application traffic profiling feature too. Change-Id: I52ae76420ebd098d43fe0663f41ce622a407b90e connectivity: allow inheritance to subclass set modifier to protected in order to allow subclass to use the same data and avoid redefinition. Change-Id: I2dc688d3e433775cb073ec6faae3981807212cc9 Change visibility of methods Change the visibility of some methods so that they are accessible to the child class. Change-Id: Ie1a45978b42742cac0aaedba29fb2375882c0ae4 CRs-Fixed: 611347 Signed-off-by: anerikg <anerikgames@gmail.com> Conflicts: services/java/com/android/server/SystemServer.java",20/04/2014 21:24:43,,DUPLICATE,https://github.com/thelegorom/frameworks_base/commit/4becdd5d8a1705c9ae48ad1659e2218a24d579fe,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],[a9ff5a97e3c7de3438b19bbe0a43d28f53695edd],EXISTS,,,,,,,,,,,,,thelegorom/frameworks_base,,,,anerikg,
dannomac,freebsd,"Fix a cleanup hang if cleanup gets called _during_ an active cleanup. During power save testing I noticed that the cleanup code is being called during a RUN->RUN state transition. It's because the net80211 stack is treating that (for reasons I don't quitey know yet) as a reassociation and this calls the node cleanup code. The reason it's seeing a RUN->RUN transition is because during active power save stuff it's possible that the RUN->SLEEP and SLEEP->RUN transitions happen so quickly that the deferred net80211 vap state code ""loses"" a transition, namely the intermediary SLEEP transition. So, this was causing the node reassociation code to sometimes be called twice in quick succession and this would result in ath_tx_tid_cleanup() to be called again. The code calling it would always call pause, and then only call resume if the TID didn't have ""cleanup_inprogress"" set. Unfortunately it didn't check if it was already set on entry, so it would pause but not call resume. Thus, paused would be called more than once (once before each entry into ath-tx_tid_cleanup()) but resume would only be called once when the cleanup state was finished. This doesn't entirely fix all of the issues seen in the cleanup path but it's a necessary first step. Since this is a stability fix, it should be merged to stable/10 at some point. Tested: * AR5416, STA mode MFC after: 7 days",21/04/2014 01:30:13,,FALSE-POSITIVE,https://github.com/dannomac/freebsd/commit/35123c2dbbd62df4ed7d1164656fa0ba07c14986,https://github.com/dankm/freebsd/commit/35123c2dbbd62df4ed7d1164656fa0ba07c14986,,[FALSE-POSITIVE],[DO NOT ANALYZE],[?] [FALSE-POSITIVE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,dannomac/freebsd,,,,,
mozilla-b2g,gaia,Merge pull request #16893 from chuck-lee/bug-907028_Wifi_Wake_Lock Bug 979130 - Turn Wifi into power save mode while screen off with wifi lock held.,21/04/2014 16:32:11,,DUPLICATE,https://github.com/mozilla-b2g/gaia/commit/26432916d10434103a822f17be4624a342cadfba,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [9e1b16f8a313bbdc2e9441ba07f620716e5fdd58],[9e1b16f8a313bbdc2e9441ba07f620716e5fdd58],EXISTS,,,,,,,,,,,,,mozilla-b2g/gaia,rvandermeulen,,,rvandermeulen,
ronasimi,mako,msm: bam_dmux: Use power efficient workqueues for delayed timeouts There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Signed-off-by: Luis Cruz <ljc2491@gmail.com>,21/04/2014 23:28:50,,SOFT-DUPLICATE,https://github.com/ronasimi/mako/commit/5e6cd70afd3b4be47d16c0204778d1faefe13681,,,[OK][Using power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Using power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1842],,,,,,,ronasimi/mako,xboxfanj,,,ronasimi,
Slayjay78,android_frameworks_base,"Prevent Lockscreen album art from activating FLAG_KEEP_SCREEN_ON This is a small fix to the showWallpaper method, in which a power consumption problem has been introduced. This showWallpaper method toggles the window flag FLAG_SHOW_WALLPAPER, when album art is being shown in Lockscreen. It is important to set pixel format to PixelFormat.OPAQUE if flag FLAG_SHOW_WALLPAPER is not being set. If not, an application that uses window flag FLAG_KEEP_SCREEN_ON will prevent the keyguard from going to sleep and drain battery. Change-Id: I1808be28047977ae5ac4dd1168ea25cac8a55a78",22/04/2014 01:04:25,,DUPLICATE,https://github.com/Slayjay78/android_frameworks_base/commit/1dcc3f5f0813cbd4543d66579e0c153069bc6a73,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [6d597008d63596182748351e298ae239a7d0aef0],[6d597008d63596182748351e298ae239a7d0aef0],EXISTS,,,,,,,,,,,,,Slayjay78/android_frameworks_base,,,,Slayjay78,
JeyDroids,frameworks_base,"[1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png PS47: fix conflicts. PS48: forgot delete obsolete call to refreshImmersiveTile() Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",22/04/2014 14:43:58,,NOT-FOUND,https://github.com/JeyDroids/frameworks_base/commit/2ca6d3c73259891a70eb0e70e890e5114310b65d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/frameworks_base,,,,,
JeyDroids,packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6",22/04/2014 14:45:43,,NOT-FOUND,https://github.com/JeyDroids/packages_apps_OmniGears/commit/447bed7a4bd26b6c88ab4e35d4de7be194aec67f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/packages_apps_OmniGears,,,,,
JeyDroids,packages_apps_Settings,"[2/3] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04",22/04/2014 14:46:42,,NOT-FOUND,https://github.com/JeyDroids/packages_apps_Settings/commit/40f8dce7d307330215734c4c8f09ab42333b4adb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/packages_apps_Settings,,,,,
Shden,Shden,power consumption data reinterpreted,22/04/2014 21:27:45,,FALSE-POSITIVE,https://github.com/Shden/Shden/commit/ac4b6a952064273cfedff785a15b5e34c7cfa0cd,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,Shden/Shden,Shden,,,Shden,
El-Nath,biji-find5-kernel,"msm: acpuclock-krait: Enable HFPLL for init only if switching to it The existing code left the HFPLL enabled in hfpll_init(), even if the CPU was detected to be at a non-HFPLL rate. Correct this for power savings between when hfpll_init() and the first runtime CPU frequency switch happen. This also ensure votes for HFPLL regulators are not left unnecessarily asserted. Change-Id: Iaca5dc7e4769bdbd494d669726ba9b500256f793 Signed-off-by: Matt Wagantall <mattw@codeaurora.org>",23/04/2014 09:07:43,,DUPLICATE,https://github.com/El-Nath/biji-find5-kernel/commit/b6225e4797f0e56afb6440ec94c908f898eaa7c5,,,[OK][ Enable HFPLL for init only if switching to it][Lazy intialization],[DO NOT ANALYZE],[DUPLICATE] [7acf591209f9d06fe60dafa026fa9fbc80912245],[ Enable HFPLL for init only if switching to it] [Lazy intialization] [7acf591209f9d06fe60dafa026fa9fbc80912245],EXISTS,,,,,,,,,,,,,El-Nath/biji-find5-kernel,El-Nath,,,El-Nath,
ModelingOriginsofLife,ParticleArtificialChemistry,"Added reaction graph, energy consumption estimation",23/04/2014 09:56:31,,FALSE-POSITIVE,https://github.com/ModelingOriginsofLife/ParticleArtificialChemistry/commit/dc57130cb7ddd75f50efa2b9279902d2b391fb18,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute Energy Consumption],[Compute Energy Consumption],EXISTS,,,,,,,,,,,,,ModelingOriginsofLife/ParticleArtificialChemistry,ngutten,,,ngutten,
omnirom,android_kernel_samsung_espresso10,SDIO: Enable power saving mode Change-Id: If8989c209835b3d97658950e7b4053974aec29d2,23/04/2014 15:32:35,,OK,https://github.com/omnirom/android_kernel_samsung_espresso10/commit/5f2fea22b1b70df856967a38c978e0511c345d8d,,,[OK][Enabling power saving mode],[DO NOT ANALYZE],[OK] [Enable power saving mode] [Kernel] [Android],[Enabling power saving mode] [Enable power saving mode] [Kernel] [Android],EXISTS,[SDIO: Enable power saving mode],[power saving],[Enable device power saving mode],[Enable device low power mode],,,Certain,Android,No,OS,C,SDIO: Enable power saving mode,omnirom/android_kernel_samsung_espresso10,kumajaya,[Disabling feature/devices],,andi34,Kernel arch
omnirom,android_kernel_samsung_espresso10,Update notes for submitted changes * SDIO: Enable power saving mode,23/04/2014 15:32:45,,FALSE-POSITIVE,https://github.com/omnirom/android_kernel_samsung_espresso10/commit/b7a097edfab9daeb31aadf48e3099319813c5cfe,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,omnirom/android_kernel_samsung_espresso10,,,,,
davidgraeff,Android-NetPowerctrl,Disable proguard (does not work with acra). Log for energy save mode. Improve energy save mode.,23/04/2014 21:15:58,,UNABLE-TO-CATEGORIZE,https://github.com/davidgraeff/Android-NetPowerctrl/commit/7e5929967ada92b20b99d411f5ac3665ad1211ff,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[?],,EXISTS,,,,,,,,,,,,,davidgraeff/Android-NetPowerctrl,davidgraeff,,,davidgraeff,
imre-kerr,tdt4258,Power consumption graph,24/04/2014 10:38:22,,FALSE-POSITIVE,https://github.com/imre-kerr/tdt4258/commit/2329ba78b5f3aaee48de925321b1c9cdaf86fa37,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,imre-kerr/tdt4258,imre-kerr,,,imre-kerr,
ibr-alg,wiselib,Several SNES-related improvements. - ForwardOnDirectedNd now supports reliable transport for unique paths. - Cleaned up inqp example app code - Added static neighborhood for evaluating energy consumption without ND overhead,24/04/2014 18:20:37,,FALSE-POSITIVE,https://github.com/ibr-alg/wiselib/commit/0307e887b28c5dc2f9899023dc72cb067b466554,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute Energy Consumption],[Compute Energy Consumption],EXISTS,,,,,,,,,,,,,ibr-alg/wiselib,Droggelbecher,,,Droggelbecher,
Pafcholini,m7-Sense-4.4.2,ASoC: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> (cherry picked from commit e6058aa) Signed-off-by: Luis Cruz <ljc2491@gmail.com>,24/04/2014 20:01:28,,DUPLICATE,https://github.com/Pafcholini/m7-Sense-4.4.2/commit/b862c3b061313c61307d20aacaf7da612ad24c6b,,,[OK][Using power efficient work queue],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Using power efficient work queue] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1377],,,,,,,Pafcholini/m7-Sense-4.4.2,Pafcholini,,,Pafcholini,
Pafcholini,m7-Sense-4.4.2,"Revert ""ASoC: jack: Use power efficient workqueue"" This reverts commit d1a9bb11d9974a77a50024a4c2caa76257660369.",24/04/2014 20:02:27,,REVERT,https://github.com/Pafcholini/m7-Sense-4.4.2/commit/056a1358fa0c21f052caf14c0152fb1c508c8984,,,[REVERT],[DO NOT ANALYZE],[REVERT] [d1a9bb11d9974a77a50024a4c2caa76257660369],[d1a9bb11d9974a77a50024a4c2caa76257660369],EXISTS,"Revert ""ASoC: jack: Use power efficient workqueue""",,,,,,,,,,,,Pafcholini/m7-Sense-4.4.2,Pafcholini,,,Pafcholini,
Thoma5,pc-reduction,Applies the minimal power consumption settings.,24/04/2014 21:21:40,,OK,https://github.com/Thoma5/pc-reduction/commit/5bce82412e8bdfd936d1f41bbbd623a86f51b6e8,,,[RELATED][Power saving][System conf],[DO NOT ANALYZE],[?] [UNABLE-TO-CATEGORIZE],[Power saving] [System conf] [UNABLE-TO-CATEGORIZE],EXISTS,Applies the minimal power consumption settings.,Power saving,,[Outlier],,,Certain,?,No,Libraries and Utilities,Shell,,Thoma5/pc-reduction,Thoma5,[OUTLIER],,Thoma5,
hihancioglu,kernel_msm,"ksm: Provide support to use deferred timers for scanner thread KSM thread to scan pages is getting schedule on definite timeout. That wakes up CPU from idle state and hence may affect the power consumption. Provide an optional support to use deferred timer which suites low-power use-cases. To enable deferred timers, $ echo 1 > /sys/kernel/mm/ksm/deferred_timer Signed-off-by: Chintan Pandya <cpandya@codeaurora.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>",25/04/2014 06:10:48,,DUPLICATE,https://github.com/hihancioglu/kernel_msm/commit/ba4b455aa429aabe820ece70ea6beeddc54347ff,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [9bb30fe03045508661604406b279252f6fe31617],[9bb30fe03045508661604406b279252f6fe31617],EXISTS,,,,,,,,,,,,,hihancioglu/kernel_msm,,,,hihancioglu,
hikob,blackmagic,EFM32 power consumption: added double buffering for USB,25/04/2014 09:53:10,,FALSE-POSITIVE,https://github.com/hikob/blackmagic/commit/e843f70339d527b5d86cd0f6f104bfdbd39e78d9,,,[OK][Buffering data],[DO NOT ANALYZE],[?] [UNABLE-TO-CATEGORIZE],[Buffering data] [UNABLE-TO-CATEGORIZE],EXISTS,,,,,,,,,,,,,hikob/blackmagic,burindes,,,burindes,
SimplicityCM,android_kernel_htc_msm7x27,"cpufreq: interactive: default timer 10ms, maxspeed load 95% Modify default timer from 30ms to 10ms, sampling 2 jiffies after idle exit on ARM as in Honeycomb. Modify default go_maxspeed_load from 85% loaded to 95% loaded, for use in phones where power savings is more important (tablets may be best served overriding this). Change-Id: I3361a6279979bfae1df5262666a2e30ea7a44328 Signed-off-by: Todd Poynor <toddpoynor@google.com>",26/04/2014 10:14:39,,SOFT-DUPLICATE,https://github.com/MarvelMod/kernel_htc_msm7227/commit/bba00ef369129b031fa64262d732f704eaa7d369,https://github.com/SimplicityCM/android_kernel_htc_msm7x27/commit/bba00ef369129b031fa64262d732f704eaa7d369,,[OK][Scaling CPU Freq],[DO NOT ANALYZE],[OK] [Scale CPU Frequency] [Kernel] [Android],[Scaling CPU Freq] [Scale CPU Frequency] [Kernel] [Android],EXISTS,,,,,,[67],,,,,,,SimplicityCM/android_kernel_htc_msm7x27,,,,,
SlimRoms,kernel_lge_hammerhead,regulator: core: Use the power efficient workqueue for delayed powerdown There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Change-Id: I0629145dae2762dbc58179bafcf4f11c062a8668 Signed-off-by: Mark Brown <broonie@linaro.org> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org> Acked-by: Liam Girdwood <liam.r.girdwood@intel.com> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,26/04/2014 12:46:21,,DUPLICATE,https://github.com/SlimRoms/kernel_lge_hammerhead/commit/f8e63e84af83013e9b7519fdba8feda9f3a3a41b,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [9dd0c67a41063439363d2483c78957de9507e5a0],[9dd0c67a41063439363d2483c78957de9507e5a0],EXISTS,,,,,,,,,,,,,SlimRoms/kernel_lge_hammerhead,broonie,,,kufikugel,
lmio,liox,no power saving in X,26/04/2014 19:05:56,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/lmio/liox/commit/c12e2c5bdcca28a06b5c33245ddf5f93bb528969,,,[TRADE-OFF][Brightness? for energy consumpion],[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[Brightness? for energy consumpion],EXISTS,,,,,,,,,,,,,lmio/liox,Motiejus,,,Motiejus,
Soulou,msc-thesis-cloud-container-loadbalance,"Add a bit more about motivations of machine reassignment (scalability, disaster recovery, energy saving)",26/04/2014 23:30:45,,FALSE-POSITIVE,https://github.com/Soulou/MachineReassignment-MscThesis/commit/0468d4f7b6ec81588345154f941eb48ecde18629,https://github.com/Soulou/msc-thesis-cloud-container-loadbalance/commit/0468d4f7b6ec81588345154f941eb48ecde18629,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,Soulou/msc-thesis-cloud-container-loadbalance,,,,,
TeamTREX,android_frameworks_base,"FWBase: Battery Saver mode [1/4] Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java services/java/com/android/server/NotificationManagerService.java Change-Id: I89f7885f303bf236a7af9a4700fa81cce0cffebb Signed-off-by: STELIX <ssspinni@gmail.com>",27/04/2014 14:54:46,,NOT-FOUND,https://github.com/TeamTREX/android_frameworks_base/commit/15c7c229d8d95c2a002083fdb6ef22405f204188,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_frameworks_base,,,,,
ResurrectionRemix,android_frameworks_base,"FWBase: Battery Saver mode [1/4] Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java services/java/com/android/server/NotificationManagerService.java Change-Id: I89f7885f303bf236a7af9a4700fa81cce0cffebb Signed-off-by: STELIX <ssspinni@gmail.com> Conflicts: packages/SystemUI/AndroidManifest.xml packages/SystemUI/res/values/cr_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java",27/04/2014 18:28:55,,SOFT-DUPLICATE,https://github.com/ResurrectionRemix/android_frameworks_base/commit/07ec3e80642c745c072d9fe672a31a0a6db00cbd,,,[RELATED][Power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/4] [Battery Saver mode],[Power saving mode] [Add power saving option] [Partial commit] [Android] [* 1/4] [Battery Saver mode],EXISTS,,,,,,,,,,,,,ResurrectionRemix/android_frameworks_base,Squadzone,,,westcripp,
ResurrectionRemix,Resurrection_packages_apps_Settings,"CarbonFibers: Battery Saver Mode [3/4] introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Conflicts: res/values/custom_arrays.xml res/values/custom_attrs.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Signed-off-by: STELIX <ssspinni@gmail.com> Change-Id: I0cd36b081f965aeba922f0cbff8f9b786d1e1365 Conflicts: AndroidManifest.xml res/values/arrays.xml res/values/strings.xml res/xml/ui_general_settings.xml src/com/android/settings/quicksettings/QuickSettingsUtil.java src/com/carbon/fibers/SettingsActivity.java",27/04/2014 18:57:05,,SOFT-DUPLICATE,https://github.com/ResurrectionRemix/Resurrection_packages_apps_Settings/commit/31b126daba6ff6d67e7967dbd3b552b8e4e0a293,,,[RELATED][Power saving mode],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 3/4] [Battery Saver mode],[Power saving mode] [Add power saving option] [Partial commit] [Android] [* 3/4] [Battery Saver mode],EXISTS,,,,,,,,,,,,,ResurrectionRemix/Resurrection_packages_apps_Settings,Squadzone,,,westcripp,
oley06,domot,DEV compute power consumption in W/h,28/04/2014 08:41:35,,FALSE-POSITIVE,https://github.com/oley06/domot/commit/0a03dc820bb648e797372314261e5fefd82a2e58,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute Energy Consumption],[Compute Energy Consumption],EXISTS,,,,,,,,,,,,,oley06/domot,oley06,,,oley06,
TeamTREX,android_packages_apps_CarbonFibers,"CarbonFibers: Battery Saver Mode [3/4] introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Conflicts: res/values/custom_arrays.xml res/values/custom_attrs.xml res/values/custom_strings.xml src/org/omnirom/omnigears/interfacesettings/MoreInterfaceSettings.java Signed-off-by: STELIX <ssspinni@gmail.com> Change-Id: I0cd36b081f965aeba922f0cbff8f9b786d1e1365",28/04/2014 12:12:07,,NOT-FOUND,https://github.com/TeamTREX/android_packages_apps_CarbonFibers/commit/86bd004a30eb500113b76ebf57299f14275eb1fc,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_packages_apps_CarbonFibers,,,,,
e2rezaei,Es,"I changed the rpl-join-instances in rpl-dag.c. Right now, I use the transmission power to set dag->Tx, however, I am not sure if it is correct. We might need to set dag->Tx to power consumption.",28/04/2014 16:15:58,,NOT-FOUND,https://github.com/e2rezaei/Es/commit/e1c2464800b367aafd433155ac5a7cee88465e27,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,e2rezaei/Es,,,,,
AragaoAnderson,n5x_frameworks_base,Update Save power feature Change-Id: I56e924e7008bfc73fd269bd8c54210ef1ed617ab,28/04/2014 17:44:28,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_frameworks_base/commit/d325708dcbee785b1494155f156fad91e2abde66,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_frameworks_base,AragaoAnderson,,,AragaoAnderson,
AragaoAnderson,n5x_packages_apps_Settings,Update Save power feature Change-Id: Id5ffbfc27cb5a980507f9641a434e17984cb6405,28/04/2014 17:44:57,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_packages_apps_Settings/commit/eefb55c1432feb99d369ce4fde4b2d6e030d6e82,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_packages_apps_Settings,AragaoAnderson,,,AragaoAnderson,
moddingg33k,android_kernel_synopsis_y300_beta2,"msm: board 7627a: updated residency values and removed pmem board: 7627a: Update the GDFS residency values to optimal value. The current residency setting of 6msec for GDFS is way too high to be entered during active test cases like video, gfx. We profiled this setting for optimal value on Strider and found 500usec is large enough without sacrificing the power savings. Hence this change updates the setting to 500usec. Change-Id: I62bd5431745462e6fdd373cea1d50ccd74b8152d Signed-off-by: Krishna Vanka <kvanka@codeaurora.org> msm: board-7627a: Remove pmem from 7627a/8625 Pmem is defeatured because all the pmem clients are now supported by ION. Change-Id: I9b84e92621a13bf0aa9b099f5b2328af88ed4da5 Signed-off-by: Utsab Bose <ubose@codeaurora.org>",28/04/2014 20:13:07,,NOT-FOUND,https://github.com/moddingg33k/android_kernel_synopsis_y300_beta2/commit/6d4a5048b96974f149f1a0fb21e8801390f52c58,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,moddingg33k/android_kernel_synopsis_y300_beta2,,,,,
moddingg33k,android_kernel_synopsis_y300_beta2,"msm: board 7627a: updated residency values and removed pmem board: 7627a: Update the GDFS residency values to optimal value. The current residency setting of 6msec for GDFS is way too high to be entered during active test cases like video, gfx. We profiled this setting for optimal value on Strider and found 500usec is large enough without sacrificing the power savings. Hence this change updates the setting to 500usec. Change-Id: I62bd5431745462e6fdd373cea1d50ccd74b8152d Signed-off-by: Krishna Vanka <kvanka@codeaurora.org> msm: board-7627a: Remove pmem from 7627a/8625 Pmem is defeatured because all the pmem clients are now supported by ION. Change-Id: I9b84e92621a13bf0aa9b099f5b2328af88ed4da5 Signed-off-by: Utsab Bose <ubose@codeaurora.org>",28/04/2014 20:18:47,,NOT-FOUND,https://github.com/moddingg33k/android_kernel_synopsis_y300_beta2/commit/f77ff1a944590b8a274f4449fee01693768699cb,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,moddingg33k/android_kernel_synopsis_y300_beta2,,,,,
AragaoAnderson,n5x_device_lge_hammerhead,Update Power Save values again Change-Id: Idfaee3b9646a8cbc358239313c0468cd294ff103,28/04/2014 23:10:37,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_device_lge_hammerhead/commit/51df4b45ea1cd77e6540fd68e85f6896919f1659,,,,[DO NOT ANALYZE],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_device_lge_hammerhead,AragaoAnderson,,,AragaoAnderson,
AragaoAnderson,n5x_frameworks_base,Enable Power Save Profile only when it's needed Change-Id: I07677c868c3cb2b8f50bc2650ab4c92bc5154691,29/04/2014 00:56:46,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_frameworks_base/commit/23ad4ecf3afd29ca3cf09814e8e68251340b403a,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_frameworks_base,AragaoAnderson,,,AragaoAnderson,
SlimRoms,kernel_lge_hammerhead,"block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Change-Id: I46b9ceaf57f255a9d0932129e28d2b041072521a Cc: Jens Axboe <axboe@kernel.dk> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",29/04/2014 08:43:27,,DUPLICATE,https://github.com/SlimRoms/kernel_lge_hammerhead/commit/8973c05c728c0339601c1b42358733b951162bbd,,,[OK][Use power efficient work queues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Use power efficient work queues] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1585],,,,,,,SlimRoms/kernel_lge_hammerhead,,,,kufikugel,
dannomac,freebsd,"Bring over some initial power save management support, reset path fixes and beacon programming / debugging into the ath(4) driver. The basic power save tracking: * Add some new code to track the current desired powersave state; and * Add some reference count tracking so we know when the NIC is awake; then * Add code in all the points where we're about to touch the hardware and push it to force-wake. Then, how things are moved into power save: * Only move into network-sleep during a RUN->SLEEP transition; * Force wake the hardware up everywhere that we're about to touch the hardware. The net80211 stack takes care of doing RUN<->SLEEP<->(other) state transitions so we don't have to do it in the driver. Next, when to wake things up: * In short - everywhere we touch the hardware. * The hardware will take care of staying awake if things are queued in the transmit queue(s); it'll then transit down to sleep if there's nothing left. This way we don't have to track the software / hardware transmit queue(s) and keep the hardware awake for those. Then, some transmit path fixes that aren't related but useful: * Force EAPOL frames to go out at the lowest rate. This improves reliability during the encryption handshake after 802.11 negotiation. Next, some reset path fixes! * Fix the overlap between reset and transmit pause so we don't transmit frames during a reset. * Some noisy environments will end up taking a lot longer to reset than normal, so extend the reset period and drop the raise the reset interval to be more realistic and give the hardware some time to finish calibration. * Skip calibration during the reset path. Tsk! Then, beacon fixes in station mode! * Add a _lot_ more debugging in the station beacon reset path. This is all quite fluid right now. * Modify the STA beacon programming code to try and take the TU gap between desired TSF and the target TU into account. (Lifted from QCA.) Tested: * AR5210 * AR5211 * AR5212 * AR5413 * AR5416 * AR9280 * AR9285 TODO: * More AP, IBSS, mesh, TDMA testing * Thorough AR9380 and later testing! * AR9160 and AR9287 testing Obtained from: QCA",30/04/2014 02:30:38,,UNABLE-TO-CATEGORIZE,https://github.com/dannomac/freebsd/commit/f14274ee49f55f965439a36eed704cd81411debf,https://github.com/dankm/freebsd/commit/f14274ee49f55f965439a36eed704cd81411debf,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,dannomac/freebsd,,,,,
DerRomtester,android_kernel_samsung_aries,"ARM: add support for bit sliced AES using NEON instructions Bit sliced AES gives around 45% speedup on Cortex-A15 for encryption and around 25% for decryption. This implementation of the AES algorithm does not rely on any lookup tables so it is believed to be invulnerable to cache timing attacks. This algorithm processes up to 8 blocks in parallel in constant time. This means that it is not usable by chaining modes that are strictly sequential in nature, such as CBC encryption. CBC decryption, however, can benefit from this implementation and runs about 25% faster. The other chaining modes implemented in this module, XTS and CTR, can execute fully in parallel in both directions. The core code has been adopted from the OpenSSL project (in collaboration with the original author, on cc). For ease of maintenance, this version is identical to the upstream OpenSSL code, i.e., all modifications that were required to make it suitable for inclusion into the kernel have been made upstream. The original can be found here: http://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=6f6a6130 Note to integrators: While this implementation is significantly faster than the existing table based ones (generic or ARM asm), especially in CTR mode, the effects on power efficiency are unclear as of yet. This code does fundamentally more work, by calculating values that the table based code obtains by a simple lookup; only by doing all of that work in a SIMD fashion, it manages to perform better. Cc: Andy Polyakov <appro@openssl.org> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org> Conflicts: arch/arm/crypto/Makefile",30/04/2014 14:31:43,,DUPLICATE,https://github.com/DerRomtester/android_kernel_samsung_aries/commit/93c57563e99e02fdf176beefa51af5507af89ab9,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5f138a1cfdd92ed873474ddcfc427416d62920ba],[5f138a1cfdd92ed873474ddcfc427416d62920ba],EXISTS,,,,,,,,,,,,,DerRomtester/android_kernel_samsung_aries,ardbiesheuvel,,,DerRomtester,
androthan,android_kernel_samsung_aalto_legacy,mmc: core: eMMC in Sleep mode before suspend Put MMC to sleep if it supports SLEEP/AWAKE (CMD5) in the mmc suspend so that Vcc (NAND core) can be cut to minimize power consumption. eMMC put into SLEEP can respond to CMD0 or H/W reset or CMD5. Current implemention on resume from suspend relies on CMD0 in mmc_init_card to get out of SLEEP mode. Signed-off-by: Balaji T K <balajitk <at> ti.com> Acked-by: Venkatraman S <svenkatr <at> ti.com>,30/04/2014 17:36:34,,NOT-FOUND,https://github.com/androthan/android_kernel_samsung_aalto_legacy/commit/f7468eb0045bc680f63d9d0a69a670673e5b5f10,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,androthan/android_kernel_samsung_aalto_legacy,,,,,
maskimko,power-monitoring,"Fixed most of mongodb issues, added total power saving",30/04/2014 23:10:21,,NOT-FOUND,https://github.com/maskimko/power-monitoring/commit/1ee366c0151bc15b273f9ccd55f720b467310900,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute Energy Consumption],[Compute Energy Consumption],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,maskimko/power-monitoring,,,,,
senseobservationsystems,sense-android-app,Merge pull request #12 from senseobservationsystems/3GEnergySaving Added peference for the mobile energy saving mode,01/05/2014 15:21:27,,RELATED,https://github.com/senseobservationsystems/sense-android-app/commit/f60700d0040082f9d18c436a55fda70427ddf15d,,,[RELATED][Power saving preference][Android],[DO NOT ANALYZE],[RELATED] [Add power saving option] [Android],[Power saving preference] [Android] [Add power saving option],EXISTS,,,,,,,,,,,,,senseobservationsystems/sense-android-app,tedschmidt,,,tedschmidt,
TeamHorizon,android_kernel_lge_hammerhead,"block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Change-Id: I46b9ceaf57f255a9d0932129e28d2b041072521a Cc: Jens Axboe <axboe@kernel.dk> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",01/05/2014 16:21:11,,DUPLICATE,https://github.com/TeamHorizon/android_kernel_lge_hammerhead/commit/8973c05c728c0339601c1b42358733b951162bbd,,,[OK][Use power efficient work queues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel] [Android],[Use power efficient work queues] [Use power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,,,,,,[1585],,,,,,,TeamHorizon/android_kernel_lge_hammerhead,,,,kufikugel,
poondog,android_kernel_htc_msm8960,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org> Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org> Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Mark Brown <broonie@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com> Signed-off-by: poondog <markj338@gmail.com>",02/05/2014 02:30:51,,DUPLICATE,https://github.com/poondog/android_kernel_htc_msm8960/commit/382678ee1ecaa5c2cf6365474d03c990a89cf646,,,[OK][Use power efficient work queues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel] [Android],[Use power efficient work queues] [Use power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,,,,,,[1584],,,,,,,poondog/android_kernel_htc_msm8960,,,,poondog,
lomogoto,ConfigFiles,turns off screen power saving,02/05/2014 02:37:05,,TRADEOFF-UNABLE-TO-CATEGORIZE,https://github.com/lomogoto/ConfigFiles/commit/ea6bf6ea591e2c94e5094dbcf90f94e556721fce,,,[OK][Turn of screen],[DO NOT ANALYZE],[OK] [turns off screen] [Configuration],[Turn of screen] [turns off screen] [Configuration],EXISTS,,,,,,,,,,,,,lomogoto/ConfigFiles,lomogoto,,,lomogoto,
hfuller,ShopHUD,Notes on power saving,02/05/2014 03:17:30,,FALSE-POSITIVE,https://github.com/hfuller/ShopHUD/commit/7f17b5630546d3ef3708dd6e2daa04c5aa78e53f,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,hfuller/ShopHUD,hfuller,,,hfuller,
thelegorom,frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Signed-off-by: anerik <anerikgames@gmail.com> Signed-off-by: anerikg <anerikgames@gmail.com> Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: packages/SystemUI/res/values/custom_strings.xml packages/SystemUI/src/com/android/systemui/BootReceiver.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java Conflicts: core/java/android/content/Intent.java packages/SystemUI/res/values/slim_strings.xml services/java/com/android/server/NotificationManagerService.java Conflicts: packages/SystemUI/res/values/slim_strings.xml",02/05/2014 06:35:59,,SOFT-DUPLICATE,https://github.com/thelegorom/frameworks_base/commit/051f04e5bd33913fa57ddeb89e4b2c0fce63d527,,,[RELATED][Power saving module],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Power saving module] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,thelegorom/frameworks_base,Squadzone,,,anerikg,
whoozle,clunk,save energy across filter transformation,02/05/2014 07:06:29,,FALSE-POSITIVE,https://github.com/whoozle/clunk/commit/b334cffd91a02483029a44cf0338e5d8664c487a,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,whoozle/clunk,whoozle,,,whoozle,
fozzil4,android_kernel_mako,mako: backlight: apply customized backlight LUT for power saving changing backlight curve from linear to exponential. Change-Id: Id01aa028b9f20183f4ebd82cac62305b3d40edc3 Conflicts: arch/arm/mach-msm/lge/mako/board-mako-display.c,02/05/2014 08:46:31,,OK,https://github.com/fozzil4/android_kernel_mako/commit/735ce0fb5f58f76dd42cf724294758cb41831b2f,,,[OK][changing backlight curve from linear to exponential],[DO NOT ANALYZE],[OK] [Change backlight] [Kernel] [Android],[changing backlight curve from linear to exponential] [Change backlight] [Kernel] [Android],EXISTS,[apply customized backlight LUT] [changing backlight curve from linear to exponential],[power saving],[Change backlight scaling function],[Change backlight scaling function],,,Certain,Android,No,OS,C,mako: backlight: apply customized backlight LUT for power saving changing backlight curve from linear to exponential.,fozzil4/android_kernel_mako,,[Display and UI tuning],,,Kernel arch
krialix,Thor-Kernel,"time: RCU permitted to stop idle entry via softirq From: ""Paul E. McKenney"" <paul.mckenney@xxxxxxxxxx> The can_stop_idle_tick() function complains if a softirq vector is raised too late in the idle-entry process, presumably in order to prevent dangling softirq invocations from being delayed across the full idle period, which might be indefinitely long -- and if softirq was asserted any later than the call to this function, such a delay might well happen. However, RCU needs to be able to use softirq to stop idle entry in order to be able to drain RCU callbacks from the current CPU, which in turn enables faster entry into dyntick-idle mode, which in turn reduces power consumption. Because RCU takes this action at a well-defined point in the idle-entry path, it is safe for RCU to take this approach. This commit therefore silences the error message that is sometimes produced when the going-idle CPU suddenly finds that it has an RCU_SOFTIRQ to process. The error message will continue to be issued for other softirq vectors. Reported-by: Sedat Dilek <sedat.dilek@xxxxxxxxx> Signed-off-by: Paul E. McKenney <paul.mckenney@xxxxxxxxxx> Signed-off-by: Paul E. McKenney <paulmck@xxxxxxxxxxxxxxxxxx> Tested-by: Sedat Dilek <sedat.dilek@xxxxxxxxx>",02/05/2014 08:48:35,,NOT-FOUND,https://github.com/krialix/Thor-Kernel/commit/ea47b7b687b1a3baa25b6c276bcf77f841688164,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Thor-Kernel,,,,,
barome,HD_mako,mako: backlight: apply customized backlight LUT for power saving changing backlight curve from linear to exponential. Change-Id: Id01aa028b9f20183f4ebd82cac62305b3d40edc3 Conflicts: arch/arm/mach-msm/lge/mako/board-mako-display.c,02/05/2014 08:50:16,,DUPLICATE,https://github.com/barome/kernel_msm/commit/424022ba5ece3f65a73d845f9593edd3f15823c3,https://github.com/barome/HD_mako/commit/424022ba5ece3f65a73d845f9593edd3f15823c3,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [735ce0fb5f58f76dd42cf724294758cb41831b2f],[735ce0fb5f58f76dd42cf724294758cb41831b2f],EXISTS,,,,,,,,,,,,,barome/HD_mako,,,,barome,
fozzil4,android_kernel_mako,"mmc: core: Allow changing bus frequency for SD/eMMC cards in runtime Currently, bus frequency is set during the card initialization and never changed until a new card is inserted. In some low power use cases, scaling the clock frequencies while the card is in transfer state would allow power savings. This change allows bus frequency to be changed after the card initialization. Change-Id: Iac064221199f69d162d91f5311becd735c15700a Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>",02/05/2014 08:59:14,,DUPLICATE,https://github.com/fozzil4/android_kernel_mako/commit/973f209a8211a96e012322f386f28f669bb2b6ea,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [6c7bf50984b4941575efd1360fbc778e342a820e],[6c7bf50984b4941575efd1360fbc778e342a820e],EXISTS,,,,,,,,,,,,,fozzil4/android_kernel_mako,,,,,
fozzil4,android_kernel_mako,"mmc: sh_mmcif: maximize power saving This patch uses runtime PM to allow the system to power down the MMC controller, when the MMC closk is switched off. Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de> Signed-off-by: Chris Ball <cjb@laptop.org> Conflicts: drivers/mmc/host/sh_mmcif.c",02/05/2014 09:09:06,,UNABLE-TO-CATEGORIZE,https://github.com/fozzil4/android_kernel_mako/commit/b1fd593706da86767b21ed5806456567e56151e5,,,[OK][power down the MMC controller],[DO NOT ANALYZE],[?] [UNABLE-TO-CATEGORIZE],[power down the MMC controller] [UNABLE-TO-CATEGORIZE],EXISTS,,,,,,,,,,,,,fozzil4/android_kernel_mako,lyakh,,,,
SimplicityCM,android_device_htc_msm7x27-common,prop: Power based update Changes: *Better power saving on legacy devices *Faster boot and turnoff speeds,02/05/2014 19:50:03,,OK,https://github.com/SimplicityCM/android_device_htc_msm7x27-common/commit/b69bfc037ef415486e1f0a44740ee8c4ecd9432e,,,[OK][Power saving on legacy devices][System CONF],[DO NOT ANALYZE],[OK] [Enable power saving] [Go to idle] [Android],[Power saving on legacy devices] [System CONF] [Enable power saving] [Go to idle] [Android],EXISTS,[Enable ril power collapse] [Enable sleep mode] [Set shutdown mode to hibernate] [Enable hw_quickpoweron],[power saving],[Enable ril power collapse] [Enable sleep mode] [Set shutdown mode to hibernate] [Enable hw_quickpoweron] [Build],?,,Multiple changes,Certain,Android,No,Libraries and Utilities,Make,prop: Power based update Changes: *Better power saving on legacy devices,SimplicityCM/android_device_htc_msm7x27-common,grkx,[Disabling feature/devices],,grkx,Build
pac-lg,lge-kernel-lproj,"PM: Introduce suspend state PM_SUSPEND_FREEZE PM_SUSPEND_FREEZE state is a general state that does not need any platform specific support, it equals frozen processes + suspended devices + idle processors. Compared with PM_SUSPEND_MEMORY, PM_SUSPEND_FREEZE saves less power because the system is still in a running state. PM_SUSPEND_FREEZE has less resume latency because it does not touch BIOS, and the processors are in idle state. Compared with RTPM/idle, PM_SUSPEND_FREEZE saves more power as 1. the processor has longer sleep time because processes are frozen. The deeper c-state the processor supports, more power saving we can get. 2. PM_SUSPEND_FREEZE uses system suspend code path, thus we can get more power saving from the devices that does not have good RTPM support. This state is useful for 1) platforms that do not have STR, or have a broken STR. 2) platforms that have an extremely low power idle state, which can be used to replace STR. The following describes how PM_SUSPEND_FREEZE state works. 1. echo freeze > /sys/power/state 2. the processes are frozen. 3. all the devices are suspended. 4. all the processors are blocked by a wait queue 5. all the processors idles and enters (Deep) c-state. 6. an interrupt fires. 7. a processor is woken up and handles the irq. 8. if it is a general event, a) the irq handler runs and quites. b) goto step 4. 9. if it is a real wake event, say, power button pressing, keyboard touch, mouse moving, a) the irq handler runs and activate the wakeup source b) wakeup_source_activate() notifies the wait queue. c) system starts resuming from PM_SUSPEND_FREEZE 10. all the devices are resumed. 11. all the processes are unfrozen. 12. system is back to working. Known Issue: The wakeup of this new PM_SUSPEND_FREEZE state may behave differently from the previous suspend state. Take ACPI platform for example, there are some GPEs that only enabled when the system is in sleep state, to wake the system backk from S3/S4. But we are not touching these GPEs during transition to PM_SUSPEND_FREEZE. This means we may lose some wake event. But on the other hand, as we do not disable all the Interrupts during PM_SUSPEND_FREEZE, we may get some extra ""wakeup"" Interrupts, that are not available for S3/S4. The patches has been tested on an old Sony laptop, and here are the results: Average Power: 1. RPTM/idle for half an hour: 14.8W, 12.6W, 14.1W, 12.5W, 14.4W, 13.2W, 12.9W 2. Freeze for half an hour: 11W, 10.4W, 9.4W, 11.3W 10.5W 3. RTPM/idle for three hours: 11.6W 4. Freeze for three hours: 10W 5. Suspend to Memory: 0.5~0.9W Average Resume Latency: 1. RTPM/idle with a black screen: (From pressing keyboard to screen back) Less than 0.2s 2. Freeze: (From pressing power button to screen back) 2.50s 3. Suspend to Memory: (From pressing power button to screen back) 4.33s From the results, we can see that all the platforms should benefit from this patch, even if it does not have Low Power S0. Signed-off-by: Zhang Rui <rui.zhang@intel.com> modified for Mako from LKML reference Signed-off-by: Paul Reioux <reioux@gmail.com>",02/05/2014 21:25:48,,DUPLICATE,https://github.com/pac-lg/lge-kernel-lproj/commit/32bb29d39710eed7cc2f665cb32a8e97e92a13c2,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [73b2662548cfd5deaa26b20788923a41abad3972],[73b2662548cfd5deaa26b20788923a41abad3972],EXISTS,,,,,,,,,,,,,pac-lg/lge-kernel-lproj,faux123,,,coderzstas,
yaneurabeya,freebsd,"Modify the ioctl path to support querying things if the vap state is SLEEP rather than RUN. Without this things like 'ifconfig wlan0 list sta' don't work when the NIC is power save. Tested: * AR5212, STA mode (with powersave) * AR5416, STA mode (with powersave)",03/05/2014 06:45:06,,FALSE-POSITIVE,https://github.com/yaneurabeya/freebsd/commit/24de3d7092b15b09c29b84d02bab97c1021c3cf4,,,[FALSE-POSITIVE][BUG FIX],[DO NOT ANALYZE],[FALSE-POSITIVE],[BUG FIX],EXISTS,,,,,,,,,,,,,yaneurabeya/freebsd,,,,,
neryams,zombies,Actually pause renderer on pauserenderer energy savings,03/05/2014 08:11:55,,OK,https://github.com/neryams/zombies/commit/858ab988368d559925bc3ce820c2207f77af7797,,,[OK][Stop camera on now rendering],[DO NOT ANALYZE],[?] [OK] [Bug Fix],[Stop camera on now rendering] [OK] [Bug Fix],EXISTS,[Actually pause renderer on pauserenderer],[power saving],[Bug fix] [Pause renderer],[Energy bug],,,Certain,Browser game,Yes,Application,Javascript,Actually pause renderer on pauserenderer energy savings,neryams/zombies,neryams,[Miscellaneous],,neryams,Application
mkiol,kaktus,Workaround for 'High Power Consumption' webkit bug,03/05/2014 12:15:35,,RELATED,https://github.com/mkiol/kaktus/commit/32c20432f0cefb00c5e636d811d7407c7168a6d2,,,[FALSE-POSITIVE][BUG FIX],,[?] [RELATED] [Bug Fix],[BUG FIX] [RELATED],EXISTS,,,,,,,,,,,,,mkiol/kaktus,,,,,
krialix,Thor-Kernel,cfg80211: export regulatory_hint_user() API This is to help the hardware configured in world roaming mode to save power when not connected to any AP. CRs-Fixed: 542802 Change-Id: Ia643d0e9848dcd486832973bd6dd186edd7bd4ea Signed-off-by: Mihir Shete <smihir@codeaurora.org>,03/05/2014 15:57:41,,NOT-FOUND,https://github.com/krialix/Thor-Kernel/commit/69a87f6bfc56b01700c80b0ca6b90018103b0e4b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Thor-Kernel,,,,,
krialix,Thor-Kernel,mako: backlight: apply customized backlight LUT for power saving changing backlight curve from linear to exponential. Change-Id: Id01aa028b9f20183f4ebd82cac62305b3d40edc3 Conflicts: arch/arm/mach-msm/lge/mako/board-mako-display.c,03/05/2014 16:16:01,,NOT-FOUND,https://github.com/krialix/Thor-Kernel/commit/d766959d4d334c8c7a9975939b8a34a12bb1231b,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Thor-Kernel,,,,,
faleandroid,android_packages_apps_Settings-1,"[2/2] Settings: Battery Saver mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync Conflicts: res/values/custom_strings.xml Change-Id: I19502c731b74e82a3873f19f51965ee5a88c1f04 Conflicts: AndroidManifest.xml res/values-ru/cm_plurals.xml res/values/chos_dimens.xml res/values/mahdi_arrays.xml res/values/mahdi_attrs.xml res/values/mahdi_strings.xml src/com/android/settings/ThemeSettings.java src/com/android/settings/cyanogenmod/NEWSeekBarPreference.java src/com/android/settings/fuelgauge/PowerUsageSummary.java",03/05/2014 19:01:29,,SOFT-DUPLICATE,https://github.com/faleandroid/android_packages_apps_Settings-1/commit/d7cae1d4db3725e7a26480569f85c8943b7d55f1,,,[RELATED][Power saving module],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],[Power saving module] [Add power saving option] [Partial commit] [Android] [* 2/2] [Battery Saver mode],EXISTS,,,,,,,,,,,,,faleandroid/android_packages_apps_Settings-1,Squadzone,,,faleandroid,
DarkCyanogenMod,android_frameworks_base,disable statusbar time refresh when screen off This help us to save power battery,03/05/2014 20:30:15,,NOT-FOUND,https://github.com/DarkCyanogenMod/android_frameworks_base/commit/c7803b89247ec66cb3a213f13c73eb330fcd8518,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,DarkCyanogenMod/android_frameworks_base,,,,,
AOSPAL,android_frameworks_base,"[1/2] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png Conflicts: packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettingsModel.java Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0 Conflicts: core/java/android/content/Intent.java core/java/com/android/internal/util/omni/TaskUtils.java packages/SystemUI/res/values/pac_strings.xml packages/SystemUI/src/com/android/systemui/statusbar/policy/BluetoothController.java services/java/com/android/server/NotificationManagerService.java services/java/com/android/server/VibratorService.java telephony/java/android/telephony/TelephonyManager.java telephony/java/com/android/internal/telephony/ITelephony.aidl",04/05/2014 08:15:04,,NOT-FOUND,https://github.com/AOSPAL/android_frameworks_base/commit/293c6045d632ddc048b93f8a0145f66d346802bb,,,[RELATED][Power saving module],[DO NOT ANALYZE],[SOFT-DUPLICATE] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],[Power saving module] [Add power saving option] [Partial commit] [Android] [* 1/2] [Battery Saver mode],NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AOSPAL/android_frameworks_base,Squadzone,,,,
DarkCyanogenMod,android_frameworks_base,disable statusbar time refresh when screen off This help us to save power battery,04/05/2014 22:10:21,,NOT-FOUND,https://github.com/DarkCyanogenMod/android_frameworks_base/commit/4b73c3f9f92108eb8fee8d0413bec3d794517110,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,DarkCyanogenMod/android_frameworks_base,,,,,
darkjacky,applescripts,made it easier? there is no longer a requirement to be in your main network if you are both connected to the same network it will still mount your backup disk. Since the IP is now dynamically taken from the arp table. Added more instructions and made it more energy efficient. fixed some bugs like the speed of arp and arp telling it that a host/server was not connected. all fixed. (not that anyone has used this yet). please if you use this make sure you fill in everything correctly. it does not break anything but it can cause a lot of annoying things.,05/05/2014 11:59:29,,FALSE-POSITIVE,https://github.com/darkjacky/applescripts/commit/bfd072b67a3c9be457842a1df201e849c11f0341,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,darkjacky/applescripts,,,,,
micropython,micropython,"examples, SDdatalogger: Add more comments; reduce power consumption.",05/05/2014 13:11:30,,OK,https://github.com/micropython/micropython/commit/fa2e701e23104e7b970294d44b4015a7e5928ffd,,,[OK][reduces power consumption while waiting for switch press],[DO NOT ANALYZE],[OK][reduces power consumption while waiting for switch press],[reduces power consumption while waiting for switch press],EXISTS,[Wait for interrupt while waiting for switch press],[power saving],[Use wait for interrupt] [Wait for interrupt while waiting for switch press],[Wait for interrupt idling],,,Certain,Embedded Python,No,Application,Python,"examples, SDdatalogger: Add more comments; reduce power consumption.",micropython/micropython,dpgeorge,[Polling avoidance],,dpgeorge,Application
GuneetAtwal,Blaze.Kernel-S5,"ath9k: Disable PowerSave by default commit 531671cb17af07281e6f28c1425f754346e65c41 upstream. Almost all the DMA issues which have plagued ath9k (in station mode) for years are related to PS. Disabling PS usually ""fixes"" the user's connection stablility. Reports of DMA problems are still trickling in and are sitting in the kernel bugzilla. Until the PS code in ath9k is given a thorough review, disbale it by default. The slight increase in chip power consumption is a small price to pay for improved link stability. Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",05/05/2014 13:44:17,,NOT-FOUND,https://github.com/GuneetAtwal/Blaze.Kernel-S5/commit/6619f5193f7f37a7a97c0148679cf9d51482d966,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,GuneetAtwal/Blaze.Kernel-S5,,,,,
lishen2,ProgrammableLED,improve power consumion,05/05/2014 14:39:28,,UNABLE-TO-CATEGORIZE,https://github.com/lishen2/ProgrammableLED/commit/ff19fc007ee68784588ef9d8bb1550a69e99b993,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,lishen2/ProgrammableLED,lishen2,,,lishen2,
AICP,kernel_samsung_exynos5410,workqueue: Add system wide power_efficient workqueues Adapted for 3.4 from lsk-v3.10 This patch adds system wide workqueues aligned towards power saving. This is done by allocating them with WQ_UNBOUND flag if 'wq_power_efficient' is set to 'true'. Change-Id: Ib3474908c50f8ad601e27a460a87e7b39869a768,05/05/2014 19:24:04,,DUPLICATE,https://github.com/AICP/kernel_samsung_exynos5410/commit/c6a819f55c2e0cc05738d641002fa435e2cdea68,,,[OK][Use power efficient work queues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Use power efficient work queues] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[2015],,,,,,,AICP/kernel_samsung_exynos5410,maxfu,,,semdoc,
AICP,kernel_samsung_exynos5410,"block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions. Change-Id: Ie4216c680dcd83b54cae83d8171680990d1ed3f7",05/05/2014 19:24:16,,DUPLICATE,https://github.com/AICP/kernel_samsung_exynos5410/commit/923a7dcedcce3b7c2a7d3ed7f94c6ac1aa61a79a,,,[OK][Use power efficient work queues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Use power efficient work queues] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,[Use power efficient work queue] [Work queue],,,[1585],Certain,Android,No,Kernel,C,"block: queue work on power efficient wq Adapted for 3.4 from lsk-v3.10 Block layer uses workqueues for multiple purposes. There is no real dependency of scheduling these on the cpu which scheduled them. On a idle system, it is observed that and idle cpu wakes up many times just to service this work. It would be better if we can schedule it on a cpu which the scheduler believes to be the most appropriate one. This patch replaces normal workqueues with power efficient versions.",AICP/kernel_samsung_exynos5410,maxfu,,,semdoc,Kernel block
AICP,kernel_samsung_exynos5410,soc: pcm: Use the power efficient workqueue for delayed powerdown Adapted for 3.4 from lsk-v3.10 There is no need to use a normal per-CPU workqueue for delayed power downs as they're not timing or performance critical and waking up a core for them would defeat some of the point. Change-Id: Ia13bff08a6ea146565299dbd285a6aba86302806,05/05/2014 19:24:42,,DUPLICATE,https://github.com/AICP/kernel_samsung_exynos5410/commit/6e05bbfbebc45ee29c36d0c24b0ef853ea603e58,,,[OK][Use power efficient work queues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Use power efficient work queues] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,[Use power efficient work queue] [Work queue],,,[1691],Certain,Android,No,Kernel,C,soc: pcm: Use the power efficient workqueue for delayed powerdown,AICP/kernel_samsung_exynos5410,maxfu,,,semdoc,Kernel sound
AICP,kernel_samsung_exynos5410,soc: jack: Use power efficient workqueue Adapted for 3.4 from lsk-v3.10 The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Change-Id: I0fdf395d2c15b0f4a6e05b80fb36af99198d48c1,05/05/2014 19:24:54,,DUPLICATE,https://github.com/AICP/kernel_samsung_exynos5410/commit/a60d0c3d5a375717995f61d6d25efec9dcbb2082,,,[OK][Use power efficient work queues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel],[Use power efficient work queues] [Use power efficient work queue] [Work queue] [Kernel],EXISTS,,,,,,[1377],,,,,,,AICP/kernel_samsung_exynos5410,maxfu,,,semdoc,
AICP,kernel_samsung_exynos5410,"workqueues: Introduce new flag WQ_POWER_EFFICIENT for power oriented workqueues Adapted for 3.4 from lsk-v3.10 Workqueues can be performance or power-oriented. Currently, most workqueues are bound to the CPU they were created on. This gives good performance (due to cache effects) at the cost of potentially waking up otherwise idle cores (Idle from scheduler's perspective. Which may or may not be physically idle) just to process some work. To save power, we can allow the work to be rescheduled on a core that is already awake. Workqueues created with the WQ_UNBOUND flag will allow some power savings. However, we don't change the default behaviour of the system. To enable power-saving behaviour, a new config option CONFIG_WQ_POWER_EFFICIENT needs to be turned on. This option can also be overridden by the workqueue.power_efficient boot parameter. tj: Updated config description and comments. Renamed CONFIG_WQ_POWER_EFFICIENT to CONFIG_WQ_POWER_EFFICIENT_DEFAULT. Change-Id: I3e2a8ae65835396525a8689fc317ee0dbadc2add",05/05/2014 19:25:08,,DUPLICATE,https://github.com/AICP/kernel_samsung_exynos5410/commit/9d4cf40312f1d7393e119ea8842bca55ed197cae,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [14da2c463655efa287b28fa3c918cb19995274b5],[14da2c463655efa287b28fa3c918cb19995274b5],EXISTS,,,,,,,,,,,,,AICP/kernel_samsung_exynos5410,maxfu,,,semdoc,
CyanogenMod,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",05/05/2014 19:57:03,,OK,https://github.com/CyanogenMod/android_frameworks_base/commit/5d89ef90996531a535b3a79a521bb9517cd978d5,,,[OK][Decrease sampling interval],[DO NOT ANALYZE],[?] [OK] [Bug Fix],[Decrease sampling interval] [OK] [Bug Fix],EXISTS,[Change default sampling interval to -1 to avoid sampling],"[Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test]",[Disable sampling by default],[Disable feature] [Sub1: By default],,,Certain,Android,Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8,OS,Java,"Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test.",CyanogenMod/android_frameworks_base,,[Energy bug],,cyanogen,Framework
DarkCyanogenMod,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",05/05/2014 20:05:57,,NOT-FOUND,https://github.com/DarkCyanogenMod/android_frameworks_base/commit/2bba6db702c133925cdcb56062f27903017a50e9,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,DarkCyanogenMod/android_frameworks_base,,,,,
JeyDroids,packages_apps_OmniGears,"[3/3] OmniGears: Battery Saver Mode introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led Conflicts: res/values/custom_arrays.xml res/values/custom_strings.xml Change-Id: Id289090fa20a38d4fc43c40240148e5f276eb4b6",05/05/2014 20:43:52,,NOT-FOUND,https://github.com/JeyDroids/packages_apps_OmniGears/commit/adcdf05deab21a2558c85fda7615818870f84bd3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/packages_apps_OmniGears,,,,,
X-ROM,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",05/05/2014 20:49:22,,DUPLICATE,https://github.com/X-ROM/android_frameworks_base/commit/f369d45fcb17d02fd68400d83ac6d85bd471d530,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,X-ROM/android_frameworks_base,,,,aways,
JeyDroids,frameworks_base,"[1/3] Base: Battery Saver mode Concept: http://jira.omnirom.org/browse/CONCEPT-24 introduce battery saver mode this based from what user want or what user do to saving the battery life this include: 1. Automatically switch mobile network into what user choice and also disable mobile data IF wifi connected to an AP 2. Automatically switch mobile network and disable mobile data IF battery low (battery level can configure) 3. Reduce screen brightness based low battery (this feature will disabled if Auto brightness mode enabled) 4. Not changing network IF on Call or Usb tether enabled or WifiAP enabled 5. Not changing network IF there is Download/upload progress 6. Support For Both GSM and CDMA devices (need someone to test for CDMA devices) 7. every condition has an option :D 8. Restore all network configuration if battery saver mode disabled 9. Add Time Range to start battery saver mode 10. allow device without mobile data support, to using this feature 11. fix inconsistent battery low level 12. rewrite to better performance 13. modified the controller to support battery saver mode 14. add bluetooth, gps, wifi, and mobile data (if support) to be disabled while power saving activated 15. fix build QuickSettings because of LocationController change 16. rewrite to better performance 17. fix brightness value 18. rewrite (again) to allow add more saving mode 19. do delay changing only for POWER SAVING not NORMAL mode 20. add Cpu power saving mode 21. fix Cpu freq value 22. fix call saving state for non user configuration mode 23. fix NPE 24. add kill all task 25. add disable sync 26. add disable vibrate 27. add disable led 28. add notification :) 29. finally fix sync interval :D preview: http://jira.omnirom.org/secure/attachment/10394/Screenshot_2014-03-07-19-54-57.png http://jira.omnirom.org/secure/attachment/10395/Screenshot_2014-03-07-19-55-56.png http://jira.omnirom.org/secure/attachment/10396/Screenshot_2014-03-07-19-56-06.png http://jira.omnirom.org/secure/attachment/10397/Screenshot_2014-03-07-19-56-14.png http://jira.omnirom.org/secure/attachment/10398/Screenshot_2014-03-07-19-56-27.png http://jira.omnirom.org/secure/attachment/10399/Screenshot_2014-03-07-19-56-34.png PS47: fix conflicts. PS48: forgot delete obsolete call to refreshImmersiveTile() Change-Id: I9d86ef1425228e11cadd85d37c5b6e8b20e50fb0",05/05/2014 21:06:35,,NOT-FOUND,https://github.com/JeyDroids/frameworks_base/commit/89172c4b105003456f915db9df024ae3979447b8,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,JeyDroids/frameworks_base,,,,,
AOSPA-legacy,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",05/05/2014 21:39:27,,DUPLICATE,https://github.com/AOSPA-legacy/android_frameworks_base/commit/33b485aec5a1fefd250f30c0537ca242354c25fb,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,AOSPA-legacy/android_frameworks_base,,,,houst0nn,
CM-i9300-builds,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8 (cherry picked from commit 5d89ef90996531a535b3a79a521bb9517cd978d5)",05/05/2014 21:50:50,,NOT-FOUND,https://github.com/CM-i9300-builds/android_frameworks_base/commit/f6b51810afaa50fc9aadb895acf555a9214d6a50,,,,[DO NOT ANALYZE],,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,CM-i9300-builds/android_frameworks_base,,,,abun880007,
AOSPA-legacy,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",05/05/2014 22:55:04,,DUPLICATE,https://github.com/AOSPA-legacy/android_frameworks_base/commit/4ac1a4db2058db1967c7a4c90d93dae694c593af,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,AOSPA-legacy/android_frameworks_base,,,,houst0nn,
Triangles,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",06/05/2014 01:24:27,,DUPLICATE,https://github.com/Triangles/android_frameworks_base/commit/35986f91edf6f5e941749b17e4788193716ec7b3,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,Triangles/android_frameworks_base,,,,,
lishen2,ProgrammableLED,reduce power consumption,06/05/2014 01:57:19,,UNABLE-TO-CATEGORIZE,https://github.com/lishen2/ProgrammableLED/commit/95a18f3ae62528860234eb64e439ff3c24a913eb,,,[OK][Disable PIN on startup?],[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],[Disable PIN on startup?],EXISTS,,,,,,,,,,,,,lishen2/ProgrammableLED,lishen2,,,lishen2,
CarbonDev,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",06/05/2014 02:59:51,,DUPLICATE,https://github.com/CarbonDev/android_frameworks_base/commit/761026e0683c8d18e4950c3f8303c1408337e52d,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,CarbonDev/android_frameworks_base,,,,andros11,
AOSPA-legacy,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",06/05/2014 03:32:42,,DUPLICATE,https://github.com/AOSPA-legacy/android_frameworks_base/commit/6e8dd6cfa44e63e6e4bfad527078a70827036167,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,AOSPA-legacy/android_frameworks_base,,,,houst0nn,
temasek,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",06/05/2014 08:29:53,,DUPLICATE,https://github.com/temasek/android_frameworks_base/commit/32ed31293ba740fe51c8c19ff5dd5466b7e0486d,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,temasek/android_frameworks_base,,,,temasek,
AragaoAnderson,n5x_packages_apps_Settings,Settings: Fixes and improvements in Power Saver Change-Id: I881b00c415674e09dbde9a1dbd09e88cfe2a5276,06/05/2014 09:34:13,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_packages_apps_Settings/commit/7db063bb6a337e2d7a0061e89409a292f487f54e,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_packages_apps_Settings,AragaoAnderson,,,AragaoAnderson,
AragaoAnderson,n5x_packages_apps_Settings,Settings: Fixes and improvements in Power Saver Change-Id: I881b00c415674e09dbde9a1dbd09e88cfe2a5276,06/05/2014 09:34:15,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_packages_apps_Settings/commit/07f1f7d6024f7e4ff3c05d215548431eb5560135,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_packages_apps_Settings,AragaoAnderson,,,AragaoAnderson,
AragaoAnderson,n5x_frameworks_base,Framework: Fixes and improvements in Power Saver Change-Id: I9708477d39481be0920436ba04d1071c623504a5,06/05/2014 09:36:12,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_frameworks_base/commit/8cf084038a9708f39514e04c918f5c61f70c14fe,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_frameworks_base,AragaoAnderson,,,AragaoAnderson,
AragaoAnderson,n5x_frameworks_base,Framework: Fixes and improvements in Power Saver Change-Id: I9708477d39481be0920436ba04d1071c623504a5,06/05/2014 09:36:17,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_frameworks_base/commit/031969c1599e2290f30c8182706532b394d2ff2f,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_frameworks_base,AragaoAnderson,,,AragaoAnderson,
NamelessRom,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",06/05/2014 11:24:43,,DUPLICATE,https://github.com/NamelessRom/android_frameworks_base/commit/4b1ef31411ed087e7d0343c85cbbb376fe60ab4c,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,NamelessRom/android_frameworks_base,,,,jumoog,
TeamTREX,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",06/05/2014 12:47:20,,NOT-FOUND,https://github.com/TeamTREX/android_frameworks_base/commit/74ccb62769f368346c26b588f20b9ea525129fe3,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,TeamTREX/android_frameworks_base,,,,,
lishen2,ProgrammableLED,reduce power consumption,06/05/2014 13:39:46,,UNABLE-TO-CATEGORIZE,https://github.com/lishen2/ProgrammableLED/commit/33c7aba47619efaa18fb0e8bad5de6ebeb88f504,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,lishen2/ProgrammableLED,lishen2,,,lishen2,
lishen2,ProgrammableLED,achieve 66 uA standby power consumption,06/05/2014 14:02:37,,UNABLE-TO-CATEGORIZE,https://github.com/lishen2/ProgrammableLED/commit/ca559843e24e35a55c3bccb4c5b019e89d54a99d,,,[UNABLE-TO-CATEGORIZE],[DO NOT ANALYZE],[UNABLE-TO-CATEGORIZE],,EXISTS,,,,,,,,,,,,,lishen2/ProgrammableLED,lishen2,,,lishen2,
savoca,android_kernel_motorola_msm8226,Enable Power Efficient Workqueue,07/05/2014 02:06:05,,NOT-FOUND,https://github.com/savoca/android_kernel_motorola_msm8226/commit/5eadd634c0f5179409b83a8bfdab396459c26c20,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,savoca/android_kernel_motorola_msm8226,,,,,
xboxfanj,android_kernel_htc_msm8974,"defconfig: update, enable mpdec, kernel mode neon, power efficient wq, memutils, etc Change-Id: I01c7179f2156d670385877d7db4d23442705bc17",07/05/2014 03:24:55,,OK,https://github.com/xboxfanj/android_kernel_htc_msm8974/commit/3dc815a3d5b475247983ec6b9bbdce1833018dbf,,,[OK][Use power efficient work queues],[DO NOT ANALYZE],[OK] [Use power efficient work queue] [Work queue] [Kernel] [Android],[Use power efficient work queues] [Use power efficient work queue] [Work queue] [Kernel] [Android],EXISTS,[enable power efficient workqueue by default],[power saving],[Use power efficient work queue] [Work queue] [Script],[Use power efficient work queue],,,Certain,Android,No,OS,Defconfig,"defconfig: update, enable mpdec, kernel mode neon, power efficient wq, memutils, etc",xboxfanj/android_kernel_htc_msm8974,xboxfanj,[Use power efficient library/device],,xboxfanj,Kernel arch
FreedomBen,rtl8188ce-linux-driver,rtl8192ce sw.c default inactive power save (ips) to true Also fix capitalization on module param descriptions,07/05/2014 04:46:18,,OK,https://github.com/FreedomBen/rtl8188ce-linux-driver/commit/0b24f948d49b543682647d0f9068a7c4fed4ee0e,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[TRADEOFF-UNABLE-TO-CATEGORIZE],,EXISTS,[enable inactive power save by default],[power saving],[enable device power saving on inactivity by default],[Enable device low power mode] [Sub1: By default] [Condition: inactivity],,,Certain,Linux wifi,No,OS,C,rtl8192ce sw.c default inactive power save (ips) to true,FreedomBen/rtl8188ce-linux-driver,FreedomBen,[Disabling feature/devices],[inactivity],FreedomBen,Driver
liquid0624,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",07/05/2014 05:11:26,,NOT-FOUND,https://github.com/liquid0624/android_frameworks_base/commit/47640d941683d4899ffa8c6bc3354e7257de45e2,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,liquid0624/android_frameworks_base,,,,,
AOKP,frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",07/05/2014 09:28:57,,DUPLICATE,https://github.com/AOKP/frameworks_base/commit/d9fc22acc8bd92190099b29453ef0f0c44b82475,,,[DUP],[DO NOT ANALYZE],[?] [DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,AOKP/frameworks_base,,,,MarcLandis,
AICP,frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",07/05/2014 10:11:28,,DUPLICATE,https://github.com/AICP/frameworks_base/commit/b0e389d5e034af4d214f4a9b71892f8ea720cf3e,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,AICP/frameworks_base,,,,eyosen,
shamukillaz,android_frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",07/05/2014 23:55:01,,DUPLICATE,https://github.com/shamukillaz/android_frameworks_base/commit/936d2fcfc41c4d800f8de326c30d508f2f8e7d8b,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,shamukillaz/android_frameworks_base,ORCAOSP,,,ORCAOSP,
at41coopersquare,at41coopersquare.github.io,removing energy efficiency tab,08/05/2014 02:31:13,,FALSE-POSITIVE,https://github.com/at41coopersquare/at41coopersquare.github.io/commit/efde8563e51937d73ccebd9a796abc8414c7a925,,,[FALSE-POSITIVE][HTML],[DO NOT ANALYZE],[FALSE-POSITIVE],[HTML],EXISTS,,,,,,,,,,,,,at41coopersquare/at41coopersquare.github.io,,,,,
Ayysir,android_kernel_oppo_msm8974,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",08/05/2014 06:00:46,,NOT-FOUND,https://github.com/Ayysir/android_kernel_oppo_msm8974/commit/f4e52b61486adee1b5fbce6c10c7d7a99e993412,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Ayysir/android_kernel_oppo_msm8974,,,,,
oVirt,ovirt-engine,database: Reintroduce the variables used in Power Saving policy One patch introduced a regression and removed HostsInReserve and EnableAutomaticPowerManagement policy variables from the db. Change-Id: I48040a9c9ec1873872c789cf07c51a5489b3e65c Bug-Url: https://bugzilla.redhat.com/show_bug.cgi?id=1092623 Signed-off-by: Martin Sivak <msivak@redhat.com>,08/05/2014 06:03:27,,FALSE-POSITIVE,https://github.com/oVirt/ovirt-engine/commit/140b3b55174892ea941a2d5d008eb98597a98cbb,,,[FALSE-POSITIVE][SQL],[DO NOT ANALYZE],[FALSE-POSITIVE] [Sql],[SQL],EXISTS,,,,,,,,,,,,,oVirt/ovirt-engine,,,,,
oVirt,ovirt-engine,database: Reintroduce the variables used in Power Saving policy One patch introduced a regression and removed HostsInReserve and EnableAutomaticPowerManagement policy variables from the db. Change-Id: I48040a9c9ec1873872c789cf07c51a5489b3e65c Bug-Url: https://bugzilla.redhat.com/show_bug.cgi?id=1092623 Signed-off-by: Martin Sivak <msivak@redhat.com>,08/05/2014 07:13:19,,DUPLICATE,https://github.com/oVirt/ovirt-engine/commit/c218a96d6ecb6fcf25d0991beaca53a5d4c0059d,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [140b3b55174892ea941a2d5d008eb98597a98cbb],[140b3b55174892ea941a2d5d008eb98597a98cbb],EXISTS,,,,,,,,,,,,,oVirt/ovirt-engine,,,,gerrit-ovirt-org,
e0828330,cloudSimulator,datacenter: Add getter for power consumption,08/05/2014 08:18:53,,FALSE-POSITIVE,https://github.com/e0828330/cloudSimulator/commit/306061a4096865e41df04df4a2b18fe2b15e0d59,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Compute Power Consumption],[Compute Power Consumption],EXISTS,,,,,,,,,,,,,e0828330/cloudSimulator,,,,,
Docker-J,Sail_GPROJ,"Revert ""j1: backlight: apply customized backlight LUT for power saving"" This reverts commit 06692af17cf037c59d7f35763848d41679ca9d17.",08/05/2014 09:08:55,,REVERT,https://github.com/Docker-J/lge-kernel-gproj/commit/8e7cbe9691cd8cdc0e99b270646385eb594daabb,https://github.com/Docker-J/Sail_GPROJ/commit/8e7cbe9691cd8cdc0e99b270646385eb594daabb,,[REVERT][https://github.com/Docker-J/Sail_GPROJ/commit/06692af17cf037c59d7f35763848d41679ca9d17],[DO NOT ANALYZE],[REVERT] [06692af17cf037c59d7f35763848d41679ca9d17],[https://github.com/Docker-J/Sail_GPROJ/commit/06692af17cf037c59d7f35763848d41679ca9d17] [06692af17cf037c59d7f35763848d41679ca9d17],EXISTS,"Revert ""j1: backlight: apply customized backlight LUT for power saving""",,,,,,,,,,,,Docker-J/Sail_GPROJ,,,,,
andjuo,DYee,T&P egamma_Unregressed_energy efficiencies,08/05/2014 10:28:56,,FALSE-POSITIVE,https://github.com/andjuo/DYee/commit/9c950edc760694c287b94409973991ba82593f77,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,andjuo/DYee,andjuo,,,andjuo,
ryrzy,LG-D802-G2-_Android_KK_D802_v20b,Reduce voltage to LCD screen to save power.,08/05/2014 12:23:50,,OK,https://github.com/ryrzy/LG-D802-G2-_Android_KK_D802_v20b/commit/cebcdec40218cd3faa51a0e9a5a76082e417c77e,,,[OK][Reduce voltage to LCD screen],[DO NOT ANALYZE],[OK] [Reduce voltage to LCD screen] [Android],[Reduce voltage to LCD screen] [Android],EXISTS,[reduce LCD voltage],[power saving],[Reduce LCD voltage] [Reduce voltage],[Reduce device voltage],,,Certain,Android,No,OS,Dtsi?,Reduce voltage to LCD screen to save power,ryrzy/LG-D802-G2-_Android_KK_D802_v20b,dorimanx,[Frequency and voltage scaling],,ryrzy,Kernel arch boot
samilliken,openDCIM,"Altered tooltips to show full power usage of chassis devices, also added in an option to show weight even though we don't have that in the supported tooltip options currently. Still need to add something to the device view for the full power consumption and the weight. #463",08/05/2014 12:59:33,,FALSE-POSITIVE,https://github.com/samilliken/openDCIM/commit/246b4a10802d5a2c3273cb6fc85897171bf0a9fe,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,samilliken/openDCIM,wilpig,,,wilpig,
l0neJT,exploratory_data01,Create R Project + getHousePowerAsDT Function Create R project and getHousePowerAsDT function to standardize pull of household power consumption data.,09/05/2014 05:51:15,,FALSE-POSITIVE,https://github.com/l0neJT/exploratory_data01/commit/23aa8e266e2603ad3380c895831eea938dc28b51,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [R script],[R script],EXISTS,,,,,,,,,,,,,l0neJT/exploratory_data01,l0neJT,,,l0neJT,
AragaoAnderson,n5x_frameworks_base,Framework: Disable stupid governors and add Intellidemand to Power Saver Change-Id: I8bf4077b99c73a4f36a1f2252d8c4914e18534bc,09/05/2014 12:13:56,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_frameworks_base/commit/42a08155a9db793886609566213a7534662e4c07,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_frameworks_base,AragaoAnderson,,,AragaoAnderson,
AragaoAnderson,n5x_frameworks_base,Framework: Disable stupid governors and add Intellidemand to Power Saver Change-Id: I8bf4077b99c73a4f36a1f2252d8c4914e18534bc,09/05/2014 12:14:01,,NOT-FOUND,https://github.com/AragaoAnderson/n5x_frameworks_base/commit/2f58ed5b3656e7ea7e466080ffac04567ab04e8d,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,AragaoAnderson/n5x_frameworks_base,AragaoAnderson,,,AragaoAnderson,
l0neJT,exploratory_data01,Update getHousePowerAsDt.r + Save CSV Update getHousePowerAsDT.r to include column headers and save a CSV of the 2007-02-01to02 household power consumption data.,09/05/2014 15:21:07,,FALSE-POSITIVE,https://github.com/l0neJT/exploratory_data01/commit/2fb5df67d1d3436cdc4fb01586027d71fb27c926,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [R script],[R script],EXISTS,,,,,,,,,,,,,l0neJT/exploratory_data01,l0neJT,,,l0neJT,
RenderBroken,android_kernel_motorola_msm8226,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,10/05/2014 05:55:19,,NOT-FOUND,https://github.com/RenderBroken/android_kernel_motorola_msm8226/commit/d83f5adbed77078ba9d244748f8330a7c631c601,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,RenderBroken/android_kernel_motorola_msm8226,,,,,
Ayysir,android_kernel_oppo_msm8974,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable. Basically according to http://elinux.org/images/1/1d/Comparing_Power_Saving_Techniques_For_Multicore_ARM_Platforms.pdf this tunable provides serious power saving improvements close to the power savings of hotpluging cores. Since in this Kernel we're using always a minimum of 2 cpus online at any time during screen off we might actually benefit from this because this feature packs tasks together and try to bind them to cpu0, which in theory will let cpu1 idle longer, thus improving battery life. Change-Id: Ic3ec44967b18635791d147bcf3e2b2d4e198a49a Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>",10/05/2014 06:30:06,,NOT-FOUND,https://github.com/Ayysir/android_kernel_oppo_msm8974/commit/19055d473236c59463b42821c6220c520383dcaa,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,Ayysir/android_kernel_oppo_msm8974,,,,,
alexandrudaia,ExData_Plotting1,Create PlotsMadeByMe.md The plots for the householders energy consumption,10/05/2014 16:18:00,,FALSE-POSITIVE,https://github.com/alexandrudaia/ExData_Plotting1/commit/58c18696ddc539e9d57ae590be522a42d0ea95f0,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [R script],[R script],EXISTS,,,,,,,,,,,,,alexandrudaia/ExData_Plotting1,alexandrudaia,,,alexandrudaia,
cgaubuchon,RA_Controller,- Added Heater on/off to Internal memory - Rearrangement of ports - Chiller added (debating adding it to internal memory for on/off energy savings) - Corrected overheat temperature���Summer is coming,10/05/2014 16:31:05,,FALSE-POSITIVE,https://github.com/cgaubuchon/RA_Controller/commit/8a87836487b16e282618d72ddee3e552111a1888,,,[OK][Memory Energy Saving],[DO NOT ANALYZE],[RELATED] [?],[Memory Energy Saving] [?],EXISTS,,,,,,,,,,,,,cgaubuchon/RA_Controller,cgaubuchon,,,cgaubuchon,
sspencer10ls,android_kernel_samsung_d2,cpufreq: Add Many Governors * Look below to see everything I added :) Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: InteractiveX CPU governor Modified version of interactive with sleep+wake code Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: OnDemandX CPU governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Lionheart CPU governor A brave and agile conservative-based governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: SmartAssV2 CPU governor A smart optimized governor based on OnDemand Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: LulzActive CPU governor A new interactive governor developed by Tegrak. For more information please visit: http://tegrak2x.blogspot.com/2011/11/lulzactive-governor-v2.html Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Adaptive CPU governor This driver adds a dynamic cpufreq policy governor designed for latency-sensitive workloads and also for demanding performance. This governor attempts to reduce the latency of clock increases so that the system is more responsive to interactive workloads in loweset steady-state but to reduce power consumption in middle operation level up will be done in step by step to prohibit system from going to max operation level. Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Hyper CPU governor A tweaked OnDemand based smart and smooth optimized governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: BrazilianWax CPU governor A slightly more agressive smart optimized governor Signed-off-by: Chester Kener <Cl3Kener@gmail.com> cpufreq: Intellidemand CPU governor This is an 'ondemand' based CPU governor created by Faux123 (thanks to him for his awesome work) Signed-off-by: Chester Kener <Cl3Kener@gmail.com> Fix Signed-off-by: Chester Kener <Cl3Kener@gmail.com> Conflicts: drivers/cpufreq/cpufreq_intellidemand.c,10/05/2014 18:48:35,,SOFT-DUPLICATE,https://github.com/sspencer10ls/android_kernel_samsung_d2/commit/c22cbca54ab85d6c833e82955e214e56f9a2d62f,,,[RELATED][Add new Governor],[DO NOT ANALYZE],[RELATED] [Add Governor] [Governor] [Kernel] [Android],[Add new Governor] [Add Governor] [Governor] [Kernel] [Android],EXISTS,,,,,,,,,,,,,sspencer10ls/android_kernel_samsung_d2,Cl3Kener,,,sspencer10,
SlimSaber,frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8 Conflicts: services/java/com/android/server/ConnectivityService.java",10/05/2014 19:10:29,,DUPLICATE,https://github.com/SlimSaber/frameworks_base/commit/714103389fdf621c361d9e20ea0bdbf2817c235a,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,SlimSaber/frameworks_base,,,,fusionjack,
espmartin,frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8",10/05/2014 20:20:22,,DUPLICATE,https://github.com/espmartin/frameworks_base/commit/7dc23cf0370563a2f2591cbec714f9a1e947cc80,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [d9fc22acc8bd92190099b29453ef0f0c44b82475],[d9fc22acc8bd92190099b29453ef0f0c44b82475],EXISTS,,,,,,,,,,,,,espmartin/frameworks_base,,,,espmartin,
yeokm1,vibrate_alarm_clock,save power with Low power library,11/05/2014 05:32:04,,OK,https://github.com/yeokm1/vibrate_alarm_clock/commit/655a51257f719dc56c25f0f41e6f600f26ebc725,,,[OK][use low power library],[DO NOT ANALYZE],[OK] [save power with Low power library],[use low power library] [save power with Low power library],EXISTS,[use Low power library to shut down components],[power saving],[Go to low power] [Disable device],[Go to low power],[Disable device],Multiple changes,Certain,Arduino,No,Application,Ino,save power with Low power library,yeokm1/vibrate_alarm_clock,,[Low power idling],,,Arduino application
fictiousfido,datasciencecoursera,EDA week_01 Household power consumption.,11/05/2014 11:54:05,,FALSE-POSITIVE,https://github.com/fictiousfido/datasciencecoursera/commit/d452035af7ae94df0434edb47a7b7668d9c0eeff,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,,,,,,,,,,,,,fictiousfido/datasciencecoursera,,,,,
SlimSaber,frameworks_base,"services: change default sampling interval to -1 Change default sampling interval to -1 to avoid sampling to resolve power consumption issue. Original implement will keep UE wake up every 12 minutes, which will cause issue when doing power standby test. Change-Id: I018e22a44259e94bce87ceaf04ff523f035183f8 Conflicts: services/java/com/android/server/ConnectivityService.java",11/05/2014 16:17:52,,DUPLICATE,https://github.com/SlimSaber/frameworks_base/commit/46c5d14c4c8e041f3258586b126573f2b11b39ce,,,[DUP],[DO NOT ANALYZE],[DUPLICATE] [5d89ef90996531a535b3a79a521bb9517cd978d5],[5d89ef90996531a535b3a79a521bb9517cd978d5],EXISTS,,,,,,,,,,,,,SlimSaber/frameworks_base,,,,fusionjack,
ShinySide,HispAsian_Kernel,"sched: set sched_mc_power_savings to 2, which is the highest power saving possible value for this tunable",11/05/2014 19:44:10,,DUPLICATE,https://github.com/ShinySide/HispAsian_Kernel/commit/7bb2c97312f58c90358b83bb5785f263b5917b00,,,[OK][set sched_mc_power_savings to 2][Kernel],[DO NOT ANALYZE],[DUPLICATE] [ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],[set sched_mc_power_savings to 2] [Kernel] [ddbd1ca6970d0e8210997e2b2ffa0a8e3c596314],EXISTS,,,,,,,,,,,,,ShinySide/HispAsian_Kernel,,,,,
bisaria,ExData_Plotting1,Plot 1: Global Active Power Consumption,11/05/2014 19:58:49,,FALSE-POSITIVE,https://github.com/bisaria/ExData_Plotting1/commit/5fb16a2b5a130117968a0f39f289259949d7e66c,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [R Script],[R Script],EXISTS,,,,,,,,,,,,,bisaria/ExData_Plotting1,bisaria,,,bisaria,
afajardo,ExData_Plotting1,Plot 1 - Household Power Consumtion,11/05/2014 22:12:21,,FALSE-POSITIVE,https://github.com/afajardo/ExData_Plotting1/commit/46e9c1616a1965a8cb87a2b8d781c208e463b1b1,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [R Script],[R Script],EXISTS,,,,,,,,,,,,,afajardo/ExData_Plotting1,afajardo,,,afajardo,
afajardo,ExData_Plotting1,Plot 2 - Household Power Consumption by Day,11/05/2014 23:03:47,,FALSE-POSITIVE,https://github.com/afajardo/ExData_Plotting1/commit/e9a7188756e66d1c8a1569e98f6d3f394d6cff84,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [R Script],[R Script],EXISTS,,,,,,,,,,,,,afajardo/ExData_Plotting1,afajardo,,,afajardo,
osrecki,ExData_Plotting1,Added assignment solution. Added 4 R scripts that generate 4 different plots for Electric power consumption dataset. Also added 4 generated plots in the form of png images.,11/05/2014 23:17:25,,NOT-FOUND,https://github.com/osrecki/ExData_Plotting1/commit/f5b6779f3c93136a11635a44ef011e485eeec87c,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,osrecki/ExData_Plotting1,osrecki,,,osrecki,
RenderBroken,android_kernel_motorola_msm8226,ASoC: jack: Use power efficient workqueue The accessory detect debounce work is not performance sensitive so let the scheduler run it wherever is most efficient rather than in a per CPU workqueue by using the system power efficient workqueue. Signed-off-by: Mark Brown <broonie@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Pranav Vashi <neobuddy89@gmail.com> Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>,11/05/2014 23:26:08,,NOT-FOUND,https://github.com/RenderBroken/android_kernel_motorola_msm8226/commit/d83f5adbed77078ba9d244748f8330a7c631c601,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,RenderBroken/android_kernel_motorola_msm8226,,,,,
animania260,Glitch_Flo_AOSP,"Revert ""ASoC: jack: Use power efficient workqueue"" This reverts commit 761e0a064c3a9288aeb9ea5b3e33d1c2dc002fb4.",12/05/2014 01:48:23,,REVERT,https://github.com/animania260/Glitch_Flo_AOSP/commit/806e58f16c8dc564e121eedd20606226bbe6db4f,,,[REVERT][Use power efficient workqueue],[DO NOT ANALYZE],[REVERT] [761e0a064c3a9288aeb9ea5b3e33d1c2dc002fb4],[Use power efficient workqueue] [761e0a064c3a9288aeb9ea5b3e33d1c2dc002fb4],EXISTS,"Revert ""ASoC: jack: Use power efficient workqueue""",,,,,,,,,,,,animania260/Glitch_Flo_AOSP,,,,,
pranjal-joshi,T-copter,Power saving modified & tested. Printf added for debuging.,12/05/2014 05:36:52,,OK,https://github.com/pranjal-joshi/T-copter/commit/f1fe6b5e37ca7484a77a6c06eeb978f7a2286905,,,[OK][Send data only if a certain condition holds],[DO NOT ANALYZE],[OK][Send data only if a certain condition holds],[Send data only if a certain condition holds],EXISTS,[Only send data when data in current readings array does not match last readings array],[save lots of power],[Send data only when current reading is different from last reading] [Send data only when needed],[Do not send repeated data],,,Certain,Arduino,No,Application,Ino,Power saving modified & tested. Printf added for debuging.,pranjal-joshi/T-copter,pranjal-joshi,[Avoid unnecessary work],,pranjal-joshi,Arduino application
pranjal-joshi,T-copter,Power saving modified & tested. Printf added for debuging.,12/05/2014 05:41:58,,FALSE-POSITIVE,https://github.com/pranjal-joshi/T-copter/commit/b1d906ab101422ea37e9c99d5088f7b8d34b5898,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [?],[?],EXISTS,,,,,,,,,,,,,pranjal-joshi/T-copter,pranjal-joshi,,,pranjal-joshi,
boarboar,WT,release unused pins to save power,12/05/2014 10:09:59,,OK,https://github.com/boarboar/WT/commit/90fab1be509d6970aa85772a7d7b7d064f0ff3e5,,,[OK][release unused pins],[DO NOT ANALYZE],[OK] [release unused pins to save power] [Wireless temp sensor suite],[release unused pins] [release unused pins to save power] [Wireless temp sensor suite],EXISTS,[release unused pins],[power saving],[Release resource] [Release unused pins],[Pin configuration] [Sub1: Release pin],,,Certain,Arduino,No,Application,"C++,Ino",release unused pins to save power,boarboar/WT,,[Pin management],,,Arduino application
krialix,Thor-Kernel,"Revert ""mako: backlight: apply customized backlight LUT for power saving"" This reverts commit 22fada9dfd7ad1e26f85650dfc07992206b80319.",12/05/2014 12:07:05,,NOT-FOUND,https://github.com/krialix/Thor-Kernel/commit/546c6c6cf578ad04a6ce48ab906d643a090f1446,,,,,,,NOT-FOUND-SCRIPT-NOAPI,,,,,,,,,,,,,krialix/Thor-Kernel,,,,,
AmkG,XSR1,engines.js: Change energy consumption rate in hyperspace.,12/05/2014 22:45:33,,FALSE-POSITIVE,https://github.com/AmkG/XSR1/commit/891ef5c79fad8c814fb39f370a9774e4bb857e06,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[Game],EXISTS,,,,,,,,,,,,,AmkG/XSR1,AmkG,,,AmkG,
undergroundminer3,BuildCraft,"Add dynamic quarry energy consumption The quarry takes the block hardness and multiplies it by something and adds the base energy required. Also make it need energy to create the arm. Base ENERGY: 11.5MJ Hardness MULTIPLIER: 35.0 MJ Old flat energy intake: 64 MJ New energy: Stone still takes 64 MJ. (Hardness 1.5) Dirt takes around 30. (Hardness 0.5) Obsidian takes a shocking 1761.5 (Hardness 50) Increase base, and decrease multiplier for a more flat energy consumption. Vice versa for a more extreme range. Please adjust energy consumption, if too extreme.",12/05/2014 23:50:41,,FALSE-POSITIVE,https://github.com/undergroundminer3/BuildCraft/commit/5b0ca168e07eefcb01daa95b503a66e63bc99d4b,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Game],[Game],EXISTS,,,,,,,,,,,,,undergroundminer3/BuildCraft,undergroundminer3,,,undergroundminer3,
KINGbabasula,KING_kernel,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",13/05/2014 13:32:51,,DUPLICATE,https://github.com/KINGbabasula/KING_kernel/commit/518201ca40774129ed9f89af9aebe9ba9ec7770d,,,[TRADE-OFF][reduce latency at the expense of energy efficiency],[DO NOT ANALYZE],[DUPLICATE] [3746af06c20762fc9eb21be42b48707c826a734a],[reduce latency at the expense of energy efficiency] [3746af06c20762fc9eb21be42b48707c826a734a],EXISTS,,,,,,,,,,,,,KINGbabasula/KING_kernel,faux123,,,KINGbabasula,
broepi,bpgw,now with sync and power saving mode,13/05/2014 13:58:11,,RELATED,https://github.com/broepi/bpgw/commit/736620cd9e72a214400f21573ef572ac905be3e5,,,[RELATED][Enabling power saving mode],[DO NOT ANALYZE],[RELATED] [Enable power saving mode] [Game],[Enabling power saving mode] [Enable power saving mode] [Game],EXISTS,,,,,,,,,,,,,broepi/bpgw,broepi,,,broepi,
jhs,build-couchdb,"Upgrade to Erlang/OTP R16B03-1 This is due to Russell Branca's notes, attached below. There has been some discussion on what versions of Erlang CouchDB should support, and what versions of Erlang are detrimental to use. Sadly there were some pretty substantial problems in the R15 line and even parts of R16 that are landmines for CouchDB. This post will describe the current state of things and make some potential recommendations on approach. It was discovered by Basho that R15* and R16B are susceptible to scheduler collapse. There's quite a bit of discussion and information in several threads [1] [2] [3] [4] [5]. So what is scheduler collapse? Erlang schedulers can be put to sleep when there is not sufficient work to occupy all schedulers, which saves on CPU and power consumption. When the schedulers that are still running go through enough reductions to pass the work balancing threshold, they can trigger a rebalance of work that will wake up sleeping schedulers. The other mechanism for sharing scheduler load is work stealing. A scheduler that does not have any work to do can steal work from other schedulers. However a scheduler that has gone to sleep cannot steal work, it has to be woken up separately. Now the real problem of scheduler collapse occurs when you take sleeping schedulers and long running NIFs and BIFs that do not report an appropriate amount of reductions. When you have NIFs and BIFs that don't report an appropriate amount of reductions, you can get into a situation where a long running function call will only show up as taking one reduction, and never hit the work balance threshold, causing that scheduler to be blocked during the operation and no additional schedulers getting woken up. I keep mentioning ""NIFs and BIFs"" because it's important to note that it is _not_ just user defined NIFs that are problematic, but also a number of Erlang BIFs that don't properly report reductions. Particularly relevant to CouchDB are the BIFs `term_to_binary` and `binary_to_term` which do _not_ behave properly, and each report a single reduction count, regardless of the size of the value passed to them. Given that every write CouchDB makes goes through `term_to_binary`, this is definitely not good. This problem is systemic to all versions of R15 and R16B. In R16B01, two changes were made to alleviate the problem. First, in `OTP-11163` `term_to_binary` now uses an appropriate amount of reductions and will yield back to the scheduler. The second important change was the introduction of the `+sfwi` (Scheduler Forced Wakeup Interval) flag [6] which allows you to specify a time interval for a new watchdog process to check scheduler run queues and wake up sleeping schedulers if need be. These two changes help significantly, although from what I understand, they do not fully eliminate scheduler collapse. *NOTE*: the `+sfwi` is _not_ enabled by default, you must specify a greater than zero time interval to enable this. *WE NEED TO ENABLE THIS SETTING.* We should figure out a way to conditionally add this to vm.args or some such. On a side note, Basho runs R15B01 because they backported the `+sfwi` feature to R15B01 [7] [8]. They recommend running with `+sfwi 500` for a 500ms interval. It might be worth testing out different values, but 500 seems like a good starting point. For Riak 2.0, they will be building against R16B03-1 and 17.0 as their set of patches to R16B02 landed in R16B03-1 [9] [10]. So R16B01 sorted out the scheduler collapse issues, but unfortunately it also broke monitors, which immediately disqualifies this release as something we should recommend to users. The issues was fixed in `OTP-11225` in R16B02. I don't know of any catastrophic problems on the order of those described above in either of these releases. Basho fixed a number of unrelated bugs in R16B02 [9] [10] that have since landed in R16B03-1, which indicates we should probably prefer R16B03-1 over R16B02. R16B03 is also disqualified because it broke SSL and `erl_syntax`, resulting in the patched R16B03-1. R14B01, R14B03, and R14B04 are known good stable releases of Erlang, and in my opinion the only known stable releases > R13 that don't present issues for CouchDB (I think R16B02/R16B03-1 are too new to declare stable yet). As for R14B02, there are some bad `ets` issues with that release. It's worth pointing out that there are two known bugs in R14B01, as Robert Newson explains: ``` There are two bugs in R14B01 that we do encounter, however. 1) Another 32/64 bit oops causes the vm to attempt to allocate huge amounts of ram (terabytes, or more) if it ever tries to allocate more than 2gib of ram at once. When this happens, the vm dies and is restarted. It���s annoying, but infrequent. 2) Sometimes when closing a file, the underlying file descriptor is *not* closed, though the erlang process exits. This is rare but still quite annoying. ``` The 17.0 release brings in a number of interesting changes to help the scheduler collapse situation. `OTP-11648` improves reduction cost and yielding of `term_to_binary`. It also utilizes `OTP-11388` which allows for NIFs and BIFs to have more control over when and how they are garbage collected (we should do some investigation on the usefulness of this for NIFs like Jiffy). The 17.0 release also updates `binary_to_term` in `OTP-11535` to behave properly with reductions and yielding similar to `term_to_binary`. This marks the 17.0 release as an important one for CouchDB as now `term_to_binary` and `binary_to_term` both behave properly. One other interesting item introduced in the 17.0 release is the concept of dirty schedulers [12] [13]. This is an experimental feature providing CPU and I/O schedulers specifically for NIFs that are known to take longer that 1ms to run. In general, we want to make sure the NIFs we use will yield and report reductions properly, but for situations where that isn't feasible, we may want to look into using dirty schedulers down the road when it's a non experimental feature. In my opinion we need to take the Erlang release issues more seriously than we currently do and provide strong recommendations to users on what versions of Erlang we support. I suggest we loosely take an approach similar to Debian, and make three recommendations: * OldStable: [R14B01, R14B03, R14B04 (NOTE: _not_ R14B02)] * Unstable: [R16B03-1 recommended, R16B02 acceptable] * Experimental: [17.0] I'm not suggesting permanently having three Erlang releases recommended like this, but it currently seems appropriate. I think long term we should target 17.x as our preferred Erlang release, and then make a CouchDB 3.0 release that is backwards incompatible with anything less than 17.0 so that we can switch over to using maps. The narrowness of the acceptable releases list is going to cause some problems. Debian Wheezy runs R15B01, which as established above, is not good to run with unless you have the `+sfwi` patch, and I'm sure there are many other distros running R15 and R16B or R16B01. I think it would be useful to users to have a set of packages with a proper Erlang CouchDB release allowing us to bless specific versions of Erlang and bundle it together, but I know this idea goes against the recent change in stance on working with distributions, and I don't know the ASF stance on this issue well enough to comment on the legality of it. That said, it does seem like the logical approach until we get a range of stable releases spread out through the distros. We need to make sure that all NIFs we use that could potentially take longer than 1ms to run properly yield and report reductions. For Jiffy, there is already a good start on this work [11]. We'll want to look into what needs to be done for the rest of the NIFs. There's quite a bit of information here, and plenty more in the footnotes, so I hope this gives a good overview of the current state of Erlang releases and helps us to make informed decisions on what approach to take with Erlang releases. [1] http://comments.gmane.org/gmane.comp.lang.erlang.bugs/3564 [2] http://erlang.org/pipermail/erlang-questions/2013-April/073490.html [3] http://erlang.org/pipermail/erlang-questions/2012-October/069503.html [4] http://erlang.org/pipermail/erlang-questions/2012-October/069585.html [5] http://permalink.gmane.org/gmane.comp.lang.erlang.bugs/3573 [6] http://erlang.org/pipermail/erlang-patches/2013-June/004109.html [7] https://gist.github.com/evanmcc/a599f4c6374338ed672e [8] http://data.story.lu/2013/06/23/riak-1-3-2-released [9] https://github.com/basho/otp/compare/erlang:maint...OTP_R16B02_basho4 [10] https://groups.google.com/forum/#!topic/nosql-databases/XpFKVeUBdn0 [11] https://github.com/davisp/jiffy/pull/49 [12] https://github.com/erlang/otp/commit/c1c03ae4ee50e58b7669ea88ec4d29c6b2b67c7b [13] http://www.erlang.org/doc/man/erl_nif.html#dirty_nifs",14/05/2014 07:11:20,,FALSE-POSITIVE,https://github.com/jhs/build-couchdb/commit/849fa7ec89d6f27f7758d13e57619bf1d41819e0,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [?] [Erlang],[?] [Erlang],EXISTS,,,,,,,,,,,,,jhs/build-couchdb,jhs,,,jhs,
moddingg33k,android_kernel_huawai_Y300-J1,"HID: uhid: introduce user-space I/O driver support for HID (this is a combination of 15 commits) This adds a dummy driver that will support user-space I/O drivers for the HID subsystem. This allows to write transport-level drivers like USB-HID and Bluetooth-HID in user-space. Low-Energy Bluetooth needs this to feed HID data that is parsed in user-space back into the kernel. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: add internal message buffer When receiving messages from the HID subsystem, we need to process them and store them in an internal buffer so user-space can read() on the char device to retrieve the messages. This adds a static buffer for 32 messages to each uhid device. Each message is dynamically allocated so the uhid_device structure does not get too big. uhid_queue() adds a message to the buffer. If the buffer is full, the message is discarded. uhid_queue_event() is an helper for messages without payload. This also adds a public header: uhid.h. It contains the declarations for the user-space API. It is built around ""struct uhid_event"" which contains a type field which specifies the event type and each event can then add a variable-length payload. For now, there is only a dummy event but later patches will add new event types and payloads. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: allow poll()'ing on uhid devices As long as the internal buffer is not empty, we return POLLIN to user-space. uhid->head and uhid->tail are no atomics so the comparison may return inexact results. However, this doesn't matter here as user-space would need to poll() in two threads simultaneously to trigger this. And in this case it doesn't matter if a cached result is returned or the exact new result as user-space does not know which thread returns first from poll() and the following read(). So it is safe to compare the values without locking. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: implement read() on uhid devices User-space can use read() to get a single event from uhid devices. read() does never return multiple events. This allows us to extend the event structure and still keep backwards compatibility. If user-space wants to get multiple events in one syscall, they should use the readv()/writev() syscalls which are supported by uhid. This introduces a new lock which helps us synchronizing simultaneous reads from user-space. We also correctly return -EINVAL/-EFAULT only on errors and retry the read() when some other thread captured the event faster than we did. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: implement write() on uhid devices Similar to read() you can only write() a single event with one call to an uhid device. To write multiple events use writev() which is supported by uhid. We currently always return -EOPNOTSUPP but other events will be added in later patches. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: add UHID_CREATE and UHID_DESTROY events UHID_CREATE and UHID_DESTROY are used to create and destroy a device on an open uhid char-device. Internally, we allocate and register an HID device with the HID core and immediately start the device. From now on events may be received or sent to the device. The UHID_CREATE event has a payload similar to the data used by Bluetooth-HIDP when creating a new connection. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: allow feeding input data into uhid devices This adds a new event type UHID_INPUT which allows user-space to feed raw HID reports into the HID subsystem. We copy the data into kernel memory and directly feed it into the HID core. There is no error handling of the events couldn't be parsed so user-space should consider all events successfull unless read() returns an error. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: forward hid report-descriptor to hid core When the uhid_hid_parse callback is called we simply forward it to hid_parse_report() with the data that we got in the UHID_CREATE event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: add UHID_START and UHID_STOP events We send UHID_START and UHID_STOP events to user-space when the HID core starts/stops the device. This notifies user-space about driver readiness and data-I/O can start now. This directly forwards the callbacks from hid-core to user-space. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: forward open/close events to user-space HID core notifies us with *_open/*_close callbacks when there is an actual user of our device. We forward these to user-space so they can react on this. This allows user-space to skip I/O unless they receive an OPEN event. When they receive a CLOSE event they can stop I/O again to save energy. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: forward output request to user-space If the hid-driver wants to send standardized data to the device it uses a linux input_event. We forward this to the user-space transport-level driver so they can perform the requested action on the device. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: forward raw output reports to user-space Some drivers that use non-standard HID features require raw output reports sent to the device. We now forward these requests directly to user-space so the transport-level driver can correctly send it to the device or handle it correspondingly. There is no way to signal back whether the transmission was successful, moreover, there might be lots of messages coming out from the driver flushing the output-queue. However, there is currently no driver that causes this so we are safe. If some drivers need to transmit lots of data this way, we need a method to synchronize this and can implement another UHID_OUTPUT_SYNC event. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: implement feature requests HID standard allows sending a feature request to the device which is answered by an HID report. uhid implements this by sending a UHID_FEATURE event to user-space which then must answer with UHID_FEATURE_ANSWER. If it doesn't do this in a timely manner, the request is discarded silently. We serialize the feature requests, that is, there is always only a single active feature-request sent to user-space, other requests have to wait. HIDP and USB-HID do it the same way. Because we discard feature-requests silently, we must make sure to match a response to the corresponding request. We use sequence-IDs for this so user-space must copy the ID from the request into the answer. Feature-answers are ignored if they do not contain the same ID as the currently pending feature request. Internally, we must make sure that feature-requests are synchronized with UHID_DESTROY and close() events. We must not dead-lock when closing the HID device, either, so we have to use separate locks. Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: silence gcc warning gcc is giving me: drivers/hid/uhid.c: In function ���uhid_hid_get_raw���: drivers/hid/uhid.c:157: warning: ���len��� may be used uninitialized in this function which is clearly bogus, as - when used as memcpy() argument, it's initialized properly - the code is structured in a way that either 'ret' or 'len' is always initialized, so the return statement always has an initialized value. Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org> HID: uhid: Fix sending events with invalid data This was detected because events with invalid types were arriving to userspace. The code before this patch would only work for the first event in the queue (when uhid->tail is 0). Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Reviewed-by: David Herrmann <dh.herrmann@googlemail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz> Signed-off-by: Satish kumar sugasi <ssugas@codeaurora.org>",14/05/2014 14:59:54,,RELATED,https://github.com/moddingg33k/android_kernel_huawai_Y300-J1/commit/1e7113b0cd6d118b927215a2de7a2b2841a40010,,,[OK][Stop IO if a condition holds],[DO NOT ANALYZE],[OK] [Skip IO] [Android] [Kernel],[Stop IO if a condition holds] [Skip IO] [Android] [Kernel],EXISTS,,,,,,,,,,,,,moddingg33k/android_kernel_huawai_Y300-J1,dvdhrm,,,moddingg33k,
manveti,shipgen,Add notes about power consumption,14/05/2014 18:09:05,,FALSE-POSITIVE,https://github.com/manveti/shipgen/commit/d263963ffc0707bd973dbdabe51b0399505a3114,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE] [Documentation],[Documentation],EXISTS,,,,,,,,,,,,,manveti/shipgen,manveti,,,manveti,
nmbook,monopdroid,"Version 0.4.0: 8 players, performance, fixes. Attempted to fix piece animations. Disabled icon drawing for now, it's really wrong. Added support for up to 8 players. Began adding new <configupdate> object support. The protocol seems to use both though, so keeping old <option> support. Standardized the location for generating HTML for the overlays for Player and Estate references. Now all references to a player will use their piece color and all references to an estate will use it's gradient color (or white if there is none for either). The Estate overlay now lists the players on that estate. Greatly decreased the amount of drawing it does, decreased the number of animation steps on piece move in an attempt to reduce the amount of power consumed by the game, especially when nothing is happening. The Board shallkindly ask your Android device to keep the screen awake.",15/05/2014 08:12:14,,OK,https://github.com/nmbook/monopdroid/commit/f5ea8c638b1ca80ee402e23af1c3be2e42680ce4,,,[OK] [decreased the amount of drawing][android],[DO NOT ANALYZE],"[OK] [decreased the number of animation steps] [Game] [""attempt to reduce the amount of power consumed by the game""] [Android]","[decreased the amount of drawing] [android] [decreased the number of animation steps] [Game] [""attempt to reduce the amount of power consumed by the game""]",EXISTS,[decreased the number of animation steps on piece move],"[Greatly decreased the amount of drawing] [reduce the amount of power consumed by the game, especially when nothing is happening]",[Reduce animation steps] [Reduce drawing amount],[Limit computation],,,Uncertain,Android,No,Application,Java,"Greatly decreased the amount of drawing it does, decreased the number of animation steps on piece move in an attempt to reduce the amount of power consumed by the game, especially when nothing is happening.",nmbook/monopdroid,nmbook,[Miscellaneous],,nmbook,Application
Abhinav1997,AJ-Kernel,"mutex: dynamically disable mutex spinning at high load Date Thu, 4 Apr 2013 10:54:18 -0400 The Linux mutex code has a MUTEX_SPIN_ON_OWNER configuration option that was enabled by default in major distributions like Red Hat. Allowing threads waiting on mutex to spin while the mutex owner is running will theoretically reduce latency on the acquisition of mutex at the expense of energy efficiency as the spinning threads are doing no useful work. This is not a problem on a lightly loaded system where the CPU may be idle anyway. On a highly loaded system, the spinning tasks may be blocking other tasks from running even if they have higher priority because the spinning was done with preemption disabled. This patch will disable mutex spinning if the current load is high enough. The load is considered high if there are 2 or more active tasks waiting to run on the current CPU. If there is only one task waiting, it will check the average load at the past minute (calc_load_tasks). If it is more than double the number of active CPUs, the load is considered high too. This is a rather simple metric that does not incur that much additional overhead. The AIM7 benchmarks were run on 3.7.10 derived kernels to show the performance changes with this patch on a 8-socket 80-core system with hyperthreading off. The table below shows the mean % change in performance over a range of users for some AIM7 workloads with just the less atomic operation patch (patch 1) vs the less atomic operation patch plus this one (patches 1+3). +--------------+-----------------+-----------------+-----------------+ | Workload | mean % change | mean % change | mean % change | | | 10-100 users | 200-1000 users | 1100-2000 users | +--------------+-----------------+-----------------+-----------------+ | alltests | 0.0% | -0.1% | +5.0% | | five_sec | +1.5% | +1.3% | +1.3% | | fserver | +1.5% | +25.4% | +9.6% | | high_systime | +0.1% | 0.0% | +0.8% | | new_fserver | +0.2% | +11.9% | +14.1% | | shared | -1.2% | +0.3% | +1.8% | | short | +6.4% | +2.5% | +3.0% | +--------------+-----------------+-----------------+-----------------+ It can be seen that this patch provides some big performance improvement for the fserver and new_fserver workloads while is still generally positive for the other AIM7 workloads. Signed-off-by: Waiman Long <Waiman.Long@hp.com> Reviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com> modified for tuna kernel from LKML Signed-off-by: Paul Reioux <reioux@gmail.com>",15/05/2014 08:26:08,,DUPLICATE,https://github.com/Abhinav1997/AJ-Kernel/commit/cba2d5a45b40330b1b3b3dc0c2f932f97e95216c,,,[DUPLICATE],[DUPLICATE] [3746af06c20762fc9eb21be42b48707c826a734a],[DUPLICATE],[3746af06c20762fc9eb21be42b48707c826a734a],EXISTS,,,,,,,,,,,,,Abhinav1997/AJ-Kernel,,,,,
sroop,Thermostat,power save mode on is set to true as a default,15/05/2014 12:45:13,,OK,https://github.com/sroop/Thermostat/commit/1daf90263fde4f547a7eb3daf9ab95309a48f68c,,,[RELATED][power save mode on is set to true as a default],[DO NOT ANALYZE],[RELATED] [Set Power Save Mode as default],[power save mode on is set to true as a default] [Set Power Save Mode as default],EXISTS,power save mode on is set to true as a default,,,[Enable power saving mode],,,Certain,?,No,Application,Javascript,,sroop/Thermostat,sroop,[Use power efficient library/device],,sroop,
sroop,Thermostat,"for power save mode on, thermostat has a max and min temperature",15/05/2014 12:52:17,,FALSE-POSITIVE,https://github.com/sroop/Thermostat/commit/3b4191d122ced54da41c5a7b18e1988f87e61b90,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[FALSE-POSITIVE],,EXISTS,[limit max and min temperature for power saving mode],[power saving],[REVIEW] [Limit max and min temperature on power saving mode],[Enable component power saving] ?,,,Certain,Browser app,No,Application,Javascript,"for power save mode on, thermostat has a max and min temperature",sroop/Thermostat,sroop,?,,sroop,Application
sroop,Thermostat,"for power save mode off, thermostat has a different max and min temperature",15/05/2014 13:00:58,,FALSE-POSITIVE,https://github.com/sroop/Thermostat/commit/aed3556dc0d7bde6c495a01c25460acfc5760c45,,,[FALSE-POSITIVE],[DO NOT ANALYZE],[?] [FALSE-POSITIVE],[FALSE-POSITIVE],EXISTS,,,,,,,,,,,,,sroop/Thermostat,sroop,,,sroop,
sroop,Thermostat,check box created for power save mode,15/05/2014 16:23:24,,RELATED,https://github.com/sroop/Thermostat/commit/0d8090e319e24262bcbecdf7c33b63c2f1667cc6,,,[RELATED][ADD power saving feature],[DO NOT ANALYZE],[RELATED] [Enable Power Save Mode],[ADD power saving feature] [Enable Power Save Mode],EXISTS,,,,,,,,,,,,,sroop/Thermostat,sroop,,,sroop,
dorimanx,LG-G2-D802-Ramdisk,Added more controls to STWEAKS. read more. Added Touch boost control Added Ondemand power saver Added Iphone chargers support Tuned profiles.,15/05/2014 21:36:53,,RELATED,https://github.com/dorimanx/LG-G2-D802-Ramdisk/commit/7aa281ce6f799add58e4b7dc9944f20a0c0673a5,,,[RELATED] [Added Ondemand power saver],[DO NOT ANALYZE],[RELATED] [Added Ondemand power saver] [Enable Scaling Frequency],[Added Ondemand power saver] [Enable Scaling Frequency],EXISTS,,,,,,,,,,,,,dorimanx/LG-G2-D802-Ramdisk,dorimanx,,,dorimanx,